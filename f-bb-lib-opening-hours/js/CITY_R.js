/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 11);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {

    __webpack_require__(13);
    __webpack_require__(14);
    __webpack_require__(15);
    __webpack_require__(16);

    __webpack_require__(17)(window.jQuery);
    __webpack_require__(18)(window.jQuery);
    __webpack_require__(19)(window.jQuery);
    __webpack_require__(20)(window.jQuery);
    __webpack_require__(21)(window.jQuery);

    return window.jQuery;
}();

/***/ }),
/* 2 */,
/* 3 */
/***/ (function(module, exports) {

/**
 * Sends a message to the browser console (Gecko, Webkit) or into the <body> (IE)
 * @param {String} message: the message to print out
 */

module.exports = function (message) {

    var debug = function (message) {
            if (debug.debugLevel > 0 || location.search.match("debug")) {
                try {
                    //for Safari, Chrome, Firefox(w/ firebug)
                    w.console.log(message);
                } catch (e) {
                    try {
                        //for Opera
                        opera.postError.apply(opera, message);
                    } catch (e1) {
                    }
                }
            }
        };

    debug.debugLevel = 0;

    return debug;
};


/***/ }),
/* 4 */,
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * returns true if the viewport size has changed -
 * useful in responsive layout, see
 * snook.ca/archives/javascript/ie6_fires_onresize
 */
module.exports = function (w) {

    return function () {

        var debug = __webpack_require__(3),
            changed = false,
            docEl = w.document.documentElement,
            coolOff = 20, //further calls within this window get
        //the same return value
            now = Date.now ? Date.now() : (function () {
                return new Date().valueOf();
            }());

        //set up a holder object (if it doesn't exist)
        w.viewport = w.viewport || {};

        //these need zeroing before we begin (if not already set)
        w.viewport.dimensions = w.viewport.dimensions || {height: null, width: null};

        //need to handle the situation where many calls to this
        //function happen in quick succession
        if (w.viewport.timeStamp && now - w.viewport.timeStamp < coolOff) {
            debug("within window, returning " + w.viewport.storedResult);
            return w.viewport.storedResult;
        }

        //store the time of this call
        w.viewport.timeStamp = now;

        //have we changed viewport size?
        if (w.viewport.dimensions.width !== docEl.clientWidth ||
            w.viewport.dimensions.height !== docEl.clientHeight) {
            changed = true;
        }

        //store new dimensions
        w.viewport.dimensions.height = docEl.clientHeight;
        w.viewport.dimensions.width = docEl.clientWidth;

        //store this result in case of a re-call within coolOff
        w.viewport.storedResult = changed;

        debug("viewport changed: " + changed);

        return changed;
    }
}(window);


/***/ }),
/* 6 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function (element) {
    'use strict';

    if (element && !$.isEmptyObject(element.offset())) {
        $('html:not(:animated), body:not(:animated)').animate({scrollTop: Math.max(0, element.offset().top - 85)}, 'slow');
    }
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Create a image Gallery
 *
 * @param {Object} a jquery object representing a single instance of a gallery
 * @param {Boolean} true if the gallery is in a widget, false if in main content body
 * @return {Object || Undefined} returns the galleria jQuery object if
 * successful else undefined - for instance if $gallery is not a jQuery object
 *
 */
module.exports = (function() {
    var $ = __webpack_require__(1),
        debug = __webpack_require__(3),
        state = 'not-loaded',
        queue = [],
        create = function(gallery, options) {
            var root = gallery.attr('id').replace('gallery-', ''),
                galleryInner = gallery.find('.gallery-inner');

            $.getJSON('/apis/galleries/galleria-json?root=' + root, function(
                data
            ) {
                //remove loader
                gallery.find('span.loading').hide();
                gallery.css('opacity', '1');
                options.data_source = data;
                galleryInner.galleria(options);
            });

            return galleryInner;
        },
        loadComplete = function() {
            //get id of root from id of gallery div
            state = 'loaded';
            for (var i = 0; i < queue.length; i++) {
                create(queue[i].gallery, queue[i].options);
            }
            queue = [];
        },
        request = function(gallery) {
            var galleryInner = gallery && gallery.find('.gallery-inner');

            if (!galleryInner || galleryInner.length === 0) {
                debug('no gallery found');
            } else {
                var galleriaOptions = {
                    height: 0.5625,
                    lightbox: galleryInner.hasClass('lightbox'),
                    maxScaleRatio: 1,
                    preload: 2,
                    showInfo: galleryInner.hasClass('caption'),
                    imageCrop: false,
                    debug: false,
                    extend: function(/* defined but not used: options */) {
                        if ('city' === gallery.attr('data-theme')) {
                            gallery.prepend(
                                $('<div/>', {
                                    class: 'cg-caption',
                                })
                            );

                            /*loadstart is triggered every time galleria loads an image*/
                            this.bind('loadstart', function(e) {
                                var data = this._data[e.index],
                                    //caption is refound here as it needs to be scoped to this gallery
                                    caption = gallery.find('.cg-caption');

                                if (data.m_caption) {
                                    caption.html(data.m_caption);
                                } else {
                                    caption.html('&nbsp;');
                                }
                            });
                        }
                    },
                };

                if (state === 'loaded') {
                    create(gallery, galleriaOptions);
                } else {
                    if (state === 'not-loaded') {
                        state = 'loading';
                        $.getMultiJsScripts(
                            [
                                'lib/jquery/plugins/galleria/galleria-1.4.2/galleria-1.4.2.min.js',
                                'lib/jquery/plugins/galleria/galleria-1.4.2/themes/classic/galleria.classic.city.min.js',
                            ],
                            loadComplete,
                            true
                        );
                    }

                    gallery.prepend(
                        $(
                            '<div class="loading"><div class="loading__icon"><i class="fa fa-refresh fa-spin"></i></div></span>'
                        )
                    );
                    queue.push({ gallery: gallery, options: galleriaOptions });
                }
            }
        };

    return request;
})();


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * gets window width
 * @param: {Object} - window object
 * @return: {Number} - window width
 */
module.exports = function () {
    var $ = __webpack_require__(1);

    return function (w) {
        return Math.round($(w).width());
    };
}();

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = {
    "thin": 480,
    "medium": 768,
    "wide": 980
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {


var CITY = __webpack_require__(12),
    deferred = __webpack_require__(47),
    initJsFailureNotifier = __webpack_require__(48),
    initWidgets = __webpack_require__(49),
    initOnResize = __webpack_require__(51),
    initCustomSliders = __webpack_require__(53);

CITY.init();
initJsFailureNotifier();
deferred();
initOnResize();
initWidgets();
initCustomSliders();


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (function() {
    console.log('ssss');
    var $ = __webpack_require__(1),
        debug = __webpack_require__(3),
        customAJAX = __webpack_require__(23),
        viewportChanged = __webpack_require__(5),
        createGallery = __webpack_require__(8),
        createSlider = __webpack_require__(24),
        getWindowWidth = __webpack_require__(9),
        initDropdowns = __webpack_require__(25),
        initDynamicGmap = __webpack_require__(26),
        initAzListing = __webpack_require__(27),
        imageAccordion = __webpack_require__(28),
        initSeeMore = __webpack_require__(29),
        imageCreditation = __webpack_require__(30),
        initPlaceholderHallback = __webpack_require__(31),
        initImageCarousel = __webpack_require__(32),
        initWhiteCards = __webpack_require__(33),
        searchAutoComplete = __webpack_require__(34),
        initNewsEventsStrip = __webpack_require__(35),
        headerPrimaryNav = __webpack_require__(36),
        headerNavs = __webpack_require__(37),
        footer = __webpack_require__(38),
        popupDialog = __webpack_require__(39),
        scrollTo = __webpack_require__(7),
        responsiveTables = __webpack_require__(40),
        cyclicPopup = __webpack_require__(41),
        linkFinder = __webpack_require__(42),
        researchPubs = __webpack_require__(43);
        accordion2024 = __webpack_require__(44);
    /**
     * The main CITY wrapper object
     * @version $Revision: 6291 $ ($Date: 2012-09-05 16:06:30 +0100 (Wed, 05 Sep 2012) $)
     * @author City Web Team
     */
    var CITY = (function(w) {
        'use strict';

        /**
         * The object to hold all loadable scripts, add an object here to allow it's loading in a page
         *
         * Each child object has three properties:
         *   description: a short description of the script
         *           src: the filename of the script
         *       [async]: Whether to load the script asynchronously (assumed false unless given)
         *
         * @var Object
         */
        var scripts = {
                googleMapsApi: {
                    description: 'google maps api',
                    src:
                        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBvg6r1x2ZRKPAsceVaKPlg6tO20QiBDpo&sensor=false',
                },
                flowplayer: {
                    description: 'include flowplayer for pages with videos',
                    src: 'lib/flowplayer/flowplayer-3.2.4.min.js',
                },
                flowplayerEmbed: {
                    description: 'Embed code for flowplayer',
                    src: 'lib/flowplayer/flowplayer.embed-3.0.3.min.js',
                },
                swfobject: {
                    description: 'swfobject for youtube video(s)',
                    src: 'lib/swfobject/swfobject.js',
                },
                highcharts: {
                    description: 'JQuery charting plugin',
                    src: 'lib/jquery/plugins/highcharts/highcharts-4-1-4.js',
                },
                jVectorMap: {
                    description: 'jQuery plugin for SVG world map',
                    src:
                        'lib/jquery/plugins/vector-map/jquery.vector-map.min.js',
                },
                worldMap: {
                    description: 'map svg',
                    src: 'lib/jquery/plugins/vector-map/world-en.js',
                },
                buildingTheVision: {
                    description: 'building the vision specific scripts',
                    src: 'buildingTheVision.js',
                },
                library: {
                    description: 'library site scripts',
                    src: 'library.js',
                },
                location: {
                    description: 'Computer Room site scripts',
                    src: 'location.js',
                },
            },
            /***************************************************************************
             * GLOBAL VARIABLES
             ***************************************************************************/

            /**
             * The location of external scripts (with trailing slash)
             * @var String
             */
            getGitBridgePath = function() {

                // Get the current script element
                const currentScriptPath = document.currentScript;

                // Get the source of the script file
                const currentScriptSrc = currentScriptPath ? currentScriptPath.src : null;
                // regex to extract path between "git_bridge" and "js"
                const matchGitBridgePath = str.match(/git_bridge\/(.*?)\/js/); 

                    if (matchGitBridgePath && matchGitBridgePath[1]) {
                        const extractedGitBridgePath = match[1];
                        return extractedGitBridgePath;
                    } else {
                        return '0004/841405c/main';
                    }
            },


            srcPrefix =
                'https://' +
                document.location.hostname.replace(
                    'citysport.org.uk',
                    'city.ac.uk'
                ) +
                '/__data/assets/git_bridge/0004/841405c/main/js/',
            /**
             * The version number to prepend to the file name, set in page
             * @var String
             */
            version = w.cityVersion || '123456789.',
            /**
             * Lazyload function, injects a <script> element into the page head
             *
             * now proxies to yepnope
             *
             * @param {Object} jsHandle: The Object from CITY.scripts to load
             * @param {String} callback: The name of the callback to be executed after this script has loaded
             */
            load = function(jsHandle, callback) {
                //work out full path
                var path = (function() {
                    var script = scripts[jsHandle];

                    if (/^https?:\/\//.test(script.src)) {
                        return script.src;
                    }

                    return (
                        srcPrefix +
                        (/plugins|lib/.test(script.src) ? '' : 'modules/') +
                        script.src
                    );
                })();

                yepnope({
                    load: path,
                    callback: callback,
                });
            },
            setVersion = function(v) {
                version = v;
            },
            /***************************************************************************
             * USEFUL GLOBAL FUNCTIONS
             ***************************************************************************/

            /**
             * Stuff needed on everypage - explore city, login etc.
             */
            initPage = function() {
                console.log(`loc is ${getGitBridgePath()}`);
                var $body = $('body'),
                    bodyElement = document.querySelector('body'), //Vanilla JS reference to the body tag
                    $form = $body.find('#search, #header__search__form'),
                    $searchForm = $body.find(
                        ".search-form[data-autocomplete-status!='off']"
                    ),
                    $searchFormQuery = $searchForm.find('.search-form__query'),
                    $query = $form.find('#query'),
                    indexForm = $('#fb-queryform'),
                    indexQuery = $('#search-query', indexForm),
                    searchPageAutoCompleteCollection =
                        $body.attr('id') === 'intranet'
                            ? 'staff-intranet-matrix'
                            : 'main-all',
                    $galleries = $('#content').find('.gallery'),
                    azListings = $('.az-single-page'),
                    autoCompleteCollection = $searchForm.attr(
                        'data-collection'
                    ),
                    // navigation

                    $primaryNav = $('#primary-nav'),
                    $secondaryNav = $('#secondary-nav'),
                    $secondaryNavLis = $('#secondary-nav > li'),
                    $carouselObj = $('#promo-area'), //carousel container
                    // UI elements
                    $accordions = $body.find('.accordion'),
                    $responsiveTabs = $body.find('.responsive-tabs'),
                    // misc.
                    currentUrl = $primaryNav.data('url') || '',
                    modifySecNav = currentUrl.indexOf('/my-country/') < 0;

                    
                //end initPage vars

                // svg fallback
                if (!Modernizr.svg) {
                    $('#header__logo img').attr('src', function() {
                        return $(this)
                            .attr('src')
                            .replace('.svg', '.png');
                    });
                }

                headerPrimaryNav();
                headerNavs();
                footer();
                $responsiveTabs.accordionTabs();
                initDropdowns();
                initAzListing(azListings);
                imageAccordion();
                initSeeMore();
                initWhiteCards();
                initNewsEventsStrip();
                createSlider($carouselObj);
                initPlaceholderHallback();
                initImageCarousel();
                popupDialog();
                responsiveTables();
                cyclicPopup();
                // We need to wait for the DOM to be modified before
                // traversing for Image Credits
                imageCreditation();
                researchPubs();
                linkFinder(bodyElement);

                $galleries.each(function() {
                    createGallery($(this));
                });

                //some helper stuff to style primary navigation

                if (currentUrl.indexOf('//www.city.ac.uk/news') >= 0) {
                    $secondaryNav.hide();
                } else if (modifySecNav) {
                    // add secondary-nav-siblings to secondary-nav only if we have some
                    if (
                        $('ol#secondary-nav > li:last > a').length &&
                        $('ol#secondary-nav-siblings').length
                    ) {
                        // if the link to this page isn't in secondary-nav-siblings, just add the siblings
                        if (
                            $('ol#secondary-nav-siblings a')
                                .map(function() {
                                    return this.href;
                                })
                                .toArray()
                                .indexOf(
                                    $('ol#secondary-nav > li:last > a')[0].href
                                ) === -1
                        ) {
                            $('ol#secondary-nav').append(
                                $('<li>').html($('ol#secondary-nav-siblings'))
                            );
                        } else {
                            // otherwise replace the secondary nav completely
                            $('ol#secondary-nav > li:last')
                                .empty()
                                .append($('ol#secondary-nav-siblings'));
                        }
                    }

                    $('ol#primary-nav li, ol#secondary-nav li').removeClass(
                        'selected'
                    );
                    $(
                        'ol#primary-nav a[href="' +
                            currentUrl +
                            '"], ol#secondary-nav a[href="' +
                            currentUrl +
                            '"]'
                    )
                        .parent('li')
                        .addClass('selected');

                    if (
                        $primaryNav.find('.current').length === 0 &&
                        $secondaryNav.find('.selected').length === 0
                    ) {
                        //we are on the home page of the section so hide secondary nav and add helper class
                        $secondaryNav.hide();
                        $primaryNav.addClass('top-level');
                    }

                    //hide secondary level if empty
                    if ($secondaryNavLis.length === 0) {
                        $secondaryNav.hide();
                    } else {
                        //secondary nav is definitely showing, add some classes to help styling

                        //if we have secondary-nav-siblings the prevous li element will be the parent from one level up
                        // e.g. http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012/test-level
                        $('#secondary-nav-siblings')
                            .parent()
                            .prev('li')
                            .addClass('end');

                        // When the current page is part of the breadcrumb its previous sibling reguires a class of "selected-join"
                        // we only want this to happen on direct children of $secondaryNav
                        // e.g http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012
                        $secondaryNav
                            .find('> li.selected')
                            .prev()
                            .addClass('selected-join');

                        if ($secondaryNav.find('.selected').length !== 0) {
                            //add a class of ".parent" to active element in primary nav so we can un-bold it
                            $primaryNav.find('.current').addClass('parent');
                        }
                    }
                }
                
                if($accordions.length > 0) {
                    // initalise any accordions found
                    Array.from($accordions).forEach( accordion => {
                        accordion.children.length && accordion2024(accordion)
                    });
                }

                //set up autocomplete on search box
                searchAutoComplete(
                    $form,
                    $query,
                    searchPageAutoCompleteCollection
                );

                //set up autocomplete on search box on main search page
                searchAutoComplete(
                    indexForm,
                    indexQuery,
                    searchPageAutoCompleteCollection
                );

                //set up autocomplete on search box on intranet main search page
                searchAutoComplete(
                    $searchForm,
                    $searchFormQuery,
                    autoCompleteCollection
                );

                // catch any videos that have been manually input
                $("iframe[src*='youtube']").each(function() {
                    var $element = $(this),
                        vidWidth = $element.outerWidth(),
                        $parent = $element.parent();

                    // don't double wrap an iframe
                    if (!$parent.hasClass('embed-container')) {
                        // for elastic objects, we need 2 (!) wrappers
                        $element.wrap(
                            '<div class="embed-wrapper" style="width:' +
                                vidWidth +
                                'px"><div class="embed-container"></div></div>'
                        );
                    }
                });

                initDynamicGmap($('#dynamic-gmap'));

                // hide/show functionality for unit lists (example on subject area pages)
                $('.unit-lists .unit-lists-title').click(function() {
                    $(this)
                        .parents('.unit-lists')
                        .toggleClass('unit-lists-expanded');
                });

                //hide/show other amount and pass the correct value on City Future Fund page
                if (
                    $('#future-fund-forms').length === 1 ||
                    $('#racing-form').length === 1
                ) {
                    $('#cff-regular-donation input[type=radio]').click(
                        function() {
                            var parentElement = $(this).parent();
                            $('.donate-appeal').show();
                            if (
                                parentElement
                                    .find('.donation-other-option')
                                    .is(':checked')
                            ) {
                                parentElement
                                    .find('.donation-other-amount')
                                    .show()
                                    .find('input')
                                    .attr('name', 'regular_amount');
                            } else {
                                parentElement
                                    .find('.donation-other-amount')
                                    .hide()
                                    .find('input')
                                    .attr('name', '')
                                    .attr('value', '');
                            }
                        }
                    );
                    $('#cff-single-donation input[type=radio]').click(
                        function() {
                            var parentElement = $(this).parent();
                            if (
                                parentElement
                                    .find('.donation-other-option')
                                    .is(':checked')
                            ) {
                                parentElement
                                    .find('.donation-other-amount')
                                    .show()
                                    .find('input')
                                    .attr('name', 'tfa_Amountyouwishtod');
                            } else {
                                parentElement
                                    .find('.donation-other-amount')
                                    .hide()
                                    .find('input')
                                    .attr('name', '')
                                    .attr('value', '');
                            }
                        }
                    );
                }

                $('.media-ribbon .embed-container').videoPreview({
                    showInfo: 0,
                });
                $('.widget-content .embed-container').videoPreview();
                $('.international-london .embed-container').videoPreview();
                $('.social-wall .embed-container').videoPreview();
                $(
                    '.embed-container.embed-container--default-yt-preview'
                ).videoPreview();
            }, //end initPage
            objectSize = function(object) {
                var size = 0,
                    key;

                for (key in object) {
                    if (object.hasOwnProperty(key)) {
                        size += 1;
                    }
                }

                return size;
            },
            /**
             * Finds any vid images on a page and replaces them with either a YouTube iframe or SWFObject for FMS vids
             * @return: Undefined
             */
            videos = function() {
                var $youtubeVids = $('img.youtube'),
                    $fmsVids = $('img.fms'),
                    /*
                     * Replaces an image element with YouTube iFrame
                     * @param: {Object} : $el - jQuery object for youTube images to be replaced
                     * @retun: {Undefined}
                     */
                    embedYoutube = function($youtubeVids) {
                        $youtubeVids.each(function(i, el) {
                            var $el = $(el),
                                vidWidth = 500, // default width
                                vidHeight = 320, // default height
                                videoID = $el.attr('id').replace('vid_', '');

                            $el.replaceWith(
                                '<div class="embed-wrapper"><div class="embed-container"><iframe height=' +
                                    vidHeight +
                                    ' width= ' +
                                    vidWidth +
                                    ' src="//www.youtube.com/embed/' +
                                    videoID +
                                    "?rel=0&wmode=transparent\" frameborder='0' allowfullscreen></iframe></div></div>"
                            );
                        });
                    },
                    /*
                     * Replaces an image element with SWF Object
                     * @param: {Object} : $el - jQuery object for all fms images to be replaced
                     * @retun: {Undefined}
                     */
                    embedFms = function($fmsVids) {
                        var splashImages = {
                            cassStandard:
                                '//s1.city.ac.uk/i/flowplayer-cass.jpg?v=8105',
                            cassRetina: '',
                            cityStandard:
                                '//s1.city.ac.uk/i/flowplayer-city.jpg?v=8105',
                            cityRentina: '',
                        };

                        $fmsVids.each(function(i, el) {
                            var $el = $(el),
                                vidWidth = 687, //default width
                                vidHeight = 419, // default height
                                elId = $el.attr('id'),
                                vidId = elId.replace('vid_', ''),
                                expressInstall =
                                    '//s1.city.ac.uk/js/swfobject/expressInstall.swf',
                                flashtargetversion = '9.0.28',
                                flashvars = null,
                                params = {
                                    allowScriptAccess: 'always',
                                    allowfullscreen: 'true',
                                    wmode: 'transparent',
                                },
                                atts = {
                                    class: 'vidplayer',
                                    id: vidId,
                                },
                                splashImage = CITY.isCass
                                    ? splashImages.cassStandard
                                    : splashImages.cityStandard,
                                swfCallBack = function(e) {
                                    $(e.ref).wrap(
                                        '<div class="embed-wrapper" style="width:' +
                                            vidWidth +
                                            'px"><div class="embed-container"></div></div>'
                                    );
                                };

                            //if video is included in the course description div of a course N page, width needs to be 419
                            if (
                                $el.parents('.course-description').length !== 0
                            ) {
                                vidWidth = 419;
                            }

                            //vids have different sizes depending on the size of the content div and if they are widescreen on square
                            if ($el.hasClass('widescreen')) {
                                vidHeight = vidWidth * 0.61;
                            } else {
                                vidWidth = 500;
                                vidHeight = 320;
                            }

                            if (
                                !swfobject.hasFlashPlayerVersion(
                                    flashtargetversion
                                )
                            ) {
                                //explain why there is no video
                                $el.after(
                                    '<p class="notice-message"><i class="fa fa-exclamation-triangle" style="color : #CCCC00"></i> You need to have flash player ' +
                                        flashtargetversion +
                                        ' or greater installed to see the video.</p>' +
                                        '<p><a href="http://get.adobe.com/flashplayer/">Get Flash Player</a></p>'
                                );
                            } else {
                                //config has to be in a string and key and values have to be "quoted" - nightmare
                                // construct all the variables to pass to the player -
                                // tried to make this a proper json array, didn't work :(
                                // IE doesn't like double quotes here so ignore JSHint error
                                flashvars =
                                    "{'clip': {'provider': 'rtmp'}, 'playlist': [{'url':'" +
                                    splashImage +
                                    "', 'autoPlay': true}, {'url': '" +
                                    vidId.replace('vid_', '') +
                                    "/Hi_bandwidth', 'autoPlay': false, 'scaling': 'fit'}], 'plugins': {'rtmp': {'url': '//s1.city.ac.uk/js/flowplayer/flowplayer.rtmp-3.2.3.swf', 'netConnectionUrl': 'rtmp://media.city.ac.uk/flowplayer', 'objectEncoding': '0', 'proxyType': 'none' }, 'controls': {'url': 'flowplayer.controls.swf'} } }";

                                // initiate the player
                                swfobject.embedSWF(
                                    '//s1.city.ac.uk/js/flowplayer/flowplayer-3.2.6.swf',
                                    elId,
                                    vidWidth,
                                    vidHeight,
                                    '9.0.0',
                                    expressInstall,
                                    { config: flashvars },
                                    params,
                                    false,
                                    swfCallBack
                                );
                            } //end has flash if
                        });
                    };

                if ($youtubeVids.length) {
                    embedYoutube($youtubeVids);
                }
                if ($fmsVids.length) {
                    yepnope({
                        load: scripts.swfobject.src,
                        callback: function() {
                            embedFms($fmsVids);
                        },
                    });
                }
            }, // end videos
            /**
             * This is our yepnope filter
             *
             * splices in the version string we have set up in setVersion
             * prepends the correct s1 domain, where it hasn't been provided
             *
             * N.B. will fail if we have an s1 top level folder containing
             * dots (see comment below)
             *
             */
            yepnopeFilter = function(resource) {
                var loc, lastItem;

                /* If we are loading in an absolute url, don't touch it
                 * this is the regex which fails on a top level folder with dots
                 *
                 * matches:
                 * http://www.external.com/scripts/script.js
                 * www.external.com/scripts/script.js
                 * absolute.with.many.sub.domains.domain.com/scripts/script.js
                 * https://absoulte.with.many.sub.domains.domain.com/scripts/script.js
                 *
                 * doesn't match:
                 * modules/test.js
                 * lib/subdir/script.js
                 * lib/subdir.123/script.js
                 *
                 * will match when we don't want to:
                 * toplevel.with.dots/script.js
                 * lib.v2/jquery/script.js
                 *
                 * I think it's an unlikely issue, but if anyone can tweak the regex
                 * to prevent this please do.
                 *
                 */
                if (/^(https?:\/\/)?([^\/.]+\.)+[^\/]+\//.test(resource.url)) {
                    return resource;
                }

                loc =
                    //already contains s1? - don't add prefix
                    (srcPrefix + resource.url)

                        //split for splicing
                        .split('/');

                resource.url = loc.join('/');

                // if on prod and we are loading a module/.js file
                // we want .min.js rather than .js
                if (
                    /www\.city/.test(resource.url) &&
                    !/js\/lib/.test(resource.url)
                ) {
                    resource.url = resource.url.replace(/js$/, 'min.js');
                }

                return resource;
            },
            /**
             * Initialisation function, called immediately after CITY declaration below
             */
            init = function() {
                debug('CITY ready (we are in ' + document.compatMode + ')');

                yepnope.addFilter(yepnopeFilter);

                initPage();

                //// library home page opening times
                if ($('#library').length !== 0) {
                    yepnope({
                        load: 'modules/library/library-opening-times.js',
                        callback: function() {
                            debug('loaded library datepicker');
                        },
                    });
                }
  
                // the following needs domready
                $(function() {
                    // set up any videos on page
                    videos();

                    // mobile browser click delay fix
                    //initFastClickt();
                });
            };
        /**
         *  This literal defines what methods to make publicly accessible
         *  outsite CITY
         */
        return {
            init: init,
            load: load,
            debug: debug,
            setVersion: setVersion,
            searchAutoComplete: searchAutoComplete,
            objectSize: objectSize,
            getWindowWidth: getWindowWidth,
            customAJAX: customAJAX,
            imageCreditation: imageCreditation,
            //this will be useful in modules
            s1Server: srcPrefix,
        };
    })(window); //end CITY

    window.CITY = CITY;

    return CITY;
})();




/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery v1.8.2 jquery.com | jquery.org/license */
(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,"function"=="function"&&__webpack_require__(6)&&__webpack_require__(6).jQuery&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return p}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))})(window);

/***/ }),
/* 14 */
/***/ (function(module, exports) {

/*! jQuery UI - v1.9.2 - 2016-06-17
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */

(function(e,t){function i(t,i){var n,a,o,r=t.nodeName.toLowerCase();return"area"===r?(n=t.parentNode,a=n.name,t.href&&a&&"map"===n.nodeName.toLowerCase()?(o=e("img[usemap=#"+a+"]")[0],!!o&&s(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:"a"===r?t.href||i:i)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return"hidden"===e.css(this,"visibility")}).length}var n=0,a=/^ui-id-\d+$/;e.ui=e.ui||{},e.ui.version||(e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,i){return"number"==typeof t?this.each(function(){var s=this;setTimeout(function(){e(s).focus(),i&&i.call(s)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css("zIndex",i);if(this.length)for(var s,n,a=e(this[0]);a.length&&a[0]!==document;){if(s=a.css("position"),("absolute"===s||"relative"===s||"fixed"===s)&&(n=parseInt(a.css("zIndex"),10),!isNaN(n)&&0!==n))return n;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var s=e.attr(t,"tabindex"),n=isNaN(s);return(n||s>=0)&&i(t,!n)}}),e(function(){var t=document.body,i=t.appendChild(i=document.createElement("div"));i.offsetHeight,e.extend(i.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=100===i.offsetHeight,e.support.selectstart="onselectstart"in i,t.removeChild(i).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(i,s){function n(t,i,s,n){return e.each(a,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),n&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var a="Width"===s?["Left","Right"]:["Top","Bottom"],o=s.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+s]=function(i){return i===t?r["inner"+s].call(this):this.each(function(){e(this).css(o,n(this,i)+"px")})},e.fn["outer"+s]=function(t,i){return"number"!=typeof t?r["outer"+s].call(this,t):this.each(function(){e(this).css(o,n(this,t,!0,i)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=6===parseFloat(t[1],10)}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,i,s){var n,a=e.ui[t].prototype;for(n in s)a.plugins[n]=a.plugins[n]||[],a.plugins[n].push([i,s[n]])},call:function(e,t,i){var s,n=e.plugins[t];if(n&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(s=0;n.length>s;s++)e.options[n[s][0]]&&n[s][1].apply(e.element,i)}},contains:e.contains,hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return t[s]>0?!0:(t[s]=1,n=t[s]>0,t[s]=0,n)},isOverAxis:function(e,t,i){return e>t&&t+i>e},isOver:function(t,i,s,n,a,o){return e.ui.isOverAxis(t,s,a)&&e.ui.isOverAxis(i,n,o)}}))})(jQuery);(function(e,t){var i=0,s=Array.prototype.slice,n=e.cleanData;e.cleanData=function(t){for(var i,s=0;null!=(i=t[s]);s++)try{e(i).triggerHandler("remove")}catch(a){}n(t)},e.widget=function(i,s,n){var a,o,r,h,l=i.split(".")[0];i=i.split(".")[1],a=l+"-"+i,n||(n=s,s=e.Widget),e.expr[":"][a.toLowerCase()]=function(t){return!!e.data(t,a)},e[l]=e[l]||{},o=e[l][i],r=e[l][i]=function(e,i){return this._createWidget?(arguments.length&&this._createWidget(e,i),t):new r(e,i)},e.extend(r,o,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),h=new s,h.options=e.widget.extend({},h.options),e.each(n,function(t,i){e.isFunction(i)&&(n[t]=function(){var e=function(){return s.prototype[t].apply(this,arguments)},n=function(e){return s.prototype[t].apply(this,e)};return function(){var t,s=this._super,a=this._superApply;return this._super=e,this._superApply=n,t=i.apply(this,arguments),this._super=s,this._superApply=a,t}}())}),r.prototype=e.widget.extend(h,{widgetEventPrefix:o?h.widgetEventPrefix:i},n,{constructor:r,namespace:l,widgetName:i,widgetBaseClass:a,widgetFullName:a}),o?(e.each(o._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,r,i._proto)}),delete o._childConstructors):s._childConstructors.push(r),e.widget.bridge(i,r)},e.widget.extend=function(i){for(var n,a,o=s.call(arguments,1),r=0,h=o.length;h>r;r++)for(n in o[r])a=o[r][n],o[r].hasOwnProperty(n)&&a!==t&&(i[n]=e.isPlainObject(a)?e.isPlainObject(i[n])?e.widget.extend({},i[n],a):e.widget.extend({},a):a);return i},e.widget.bridge=function(i,n){var a=n.prototype.widgetFullName||i;e.fn[i]=function(o){var r="string"==typeof o,h=s.call(arguments,1),l=this;return o=!r&&h.length?e.widget.extend.apply(null,[o].concat(h)):o,r?this.each(function(){var s,n=e.data(this,a);return n?e.isFunction(n[o])&&"_"!==o.charAt(0)?(s=n[o].apply(n,h),s!==n&&s!==t?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):t):e.error("no such method '"+o+"' for "+i+" widget instance"):e.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method '"+o+"'")}):this.each(function(){var t=e.data(this,a);t?t.option(o||{})._init():e.data(this,a,new n(o,this))}),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,s){s=e(s||this.defaultElement||this)[0],this.element=e(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),s!==this&&(e.data(s,this.widgetName,this),e.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===s&&this.destroy()}}),this.document=e(s.style?s.ownerDocument:s.document||s),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(i,s){var n,a,o,r=i;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof i)if(r={},n=i.split("."),i=n.shift(),n.length){for(a=r[i]=e.widget.extend({},this.options[i]),o=0;n.length-1>o;o++)a[n[o]]=a[n[o]]||{},a=a[n[o]];if(i=n.pop(),s===t)return a[i]===t?null:a[i];a[i]=s}else{if(s===t)return this.options[i]===t?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var a,o=this;"boolean"!=typeof i&&(n=s,s=i,i=!1),n?(s=a=e(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,a=this.widget()),e.each(n,function(n,r){function h(){return i||o.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof r?o[r]:r).apply(o,arguments):t}"string"!=typeof r&&(h.guid=r.guid=r.guid||h.guid||e.guid++);var l=n.match(/^(\w+)\s*(.*)$/),u=l[1]+o.eventNamespace,d=l[2];d?a.delegate(d,u,h):s.bind(u,h)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var o,r=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),o=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&e.effects&&(e.effects.effect[r]||e.uiBackCompat!==!1&&e.effects[r])?s[t](n):r!==t&&s[r]?s[r](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e){var t=!1;e(document).mouseup(function(){t=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!t){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a="string"==typeof this.options.cancel&&i.target.nodeName?e(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===e.data(i.target,this.widgetName+".preventClickEvent")&&e.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return s._mouseMove(e)},this._mouseUpDelegate=function(e){return s._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),t=!0,!0)):!0}},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(e,t){function i(e,t,i){return[parseInt(e[0],10)*(c.test(e[0])?t/100:1),parseInt(e[1],10)*(c.test(e[1])?i/100:1)]}function s(t,i){return parseInt(e.css(t,i),10)||0}e.ui=e.ui||{};var n,a=Math.max,o=Math.abs,r=Math.round,h=/left|center|right/,l=/top|center|bottom/,u=/[\+\-]\d+%?/,d=/^\w+/,c=/%$/,p=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var i,s,a=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=a.children()[0];return e("body").append(a),i=o.offsetWidth,a.css("overflow","scroll"),s=o.offsetWidth,i===s&&(s=a[0].clientWidth),a.remove(),n=i-s},getScrollInfo:function(t){var i=t.isWindow?"":t.element.css("overflow-x"),s=t.isWindow?"":t.element.css("overflow-y"),n="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,a="scroll"===s||"auto"===s&&t.height<t.element[0].scrollHeight;return{width:n?e.position.scrollbarWidth():0,height:a?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),s=e.isWindow(i[0]);return{element:i,isWindow:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return p.apply(this,arguments);t=e.extend({},t);var n,c,f,m,g,v=e(t.of),_=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(_),y=v[0],x=(t.collision||"flip").split(" "),w={};return 9===y.nodeType?(c=v.width(),f=v.height(),m={top:0,left:0}):e.isWindow(y)?(c=v.width(),f=v.height(),m={top:v.scrollTop(),left:v.scrollLeft()}):y.preventDefault?(t.at="left top",c=f=0,m={top:y.pageY,left:y.pageX}):(c=v.outerWidth(),f=v.outerHeight(),m=v.offset()),g=e.extend({},m),e.each(["my","at"],function(){var e,i,s=(t[this]||"").split(" ");1===s.length&&(s=h.test(s[0])?s.concat(["center"]):l.test(s[0])?["center"].concat(s):["center","center"]),s[0]=h.test(s[0])?s[0]:"center",s[1]=l.test(s[1])?s[1]:"center",e=u.exec(s[0]),i=u.exec(s[1]),w[this]=[e?e[0]:0,i?i[0]:0],t[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===x.length&&(x[1]=x[0]),"right"===t.at[0]?g.left+=c:"center"===t.at[0]&&(g.left+=c/2),"bottom"===t.at[1]?g.top+=f:"center"===t.at[1]&&(g.top+=f/2),n=i(w.at,c,f),g.left+=n[0],g.top+=n[1],this.each(function(){var h,l,u=e(this),d=u.outerWidth(),p=u.outerHeight(),y=s(this,"marginLeft"),k=s(this,"marginTop"),D=d+y+s(this,"marginRight")+b.width,T=p+k+s(this,"marginBottom")+b.height,S=e.extend({},g),N=i(w.my,u.outerWidth(),u.outerHeight());"right"===t.my[0]?S.left-=d:"center"===t.my[0]&&(S.left-=d/2),"bottom"===t.my[1]?S.top-=p:"center"===t.my[1]&&(S.top-=p/2),S.left+=N[0],S.top+=N[1],e.support.offsetFractions||(S.left=r(S.left),S.top=r(S.top)),h={marginLeft:y,marginTop:k},e.each(["left","top"],function(i,s){e.ui.position[x[i]]&&e.ui.position[x[i]][s](S,{targetWidth:c,targetHeight:f,elemWidth:d,elemHeight:p,collisionPosition:h,collisionWidth:D,collisionHeight:T,offset:[n[0]+N[0],n[1]+N[1]],my:t.my,at:t.at,within:_,elem:u})}),e.fn.bgiframe&&u.bgiframe(),t.using&&(l=function(e){var i=m.left-S.left,s=i+c-d,n=m.top-S.top,r=n+f-p,h={target:{element:v,left:m.left,top:m.top,width:c,height:f},element:{element:u,left:S.left,top:S.top,width:d,height:p},horizontal:0>s?"left":i>0?"right":"center",vertical:0>r?"top":n>0?"bottom":"middle"};d>c&&c>o(i+s)&&(h.horizontal="center"),p>f&&f>o(n+r)&&(h.vertical="middle"),h.important=a(o(i),o(s))>a(o(n),o(r))?"horizontal":"vertical",t.using.call(this,e,h)}),u.offset(e.extend(S,{using:l}))})},e.ui.position={fit:{left:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollLeft:s.offset.left,o=s.width,r=e.left-t.collisionPosition.marginLeft,h=n-r,l=r+t.collisionWidth-o-n;t.collisionWidth>o?h>0&&0>=l?(i=e.left+h+t.collisionWidth-o-n,e.left+=h-i):e.left=l>0&&0>=h?n:h>l?n+o-t.collisionWidth:n:h>0?e.left+=h:l>0?e.left-=l:e.left=a(e.left-r,e.left)},top:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollTop:s.offset.top,o=t.within.height,r=e.top-t.collisionPosition.marginTop,h=n-r,l=r+t.collisionHeight-o-n;t.collisionHeight>o?h>0&&0>=l?(i=e.top+h+t.collisionHeight-o-n,e.top+=h-i):e.top=l>0&&0>=h?n:h>l?n+o-t.collisionHeight:n:h>0?e.top+=h:l>0?e.top-=l:e.top=a(e.top-r,e.top)}},flip:{left:function(e,t){var i,s,n=t.within,a=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=e.left-t.collisionPosition.marginLeft,u=l-h,d=l+t.collisionWidth-r-h,c="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+c+p+f+t.collisionWidth-r-a,(0>i||o(u)>i)&&(e.left+=c+p+f)):d>0&&(s=e.left-t.collisionPosition.marginLeft+c+p+f-h,(s>0||d>o(s))&&(e.left+=c+p+f))},top:function(e,t){var i,s,n=t.within,a=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=e.top-t.collisionPosition.marginTop,u=l-h,d=l+t.collisionHeight-r-h,c="top"===t.my[1],p=c?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,m=-2*t.offset[1];0>u?(s=e.top+p+f+m+t.collisionHeight-r-a,e.top+p+f+m>u&&(0>s||o(u)>s)&&(e.top+=p+f+m)):d>0&&(i=e.top-t.collisionPosition.marginTop+p+f+m-h,e.top+p+f+m>d&&(i>0||d>o(i))&&(e.top+=p+f+m))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,i,s,n,a,o=document.getElementsByTagName("body")[0],r=document.createElement("div");t=document.createElement(o?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in s)t.style[a]=s[a];t.appendChild(r),i=o||document.documentElement,i.insertBefore(t,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=e(r).offset().left,e.support.offsetFractions=n>10&&11>n,t.innerHTML="",i.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var i=e.fn.position;e.fn.position=function(s){if(!s||!s.offset)return i.call(this,s);var n=s.offset.split(" "),a=s.at.split(" ");return 1===n.length&&(n[1]=n[0]),/^\d/.test(n[0])&&(n[0]="+"+n[0]),/^\d/.test(n[1])&&(n[1]="+"+n[1]),1===a.length&&(/left|center|right/.test(a[0])?a[1]="center":(a[1]=a[0],a[0]="center")),i.call(this,e.extend(s,{at:a[0]+n[0]+" "+a[1]+n[1],offset:t}))}}(jQuery)})(jQuery);(function(e){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){"original"!=this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var i=this.options;return this.helper||i.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),i.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,i){if(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",t,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&"y"==this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"==this.options.axis||(this.helper[0].style.top=this.position.top+"px"),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(i=e.ui.ddmanager.drop(this,t)),this.dropped&&(i=this.dropped,this.dropped=!1);for(var s=this.element[0],n=!1;s&&(s=s.parentNode);)s==document&&(n=!0);if(!n&&"original"===this.options.helper)return!1;if("invalid"==this.options.revert&&!i||"valid"==this.options.revert&&i||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,i)){var a=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){a._trigger("stop",t)!==!1&&a._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var i=this.options.handle&&e(this.options.handle,this.element).length?!1:!0;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(i=!0)}),i},_createHelper:function(t){var i=this.options,s=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t])):"clone"==i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"==i.appendTo?this.element[0].parentNode:i.appendTo),s[0]==this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"==this.cssPosition&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&"html"==this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"==this.cssPosition){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;if("parent"==t.containment&&(t.containment=this.helper[0].parentNode),("document"==t.containment||"window"==t.containment)&&(this.containment=["document"==t.containment?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,"document"==t.containment?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,("document"==t.containment?0:e(window).scrollLeft())+e("document"==t.containment?document:window).width()-this.helperProportions.width-this.margins.left,("document"==t.containment?0:e(window).scrollTop())+(e("document"==t.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(t.containment)||t.containment.constructor==Array)t.containment.constructor==Array&&(this.containment=t.containment);else{var i=e(t.containment),s=i[0];if(!s)return;i.offset();var n="hidden"!=e(s).css("overflow");this.containment=[(parseInt(e(s).css("borderLeftWidth"),10)||0)+(parseInt(e(s).css("paddingLeft"),10)||0),(parseInt(e(s).css("borderTopWidth"),10)||0)+(parseInt(e(s).css("paddingTop"),10)||0),(n?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(e(s).css("borderLeftWidth"),10)||0)-(parseInt(e(s).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(n?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(e(s).css("borderTopWidth"),10)||0)-(parseInt(e(s).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i}},_convertPositionTo:function(t,i){i||(i=this.position);var s="absolute"==t?1:-1,n=(this.options,"absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent),a=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"==this.cssPosition?-this.scrollParent.scrollTop():a?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():a?0:n.scrollLeft())*s}},_generatePosition:function(t){var i=this.options,s="absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,n=/(html|body)/i.test(s[0].tagName),a=t.pageX,o=t.pageY;if(this.originalPosition){var r;if(this.containment){if(this.relative_container){var h=this.relative_container.offset();r=[this.containment[0]+h.left,this.containment[1]+h.top,this.containment[2]+h.left,this.containment[3]+h.top]}else r=this.containment;t.pageX-this.offset.click.left<r[0]&&(a=r[0]+this.offset.click.left),t.pageY-this.offset.click.top<r[1]&&(o=r[1]+this.offset.click.top),t.pageX-this.offset.click.left>r[2]&&(a=r[2]+this.offset.click.left),t.pageY-this.offset.click.top>r[3]&&(o=r[3]+this.offset.click.top)}if(i.grid){var l=i.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/i.grid[1])*i.grid[1]:this.originalPageY;o=r?l-this.offset.click.top<r[1]||l-this.offset.click.top>r[3]?l-this.offset.click.top<r[1]?l+i.grid[1]:l-i.grid[1]:l:l;var u=i.grid[0]?this.originalPageX+Math.round((a-this.originalPageX)/i.grid[0])*i.grid[0]:this.originalPageX;a=r?u-this.offset.click.left<r[0]||u-this.offset.click.left>r[2]?u-this.offset.click.left<r[0]?u+i.grid[0]:u-i.grid[0]:u:u}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"==this.cssPosition?-this.scrollParent.scrollTop():n?0:s.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():n?0:s.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]==this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,i,s){return s=s||this._uiHash(),e.ui.plugin.call(this,t,[i,s]),"drag"==t&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i){var s=e(this).data("draggable"),n=s.options,a=e.extend({},i,{item:s.element});s.sortables=[],e(n.connectToSortable).each(function(){var i=e.data(this,"sortable");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",t,a))})},stop:function(t,i){var s=e(this).data("draggable"),n=e.extend({},i,{item:s.element});e.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,"original"==s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,n))})},drag:function(t,i){var s=e(this).data("draggable"),n=this;e.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,e.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!=o&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(n).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",t),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",t),s.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(){var t=e("body"),i=e(this).data("draggable").options;t.css("cursor")&&(i._cursor=t.css("cursor")),t.css("cursor",i.cursor)},stop:function(){var t=e(this).data("draggable").options;t._cursor&&e("body").css("cursor",t._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(t,i){var s=e(this).data("draggable").options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(){var t=e(this).data("draggable");t.scrollParent[0]!=document&&"HTML"!=t.scrollParent[0].tagName&&(t.overflowOffset=t.scrollParent.offset())},drag:function(t){var i=e(this).data("draggable"),s=i.options,n=!1;i.scrollParent[0]!=document&&"HTML"!=i.scrollParent[0].tagName?(s.axis&&"x"==s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-t.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:t.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&"y"==s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-t.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:t.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&"x"==s.axis||(t.pageY-e(document).scrollTop()<s.scrollSensitivity?n=e(document).scrollTop(e(document).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<s.scrollSensitivity&&(n=e(document).scrollTop(e(document).scrollTop()+s.scrollSpeed))),s.axis&&"y"==s.axis||(t.pageX-e(document).scrollLeft()<s.scrollSensitivity?n=e(document).scrollLeft(e(document).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<s.scrollSensitivity&&(n=e(document).scrollLeft(e(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(i,t)}}),e.ui.plugin.add("draggable","snap",{start:function(){var t=e(this).data("draggable"),i=t.options;t.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var i=e(this),s=i.offset();this!=t.element[0]&&t.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(t,i){for(var s=e(this).data("draggable"),n=s.options,a=n.snapTolerance,o=i.offset.left,r=o+s.helperProportions.width,h=i.offset.top,l=h+s.helperProportions.height,u=s.snapElements.length-1;u>=0;u--){var d=s.snapElements[u].left,c=d+s.snapElements[u].width,p=s.snapElements[u].top,f=p+s.snapElements[u].height;if(o>d-a&&c+a>o&&h>p-a&&f+a>h||o>d-a&&c+a>o&&l>p-a&&f+a>l||r>d-a&&c+a>r&&h>p-a&&f+a>h||r>d-a&&c+a>r&&l>p-a&&f+a>l){if("inner"!=n.snapMode){var m=a>=Math.abs(p-l),g=a>=Math.abs(f-h),v=a>=Math.abs(d-r),_=a>=Math.abs(c-o);m&&(i.position.top=s._convertPositionTo("relative",{top:p-s.helperProportions.height,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d-s.helperProportions.width}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c}).left-s.margins.left)}var b=m||g||v||_;if("outer"!=n.snapMode){var m=a>=Math.abs(p-h),g=a>=Math.abs(f-l),v=a>=Math.abs(d-o),_=a>=Math.abs(c-r);m&&(i.position.top=s._convertPositionTo("relative",{top:p,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f-s.helperProportions.height,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c-s.helperProportions.width}).left-s.margins.left)}!s.snapElements[u].snapping&&(m||g||v||_||b)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=m||g||v||_||b}else s.snapElements[u].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=!1}}}),e.ui.plugin.add("draggable","stack",{start:function(){var t=e(this).data("draggable").options,i=e.makeArray(e(t.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});if(i.length){var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(t,i){var s=e(this).data("draggable").options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}})})(jQuery);(function(e){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,i=this.options;if(this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=i.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor==String){"all"==this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw");var s=this.handles.split(",");this.handles={};for(var n=0;s.length>n;n++){var a=e.trim(s[n]),o="ui-resizable-"+a,r=e('<div class="ui-resizable-handle '+o+'"></div>');r.css({zIndex:i.zIndex}),"se"==a&&r.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[a]=".ui-resizable-"+a,this.element.append(r)}}this._renderAxis=function(t){t=t||this.element;for(var i in this.handles){if(this.handles[i].constructor==String&&(this.handles[i]=e(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var s=e(this.handles[i],this.element),n=0;n=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth();var a=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");t.css(a,n),this._proportionallyResize()}e(this.handles[i]).length}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),i.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){i.disabled||(e(this).removeClass("ui-resizable-autohide"),t._handles.show())}).mouseleave(function(){i.disabled||t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var i=this.element;this.originalElement.css({position:i.css("position"),width:i.outerWidth(),height:i.outerHeight(),top:i.css("top"),left:i.css("left")}).insertAfter(i),i.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var i=!1;for(var s in this.handles)e(this.handles[s])[0]==t.target&&(i=!0);return!this.options.disabled&&i},_mouseStart:function(i){var s=this.options,n=this.element.position(),a=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(a.is(".ui-draggable")||/absolute/.test(a.css("position")))&&a.css({position:"absolute",top:n.top,left:n.left}),this._renderProxy();var o=t(this.helper.css("left")),r=t(this.helper.css("top"));s.containment&&(o+=e(s.containment).scrollLeft()||0,r+=e(s.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:r},this.size=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalPosition={left:o,top:r},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof s.aspectRatio?s.aspectRatio:this.originalSize.width/this.originalSize.height||1;var h=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor","auto"==h?this.axis+"-resize":h),a.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(e){var t=this.helper,i=(this.options,this.originalMousePosition),s=this.axis,n=e.pageX-i.left||0,a=e.pageY-i.top||0,o=this._change[s];if(!o)return!1;var r=o.apply(this,[e,n,a]);return this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(r=this._updateRatio(r,e)),r=this._respectSize(r,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(r),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var i=this.options,s=this;if(this._helper){var n=this._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:s.sizeDiff.height,r=a?0:s.sizeDiff.width,h={width:s.helper.width()-r,height:s.helper.height()-o},l=parseInt(s.element.css("left"),10)+(s.position.left-s.originalPosition.left)||null,u=parseInt(s.element.css("top"),10)+(s.position.top-s.originalPosition.top)||null;i.animate||this.element.css(e.extend(h,{top:u,left:l})),s.helper.height(s.size.height),s.helper.width(s.size.width),this._helper&&!i.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(e){this.options,this.offset=this.helper.offset(),i(e.left)&&(this.position.left=e.left),i(e.top)&&(this.position.top=e.top),i(e.height)&&(this.size.height=e.height),i(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=(this.options,this.position),s=this.size,n=this.axis;return i(e.height)?e.width=e.height*this.aspectRatio:i(e.width)&&(e.height=e.width/this.aspectRatio),"sw"==n&&(e.left=t.left+(s.width-e.width),e.top=null),"nw"==n&&(e.top=t.top+(s.height-e.height),e.left=t.left+(s.width-e.width)),e},_respectSize:function(e,t){var s=(this.helper,this._vBoundaries),n=(this._aspectRatio||t.shiftKey,this.axis),a=i(e.width)&&s.maxWidth&&s.maxWidth<e.width,o=i(e.height)&&s.maxHeight&&s.maxHeight<e.height,r=i(e.width)&&s.minWidth&&s.minWidth>e.width,h=i(e.height)&&s.minHeight&&s.minHeight>e.height;r&&(e.width=s.minWidth),h&&(e.height=s.minHeight),a&&(e.width=s.maxWidth),o&&(e.height=s.maxHeight);var l=this.originalPosition.left+this.originalSize.width,u=this.position.top+this.size.height,d=/sw|nw|w/.test(n),c=/nw|ne|n/.test(n);r&&d&&(e.left=l-s.minWidth),a&&d&&(e.left=l-s.maxWidth),h&&c&&(e.top=u-s.minHeight),o&&c&&(e.top=u-s.maxHeight);var p=!e.width&&!e.height;return p&&!e.left&&e.top?e.top=null:p&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){if(this.options,this._proportionallyResizeElements.length)for(var t=this.helper||this.element,i=0;this._proportionallyResizeElements.length>i;i++){var s=this._proportionallyResizeElements[i];if(!this.borderDif){var n=[s.css("borderTopWidth"),s.css("borderRightWidth"),s.css("borderBottomWidth"),s.css("borderLeftWidth")],a=[s.css("paddingTop"),s.css("paddingRight"),s.css("paddingBottom"),s.css("paddingLeft")];this.borderDif=e.map(n,function(e,t){var i=parseInt(e,10)||0,s=parseInt(a[t],10)||0;return i+s})}s.css({height:t.height()-this.borderDif[0]-this.borderDif[2]||0,width:t.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,i=this.options;if(this.elementOffset=t.offset(),this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var s=e.ui.ie6?1:0,n=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+n,height:this.element.outerHeight()+n,position:"absolute",left:this.elementOffset.left-s+"px",top:this.elementOffset.top-s+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=(this.options,this.originalSize),s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,i){var s=(this.options,this.originalSize),n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},sw:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,s]))},ne:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},nw:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,s]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!=t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).data("resizable"),i=t.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)})},resize:function(t,i){var s=e(this).data("resizable"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(t,s){e(t).each(function(){var t=e(this),n=e(this).data("resizable-alsoresize"),a={},o=s&&s.length?s:t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var i=(n[t]||0)+(r[t]||0);i&&i>=0&&(a[t]=i||null)}),t.css(a)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):e.each(n.alsoResize,function(e,t){h(e,t)})},stop:function(){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).data("resizable"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(h,u&&l?{top:u,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&&n.length&&e(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var i=e(this).data("resizable"),s=i.options,n=i.element,a=s.containment,o=a instanceof e?a.get(0):/parent/.test(a)?n.parent().get(0):a;if(o)if(i.containerElement=e(o),/document/.test(a)||a==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var r=e(o),h=[];e(["Top","Right","Left","Bottom"]).each(function(e,i){h[e]=t(r.css("padding"+i))}),i.containerOffset=r.offset(),i.containerPosition=r.position(),i.containerSize={height:r.innerHeight()-h[3],width:r.innerWidth()-h[1]};var l=i.containerOffset,u=i.containerSize.height,d=i.containerSize.width,c=e.ui.hasScroll(o,"left")?o.scrollWidth:d,p=e.ui.hasScroll(o)?o.scrollHeight:u;i.parentData={element:o,left:l.left,top:l.top,width:c,height:p}}},resize:function(t){var i=e(this).data("resizable"),s=i.options,n=(i.containerSize,i.containerOffset),a=(i.size,i.position),o=i._aspectRatio||t.shiftKey,r={top:0,left:0},h=i.containerElement;h[0]!=document&&/static/.test(h.css("position"))&&(r=n),a.left<(i._helper?n.left:0)&&(i.size.width=i.size.width+(i._helper?i.position.left-n.left:i.position.left-r.left),o&&(i.size.height=i.size.width/i.aspectRatio),i.position.left=s.helper?n.left:0),a.top<(i._helper?n.top:0)&&(i.size.height=i.size.height+(i._helper?i.position.top-n.top:i.position.top),o&&(i.size.width=i.size.height*i.aspectRatio),i.position.top=i._helper?n.top:0),i.offset.left=i.parentData.left+i.position.left,i.offset.top=i.parentData.top+i.position.top;var l=Math.abs((i._helper?i.offset.left-r.left:i.offset.left-r.left)+i.sizeDiff.width),u=Math.abs((i._helper?i.offset.top-r.top:i.offset.top-n.top)+i.sizeDiff.height),d=i.containerElement.get(0)==i.element.parent().get(0),c=/relative|absolute/.test(i.containerElement.css("position"));d&&c&&(l-=i.parentData.left),l+i.size.width>=i.parentData.width&&(i.size.width=i.parentData.width-l,o&&(i.size.height=i.size.width/i.aspectRatio)),u+i.size.height>=i.parentData.height&&(i.size.height=i.parentData.height-u,o&&(i.size.width=i.size.height*i.aspectRatio))},stop:function(){var t=e(this).data("resizable"),i=t.options,s=(t.position,t.containerOffset),n=t.containerPosition,a=t.containerElement,o=e(t.helper),r=o.offset(),h=o.outerWidth()-t.sizeDiff.width,l=o.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).data("resizable"),i=t.options,s=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t){var i=e(this).data("resizable"),s=i.options,n=i.size,a=i.originalSize,o=i.originalPosition,r=i.axis;s._aspectRatio||t.shiftKey,s.grid="number"==typeof s.grid?[s.grid,s.grid]:s.grid;var h=Math.round((n.width-a.width)/(s.grid[0]||1))*(s.grid[0]||1),l=Math.round((n.height-a.height)/(s.grid[1]||1))*(s.grid[1]||1);/^(se|s|e)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l):/^(ne)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l):/^(sw)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.left=o.left-h):(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l,i.position.left=o.left-h)}});var t=function(e){return parseInt(e,10)||0},i=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e){var t=0,i={},s={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="hide",s.height=s.paddingTop=s.paddingBottom=s.borderTopWidth=s.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var i=this.accordionId="ui-accordion-"+(this.element.attr("id")||++t),s=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(s.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),s.collapsible||s.active!==!1&&null!=s.active||(s.active=0),0>s.active&&(s.active+=this.headers.length),this.active=this._findActive(s.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(t){var s=e(this),n=s.attr("id"),a=s.next(),o=a.attr("id");n||(n=i+"-header-"+t,s.attr("id",n)),o||(o=i+"-panel-"+t,a.attr("id",o)),s.attr("aria-controls",o),a.attr("aria-labelledby",n)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(s.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?(this._activate(t),undefined):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||this.options.active!==!1||this._activate(0),"icons"===e&&(this._destroyIcons(),t&&this._createIcons()),"disabled"===e&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t),undefined)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,s=this.headers.length,n=this.headers.index(t.target),a=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:a=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[s-1]}a&&(e(t.target).attr("tabIndex",-1),e(a).attr("tabIndex",0),a.focus(),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,i,s=this.options.heightStyle,n=this.element.parent();"fill"===s?(e.support.minHeight||(i=n.css("overflow"),n.css("overflow","hidden")),t=n.height(),this.element.siblings(":visible").each(function(){var i=e(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(t-=i.outerHeight(!0))}),i&&n.css("overflow",i),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===s&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={};t&&(e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._on(this.headers,i))},_eventHandler:function(t){var i=this.options,s=this.active,n=e(t.currentTarget),a=n[0]===s[0],o=a&&i.collapsible,r=o?e():n.next(),h=s.next(),l={oldHeader:s,oldPanel:h,newHeader:o?e():n,newPanel:r};t.preventDefault(),a&&!i.collapsible||this._trigger("beforeActivate",t,l)===!1||(i.active=o?!1:this.headers.index(n),this.active=a?e():n,this._toggle(l),s.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),a||(n.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),n.next().addClass("ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,s=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,t):(s.hide(),i.show(),this._toggleComplete(t)),s.attr({"aria-expanded":"false","aria-hidden":"true"}),s.prev().attr("aria-selected","false"),i.length&&s.length?s.prev().attr("tabIndex",-1):i.length&&this.headers.filter(function(){return 0===e(this).attr("tabIndex")}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var a,o,r,h=this,l=0,u=e.length&&(!t.length||e.index()<t.index()),d=this.options.animate||{},c=u&&d.down||d,p=function(){h._toggleComplete(n)};return"number"==typeof c&&(r=c),"string"==typeof c&&(o=c),o=o||c.easing||d.easing,r=r||c.duration||d.duration,t.length?e.length?(a=e.show().outerHeight(),t.animate(i,{duration:r,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(s,{duration:r,easing:o,complete:p,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?l+=i.now:"content"!==h.options.heightStyle&&(i.now=Math.round(a-t.outerHeight()-l),l=0)}}),undefined):t.animate(i,r,o,p):e.animate(s,r,o,p)},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var i=t._create;t._create=function(){if(this.options.navigation){var t=this,s=this.element.find(this.options.header),n=s.next(),a=s.add(n).find("a").filter(this.options.navigationFilter)[0];a&&s.add(n).each(function(i){return e.contains(this,a)?(t.options.active=Math.floor(i/2),!1):undefined})}i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var i=t._create,s=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),i.call(this)},_setOption:function(e){("autoHeight"===e||"clearStyle"===e||"fillSpace"===e)&&(this.options.heightStyle=this._mergeHeightStyle()),s.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;return e.fillSpace?"fill":e.clearStyle?"content":e.autoHeight?"auto":undefined}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var i=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var i=t._findActive;t._findActive=function(e){return-1===e&&(e=!1),e&&"number"!=typeof e&&(e=this.headers.index(this.headers.filter(e)),-1===e&&(e=!1)),i.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var i=t._trigger;t._trigger=function(e,t,s){var n=i.apply(this,arguments);return n?("beforeActivate"===e?n=i.call(this,"changestart",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel}):"activate"===e&&(n=i.call(this,"change",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel})),n):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var i=t._create;t._create=function(){var e=this.options;null===e.animate&&(e.animate=e.animated?"slide"===e.animated?300:"bounceslide"===e.animated?{duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animated:!1),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e){var t=0;e.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,i,s;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return t=!0,s=!0,i=!0,undefined;t=!1,s=!1,i=!1;var a=e.ui.keyCode;switch(n.keyCode){case a.PAGE_UP:t=!0,this._move("previousPage",n);break;case a.PAGE_DOWN:t=!0,this._move("nextPage",n);break;case a.UP:t=!0,this._keyEvent("previous",n);break;case a.DOWN:t=!0,this._keyEvent("next",n);break;case a.ENTER:case a.NUMPAD_ENTER:this.menu.active&&(t=!0,n.preventDefault(),this.menu.select(n));break;case a.TAB:this.menu.active&&this.menu.select(n);break;case a.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(t)return t=!1,s.preventDefault(),undefined;if(!i){var n=e.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(e){return s?(s=!1,e.preventDefault(),undefined):(this._searchTimeout(e),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(e),this._change(e),undefined)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(s){s.target===t.element[0]||s.target===i||e.contains(i,s.target)||t.close()})})},menufocus:function(t,i){if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)}),undefined;var s=i.item.data("ui-autocomplete-item")||i.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:s})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value):this.liveRegion.text(s.value)},menuselect:function(e,t){var i=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),s=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger("select",e,{item:i})&&this._value(i.value),this.term=this._value(),this.close(e),this.selectedItem=i}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this.document.find(t||"body")[0]),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,i,s=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,s){s(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,n){s.xhr&&s.xhr.abort(),s.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){n(e)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger("search",t)!==!1?this._search(e):undefined},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,i=++t;return function(s){i===t&&e.__response(s),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var i=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(i,t),this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var s=this;e.each(i,function(e,i){s._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<a>").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[e](t),undefined):(this.search(null,t),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(e,t),t.preventDefault())}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var s=RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return s.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments),this.options.disabled||this.cancelSearch||(t=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.text(t))}})})(jQuery);(function(e){var t,i,s,n,a="ui-button ui-widget ui-state-default ui-corner-all",o="ui-state-hover ui-state-active ",r="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",h=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var i=t.name,s=t.form,n=e([]);return i&&(n=s?e(s).find("[name='"+i+"']"):e("[name='"+i+"']",t.ownerDocument).filter(function(){return!this.form})),n};e.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,h),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var o=this,r=this.options,u="checkbox"===this.type||"radio"===this.type,d=u?"":"ui-state-active",c="ui-state-focus";null===r.label&&(r.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(a).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){r.disabled||this===t&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){r.disabled||e(this).removeClass(d)}).bind("click"+this.eventNamespace,function(e){r.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){o.buttonElement.addClass(c)}).bind("blur"+this.eventNamespace,function(){o.buttonElement.removeClass(c)}),u&&(this.element.bind("change"+this.eventNamespace,function(){n||o.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){r.disabled||(n=!1,i=e.pageX,s=e.pageY)}).bind("mouseup"+this.eventNamespace,function(e){r.disabled||(i!==e.pageX||s!==e.pageY)&&(n=!0)})),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return r.disabled||n?!1:(e(this).toggleClass("ui-state-active"),o.buttonElement.attr("aria-pressed",o.element[0].checked),undefined)}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(r.disabled||n)return!1;e(this).addClass("ui-state-active"),o.buttonElement.attr("aria-pressed","true");var t=o.element[0];l(t).not(t).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return r.disabled?!1:(e(this).addClass("ui-state-active"),t=this,o.document.one("mouseup",function(){t=null}),undefined)}).bind("mouseup"+this.eventNamespace,function(){return r.disabled?!1:(e(this).removeClass("ui-state-active"),undefined)}).bind("keydown"+this.eventNamespace,function(t){return r.disabled?!1:((t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active"),undefined)}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",r.disabled),this._resetButton()},_determineButtonType:function(){var e,t,i;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button","checkbox"===this.type||"radio"===this.type?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(a+" "+o+" "+r).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){return this._super(e,t),"disabled"===e?(t?this.element.prop("disabled",!0):this.element.prop("disabled",!1),undefined):(this._resetButton(),undefined)},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),"radio"===this.type?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return this.options.label&&this.element.val(this.options.label),undefined;var t=this.buttonElement.removeClass(r),i=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),s=this.options.icons,n=s.primary&&s.secondary,a=[];s.primary||s.secondary?(this.options.text&&a.push("ui-button-text-icon"+(n?"s":s.primary?"-primary":"-secondary")),s.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+s.primary+"'></span>"),s.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+s.secondary+"'></span>"),this.options.text||(a.push(n?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(i)))):a.push("ui-button-text-only"),t.addClass(a.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){"disabled"===e&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t="rtl"===this.element.css("direction");this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).removeClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).addClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var i in t)(null==t[i]||t[i]==undefined)&&(e[i]=t[i]);return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline="div"==nodeName||"span"==nodeName;target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),"input"==nodeName?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var i=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:i,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var i=$(e);t.append=$([]),t.trigger=$([]),i.hasClass(this.markerClassName)||(this._attachments(i,t),i.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,t){var i=this._get(t,"appendText"),s=this._get(t,"isRTL");t.append&&t.append.remove(),i&&(t.append=$('<span class="'+this._appendClass+'">'+i+"</span>"),e[s?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var n=this._get(t,"showOn");if(("focus"==n||"both"==n)&&e.focus(this._showDatepicker),"button"==n||"both"==n){var a=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:a,title:a}):$('<button type="button"></button>').addClass(this._triggerClass).html(""==o?a:$("<img/>").attr({src:o,alt:a,title:a}))),e[s?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),i=this._get(e,"dateFormat");if(i.match(/[DM]/)){var s=function(e){for(var t=0,i=0,s=0;e.length>s;s++)e[s].length>t&&(t=e[s].length,i=s);return i};t.setMonth(s(this._get(e,i.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(s(this._get(e,i.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var i=$(e);i.hasClass(this.markerClassName)||(i.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block"))},_dialogDatepicker:function(e,t,i,s,n){var a=this._dialogInst;if(!a){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),a=this._dialogInst=this._newInst(this._dialogInput,!1),a.settings={},$.data(this._dialogInput[0],PROP_NAME,a)}if(extendRemove(a.settings,s||{}),t=t&&t.constructor==Date?this._formatDate(a,t):t,this._dialogInput.val(t),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,!this._pos){var r=document.documentElement.clientWidth,h=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[r/2-100+l,h/2-150+u]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),a.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,a),this},_destroyDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),"input"==s?(i.append.remove(),i.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"==s||"span"==s)&&t.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!1,i.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})}},_disableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!0,i.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e}},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,i){var s=this._getInst(e);if(2==arguments.length&&"string"==typeof t)return"defaults"==t?$.extend({},$.datepicker._defaults):s?"all"==t?$.extend({},s.settings):this._get(s,t):null;var n=t||{};if("string"==typeof t&&(n={},n[t]=i),s){this._curInst==s&&this._hideDatepicker();var a=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(s,"min"),r=this._getMinMaxDate(s,"max");extendRemove(s.settings,n),null!==o&&n.dateFormat!==undefined&&n.minDate===undefined&&(s.settings.minDate=this._formatDate(s,o)),null!==r&&n.dateFormat!==undefined&&n.maxDate===undefined&&(s.settings.maxDate=this._formatDate(s,r)),this._attachments($(e),s),this._autoSize(s),this._setDate(s,a),this._updateAlternate(s),this._updateDatepicker(s)}},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),i=!0,s=t.dpDiv.is(".ui-datepicker-rtl");if(t._keyEvent=!0,$.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),i=!1;break;case 13:var n=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);n[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,n[0]);var a=$.datepicker._get(t,"onSelect");if(a){var o=$.datepicker._formatDate(t);a.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),i=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),i=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?1:-1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),i=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?-1:1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),i=e.ctrlKey||e.metaKey;break;default:i=!1}else 36==e.keyCode&&e.ctrlKey?$.datepicker._showDatepicker(this):i=!1;i&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var i=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),s=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var i=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));i&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(s){$.datepicker.log(s)}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!=e.nodeName.toLowerCase()&&(e=$("input",e.parentNode)[0]),!$.datepicker._isDisabledDatepicker(e)&&$.datepicker._lastInput!=e){var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var i=$.datepicker._get(t,"beforeShow"),s=i?i.apply(e,[e,t]):{};if(s!==!1){extendRemove(t.settings,s),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var n=!1;$(e).parents().each(function(){return n|="fixed"==$(this).css("position"),!n});var a={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};if($.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),a=$.datepicker._checkOffset(t,a,n),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":n?"fixed":"absolute",display:"none",left:a.left+"px",top:a.top+"px"}),!t.inline){var o=$.datepicker._get(t,"showAnim"),r=$.datepicker._get(t,"duration"),h=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(e.length){var i=$.datepicker._getBorders(t.dpDiv);e.css({left:-i[0],top:-i[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),r,h):t.dpDiv[o||"show"](o?r:null,h),o&&r||h(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}}}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i=e.dpDiv.find("iframe.ui-datepicker-cover");i.length&&i.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var s=this._getNumberOfMonths(e),n=s[1],a=17;if(e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!=s[0]||1!=s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus(),e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,i){var s=e.dpDiv.outerWidth(),n=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,r=document.documentElement.clientWidth+(i?0:$(document).scrollLeft()),h=document.documentElement.clientHeight+(i?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?s-a:0,t.left-=i&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=i&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+s>r&&r>s?Math.abs(t.left+s-r):0),t.top-=Math.min(t.top,t.top+n>h&&h>n?Math.abs(n+o):0),t},_findPos:function(e){for(var t=this._getInst(e),i=this._get(t,"isRTL");e&&("hidden"==e.type||1!=e.nodeType||$.expr.filters.hidden(e));)e=e[i?"previousSibling":"nextSibling"];var s=$(e).offset();return[s.left,s.top]},_hideDatepicker:function(e){var t=this._curInst;if(t&&(!e||t==$.data(e,PROP_NAME))&&this._datepickerShowing){var i=this._get(t,"showAnim"),s=this._get(t,"duration"),n=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[i]||$.effects[i])?t.dpDiv.hide(i,$.datepicker._get(t,"showOptions"),s,n):t.dpDiv["slideDown"==i?"slideUp":"fadeIn"==i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1;var a=this._get(t,"onClose");a&&a.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if($.datepicker._curInst){var t=$(e.target),i=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&0==t.parents("#"+$.datepicker._mainDivId).length&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=i)&&$.datepicker._hideDatepicker()}},_adjustDate:function(e,t,i){var s=$(e),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,t+("M"==i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(e){var t=$(e),i=this._getInst(t[0]);if(this._get(i,"gotoCurrent")&&i.currentDay)i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear;else{var s=new Date;i.selectedDay=s.getDate(),i.drawMonth=i.selectedMonth=s.getMonth(),i.drawYear=i.selectedYear=s.getFullYear()}this._notifyChange(i),this._adjustDate(t)},_selectMonthYear:function(e,t,i){var s=$(e),n=this._getInst(s[0]);n["selected"+("M"==i?"Month":"Year")]=n["draw"+("M"==i?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(e,t,i,s){var n=$(e);if(!$(s).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(n[0])){var a=this._getInst(n[0]);a.selectedDay=a.currentDay=$("a",s).html(),a.selectedMonth=a.currentMonth=t,a.selectedYear=a.currentYear=i,this._selectDate(e,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear))}},_clearDate:function(e){var t=$(e);this._getInst(t[0]),this._selectDate(t,"")},_selectDate:function(e,t){var i=$(e),s=this._getInst(i[0]);t=null!=t?t:this._formatDate(s),s.input&&s.input.val(t),this._updateAlternate(s);var n=this._get(s,"onSelect");n?n.apply(s.input?s.input[0]:null,[t,s]):s.input&&s.input.trigger("change"),s.inline?this._updateDatepicker(s):(this._hideDatepicker(),this._lastInput=s.input[0],"object"!=typeof s.input[0]&&s.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e));$(t).each(function(){$(this).val(n)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var i=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((i-t)/864e5)/7)+1},parseDate:function(e,t,i){if(null==e||null==t)throw"Invalid arguments";if(t="object"==typeof t?""+t:t+"",""==t)return null;var s=(i?i.shortYearCutoff:null)||this._defaults.shortYearCutoff;s="string"!=typeof s?s:(new Date).getFullYear()%100+parseInt(s,10);for(var n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=-1,l=-1,u=-1,d=-1,c=!1,p=function(t){var i=e.length>_+1&&e.charAt(_+1)==t;return i&&_++,i},f=function(e){var i=p(e),s="@"==e?14:"!"==e?20:"y"==e&&i?4:"o"==e?3:2,n=RegExp("^\\d{1,"+s+"}"),a=t.substring(v).match(n);if(!a)throw"Missing number at position "+v;return v+=a[0].length,parseInt(a[0],10)},m=function(e,i,s){var n=$.map(p(e)?s:i,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),a=-1;if($.each(n,function(e,i){var s=i[1];return t.substr(v,s.length).toLowerCase()==s.toLowerCase()?(a=i[0],v+=s.length,!1):undefined}),-1!=a)return a+1;throw"Unknown name at position "+v},g=function(){if(t.charAt(v)!=e.charAt(_))throw"Unexpected literal at position "+v;v++},v=0,_=0;e.length>_;_++)if(c)"'"!=e.charAt(_)||p("'")?g():c=!1;else switch(e.charAt(_)){case"d":u=f("d");break;case"D":m("D",n,a);break;case"o":d=f("o");break;case"m":l=f("m");break;case"M":l=m("M",o,r);break;case"y":h=f("y");break;case"@":var y=new Date(f("@"));h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"!":var y=new Date((f("!")-this._ticksTo1970)/1e4);h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"'":p("'")?g():c=!0;break;default:g()}if(t.length>v){var b=t.substr(v);if(!/^\s+/.test(b))throw"Extra/unparsed characters found in date: "+b}if(-1==h?h=(new Date).getFullYear():100>h&&(h+=(new Date).getFullYear()-(new Date).getFullYear()%100+(s>=h?0:-100)),d>-1)for(l=1,u=d;;){var x=this._getDaysInMonth(h,l-1);if(x>=u)break;l++,u-=x}var y=this._daylightSavingAdjust(new Date(h,l-1,u));if(y.getFullYear()!=h||y.getMonth()+1!=l||y.getDate()!=u)throw"Invalid date";return y},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,n=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,r=function(t){var i=e.length>c+1&&e.charAt(c+1)==t;return i&&c++,i},h=function(e,t,i){var s=""+t;if(r(e))for(;i>s.length;)s="0"+s;return s},l=function(e,t,i,s){return r(e)?s[t]:i[t]},u="",d=!1;if(t)for(var c=0;e.length>c;c++)if(d)"'"!=e.charAt(c)||r("'")?u+=e.charAt(c):d=!1;else switch(e.charAt(c)){case"d":u+=h("d",t.getDate(),2);break;case"D":u+=l("D",t.getDay(),s,n);break;case"o":u+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=h("m",t.getMonth()+1,2);break;case"M":u+=l("M",t.getMonth(),a,o);break;case"y":u+=r("y")?t.getFullYear():(10>t.getYear()%100?"0":"")+t.getYear()%100;break;case"@":u+=t.getTime();break;case"!":u+=1e4*t.getTime()+this._ticksTo1970;break;case"'":r("'")?u+="'":d=!0;break;default:u+=e.charAt(c)}return u},_possibleChars:function(e){for(var t="",i=!1,s=function(t){var i=e.length>n+1&&e.charAt(n+1)==t;return i&&n++,i},n=0;e.length>n;n++)if(i)"'"!=e.charAt(n)||s("'")?t+=e.charAt(n):i=!1;else switch(e.charAt(n)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":s("'")?t+="'":i=!0;break;default:t+=e.charAt(n)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!=e.lastVal){var i,s,n=this._get(e,"dateFormat"),a=e.lastVal=e.input?e.input.val():null;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,a,o)||s}catch(r){this.log(r),a=t?"":a}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=a?i.getDate():0,e.currentMonth=a?i.getMonth():0,e.currentYear=a?i.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,i){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},n=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(i){}for(var s=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,n=s.getFullYear(),a=s.getMonth(),o=s.getDate(),r=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=r.exec(t);h;){switch(h[2]||"d"){case"d":case"D":o+=parseInt(h[1],10);break;case"w":case"W":o+=7*parseInt(h[1],10);break;case"m":case"M":a+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a));break;case"y":case"Y":n+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a))}h=r.exec(t)}return new Date(n,a,o)},a=null==t||""===t?i:"string"==typeof t?n(t):"number"==typeof t?isNaN(t)?i:s(t):new Date(t.getTime());return a=a&&"Invalid Date"==""+a?i:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var s=!t,n=e.selectedMonth,a=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),n==e.selectedMonth&&a==e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(s?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""==e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),i="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(i)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var i=this._get(e,"isRTL"),s=this._get(e,"showButtonPanel"),n=this._get(e,"hideIfNoPrevNext"),a=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),r=this._get(e,"showCurrentAtPos"),h=this._get(e,"stepMonths"),l=1!=o[0]||1!=o[1],u=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),d=this._getMinMaxDate(e,"min"),c=this._getMinMaxDate(e,"max"),p=e.drawMonth-r,f=e.drawYear;if(0>p&&(p+=12,f--),c){var m=this._daylightSavingAdjust(new Date(c.getFullYear(),c.getMonth()-o[0]*o[1]+1,c.getDate()));for(m=d&&d>m?d:m;this._daylightSavingAdjust(new Date(f,p,1))>m;)p--,0>p&&(p=11,f--)}e.drawMonth=p,e.drawYear=f;var g=this._get(e,"prevText");g=a?this.formatDate(g,this._daylightSavingAdjust(new Date(f,p-h,1)),this._getFormatConfig(e)):g;var v=this._canAdjustMonth(e,-1,f,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>":n?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>",_=this._get(e,"nextText");_=a?this.formatDate(_,this._daylightSavingAdjust(new Date(f,p+h,1)),this._getFormatConfig(e)):_;var y=this._canAdjustMonth(e,1,f,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>":n?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>",b=this._get(e,"currentText"),x=this._get(e,"gotoCurrent")&&e.currentDay?u:t;b=a?this.formatDate(b,x,this._getFormatConfig(e)):b;var w=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",k=s?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(i?w:"")+(this._isInRange(e,x)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+b+"</button>":"")+(i?"":w)+"</div>":"",D=parseInt(this._get(e,"firstDay"),10);D=isNaN(D)?0:D;var T=this._get(e,"showWeek"),S=this._get(e,"dayNames");this._get(e,"dayNamesShort");var M=this._get(e,"dayNamesMin"),N=this._get(e,"monthNames"),C=this._get(e,"monthNamesShort"),P=this._get(e,"beforeShowDay"),A=this._get(e,"showOtherMonths"),I=this._get(e,"selectOtherMonths");this._get(e,"calculateWeek")||this.iso8601Week;for(var H=this._getDefaultDate(e),z="",F=0;o[0]>F;F++){var E="";this.maxRows=4;for(var O=0;o[1]>O;O++){var W=this._daylightSavingAdjust(new Date(f,p,e.selectedDay)),j=" ui-corner-all",L="";if(l){if(L+='<div class="ui-datepicker-group',o[1]>1)switch(O){case 0:L+=" ui-datepicker-group-first",j=" ui-corner-"+(i?"right":"left");break;case o[1]-1:L+=" ui-datepicker-group-last",j=" ui-corner-"+(i?"left":"right");break;default:L+=" ui-datepicker-group-middle",j=""}L+='">'}L+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+j+'">'+(/all|left/.test(j)&&0==F?i?y:v:"")+(/all|right/.test(j)&&0==F?i?v:y:"")+this._generateMonthYearHeader(e,p,f,d,c,F>0||O>0,N,C)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";for(var R=T?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"",Y=0;7>Y;Y++){var B=(Y+D)%7;R+="<th"+((Y+D+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+S[B]+'">'+M[B]+"</span></th>"}L+=R+"</tr></thead><tbody>";var J=this._getDaysInMonth(f,p);f==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,J));var K=(this._getFirstDayOfMonth(f,p)-D+7)%7,V=Math.ceil((K+J)/7),U=l?this.maxRows>V?this.maxRows:V:V;this.maxRows=U;for(var q=this._daylightSavingAdjust(new Date(f,p,1-K)),Q=0;U>Q;Q++){L+="<tr>";for(var G=T?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(q)+"</td>":"",Y=0;7>Y;Y++){var X=P?P.apply(e.input?e.input[0]:null,[q]):[!0,""],Z=q.getMonth()!=p,et=Z&&!I||!X[0]||d&&d>q||c&&q>c;G+='<td class="'+((Y+D+6)%7>=5?" ui-datepicker-week-end":"")+(Z?" ui-datepicker-other-month":"")+(q.getTime()==W.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==q.getTime()&&H.getTime()==W.getTime()?" "+this._dayOverClass:"")+(et?" "+this._unselectableClass+" ui-state-disabled":"")+(Z&&!A?"":" "+X[1]+(q.getTime()==u.getTime()?" "+this._currentClass:"")+(q.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+(Z&&!A||!X[2]?"":' title="'+X[2]+'"')+(et?"":' data-handler="selectDay" data-event="click" data-month="'+q.getMonth()+'" data-year="'+q.getFullYear()+'"')+">"+(Z&&!A?"&#xa0;":et?'<span class="ui-state-default">'+q.getDate()+"</span>":'<a class="ui-state-default'+(q.getTime()==t.getTime()?" ui-state-highlight":"")+(q.getTime()==u.getTime()?" ui-state-active":"")+(Z?" ui-priority-secondary":"")+'" href="#">'+q.getDate()+"</a>")+"</td>",q.setDate(q.getDate()+1),q=this._daylightSavingAdjust(q)
}L+=G+"</tr>"}p++,p>11&&(p=0,f++),L+="</tbody></table>"+(l?"</div>"+(o[0]>0&&O==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),E+=L}z+=E}return z+=k+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,z},_generateMonthYearHeader:function(e,t,i,s,n,a,o,r){var h=this._get(e,"changeMonth"),l=this._get(e,"changeYear"),u=this._get(e,"showMonthAfterYear"),d='<div class="ui-datepicker-title">',c="";if(a||!h)c+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=s&&s.getFullYear()==i,f=n&&n.getFullYear()==i;c+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var m=0;12>m;m++)(!p||m>=s.getMonth())&&(!f||n.getMonth()>=m)&&(c+='<option value="'+m+'"'+(m==t?' selected="selected"':"")+">"+r[m]+"</option>");c+="</select>"}if(u||(d+=c+(!a&&h&&l?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",a||!l)d+='<span class="ui-datepicker-year">'+i+"</span>";else{var g=this._get(e,"yearRange").split(":"),v=(new Date).getFullYear(),_=function(e){var t=e.match(/c[+-].*/)?i+parseInt(e.substring(1),10):e.match(/[+-].*/)?v+parseInt(e,10):parseInt(e,10);return isNaN(t)?v:t},y=_(g[0]),b=Math.max(y,_(g[1]||""));for(y=s?Math.max(y,s.getFullYear()):y,b=n?Math.min(b,n.getFullYear()):b,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';b>=y;y++)e.yearshtml+='<option value="'+y+'"'+(y==i?' selected="selected"':"")+">"+y+"</option>";e.yearshtml+="</select>",d+=e.yearshtml,e.yearshtml=null}return d+=this._get(e,"yearSuffix"),u&&(d+=(!a&&h&&l?"":"&#xa0;")+c),d+="</div>"},_adjustInstDate:function(e,t,i){var s=e.drawYear+("Y"==i?t:0),n=e.drawMonth+("M"==i?t:0),a=Math.min(e.selectedDay,this._getDaysInMonth(s,n))+("D"==i?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(s,n,a)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),("M"==i||"Y"==i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max"),n=i&&i>t?i:t;return n=s&&n>s?s:n},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,s){var n=this._getNumberOfMonths(e),a=this._daylightSavingAdjust(new Date(i,s+(0>t?t:n[0]*n[1]),1));return 0>t&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(e,a)},_isInRange:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max");return(!i||t.getTime()>=i.getTime())&&(!s||t.getTime()<=s.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,s){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var n=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(s,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),n,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!=e&&"getDate"!=e&&"widget"!=e?"option"==e&&2==arguments.length&&"string"==typeof arguments[1]?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){"string"==typeof e?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$})(jQuery);(function(e,t){var i="ui-dialog ui-widget ui-widget-content ui-corner-all ",s={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},n={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),"string"!=typeof this.originalTitle&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var s,n,a,o,r,h=this,l=this.options,u=l.title||"&#160;";s=(this.uiDialog=e("<div>")).addClass(i+l.dialogClass).css({display:"none",outline:0,zIndex:l.zIndex}).attr("tabIndex",-1).keydown(function(t){l.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(h.close(t),t.preventDefault())}).mousedown(function(e){h.moveToTop(!1,e)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),n=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){s.focus()}).prependTo(s),a=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),h.close(e)}).appendTo(n),(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(l.closeText).appendTo(a),o=e("<span>").uniqueId().addClass("ui-dialog-title").html(u).prependTo(n),r=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(r),s.attr({role:"dialog","aria-labelledby":o.attr("id")}),n.find("*").add(n).disableSelection(),this._hoverable(a),this._focusable(a),l.draggable&&e.fn.draggable&&this._makeDraggable(),l.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(l.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(i){if(l.modal&&i.keyCode===e.ui.keyCode.TAB){var n=e(":tabbable",s),a=n.filter(":first"),o=n.filter(":last");return i.target!==o[0]||i.shiftKey?i.target===a[0]&&i.shiftKey?(o.focus(1),!1):t:(a.focus(1),!1)}}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var i,s,n=this;if(this._isOpen&&!1!==this._trigger("beforeClose",t))return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(i=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(s=e(this).css("z-index"),isNaN(s)||(i=Math.max(i,s)))}),e.ui.dialog.maxZ=i),this},isOpen:function(){return this._isOpen},moveToTop:function(t,i){var s,n=this.options;return n.modal&&!t||!n.stack&&!n.modal?this._trigger("focus",i):(n.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=n.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),s={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(s),this._trigger("focus",i),this)},open:function(){if(!this._isOpen){var t,i=this.options,s=this.uiDialog;return this._size(),this._position(i.position),s.show(i.show),this.overlay=i.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=s)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this}},_createButtons:function(t){var i=this,s=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),"object"==typeof t&&null!==t&&e.each(t,function(){return!(s=!0)}),s?(e.each(t,function(t,s){var n,a;s=e.isFunction(s)?{click:s,text:t}:s,s=e.extend({type:"button"},s),a=s.click,s.click=function(){a.apply(i.element[0],arguments)},n=e("<button></button>",s).appendTo(i.uiButtonSet),e.fn.button&&n.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){e(this).addClass("ui-dialog-dragging"),i._trigger("dragStart",s,t(n))},drag:function(e,s){i._trigger("drag",e,t(s))},stop:function(n,a){s.position=[a.position.left-i.document.scrollLeft(),a.position.top-i.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),i._trigger("dragStop",n,t(a)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(i){function s(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}i=i===t?this.options.resizable:i;var n=this,a=this.options,o=this.uiDialog.css("position"),r="string"==typeof i?i:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:a.maxWidth,maxHeight:a.maxHeight,minWidth:a.minWidth,minHeight:this._minHeight(),handles:r,start:function(t,i){e(this).addClass("ui-dialog-resizing"),n._trigger("resizeStart",t,s(i))},resize:function(e,t){n._trigger("resize",e,s(t))},stop:function(t,i){e(this).removeClass("ui-dialog-resizing"),a.height=e(this).height(),a.width=e(this).width(),n._trigger("resizeStop",t,s(i)),e.ui.dialog.overlay.resize()}}).css("position",o).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var i,s=[],n=[0,0];t?(("string"==typeof t||"object"==typeof t&&"0"in t)&&(s=t.split?t.split(" "):[t[0],t[1]],1===s.length&&(s[1]=s[0]),e.each(["left","top"],function(e,t){+s[e]===s[e]&&(n[e]=s[e],s[e]=t)}),t={my:s[0]+(0>n[0]?n[0]:"+"+n[0])+" "+s[1]+(0>n[1]?n[1]:"+"+n[1]),at:s.join(" ")}),t=e.extend({},e.ui.dialog.prototype.options.position,t)):t=e.ui.dialog.prototype.options.position,i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var i=this,a={},o=!1;e.each(t,function(e,t){i._setOption(e,t),e in s&&(o=!0),e in n&&(a[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",a)},_setOption:function(t,s){var n,a,o=this.uiDialog;switch(t){case"buttons":this._createButtons(s);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+s);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(i+s);break;case"disabled":s?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":n=o.is(":data(draggable)"),n&&!s&&o.draggable("destroy"),!n&&s&&this._makeDraggable();break;case"position":this._position(s);break;case"resizable":a=o.is(":data(resizable)"),a&&!s&&o.resizable("destroy"),a&&"string"==typeof s&&o.resizable("option","handles",s),a||s===!1||this._makeResizable(s);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(s||"&#160;"))}this._super(t,s)},_size:function(){var t,i,s,n=this.options,a=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),i=Math.max(0,n.minHeight-t),"auto"===n.height?e.support.minHeight?this.element.css({minHeight:i,height:"auto"}):(this.uiDialog.show(),s=this.element.css("height","auto").height(),a||this.uiDialog.hide(),this.element.height(Math.max(s,i))):this.element.height(Math.max(n.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(i){0===this.instances.length&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(i){return e(i.target).zIndex()<e.ui.dialog.overlay.maxZ?!1:t})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var s=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(t){var n=e.ui.dialog.overlay.instances;0!==n.length&&n[n.length-1]===s&&i.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(i.close(t),t.preventDefault())}),s.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&s.bgiframe(),this.instances.push(s),s},destroy:function(t){var i=e.inArray(t,this.instances),s=0;-1!==i&&this.oldInstances.push(this.instances.splice(i,1)[0]),0===this.instances.length&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){s=Math.max(s,this.css("z-index"))}),this.maxZ=s},height:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),i>t?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),i=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),i>t?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e){var t=!1;e.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(i){var s=e(i.target).closest(".ui-menu-item");!t&&s.not(".ui-state-disabled").length&&(t=!0,this.select(i),s.has(".ui-menu").length?this.expand(i):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var i=e(t.currentTarget);i.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,i)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,i)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(i){e(i.target).closest(".ui-menu").length||this.collapseAll(i),t=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function i(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var s,n,a,o,r,h=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:h=!1,n=this.previousFilter||"",a=String.fromCharCode(t.keyCode),o=!1,clearTimeout(this.filterTimer),a===n?o=!0:a=n+a,r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())}),s=o&&-1!==s.index(this.active.next())?this.active.nextAll(".ui-menu-item"):s,s.length||(a=String.fromCharCode(t.keyCode),r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())})),s.length?(this.focus(t,s),s.length>1?(this.previousFilter=a,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}h&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,i=this.options.icons.submenu,s=this.element.find(this.options.menus);s.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),s=t.prev("a"),n=e("<span>").addClass("ui-menu-icon ui-icon "+i).data("ui-menu-submenu-carat",!0);s.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",s.attr("id"))}),t=s.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var i,s;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),s=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=t.children(".ui-menu"),i.length&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,s,n,a,o,r;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,n=t.offset().top-this.activeMenu.offset().top-i-s,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=t.height(),0>n?this.activeMenu.scrollTop(a+n):n+r>o&&this.activeMenu.scrollTop(a+n-o+r))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active}))},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(e)},this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(t),this.activeMenu=s},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var s;this.active&&(s="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.children(".ui-menu-item")[t]()),this.focus(i,s)},nextPage:function(t){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=e(this),0>i.offset().top-s-n}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())),undefined):(this.next(t),undefined)},previousPage:function(t){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-s+n>0}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())),undefined):(this.next(t),undefined)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)}})})(jQuery);

/***/ }),
/* 15 */
/***/ (function(module, exports) {

/*
 * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
 * http://benalman.com/projects/jquery-bbq-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function ($, p) {
    var i, m = Array.prototype.slice, r = decodeURIComponent, a = $.param, c, l, v, b = $.bbq = $.bbq || {}, q, u, j, e = $.event.special, d = "hashchange", A = "querystring", D = "fragment", y = "elemUrlAttr", g = "location", k = "href", t = "src", x = /^.*\?|#.*$/g, w = /^.*\#/, h, C = {};

    function E(F) {
        return typeof F === "string"
    }

    function B(G) {
        var F = m.call(arguments, 1);
        return function () {
            return G.apply(this, F.concat(m.call(arguments)))
        }
    }

    function n(F) {
        return F.replace(/^[^#]*#?(.*)$/, "$1")
    }

    function o(F) {
        return F.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/, "$1")
    }

    function f(H, M, F, I, G) {
        var O, L, K, N, J;
        if (I !== i) {
            K = F.match(H ? /^([^#]*)\#?(.*)$/ : /^([^#?]*)\??([^#]*)(#?.*)/);
            J = K[3] || "";
            if (G === 2 && E(I)) {
                L = I.replace(H ? w : x, "")
            } else {
                N = l(K[2]);
                I = E(I) ? l[H ? D : A](I) : I;
                L = G === 2 ? I : G === 1 ? $.extend({}, I, N) : $.extend({}, N, I);
                L = a(L);
                if (H) {
                    L = L.replace(h, r)
                }
            }
            O = K[1] + (H ? "#" : L || !K[1] ? "?" : "") + L + J
        } else {
            O = M(F !== i ? F : p[g][k])
        }
        return O
    }

    a[A] = B(f, 0, o);
    a[D] = c = B(f, 1, n);
    c.noEscape = function (G) {
        G = G || "";
        var F = $.map(G.split(""), encodeURIComponent);
        h = new RegExp(F.join("|"), "g")
    };
    c.noEscape(",/");
    $.deparam = l = function (I, F) {
        var H = {}, G = {"true": !0, "false": !1, "null": null};
        $.each(I.replace(/\+/g, " ").split("&"), function (L, Q) {
            var K = Q.split("="), P = r(K[0]), J, O = H, M = 0, R = P.split("]["), N = R.length - 1;
            if (/\[/.test(R[0]) && /\]$/.test(R[N])) {
                R[N] = R[N].replace(/\]$/, "");
                R = R.shift().split("[").concat(R);
                N = R.length - 1
            } else {
                N = 0
            }
            if (K.length === 2) {
                J = r(K[1]);
                if (F) {
                    J = J && !isNaN(J) ? +J : J === "undefined" ? i : G[J] !== i ? G[J] : J
                }
                if (N) {
                    for (; M <= N; M++) {
                        P = R[M] === "" ? O.length : R[M];
                        O = O[P] = M < N ? O[P] || (R[M + 1] && isNaN(R[M + 1]) ? {} : []) : J
                    }
                } else {
                    if ($.isArray(H[P])) {
                        H[P].push(J)
                    } else {
                        if (H[P] !== i) {
                            H[P] = [H[P], J]
                        } else {
                            H[P] = J
                        }
                    }
                }
            } else {
                if (P) {
                    H[P] = F ? i : ""
                }
            }
        });
        return H
    };
    function z(H, F, G) {
        if (F === i || typeof F === "boolean") {
            G = F;
            F = a[H ? D : A]()
        } else {
            F = E(F) ? F.replace(H ? w : x, "") : F
        }
        return l(F, G)
    }

    l[A] = B(z, 0);
    l[D] = v = B(z, 1);
    $[y] || ($[y] = function (F) {
        return $.extend(C, F)
    })({a: k, base: k, iframe: t, img: t, input: t, form: "action", link: k, script: t});
    j = $[y];
    function s(I, G, H, F) {
        if (!E(H) && typeof H !== "object") {
            F = H;
            H = G;
            G = i
        }
        return this.each(function () {
            var L = $(this), J = G || j()[(this.nodeName || "").toLowerCase()] || "", K = J && L.attr(J) || "";
            L.attr(J, a[I](K, H, F))
        })
    }

    $.fn[A] = B(s, A);
    $.fn[D] = B(s, D);
    b.pushState = q = function (I, F) {
        if (E(I) && /^#/.test(I) && F === i) {
            F = 2
        }
        var H = I !== i, G = c(p[g][k], H ? I : {}, H ? F : 2);
        p[g][k] = G + (/#/.test(G) ? "" : "#")
    };
    b.getState = u = function (F, G) {
        return F === i || typeof F === "boolean" ? v(F) : v(G)[F]
    };
    b.removeState = function (F) {
        var G = {};
        if (F !== i) {
            G = u();
            $.each($.isArray(F) ? F : arguments, function (I, H) {
                delete G[H]
            })
        }
        q(G, 2)
    };
    e[d] = $.extend(e[d], {
        add: function (F) {
            var H;

            function G(J) {
                var I = J[D] = c();
                J.getState = function (K, L) {
                    return K === i || typeof K === "boolean" ? l(I, K) : l(I, L)[K]
                };
                H.apply(this, arguments)
            }

            if ($.isFunction(F)) {
                H = F;
                return G
            } else {
                H = F.handler;
                F.handler = G
            }
        }
    })
})(jQuery, window);
/*
 * jQuery hashchange event - v1.2 - 2/11/2010
 * http://benalman.com/projects/jquery-hashchange-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function ($, i, b) {
    var j, k = $.event.special, c = "location", d = "hashchange", l = "href", f = $.browser, g = document.documentMode, h = f.msie && (g === b || g < 8), e = "on" + d in i && !h;

    function a(m) {
        m = m || i[c][l];
        return m.replace(/^[^#]*#?(.*)$/, "$1")
    }

    $[d + "Delay"] = 100;
    k[d] = $.extend(k[d], {
        setup: function () {
            if (e) {
                return false
            }
            $(j.start)
        }, teardown: function () {
            if (e) {
                return false
            }
            $(j.stop)
        }
    });
    j = (function () {
        var m = {}, r, n, o, q;

        function p() {
            o = q = function (s) {
                return s
            };
            if (h) {
                n = $('<iframe src="javascript:0"/>').hide().insertAfter("body")[0].contentWindow;
                q = function () {
                    return a(n.document[c][l])
                };
                o = function (u, s) {
                    if (u !== s) {
                        var t = n.document;
                        t.open().close();
                        t[c].hash = "#" + u
                    }
                };
                o(a())
            }
        }

        m.start = function () {
            if (r) {
                return
            }
            var t = a();
            o || p();
            (function s() {
                var v = a(), u = q(t);
                if (v !== t) {
                    o(t = v, u);
                    $(i).trigger(d)
                } else {
                    if (u !== t) {
                        i[c][l] = i[c][l].replace(/#.*/, "") + "#" + u
                    }
                }
                r = setTimeout(s, $[d + "Delay"])
            })()
        };
        m.stop = function () {
            if (!n) {
                r && clearTimeout(r);
                r = 0
            }
        };
        return m
    })()
})(jQuery, window);

/***/ }),
/* 16 */
/***/ (function(module, exports) {

/**
 * bxSlider v4.2.1d
 * Copyright 2013-2017 Steven Wanderski
 * Written while drinking Belgian ales and listening to jazz
 * Licensed under MIT (http://opensource.org/licenses/MIT)
 */

;(function($) {

  var defaults = {

    // GENERAL
    mode: 'horizontal',
    slideSelector: '',
    infiniteLoop: true,
    hideControlOnEnd: false,
    speed: 500,
    easing: null,
    slideMargin: 0,
    startSlide: 0,
    randomStart: false,
    captions: false,
    ticker: false,
    tickerHover: false,
    adaptiveHeight: false,
    adaptiveHeightSpeed: 500,
    video: false,
    useCSS: true,
    preloadImages: 'visible',
    responsive: true,
    slideZIndex: 50,
    wrapperClass: 'bx-wrapper',

    // TOUCH
    touchEnabled: true,
    swipeThreshold: 50,
    oneToOneTouch: true,
    preventDefaultSwipeX: true,
    preventDefaultSwipeY: false,

    // ACCESSIBILITY
    ariaLive: true,
    ariaHidden: true,

    // KEYBOARD
    keyboardEnabled: false,

    // PAGER
    pager: true,
    pagerType: 'full',
    pagerShortSeparator: ' / ',
    pagerSelector: null,
    buildPager: null,
    pagerCustom: null,

    // CONTROLS
    controls: true,
    nextText: 'Next',
    prevText: 'Prev',
    nextSelector: null,
    prevSelector: null,
    autoControls: false,
    startText: 'Start',
    stopText: 'Stop',
    autoControlsCombine: false,
    autoControlsSelector: null,

    // AUTO
    auto: false,
    pause: 4000,
    autoStart: true,
    autoDirection: 'next',
    stopAutoOnClick: false,
    autoHover: false,
    autoDelay: 0,
    autoSlideForOnePage: false,

    // CAROUSEL
    minSlides: 1,
    maxSlides: 1,
    moveSlides: 0,
    slideWidth: 0,
    shrinkItems: false,

    // CALLBACKS
    onSliderLoad: function() { return true; },
    onSlideBefore: function() { return true; },
    onSlideAfter: function() { return true; },
    onSlideNext: function() { return true; },
    onSlidePrev: function() { return true; },
    onSliderResize: function() { return true; },
	onAutoChange: function() { return true; } //calls when auto slides starts and stops
  };

  $.fn.bxSlider = function(options) {

    if (this.length === 0) {
      return this;
    }

    // support multiple elements
    if (this.length > 1) {
      this.each(function() {
        $(this).bxSlider(options);
      });
      return this;
    }

    // create a namespace to be used throughout the plugin
    var slider = {},
    // set a reference to our slider element
    el = this,
    // get the original window dimens (thanks a lot IE)
    windowWidth = $(window).width(),
    windowHeight = $(window).height();

    // Return if slider is already initialized
    if ($(el).data('bxSlider')) { return; }

    /**
     * ===================================================================================
     * = PRIVATE FUNCTIONS
     * ===================================================================================
     */

    /**
     * Initializes namespace settings to be used throughout plugin
     */
    var init = function() {
      // Return if slider is already initialized
      if ($(el).data('bxSlider')) { return; }
      // merge user-supplied options with the defaults
      slider.settings = $.extend({}, defaults, options);
      // parse slideWidth setting
      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);
      // store the original children
      slider.children = el.children(slider.settings.slideSelector);
      // check if actual number of slides is less than minSlides / maxSlides
      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }
      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }
      // if random start, set the startSlide setting to random number
      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }
      // store active slide information
      slider.active = { index: slider.settings.startSlide };
      // store if the slider is in carousel mode (displaying / moving multiple slides)
      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1;
      // if carousel, force preloadImages = 'all'
      if (slider.carousel) { slider.settings.preloadImages = 'all'; }
      // calculate the min / max width thresholds based on min / max number of slides
      // used to setup and update carousel slides dimensions
      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);
      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
      // store the current state of the slider (if currently animating, working is true)
      slider.working = false;
      // initialize the controls object
      slider.controls = {};
      // initialize an auto interval
      slider.interval = null;
      // determine which property to use for transitions
      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';
      // determine if hardware acceleration can be used
      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {
        // create our test div element
        var div = document.createElement('div'),
        // css transition properties
        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
        // test for each property
        for (var i = 0; i < props.length; i++) {
          if (div.style[props[i]] !== undefined) {
            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();
            slider.animProp = '-' + slider.cssPrefix + '-transform';
            return true;
          }
        }
        return false;
      }());
      // if vertical mode always make maxSlides and minSlides equal
      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }
      // save original style data
      el.data('origStyle', el.attr('style'));
      el.children(slider.settings.slideSelector).each(function() {
        $(this).data('origStyle', $(this).attr('style'));
      });

      // perform all DOM / CSS modifications
      setup();
    };

    /**
     * Performs all DOM and CSS modifications
     */
    var setup = function() {
      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)

      // wrap el in a wrapper
      el.wrap('<div class="' + slider.settings.wrapperClass + '"><div class="bx-viewport"></div></div>');
      // store a namespace reference to .bx-viewport
      slider.viewport = el.parent();

      // add aria-live if the setting is enabled and ticker mode is disabled
      if (slider.settings.ariaLive && !slider.settings.ticker) {
        slider.viewport.attr('aria-live', 'polite');
      }
      // add a loading div to display while images are loading
      slider.loader = $('<div class="bx-loading" />');
      slider.viewport.prepend(slider.loader);
      // set el to a massive width, to hold any needed slides
      // also strip any margin and padding from el
      el.css({
        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',
        position: 'relative'
      });
      // if using CSS, add the easing property
      if (slider.usingCSS && slider.settings.easing) {
        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);
      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)
      } else if (!slider.settings.easing) {
        slider.settings.easing = 'swing';
      }
      // make modifications to the viewport (.bx-viewport)
      slider.viewport.css({
        width: '100%',
        overflow: 'hidden',
        position: 'relative'
      });
      slider.viewport.parent().css({
        maxWidth: getViewportMaxWidth()
      });
      // apply css to all slider children
      slider.children.css({
        // the float attribute is a reserved word in compressors like YUI compressor and need to be quoted #48
        'float': slider.settings.mode === 'horizontal' ? 'left' : 'none',
        listStyle: 'none',
        position: 'relative'
      });
      // apply the calculated width after the float is applied to prevent scrollbar interference
      slider.children.css('width', getSlideWidth());
      // if slideMargin is supplied, add the css
      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }
      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }
      // if "fade" mode, add positioning and z-index CSS
      if (slider.settings.mode === 'fade') {
        slider.children.css({
          position: 'absolute',
          zIndex: 0,
          display: 'none'
        });
        // prepare the z-index on the showing element
        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});
      }
      // create an element to contain all slider controls (pager, start / stop, etc)
      slider.controls.el = $('<div class="bx-controls" />');
      // if captions are requested, add them
      if (slider.settings.captions) { appendCaptions(); }
      // check if startSlide is last slide
      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;
      // if video is true, set up the fitVids plugin
      if (slider.settings.video) { el.fitVids(); }
	  //preloadImages
	  if (slider.settings.preloadImages === 'none') { 
		  preloadSelector = null; 
	  }
      else if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { 
		  preloadSelector = slider.children; 
	  }
      // only check for control addition if not in "ticker" mode
      if (!slider.settings.ticker) {
        // if controls are requested, add them
        if (slider.settings.controls) { appendControls(); }
        // if auto is true, and auto controls are requested, add them
        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }
        // if pager is requested, add it
        if (slider.settings.pager) { appendPager(); }
        // if any control option is requested, add the controls wrapper
        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }
      // if ticker mode, do not allow a pager
      } else {
        slider.settings.pager = false;
      }
	  if (preloadSelector === null) {
        start();
      } else {
        loadElements(preloadSelector, start);
      }
    };

    var loadElements = function(selector, callback) {
      var total = selector.find('img:not([src=""]), iframe').length,
      count = 0;
      if (total === 0) {
        callback();
        return;
      }
      selector.find('img:not([src=""]), iframe').each(function() {
        $(this).one('load error', function() {
          if (++count === total) { callback(); }
        }).each(function() {
          if (this.complete || this.src == '') { $(this).trigger('load'); }
        });
      });
    };

    /**
     * Start the slider
     */
    var start = function() {
      // if infinite loop, prepare additional slides
      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {
        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,
        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),
        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');
        if (slider.settings.ariaHidden) {
          sliceAppend.attr('aria-hidden', true);
          slicePrepend.attr('aria-hidden', true);
        }
        el.append(sliceAppend).prepend(slicePrepend);
      }
      // remove the loading DOM element
      slider.loader.remove();
      // set the left / top position of "el"
      setSlidePosition();
      // if "vertical" mode, always use adaptiveHeight to prevent odd behavior
      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }
      // set the viewport height
      slider.viewport.height(getViewportHeight());
      // make sure everything is positioned just right (same as a window resize)
      el.redrawSlider();
      // onSliderLoad callback
      slider.settings.onSliderLoad.call(el, slider.active.index);
      // slider has been fully initialized
      slider.initialized = true;
      // add the resize call to the window
      if (slider.settings.responsive) { $(window).on('resize', resizeWindow); }
      // if auto is true and has more than 1 page, start the show
      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }
      // if ticker is true, start the ticker
      if (slider.settings.ticker) { initTicker(); }
      // if pager is requested, make the appropriate pager link active
      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }
      // check for any updates to the controls (like hideControlOnEnd updates)
      if (slider.settings.controls) { updateDirectionControls(); }
      // if touchEnabled is true, setup the touch events
      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }
      // if keyboardEnabled is true, setup the keyboard events
      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {
        $(document).keydown(keyPress);
      }
    };

    /**
     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value
     */
    var getViewportHeight = function() {
      var height = 0;
      // first determine which children (slides) should be used in our height calculation
      var children = $();
      // if mode is not "vertical" and adaptiveHeight is false, include all children
      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {
        children = slider.children;
      } else {
        // if not carousel, return the single active child
        if (!slider.carousel) {
          children = slider.children.eq(slider.active.index);
        // if carousel, return a slice of children
        } else {
          // get the individual slide index
          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();
          // add the current slide to the children
          children = slider.children.eq(currentIndex);
          // cycle through the remaining "showing" slides
          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {
            // if looped back to the start
            if (currentIndex + i >= slider.children.length) {
              children = children.add(slider.children.eq(i - 1));
            } else {
              children = children.add(slider.children.eq(currentIndex + i));
            }
          }
        }
      }
      // if "vertical" mode, calculate the sum of the heights of the children
      if (slider.settings.mode === 'vertical') {
        children.each(function(index) {
          height += $(this).outerHeight();
        });
        // add user-supplied margins
        if (slider.settings.slideMargin > 0) {
          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);
        }
      // if not "vertical" mode, calculate the max height of the children
      } else {
        height = Math.max.apply(Math, children.map(function() {
          return $(this).outerHeight(false);
        }).get());
      }

      if (slider.viewport.css('box-sizing') === 'border-box') {
        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +
              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));
      } else if (slider.viewport.css('box-sizing') === 'padding-box') {
        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));
      }

      return height;
    };

    /**
     * Returns the calculated width to be used for the outer wrapper / viewport
     */
    var getViewportMaxWidth = function() {
      var width = '100%';
      if (slider.settings.slideWidth > 0) {
        if (slider.settings.mode === 'horizontal') {
          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
        } else {
          width = slider.settings.slideWidth;
        }
      }
      return width;
    };

    /**
     * Returns the calculated width to be applied to each slide
     */
    var getSlideWidth = function() {
      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width
      wrapWidth      = slider.viewport.width();    // get the current viewport width
      // if slide width was not supplied, or is larger than the viewport use the viewport width
      if (slider.settings.slideWidth === 0 ||
        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||
        slider.settings.mode === 'vertical') {
        newElWidth = wrapWidth;
      // if carousel, use the thresholds to determine the width
      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {
        if (wrapWidth > slider.maxThreshold) {
          return newElWidth;
        } else if (wrapWidth < slider.minThreshold) {
          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;
        } else if (slider.settings.shrinkItems) {
          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);
        }
      }
      return newElWidth;
    };

    /**
     * Returns the number of slides currently visible in the viewport (includes partially visible slides)
     */
    var getNumberSlidesShowing = function() {
      var slidesShowing = 1,
      childWidth = null;
      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {
        // if viewport is smaller than minThreshold, return minSlides
        if (slider.viewport.width() < slider.minThreshold) {
          slidesShowing = slider.settings.minSlides;
        // if viewport is larger than maxThreshold, return maxSlides
        } else if (slider.viewport.width() > slider.maxThreshold) {
          slidesShowing = slider.settings.maxSlides;
        // if viewport is between min / max thresholds, divide viewport width by first child width
        } else {
          childWidth = slider.children.first().width() + slider.settings.slideMargin;
          slidesShowing = Math.floor((slider.viewport.width() +
            slider.settings.slideMargin) / childWidth) || 1;
        }
      // if "vertical" mode, slides showing will always be minSlides
      } else if (slider.settings.mode === 'vertical') {
        slidesShowing = slider.settings.minSlides;
      }
      return slidesShowing;
    };

    /**
     * Returns the number of pages (one full viewport of slides is one "page")
     */
    var getPagerQty = function() {
      var pagerQty = 0,
      breakPoint = 0,
      counter = 0;
      // if moveSlides is specified by the user
      if (slider.settings.moveSlides > 0) {
        if (slider.settings.infiniteLoop) {
          pagerQty = Math.ceil(slider.children.length / getMoveBy());
        } else {
          // when breakpoint goes above children length, counter is the number of pages
          while (breakPoint < slider.children.length) {
            ++pagerQty;
            breakPoint = counter + getNumberSlidesShowing();
            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();
          }
		  return counter;
        }
      // if moveSlides is 0 (auto) divide children length by sides showing, then round up
      } else {
        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());
      }
      return pagerQty;
    };

    /**
     * Returns the number of individual slides by which to shift the slider
     */
    var getMoveBy = function() {
      // if moveSlides was set by the user and moveSlides is less than number of slides showing
      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {
        return slider.settings.moveSlides;
      }
      // if moveSlides is 0 (auto)
      return getNumberSlidesShowing();
    };

    /**
     * Sets the slider's (el) left or top position
     */
    var setSlidePosition = function() {
      var position, lastChild, lastShowingIndex;
      // if last slide, not infinite loop, and number of children is larger than specified maxSlides
      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {
        if (slider.settings.mode === 'horizontal') {
          // get the last child's position
          lastChild = slider.children.last();
          position = lastChild.position();
          // set the left position
          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);
        } else if (slider.settings.mode === 'vertical') {
          // get the last showing index's position
          lastShowingIndex = slider.children.length - slider.settings.minSlides;
          position = slider.children.eq(lastShowingIndex).position();
          // set the top position
          setPositionProperty(-position.top, 'reset', 0);
        }
      // if not last slide
      } else {
        // get the position of the first showing slide
        position = slider.children.eq(slider.active.index * getMoveBy()).position();
        // check for last slide
        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }
        // set the respective position
        if (position !== undefined) {
          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
        }
      }
    };

    /**
     * Sets the el's animating property position (which in turn will sometimes animate el).
     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.
     *
     * @param value (int)
     *  - the animating property's value
     *
     * @param type (string) 'slide', 'reset', 'ticker'
     *  - the type of instance for which the function is being
     *
     * @param duration (int)
     *  - the amount of time (in ms) the transition should occupy
     *
     * @param params (array) optional
     *  - an optional parameter containing any variables that need to be passed in
     */
    var setPositionProperty = function(value, type, duration, params) {
      var animateObj, propValue;
      // use CSS transform
      if (slider.usingCSS) {
        // determine the translate3d value
        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';
        // add the CSS transition-duration
        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');
        if (type === 'slide') {
          // set the property value
          el.css(slider.animProp, propValue);
          if (duration !== 0) {
            // add a callback method - executes when CSS transition completes
            el.on('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
              //make sure it's the correct one
              if (!$(e.target).is(el)) { return; }
              // remove the callback
              el.off('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
              updateAfterSlideTransition();
            });
          } else { //duration = 0
            updateAfterSlideTransition();
          }
        } else if (type === 'reset') {
          el.css(slider.animProp, propValue);
        } else if (type === 'ticker') {
          // make the transition use 'linear'
          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');
          el.css(slider.animProp, propValue);
          if (duration !== 0) {
            el.on('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
              //make sure it's the correct one
              if (!$(e.target).is(el)) { return; }
              // remove the callback
              el.off('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
              // reset the position
              setPositionProperty(params.resetValue, 'reset', 0);
              // start the loop again
              tickerLoop();
            });
          } else { //duration = 0
            setPositionProperty(params.resetValue, 'reset', 0);
            tickerLoop();
          }
        }
      // use JS animate
      } else {
        animateObj = {};
        animateObj[slider.animProp] = value;
        if (type === 'slide') {
          el.animate(animateObj, duration, slider.settings.easing, function() {
            updateAfterSlideTransition();
          });
        } else if (type === 'reset') {
          el.css(slider.animProp, value);
        } else if (type === 'ticker') {
          el.animate(animateObj, duration, 'linear', function() {
            setPositionProperty(params.resetValue, 'reset', 0);
            // run the recursive loop after animation
            tickerLoop();
          });
        }
      }
    };

    /**
     * Populates the pager with proper amount of pages
     */
    var populatePager = function() {
      var pagerHtml = '',
      linkContent = '',
      pagerQty = getPagerQty();
      // loop through each pager item
      for (var i = 0; i < pagerQty; i++) {
        linkContent = '';
        // if a buildPager function is supplied, use it to get pager link value, else use index + 1
        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {
          linkContent = slider.settings.buildPager(i);
          slider.pagerEl.addClass('bx-custom-pager');
        } else {
          linkContent = i + 1;
          slider.pagerEl.addClass('bx-default-pager');
        }
        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;
        // add the markup to the string
        pagerHtml += '<div class="bx-pager-item"><a href="" data-slide-index="' + i + '" class="bx-pager-link">' + linkContent + '</a></div>';
      }
      // populate the pager element with pager links
      slider.pagerEl.html(pagerHtml);
    };

    /**
     * Appends the pager to the controls element
     */
    var appendPager = function() {
      if (!slider.settings.pagerCustom) {
        // create the pager DOM element
        slider.pagerEl = $('<div class="bx-pager" />');
        // if a pager selector was supplied, populate it with the pager
        if (slider.settings.pagerSelector) {
          $(slider.settings.pagerSelector).html(slider.pagerEl);
        // if no pager selector was supplied, add it after the wrapper
        } else {
          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);
        }
        // populate the pager
        populatePager();
      } else {
        slider.pagerEl = $(slider.settings.pagerCustom);
      }
      // assign the pager click binding
      slider.pagerEl.on('click touchend', 'a', clickPagerBind);
    };

    /**
     * Appends prev / next controls to the controls element
     */
    var appendControls = function() {
      slider.controls.next = $('<a class="bx-next" href="">' + slider.settings.nextText + '</a>');
      slider.controls.prev = $('<a class="bx-prev" href="">' + slider.settings.prevText + '</a>');
      // add click actions to the controls
      slider.controls.next.on('click touchend', clickNextBind);
      slider.controls.prev.on('click touchend', clickPrevBind);
      // if nextSelector was supplied, populate it
      if (slider.settings.nextSelector) {
        $(slider.settings.nextSelector).append(slider.controls.next);
      }
      // if prevSelector was supplied, populate it
      if (slider.settings.prevSelector) {
        $(slider.settings.prevSelector).append(slider.controls.prev);
      }
      // if no custom selectors were supplied
      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {
        // add the controls to the DOM
        slider.controls.directionEl = $('<div class="bx-controls-direction" />');
        // add the control elements to the directionEl
        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);
        // slider.viewport.append(slider.controls.directionEl);
        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);
      }
    };

    /**
     * Appends start / stop auto controls to the controls element
     */
    var appendControlsAuto = function() {
      slider.controls.start = $('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + slider.settings.startText + '</a></div>');
      slider.controls.stop = $('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + slider.settings.stopText + '</a></div>');
      // add the controls to the DOM
      slider.controls.autoEl = $('<div class="bx-controls-auto" />');
      // on click actions to the controls
      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);
      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);
      // if autoControlsCombine, insert only the "start" control
      if (slider.settings.autoControlsCombine) {
        slider.controls.autoEl.append(slider.controls.start);
      // if autoControlsCombine is false, insert both controls
      } else {
        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);
      }
      // if auto controls selector was supplied, populate it with the controls
      if (slider.settings.autoControlsSelector) {
        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);
      // if auto controls selector was not supplied, add it after the wrapper
      } else {
        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);
      }
      // update the auto controls
      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');
    };

    /**
     * Appends image captions to the DOM
     */
    var appendCaptions = function() {
      // cycle through each child
      slider.children.each(function(index) {
        // get the image title attribute
        var title = $(this).find('img:first').attr('title');
        // append the caption
        if (title !== undefined && ('' + title).length) {
          $(this).append('<div class="bx-caption"><span>' + title + '</span></div>');
        }
      });
    };

    /**
     * Click next binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickNextBind = function(e) {
      e.preventDefault();
      if (slider.controls.el.hasClass('disabled')) { return; }
      // if auto show is running, stop it
      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
      el.goToNextSlide();
    };

    /**
     * Click prev binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickPrevBind = function(e) {
      e.preventDefault();
      if (slider.controls.el.hasClass('disabled')) { return; }
      // if auto show is running, stop it
      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
      el.goToPrevSlide();
    };

    /**
     * Click start binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickStartBind = function(e) {
      el.startAuto();
      e.preventDefault();
    };

    /**
     * Click stop binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickStopBind = function(e) {
      el.stopAuto();
      e.preventDefault();
    };

    /**
     * Click pager binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickPagerBind = function(e) {
      var pagerLink, pagerIndex;
      e.preventDefault();
      if (slider.controls.el.hasClass('disabled')) {
        return;
      }
      // if auto show is running, stop it
      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }
      pagerLink = $(e.currentTarget);
      if (pagerLink.attr('data-slide-index') !== undefined) {
        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));
        // if clicked pager link is not active, continue with the goToSlide call
        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }
      }
    };

    /**
     * Updates the pager links with an active class
     *
     * @param slideIndex (int)
     *  - index of slide to make active
     */
    var updatePagerActive = function(slideIndex) {
      // if "short" pager type
      var len = slider.children.length; // nb of children
      if (slider.settings.pagerType === 'short') {
        if (slider.settings.maxSlides > 1) {
          len = Math.ceil(slider.children.length / slider.settings.maxSlides);
        }
        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);
        return;
      }
      // remove all pager active classes
      slider.pagerEl.find('a').removeClass('active');
      // apply the active class for all pagers
      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });
    };

    /**
     * Performs needed actions after a slide transition
     */
    var updateAfterSlideTransition = function() {
      // if infinite loop is true
      if (slider.settings.infiniteLoop) {
        var position = '';
        // first slide
        if (slider.active.index === 0) {
          // set the new position
          position = slider.children.eq(0).position();
        // carousel, last slide
        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {
          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();
        // last slide
        } else if (slider.active.index === slider.children.length - 1) {
          position = slider.children.eq(slider.children.length - 1).position();
        }
        if (position) {
          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
        }
      }
      // declare that the transition is complete
      slider.working = false;
      // onSlideAfter callback
      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
    };

    /**
     * Updates the auto controls state (either active, or combined switch)
     *
     * @param state (string) "start", "stop"
     *  - the new state of the auto show
     */
    var updateAutoControls = function(state) {
      // if autoControlsCombine is true, replace the current control with the new state
      if (slider.settings.autoControlsCombine) {
        slider.controls.autoEl.html(slider.controls[state]);
      // if autoControlsCombine is false, apply the "active" class to the appropriate control
      } else {
        slider.controls.autoEl.find('a').removeClass('active');
        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');
      }
    };

    /**
     * Updates the direction controls (checks if either should be hidden)
     */
    var updateDirectionControls = function() {
      if (getPagerQty() === 1) {
        slider.controls.prev.addClass('disabled');
        slider.controls.next.addClass('disabled');
      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {
        // if first slide
        if (slider.active.index === 0) {
          slider.controls.prev.addClass('disabled');
          slider.controls.next.removeClass('disabled');
        // if last slide
        } else if (slider.active.index === getPagerQty() - 1) {
          slider.controls.next.addClass('disabled');
          slider.controls.prev.removeClass('disabled');
        // if any slide in the middle
        } else {
          slider.controls.prev.removeClass('disabled');
          slider.controls.next.removeClass('disabled');
        }
      }
    };
	/* auto start and stop functions */
	var windowFocusHandler = function() { el.startAuto(); };
	var windowBlurHandler = function() { el.stopAuto(); };
    /**
     * Initializes the auto process
     */
    var initAuto = function() {
      // if autoDelay was supplied, launch the auto show using a setTimeout() call
      if (slider.settings.autoDelay > 0) {
        setTimeout(el.startAuto, slider.settings.autoDelay);
      // if autoDelay was not supplied, start the auto show normally
      } else {
        el.startAuto();

        //add focus and blur events to ensure its running if timeout gets paused
        $(window).focus(windowFocusHandler).blur(windowBlurHandler);
      }
      // if autoHover is requested
      if (slider.settings.autoHover) {
        // on el hover
        el.hover(function() {
          // if the auto show is currently playing (has an active interval)
          if (slider.interval) {
            // stop the auto show and pass true argument which will prevent control update
            el.stopAuto(true);
            // create a new autoPaused value which will be used by the relative "mouseout" event
            slider.autoPaused = true;
          }
        }, function() {
          // if the autoPaused value was created be the prior "mouseover" event
          if (slider.autoPaused) {
            // start the auto show and pass true argument which will prevent control update
            el.startAuto(true);
            // reset the autoPaused value
            slider.autoPaused = null;
          }
        });
      }
    };

    /**
     * Initializes the ticker process
     */
    var initTicker = function() {
      var startPosition = 0,
      position, transform, value, idx, ratio, property, newSpeed, totalDimens;
      // if autoDirection is "next", append a clone of the entire slider
      if (slider.settings.autoDirection === 'next') {
        el.append(slider.children.clone().addClass('bx-clone'));
      // if autoDirection is "prev", prepend a clone of the entire slider, and set the left position
      } else {
        el.prepend(slider.children.clone().addClass('bx-clone'));
        position = slider.children.first().position();
        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
      }
      setPositionProperty(startPosition, 'reset', 0);
      // do not allow controls in ticker mode
      slider.settings.pager = false;
      slider.settings.controls = false;
      slider.settings.autoControls = false;
      // if autoHover is requested
      if (slider.settings.tickerHover) {
        if (slider.usingCSS) {
          idx = slider.settings.mode === 'horizontal' ? 4 : 5;
          slider.viewport.hover(function() {
            transform = el.css('-' + slider.cssPrefix + '-transform');
            value = parseFloat(transform.split(',')[idx]);
            setPositionProperty(value, 'reset', 0);
          }, function() {
            totalDimens = 0;
            slider.children.each(function(index) {
              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
            });
            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
            ratio = slider.settings.speed / totalDimens;
            // determine which property to use
            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
            // calculate the new speed
            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));
            tickerLoop(newSpeed);
          });
        } else {
          // on el hover
          slider.viewport.hover(function() {
            el.stop();
          }, function() {
            // calculate the total width of children (used to calculate the speed ratio)
            totalDimens = 0;
            slider.children.each(function(index) {
              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
            });
            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
            ratio = slider.settings.speed / totalDimens;
            // determine which property to use
            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
            // calculate the new speed
            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));
            tickerLoop(newSpeed);
          });
        }
      }
      // start the ticker loop
      tickerLoop();
    };

    /**
     * Runs a continuous loop, news ticker-style
     */
    var tickerLoop = function(resumeSpeed) {
      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,
      position = {left: 0, top: 0},
      reset = {left: 0, top: 0},
      animateProperty, resetValue, params;

      // if "next" animate left position to last child, then reset left to 0
      if (slider.settings.autoDirection === 'next') {
        position = el.find('.bx-clone').first().position();
      // if "prev" animate left position to 0, then reset left to first non-clone child
      } else {
        reset = slider.children.first().position();
      }
      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;
      params = {resetValue: resetValue};
      setPositionProperty(animateProperty, 'ticker', speed, params);
    };

    /**
     * Check if el is on screen
     */
    var isOnScreen = function(el) {
      var win = $(window),
      viewport = {
        top: win.scrollTop(),
        left: win.scrollLeft()
      },
      bounds = el.offset();

      viewport.right = viewport.left + win.width();
      viewport.bottom = viewport.top + win.height();
      bounds.right = bounds.left + el.outerWidth();
      bounds.bottom = bounds.top + el.outerHeight();

      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));
    };

    /**
     * Initializes keyboard events
     */
    var keyPress = function(e) {
      var activeElementTag = document.activeElement.tagName.toLowerCase(),
      tagFilters = 'input|textarea',
      p = new RegExp(activeElementTag,['i']),
      result = p.exec(tagFilters);

      if (result == null && isOnScreen(el)) {
        if (e.keyCode === 39) {
          clickNextBind(e);
          return false;
        } else if (e.keyCode === 37) {
          clickPrevBind(e);
          return false;
        }
      }
    };

    /**
     * Initializes touch events
     */
    var initTouch = function() {
      // initialize object to contain all touch values
      slider.touch = {
        start: {x: 0, y: 0},
        end: {x: 0, y: 0}
      };
      slider.viewport.on('touchstart MSPointerDown pointerdown', onTouchStart);

      //for browsers that have implemented pointer events and fire a click after
      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not
      slider.viewport.on('click', '.bxslider a', function(e) {
        if (slider.viewport.hasClass('click-disabled')) {
          e.preventDefault();
          slider.viewport.removeClass('click-disabled');
        }
      });
    };

    /**
     * Event handler for "touchstart"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchStart = function(e) {
      // watch only for left mouse, touch contact and pen contact
      // touchstart event object doesn`t have button property
      if (e.type !== 'touchstart' && e.button !== 0) {
        return;
      }
      e.preventDefault();
      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls
      slider.controls.el.addClass('disabled');

      if (slider.working) {
        slider.controls.el.removeClass('disabled');
      } else {
        // record the original position when touch starts
        slider.touch.originalPos = el.position();
        var orig = e.originalEvent,
        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];
		var chromePointerEvents = typeof PointerEvent === 'function'; 
		if (chromePointerEvents) { 
			if (orig.pointerId === undefined) { 
				return;
			} 
		}
        // record the starting touch x, y coordinates
        slider.touch.start.x = touchPoints[0].pageX;
        slider.touch.start.y = touchPoints[0].pageY;

        if (slider.viewport.get(0).setPointerCapture) {
          slider.pointerId = orig.pointerId;
          slider.viewport.get(0).setPointerCapture(slider.pointerId);
        }
        // store original event data for click fixation
        slider.originalClickTarget = orig.originalTarget || orig.target;
        slider.originalClickButton = orig.button;
        slider.originalClickButtons = orig.buttons;
        slider.originalEventType = orig.type;
        // at this moment we don`t know what it is click or swipe
        slider.hasMove = false;
        // on a "touchmove" event to the viewport
        slider.viewport.on('touchmove MSPointerMove pointermove', onTouchMove);
        // on a "touchend" event to the viewport
        slider.viewport.on('touchend MSPointerUp pointerup', onTouchEnd);
        slider.viewport.on('MSPointerCancel pointercancel', onPointerCancel);
      }
    };

    /**
     * Cancel Pointer for Windows Phone
     *
     * @param e (event)
     *  - DOM event object
     */
    var onPointerCancel = function(e) {
      e.preventDefault();
      /* onPointerCancel handler is needed to deal with situations when a touchend
      doesn't fire after a touchstart (this happens on windows phones only) */
      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);

      //remove handlers
      slider.controls.el.removeClass('disabled');
      slider.viewport.off('MSPointerCancel pointercancel', onPointerCancel);
      slider.viewport.off('touchmove MSPointerMove pointermove', onTouchMove);
      slider.viewport.off('touchend MSPointerUp pointerup', onTouchEnd);
      if (slider.viewport.get(0).releasePointerCapture) {
        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
      }
    };

    /**
     * Event handler for "touchmove"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchMove = function(e) {
      var orig = e.originalEvent,
      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
      // if scrolling on y axis, do not prevent default
      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),
      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),
      value = 0,
      change = 0;
      // this is swipe
      slider.hasMove = true;

      // x axis swipe
      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {
        e.preventDefault();
      // y axis swipe
      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {
        e.preventDefault();
      }
      if (e.type !== 'touchmove') {
        e.preventDefault();
      }

      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {
        // if horizontal, drag along x axis
        if (slider.settings.mode === 'horizontal') {
          change = touchPoints[0].pageX - slider.touch.start.x;
          value = slider.touch.originalPos.left + change;
        // if vertical, drag along y axis
        } else {
          change = touchPoints[0].pageY - slider.touch.start.y;
          value = slider.touch.originalPos.top + change;
        }
        setPositionProperty(value, 'reset', 0);
      }
    };

    /**
     * Event handler for "touchend"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchEnd = function(e) {
      e.preventDefault();
      slider.viewport.off('touchmove MSPointerMove pointermove', onTouchMove);
      //enable slider controls as soon as user stops interacing with slides
      slider.controls.el.removeClass('disabled');
      var orig    = e.originalEvent,
      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
      value       = 0,
      distance    = 0;
      // record end x, y positions
      slider.touch.end.x = touchPoints[0].pageX;
      slider.touch.end.y = touchPoints[0].pageY;
      // if fade mode, check if absolute x distance clears the threshold
      if (slider.settings.mode === 'fade') {
        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);
        if (distance >= slider.settings.swipeThreshold) {
          if (slider.touch.start.x > slider.touch.end.x) {
            el.goToNextSlide();
          } else {
            el.goToPrevSlide();
          }
          el.stopAuto();
        }
      // not fade mode
      } else {
        // calculate distance and el's animate property
        if (slider.settings.mode === 'horizontal') {
          distance = slider.touch.end.x - slider.touch.start.x;
          value = slider.touch.originalPos.left;
        } else {
          distance = slider.touch.end.y - slider.touch.start.y;
          value = slider.touch.originalPos.top;
        }
        // if not infinite loop and first / last slide, do not attempt a slide transition
        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {
          setPositionProperty(value, 'reset', 200);
        } else {
          // check if distance clears threshold
          if (Math.abs(distance) >= slider.settings.swipeThreshold) {
            if (distance < 0) {
              el.goToNextSlide();
            } else {
              el.goToPrevSlide();
            }
            el.stopAuto();
          } else {
            // el.animate(property, 200);
            setPositionProperty(value, 'reset', 200);
          }
        }
      }
      slider.viewport.off('touchend MSPointerUp pointerup', onTouchEnd);

      if (slider.viewport.get(0).releasePointerCapture) {
        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
      }
      // if slider had swipe with left mouse, touch contact and pen contact
      if (slider.hasMove === false && (slider.originalClickButton === 0 || slider.originalEventType === 'touchstart')) {
        // trigger click event (fix for Firefox59 and PointerEvent standard compatibility)
        $(slider.originalClickTarget).trigger({
          type: 'click',
          button: slider.originalClickButton,
          buttons: slider.originalClickButtons
        });
      }
    };

    /**
     * Window resize event callback
     */
    var resizeWindow = function(e) {
      // don't do anything if slider isn't initialized.
      if (!slider.initialized) { return; }
      // Delay if slider working.
      if (slider.working) {
        window.setTimeout(resizeWindow, 10);
      } else {
        // get the new window dimens (again, thank you IE)
        var windowWidthNew = $(window).width(),
        windowHeightNew = $(window).height();
        // make sure that it is a true window resize
        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements
        // are resized. Can you just die already?*
        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {
          // set the new window dimens
          windowWidth = windowWidthNew;
          windowHeight = windowHeightNew;
          // update all dynamic elements
          el.redrawSlider();
          // Call user resize handler
          slider.settings.onSliderResize.call(el, slider.active.index);
        }
      }
    };

    /**
     * Adds an aria-hidden=true attribute to each element
     *
     * @param startVisibleIndex (int)
     *  - the first visible element's index
     */
    var applyAriaHiddenAttributes = function(startVisibleIndex) {
      var numberOfSlidesShowing = getNumberSlidesShowing();
      // only apply attributes if the setting is enabled and not in ticker mode
      if (slider.settings.ariaHidden && !slider.settings.ticker) {
        // add aria-hidden=true to all elements
        slider.children.attr('aria-hidden', 'true');
        // get the visible elements and change to aria-hidden=false
        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');
      }
    };

    /**
     * Returns index according to present page range
     *
     * @param slideOndex (int)
     *  - the desired slide index
     */
    var setSlideIndex = function(slideIndex) {
      if (slideIndex < 0) {
        if (slider.settings.infiniteLoop) {
          return getPagerQty() - 1;
        }else {
          //we don't go to undefined slides
          return slider.active.index;
        }
      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)
      } else if (slideIndex >= getPagerQty()) {
        if (slider.settings.infiniteLoop) {
          return 0;
        } else {
          //we don't move to undefined pages
          return slider.active.index;
        }
      // set active index to requested slide
      } else {
        return slideIndex;
      }
    };

    /**
     * ===================================================================================
     * = PUBLIC FUNCTIONS
     * ===================================================================================
     */

    /**
     * Performs slide transition to the specified slide
     *
     * @param slideIndex (int)
     *  - the destination slide's index (zero-based)
     *
     * @param direction (string)
     *  - INTERNAL USE ONLY - the direction of travel ("prev" / "next")
     */
    el.goToSlide = function(slideIndex, direction) {
      // onSlideBefore, onSlideNext, onSlidePrev callbacks
      // Allow transition canceling based on returned value
      var performTransition = true,
      moveBy = 0,
      position = {left: 0, top: 0},
      lastChild = null,
      lastShowingIndex, eq, value, requestEl;
      // store the old index
      slider.oldIndex = slider.active.index;
      //set new index
      slider.active.index = setSlideIndex(slideIndex);

      // if plugin is currently in motion, ignore request
      if (slider.working || slider.active.index === slider.oldIndex) { return; }
      // declare that plugin is in motion
      slider.working = true;

      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);

      // If transitions canceled, reset and return
      if (typeof (performTransition) !== 'undefined' && !performTransition) {
        slider.active.index = slider.oldIndex; // restore old index
        slider.working = false; // is not in motion
        return;
      }

      if (direction === 'next') {
        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
          performTransition = false;
        }
      } else if (direction === 'prev') {
        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
          performTransition = false;
        }
      }

      // check if last slide
      slider.active.last = slider.active.index >= getPagerQty() - 1;
      // update the pager with active class
      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }
      // // check for direction control update
      if (slider.settings.controls) { updateDirectionControls(); }
      // if slider is set to mode: "fade"
      if (slider.settings.mode === 'fade') {
        // if adaptiveHeight is true and next height is different from current height, animate to the new height
        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
        }
        // fade out the visible child and reset its z-index value
        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});
        // fade in the newly requested slide
        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {
          $(this).css('zIndex', slider.settings.slideZIndex);
          updateAfterSlideTransition();
        });
      // slider mode is not "fade"
      } else {
        // if adaptiveHeight is true and next height is different from current height, animate to the new height
        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
        }
        // if carousel and not infinite loop
        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {
          if (slider.settings.mode === 'horizontal') {
            // get the last child position
            lastChild = slider.children.eq(slider.children.length - 1);
            position = lastChild.position();
            // calculate the position of the last slide
            moveBy = slider.viewport.width() - lastChild.outerWidth();
          } else {
            // get last showing index position
            lastShowingIndex = slider.children.length - slider.settings.minSlides;
            position = slider.children.eq(lastShowingIndex).position();
          }
          // horizontal carousel, going previous while on first slide (infiniteLoop mode)
        } else if (slider.carousel && slider.active.last && direction === 'prev') {
          // get the last child position
          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);
          lastChild = el.children('.bx-clone').eq(eq);
          position = lastChild.position();
        // if infinite loop and "Next" is clicked on the last slide
        } else if (direction === 'next' && slider.active.index === 0) {
          // get the last clone position
          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();
          slider.active.last = false;
        // normal non-zero requests
        } else if (slideIndex >= 0) {
          //parseInt is applied to allow floats for slides/page
          requestEl = slideIndex * parseInt(getMoveBy());
          position = slider.children.eq(requestEl).position();
        }

        /* If the position doesn't exist
         * (e.g. if you destroy the slider on a next click),
         * it doesn't throw an error.
         */
        if (typeof (position) !== 'undefined') {
          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;
          // plugin values to be animated
          setPositionProperty(value, 'slide', slider.settings.speed);
        }
        slider.working = false;
      }
      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
    };

    /**
     * Transitions to the next slide in the show
     */
    el.goToNextSlide = function() {
      // if infiniteLoop is false and last page is showing, disregard call
      if (!slider.settings.infiniteLoop && slider.active.last) { return; }
	  if (slider.working === true){ return ;}
      var pagerIndex = parseInt(slider.active.index) + 1;
      el.goToSlide(pagerIndex, 'next');
    };

    /**
     * Transitions to the prev slide in the show
     */
    el.goToPrevSlide = function() {
      // if infiniteLoop is false and last page is showing, disregard call
      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }
	  if (slider.working === true){ return ;}
      var pagerIndex = parseInt(slider.active.index) - 1;
      el.goToSlide(pagerIndex, 'prev');
    };

    /**
     * Starts the auto show
     *
     * @param preventControlUpdate (boolean)
     *  - if true, auto controls state will not be updated
     */
    el.startAuto = function(preventControlUpdate) {
      // if an interval already exists, disregard call
      if (slider.interval) { return; }
      // create an interval
      slider.interval = setInterval(function() {
        if (slider.settings.autoDirection === 'next') {
          el.goToNextSlide();
        } else {
          el.goToPrevSlide();
        }
      }, slider.settings.pause);
	  //allback for when the auto rotate status changes
	  slider.settings.onAutoChange.call(el, true);
      // if auto controls are displayed and preventControlUpdate is not true
      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }
    };

    /**
     * Stops the auto show
     *
     * @param preventControlUpdate (boolean)
     *  - if true, auto controls state will not be updated
     */
    el.stopAuto = function(preventControlUpdate) {
      // if slider is auto paused, just clear that state
      if (slider.autoPaused) slider.autoPaused = false;
      // if no interval exists, disregard call
      if (!slider.interval) { return; }
      // clear the interval
      clearInterval(slider.interval);
      slider.interval = null;
	  //allback for when the auto rotate status changes
	  slider.settings.onAutoChange.call(el, false);
      // if auto controls are displayed and preventControlUpdate is not true
      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }
    };

    /**
     * Returns current slide index (zero-based)
     */
    el.getCurrentSlide = function() {
      return slider.active.index;
    };

    /**
     * Returns current slide element
     */
    el.getCurrentSlideElement = function() {
      return slider.children.eq(slider.active.index);
    };

    /**
     * Returns a slide element
     * @param index (int)
     *  - The index (zero-based) of the element you want returned.
     */
    el.getSlideElement = function(index) {
      return slider.children.eq(index);
    };

    /**
     * Returns number of slides in show
     */
    el.getSlideCount = function() {
      return slider.children.length;
    };

    /**
     * Return slider.working variable
     */
    el.isWorking = function() {
      return slider.working;
    };

    /**
     * Update all dynamic slider elements
     */
    el.redrawSlider = function() {
      // resize all children in ratio to new screen size
      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());
      // adjust the height
      slider.viewport.css('height', getViewportHeight());
      // update the slide position
      if (!slider.settings.ticker) { setSlidePosition(); }
      // if active.last was true before the screen resize, we want
      // to keep it last no matter what screen size we end on
      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }
      // if the active index (page) no longer exists due to the resize, simply set the index as last
      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }
      // if a pager is being displayed and a custom pager is not being used, update it
      if (slider.settings.pager && !slider.settings.pagerCustom) {
        populatePager();
        updatePagerActive(slider.active.index);
      }
      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
    };

    /**
     * Destroy the current instance of the slider (revert everything back to original state)
     */
    el.destroySlider = function() {
      // don't do anything if slider has already been destroyed
      if (!slider.initialized) { return; }
      slider.initialized = false;
      $('.bx-clone', this).remove();
      slider.children.each(function() {
        if ($(this).data('origStyle') !== undefined) {
          $(this).attr('style', $(this).data('origStyle'));
        } else {
          $(this).removeAttr('style');
        }
      });
      if ($(this).data('origStyle') !== undefined) {
        this.attr('style', $(this).data('origStyle'));
      } else {
        $(this).removeAttr('style');
      }
      $(this).unwrap().unwrap();
      if (slider.controls.el) { slider.controls.el.remove(); }
      if (slider.controls.next) { slider.controls.next.remove(); }
      if (slider.controls.prev) { slider.controls.prev.remove(); }
      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }
      $('.bx-caption', this).remove();
      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }
      clearInterval(slider.interval);
      if (slider.settings.responsive) { $(window).off('resize', resizeWindow); }
      if (slider.settings.keyboardEnabled) { $(document).off('keydown', keyPress); }
      //remove self reference in data
      $(this).removeData('bxSlider');
	  // remove global window handlers
	  $(window).off('blur', windowBlurHandler).off('focus', windowFocusHandler);
    };

    /**
     * Reload the slider (revert all DOM changes, and re-initialize)
     */
    el.reloadSlider = function(settings) {
      if (settings !== undefined) { options = settings; }
      el.destroySlider();
      init();
      //store reference to self in order to access public functions later
      $(el).data('bxSlider', this);
    };

    init();

    $(el).data('bxSlider', this);

    // returns the current jQuery object
    return this;
  };

})(jQuery);


/***/ }),
/* 17 */
/***/ (function(module, exports) {

/*
 * jQuery plugin to wrap elements
 *
 * http://jsbin.com/idize
 *
 */

module.exports = function ($) {

    $.fn.wrapChildren = function (options) {

        options = $.extend({
            childElem: undefined,
            sets: 1,
            wrapper: 'div'
        }, options || {});

        if (options.childElem === undefined) {
            return this;
        } else {
            return this.each(function () {
                var elems = $(this).children(options.childElem);
                var arr = [];

                elems.each(function (i, value) {
                    arr.push(value);
                    if (((i + 1) % options.sets === 0) || (i === elems.length - 1)) {
                        var set = $(arr);
                        arr = [];
                        set.wrapAll(document.createElement(options.wrapper));
                    }
                });
            });
        }
    }

};


/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = function ($) {
    var pageDropdowns = [];
    var closePageDropdowns = function (except) {
        for (var i = 0; i < pageDropdowns.length; i++) {
            pageDropdowns[i].each(function () {
                var pageDropdown = $(this);
                if (!except || except.length != 1 || pageDropdown.get(0) != except.get(0)) {
                    pageDropdown.removeClass('active');
                }
            });
        }
    };

    $('body').click(function () {
        closePageDropdowns(null);
    });

    var init = function (dropdowns, opt) {
        var _opt = $.extend({changeListeners: [], isMenu: false}, opt);

        pageDropdowns.push(dropdowns);

        dropdowns.each(function () {
            var dropdown = $(this);
            dropdown.data('dropdown-options', _opt);

            dropdown.find('a.display').click(function () {
                dropdown.toggleClass('active');
                closePageDropdowns(dropdown);
                return false;
            });

            if (opt && opt.values) {
                setOptions(dropdown, opt.values);
            }

            if (opt && opt.initialValue) {
                select(dropdown, opt.initialValue);
            }
            initOptions(dropdown, true);
        });
    };

    var optionValue = function (dropdown, key) {
        var opt = dropdown.data('dropdown-options');
        return opt ? opt[key] : null;
    };

    var invokeOptionExt = function (dropdown, fkey, a, b, c) {
        var f = optionValue(dropdown, fkey);
        if (f) {
            f(a, b, c);
        }
    };

    var initOptions = function (dropdown, readInputValue) {
        var options = dropdown.find('.options > a');
        dropdown.toggleClass('disabled', options.length < 2);
        if (!dropdown.data('dropdown-options').isMenu) {
            options.click(function () {
                selectAndNotify(dropdown, $(this).attr('data-value'));
                closePageDropdowns(dropdown);
                return false;
            });

            if (readInputValue) {
                var v = dropdown.find('input:hidden').val();
                if (typeof v !== 'undefined') {
                    select(dropdown, v);
                }
            }
        }
    };

    var fireOnSelect = function (dropdown) {
        var opt = dropdown.data('dropdown-options');
        for (var i = 0; i < opt.changeListeners.length; i++) {
            opt.changeListeners[i]();
        }
    };

    var selectAndNotify = function (dropdown, value) {
        select(dropdown, value);
        fireOnSelect(dropdown);
        invokeOptionExt(dropdown, 'onselect', value);
    };

    var select = function (dropdown, value) {
        var link = dropdown.find('a[data-value="' + value + '"]');
        dropdown.find('a.display span').html(link.html());
        link.addClass('selected');
        dropdown.find('a[data-value!="' + value + '"]').removeClass('selected');
        dropdown.removeClass('active');
        dropdown.find('input:hidden').val(value);
    };

    var setOptions = function (dropdown, options, selectedKey) {
        var optionsContainer = dropdown.find('.options');
        optionsContainer.empty();
        var selected = null;
        for (var i = 0; i < options.length; i++) {
            var o = options[i];
            var isSelected = o[0] == selectedKey;
            if (isSelected) {
                selected = o;
            }

            $('<a href="#"></a>').attr('data-value', o[0]).html(o[1]).toggleClass('selected', isSelected).appendTo(optionsContainer);
        }

        if (selected) {
            dropdown.find('a.display span').html(selected[1]);
        }

        initOptions(dropdown, false);
    };

    var value = function (dropdown) {
        return dropdown.find('.options a.selected').attr('data-value');
    };

    var addChangeListener = function (dropdowns, listener) {
        dropdowns.each(function () {
            var dropdown = $(this);
            var opt = dropdown.data('dropdown-options');
            opt.changeListeners.push(listener);
            dropdown.data('dropdown-options', opt);
        });
    };

    $.fn.cityDropdown = function (opt, p1, p2) {
        if (typeof opt === 'string') {
            switch (opt) {
                case 'disable':
                    break;
                case 'enable':
                    break;
                case 'select':
                    select(this, p1);
                    break;
                case 'setOptions':
                    setOptions(this, p1, p2);
                    break;
                case 'value':
                    return value(this);
                case 'change':
                    return addChangeListener(this, p1);
                default:
                    break;
            }
        } else {
            init(this, opt);
        }
        return this;
    };
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function ($) {

    var scrollTo = __webpack_require__(7),

        init = function (widgets) {
            var w = $(window),
                map = {};

            widgets.each(function () {
                var widget = $(this),
                    contentPanels = widget.find(">div >.content-panel"),

                    id = widget.attr('id') || 'tab',
                    activate = function (anchor) {
                        var match = (anchor.attr('href') || '').match(/^#(.+)$/),
                            newHeader = anchor.parent("h2");
                        if (match) {
                            var params = {},
                                isTab = anchor.parent('li').length > 0,
                                alreadySelected = !isTab && anchor.closest('.tab-panel').hasClass('selected'),
                                contentPanel = anchor.closest('.tab-panel').find('.panel-content');

                            params[id] = alreadySelected ? null : match[1];
                            select(widget, params[id] || false);

                            if (!$.isEmptyObject(newHeader.offset())) {
                                $('html:not(:animated), body:not(:animated)').animate({scrollTop: newHeader.offset().top}, 'slow');
                            }

                            contentPanels.removeAttr('tabindex');

                            if (anchor.parent().hasClass('accordion-toogle')) {
                                contentPanel.attr('tabindex', '0');
                                contentPanel.focus();
                            } else {
                                anchor.focus();
                            }

                            $.bbq.pushState(params);
                        }
                    };

                $('a[href^="#' + id + '="]').each(function () {
                    var anchor = $(this),
                        match = anchor.attr('href').match(/#([a-zA-Z0-9]+)=[a-zA-Z0-9]+/);

                    if (match) {
                        anchor.click(function () {
                            $('html, body').animate({
                                scrollTop: $('#' + id).offset().top
                            }, 200);
                        });
                    }
                });

                map[id] = widget;

                widget.find('>ul a, >.tab-panel >.accordion-toogle a').click(function (e) {
                    activate($(this));
                    e.preventDefault();
                }).keydown(function (e) {
                    if (e.which === 37) {
                        activate($(this).parent().prev().children('a'));
                    } else if (e.which === 39) {
                        activate($(this).parent().next().children('a'));
                    }
                });
            });

            w.on('hashchange', function () {
                var params = $.bbq.getState();
                for (var id in map) {
                    if (map.hasOwnProperty(id)) {
                        select(map[id], params[id] || false);
                    }
                }
            });

            w.trigger("hashchange");
        },

        select = function (widget, id) {
            widget.find('>.tab-panel.default').removeClass('default');
            widget.find('>ul .selected, >.tab-panel.selected').removeClass('selected');

            if (id) {
                var hash = '#' + id;

                widget.find('>ul a[href="' + hash + '"]').addClass('selected');
                widget.find(hash).addClass('selected');
            } else {
                widget.find('>ul li').first().find('a').addClass('selected');
                widget.find('>.tab-panel').first().addClass('default');
            }
        };


    $.fn.accordionTabs = function (opt) {
        init(this, opt);
        return this;
    };
};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = function ($) {
    var access = false,

        init = function (videoContainers, opt) {
            videoContainers.not('[data-video-id-ready]').each(function () {
                var container = $(this).attr('data-video-id-ready', 1),
                    imgGroup = container.find('.youtube-preview'),
                    iframeId = container.attr('data-video-iframe-id'),
                    anchor = imgGroup.children('a'),
                    clickable = anchor.length > 0 ? anchor : imgGroup,

                    load = function () {
                        var mode = access == 'youku' && container.attr('data-youku-id') ? 'youku' : 'youtube',
                            src;

                        if (mode === 'youtube') {
                            src = 'https://www.youtube.com/embed/' + container.attr('data-video-id') +
                                '?rel=0&autoplay=1&wmode=transparent&controls=' + opt.controls +
                                '&showinfo=' + opt.showInfo;
                            if (opt.autoPlay) {
                                src += '&enablejsapi=1&version=3'
                            }
                        } else {
                            src = 'http://player.youku.com/embed/' + container.attr('data-youku-id');
                            if (opt.autoPlay) {
                                src += '&autoplay=1'
                            }
                        }

                        var iframe = $('<iframe></iframe>').attr('id', iframeId).attr('src', src).attr('frameborder', 0);
                        if (opt.allowFullscreen) {
                            iframe.attr('allowfullscreen', 1);
                        }
                        iframe.appendTo(container);
                        if (opt.callback) {
                            opt.callback();
                        }
                        if (mode === 'youtube' && opt.autoPlay && typeof YT !== 'undefined') {
                            new YT.Player(iframeId, {
                                events: {
                                    'onReady': function (event) {
                                        event.target.playVideo();
                                        setTimeout(function () {
                                            iframe.focus();
                                        }, 100);
                                    }
                                }
                            });
                        }

                    };

                clickable.bind('click', function (e) {
                    e.preventDefault();

                    clickable.unbind().click(function (e) {
                        e.preventDefault();
                    });


                    if (access === false) {
                        var test = new Image();
                        test.onload = function () {
                            access = 'youtube';
                            load();
                        };
                        test.onerror = function () {
                            access = 'youku';
                            load();
                        };
                        test.src = "http://youtube.com/favicon.ico";
                    } else {
                        load();
                    }
                });
            });
        };

    $.fn.videoPreview = function (opt) {
        init(this, $.extend({
            autoPlay: true,
            allowFullscreen: false,
            controls: 2,
            showInfo: 1
        }, opt));
        return this;
    };
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * from:
 * http://stackoverflow.com/questions/11803215/how-to-include-multiple-js-files-using-jquery-getscript-method
 * */
module.exports = function ($) {
    var jsPath = __webpack_require__(22);

    $.getMultiJsScripts = function (list, cb, forceXdomain) {
        var path = jsPath(),
            i = 0,
            fetch = function() {
                if (i < list.length) {
                    $.ajax({
                        url: path + list[i++],
                        dataType: "script",
                        success: fetch,
                        cache: false,
                        crossDomain: forceXdomain || false
                    });
                } else {
                    cb();
                }
            };

        fetch();
    };

};


/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = function () {
    var path = null;
    $('script[src]').each(function () {
        var src = $(this).attr('src'),
            match = src.match(/(.+\/)([0-9]+\.)?CITY_R\.(min\.)?js(\?v=[0-9]+)?$/);

        if (match) {
            path = match[1];
            return false;
        }
    });

    return path;
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function(inputURL, inputData, inputType) {
        var promise = $.ajax({
            url: inputURL,
            data: inputData,
            type: (inputType ? inputType : 'get')
        })
        .done( function(responseData, status, xhr) {
            // Pre-determined Logic for Success
            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
            // console.log('Success');
        })
        .fail( function(xhr, status, err) {
            // Pre-determined Logic for Failure
            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
            // console.log('Failure');
        });
        return promise;
    };

}();


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * sets up a carousel on a page
 * @param carouselObj : Object
 *
 */
module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1),
        debug = __webpack_require__(3);

    return function ($carouselObj) {
        if ($carouselObj.length !== 0) {
            $carouselObj.append($('#main-carousel-slides').html());

            var numSlides = $carouselObj.children().length,
                $promoWrapper = $carouselObj.parents("#promo-wrapper"),
                overrideControls = numSlides > 1 ? {} : {
                    auto: false,
                    autoControls: false,
                    touchEnabled: false,
                    controls: false,
                    pager: false
                },
                // options for the home carousel
                sliderOptions = ($promoWrapper.attr("data-carousel-type") !== "home") ? {} : {
                    autoHover: true,
                    touchEnabled: true,
                    preventDefaultSwipeX: true,
                    preventDefaultSwipeY: false,
                    buildPager: function (index) {
                        return '<span class="fa fa-circle" aria-hidden="true"></span><span class="sr-only">Go to slide ' + (index + 1) + '</span>';
                    },
                    startText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-play"></span><span class="sr-only">Play slides</span>',
                    stopText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-pause"></span><span class="sr-only">Stop slides</span>',
                    prevText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-left"></span><span class="sr-only">Previous slide</span>',
                    nextText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-right"></span><span class="sr-only">Next slide</span>'
                },
                clearingOptions = ($promoWrapper.attr("data-carousel-type") !== "clearing") ? {} : {
                    auto: false,
                    controls: false,
                    pager: false,
                    autoControls: false,
                    autoStart: false
                },
                initSlider = function () {
                    var options = $.extend({
                        auto: true,
                        autoControls: true,
                        pause: 15000,
                        autoHover: true,
                        touchEnabled: false,
                        preventDefaultSwipeX: false,
                        preventDefaultSwipeY: false,
                        startText: "<span class=\"visuallyhidden\">Start slider</span><span class=\"fa fa-play\"></span>",
                        stopText: "<span class=\"visuallyhidden\">Pause slider</span><span class=\"fa fa-pause\"></span>",
                        nextText: "<span class=\"visuallyhidden\">Next slide</span><span class=\"fa fa-caret-right\"></span>",
                        prevText: "<span class=\"visuallyhidden\">Previous slide</span><span class=\"fa fa-caret-left\"></span>",
                        controls: true,
                        adaptiveHeight: true,
                        onSliderLoad: function (e) {
                            if (numSlides < 2) {
                                $promoWrapper.addClass("promo-wrapper--single");
                            }
                        }
                    }, sliderOptions, overrideControls, clearingOptions);

                    $promoWrapper.removeClass("carousel-loading");
                    $promoWrapper.find(".loading-fa-icon").remove();
                    $promoWrapper.find(".bxslider").show();
                    $carouselObj.bxSlider(options);
                    $promoWrapper.find(".bx-controls").show();
                };

            //set up slider
            if (numSlides > 0) {
                debug("more than 0 slides, need carousel. NumSlides =" + numSlides);
                initSlider($carouselObj);
            }
        }
    };
}();


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Initialise Dropdowns
 */
module.exports = function () {
    "use strict";

    var $ = __webpack_require__(1);
    var contentWrapper = $(".city-health__container");
    var loading        = $(".city-health__loading");
    var form           = $(".city-health__form");
    var inputs         = form.find("input");

    var fixPagination = function() {
        $(".city-health__pagination--all a").click( function(e) {
            e.preventDefault();
            var page = $(this).attr("href").split("result_314729_result_page=")[1];
            reload({
                "result_314729_result_page": page
            })
        });
        $(".city-health__pagination--filtered a").click( function(e) {
            e.preventDefault();
            var page = $(this).attr("href").split("current_result_page=")[1].split("&")[0];
            reload({
                "current_result_page": page
            })
        });
    }

    var reload = function(fixedParams) {
        var params = $.extend({t: new Date().getTime()}, fixedParams);

        inputs.each(function () {
            var input = $(this);
            var name = input.attr("name");
            var value = input.val();

            if (name && name.length > 0 && value && value.length > 0) {
                params[name] = value;
            }
        });

        contentWrapper.css("display", "none");
        loading.css("display", "inline-block");

        $.get("//www.city.ac.uk/api/city-health-courses/_nocache", params, function(data) { })
            .done( function(data) {
                contentWrapper.html(data);
            })
            .always( function(data) {
                contentWrapper.css("display", "block");
                loading.css("display", "none");
                fixPagination();
            });
    };

    return function() {
        $(".city-health__form .dropdown-select").cityDropdown({
            "onselect": function() {
                reload();
            }
        });
        fixPagination();
    };

}();


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * creates dynamic google maps
 * @return: Undefined
 */
module.exports = function () {

    var $ = __webpack_require__(1),

        onLoad = function (dynamicMap) {
            var iii,
                currentMarker,
                marker,
                centerMarker,
                gmap,
                labelBox,
                infoWindow,
                gmapData,
                userMapCenter,
                locationRootNode = dynamicMap.attr("data-locations-node"),
                computedSize = new google.maps.Size(36, 43),
                infoWindowOffSet = new google.maps.Size(0, -30),
                gmapColourOptions = [
                    {
                        featureType: "landscape",
                        stylers: [
                            {
                                saturation: -60
                            },
                            {
                                lightness: 65
                            },
                            {
                                visibility: "on"
                            }
                        ]
                    },
                    {
                        featureType: "poi",
                        stylers: [
                            {
                                saturation: -40
                            },
                            {
                                lightness: 40
                            },
                            {
                                visibility: "simplified"
                            }
                        ]
                    },
                    {
                        featureType: "road.highway",
                        stylers: [
                            {
                                saturation: -80
                            },
                            {
                                lightness: 40
                            },
                            {
                                visibility: "simplified"
                            }
                        ]
                    },
                    {
                        featureType: "road.arterial",
                        stylers: [
                            {
                                saturation: -60
                            },
                            {
                                lightness: 40
                            },
                            {
                                visibility: "on"
                            }
                        ]
                    },
                    {
                        featureType: "road.local",
                        stylers: [
                            {
                                saturation: -60
                            },
                            {
                                lightness: 40
                            },
                            {
                                visibility: "on"
                            }
                        ]
                    },
                    {
                        featureType: "transit",
                        stylers: [
                            {
                                saturation: -60
                            },
                            {
                                lightness: 40
                            },
                            {
                                visibility: "simplified"
                            }
                        ]
                    },
                    {
                        featureType: "administrative.province",
                        stylers: [
                            {
                                visibility: "off"
                            }
                        ]
                    },
                    {
                        featureType: "water",
                        elementType: "labels",
                        stylers: [
                            {
                                visibility: "on"
                            },
                            {
                                lightness: -10
                            },
                            {
                                saturation: 10
                            }
                        ]
                    },
                    {
                        featureType: "water",
                        elementType: "geometry",
                        stylers: [
                            {
                                lightness: -10
                            },
                            {
                                saturation: 10
                            }
                        ]
                    },
                    {
                        featureType: "transit.station",
                        stylers: [
                            {
                                saturation: 30
                            },
                            {
                                lightness: -10
                            },
                            {
                                visibility: "on"
                            }
                        ]
                    }
                ],
                attachClickEvent = function (map, marker, labeledBox, description) {

                    // on click on a marker, set the content of infowindow and open it
                    //also center the map on that marker
                    google.maps.event.addListener(marker, "click", function () {
                        infoWindow.setContent("<span class=\"marker-description\">" + description + "<\/span>");
                        infoWindow.setPosition(marker.position);
                        infoWindow.open(map);
                        map.panTo(marker.position);
                    });
                },
                placeCenterMarker = function (map, marker) {
                    // the marker for the center of the map
                    centerMarker = new google.maps.Marker({
                        icon: {
                            url: marker.icon
                        },
                        map: map,
                        visible: true,
                        position: new google.maps.LatLng(marker.latitude, marker.longitude),
                        title: marker.name
                    });

                    centerMarker.setZIndex(180);

                    google.maps.event.addListener(centerMarker, "click", function () {
                        infoWindow.setContent("<span class=\"marker-title\">" + centerMarker.title + "<\/span><span class=\"marker-description\">" + marker.description + "<\/span>");
                        infoWindow.setPosition(centerMarker.position);
                        infoWindow.open(map);
                    });
                },
                placeAllMarker = function (markers) {
                    for (iii = 0; iii < markers.length; iii++) {

                        currentMarker = markers[iii];

                        // define a new marker
                        marker = new google.maps.Marker({
                            icon: {
                                url: currentMarker.icon
                            },
                            map: gmap,
                            visible: true,
                            position: new google.maps.LatLng(currentMarker.latitude, currentMarker.longitude),
                            title: currentMarker.name
                        });

                        // set a label for each marker
                        // uses google map plugin
                        labelBox = new InfoBox({
                            content: marker.title,
                            position: marker.position,
                            pane: "mapPane",
                            closeBoxURL: "",
                            disableAutoPan: true,
                            boxStyle: {
                                width: "auto"
                            }
                        });

                        labelBox.open(gmap);
                        attachClickEvent(gmap, marker, labelBox, (currentMarker.description + "&nbsp;"));
                    }
                };

            // call the google maps location api in matrix to get the data on the markers and the initial map parameters
            $.ajax({
                url: "//www.city.ac.uk/api/google-map-locations?root=" + locationRootNode,
                dataType: "json"
            }).done(function (data) {
                if (data !== null) {

                    // map and markers data
                    gmapData = data;

                    // create the map
                    gmap = new google.maps.Map(document.getElementById("dynamic-gmap"), {
                        scrollwheel: false,
                        streetViewControl: false,
                        zoom: gmapData.loadOptions.zoom,
                        center: new google.maps.LatLng(gmapData.loadOptions.latitude, gmapData.loadOptions.longitude),
                        styles: gmapColourOptions
                    });

                    // create a new info window
                    infoWindow = new google.maps.InfoWindow({pixelOffset: infoWindowOffSet});

                    // create all the markers except the central one
                    // add a label to each of them
                    placeAllMarker(gmapData.markers);

                    // add a marker for the center of the map
                    placeCenterMarker(gmap, gmapData.centerMarker);

                    // on resizing the map, make sure we keep the current center position
                    google.maps.event.addDomListener(window, "resize", function () {
                        userMapCenter = gmap.getCenter();
                        google.maps.event.trigger(gmap, "resize");
                        gmap.setCenter(userMapCenter);
                    });

                }
            });
        };

    return function (dynamicMap) {
        if (dynamicMap.length > 0) {
            $.getMultiJsScripts(['lib/google/map/infobox-packed-1.1.9.js'], onLoad.bind(null, dynamicMap));
        }
    };

}();

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {

    var $ = __webpack_require__(1);

    return function (azListings) {

        azListings.each(function () {
            var me = $(this),
                letters = me.find('.letter-list a'),
                letterGroups = me.find('.letter-group'),

                select = function (anchor) {
                    letters.filter('[href!="' + anchor + '"]').removeClass('selected');
                    letters.filter('[href="' + anchor + '"]').addClass('selected');


                    if (anchor) {
                        var name = anchor.substr(1);

                        letterGroups.filter('[name!="' + name + '"]').addClass('unselected').removeClass('selected');
                        letterGroups.filter('[name="' + name + '"]').removeClass('unselected').addClass('selected');
                    } else {
                        letterGroups.removeClass('unselected').removeClass('selected');
                    }
                };


            letterGroups.find('.go-up').click(function (e) {
                    e.preventDefault();
                    select(false);
                })
                .children('span').html('Show all').end()
                .children('i').removeClass('fa-arrow-circle-o-up').addClass('fa-reply');

            letters.click(function (e) {
                select($(this).attr('href'));
                e.preventDefault();
            });
        });
    };
}();


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function () {
        $('.image-accordion label').click(function () {
            var labelTarget = $(this).attr('for');
            $('#' + labelTarget).blur();
            $('#' + labelTarget).focus();
        });
        $('.image-accordion input[type="radio"]').change(function () {
            var radioInput = $(this);
            $('.image-accordion input[type="radio"]').removeClass('checked');
            if (this.checked) {
                radioInput.addClass('checked');
            }
        });
    };
}();


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Init see more widget
 */
module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function() {
        var widgets = $(".see-more");

        widgets.each(function () {
            var widget = $(this);
            var toggle = widget.find('.see-more__toggle');
            var toggleLabel = toggle.find('.see-more__toggle__label');
            if (toggleLabel.length === 0) {
                toggleLabel = toggle;
            }

            var content = widget.find('.see-more__content');
            var showText = toggle.html();
            var hideText = toggle.attr('data-hide-text') || 'Hide';
            toggle.click(function (e) {
                e.preventDefault();
                if (widget.hasClass('see-more--active')) {
                    toggleLabel.html(showText);
                    widget.removeClass('see-more--active');
                    content.slideUp();
                } else {
                    widget.addClass('see-more--active');
                    toggleLabel.html(hideText);
                    content.slideDown();
                }
            });
        });
    };

}();


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Toggle Visibility of Image Credit Component
 */
module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function() {
        var $credits = $(".image-credit"),
            $creditItems = $(".credits-items"),
            $scpCreditsTitle = $(".credits-title"),
            creditButtonClass = ".image-credit__button",

            toggleImageCredit = function(node) {
                var state = node.attr("aria-pressed") === "true" ? "false" : "true";
                node.attr("aria-pressed", state);
                node.parent().attr("aria-expanded", state);
            };

        $credits.each(function () {
            $(this).find(creditButtonClass).click(function(event) {
                event.preventDefault();
                toggleImageCredit($(this));
            });
        });

        $scpCreditsTitle.on("click", function () {
            $(this).toggleClass("credits-title--active")
                .next(".credits-items").toggleClass("sr-only");
        });
    };

}();


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for browsers that don't understand placeholder attribute

module.exports = function () {

    var $ = __webpack_require__(1),
        Modernizr = window.Modernizr;


    return function () {
        if (Modernizr && !Modernizr.input.placeholder) {
            var inputs = $("[placeholder]");

            inputs.focus(function () {
                var input = $(this);
                if (input.val() === input.attr("placeholder")) {
                    input.val("");
                    input.removeClass("placeholder");
                }
            }).blur(function () {
                var input = $(this);
                if (input.val() === "" || input.val() === input.attr("placeholder")) {
                    input.addClass("placeholder");
                    input.val(input.attr("placeholder"));
                }
            }).blur();

            inputs.parents("form").submit(function () {
                $(this).find("[placeholder]").each(function () {
                    var input = $(this);
                    if (input.val() === input.attr("placeholder")) {
                        input.val("");
                    }
                });
            });
        }
    };

}();

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function () {
        $('.image-carousel').each(function () {
            var carousel = $(this);
            var slides = carousel.children();
            slides.each(function (i) {
                $(this).attr('data-index', i);
            }).wrapAll('<div></div>');

            var updateActive = function (slideElement, oldIndex, newIndex) {
                carousel.find('.image-carouse__item--active').removeClass('image-carouse__item--active');
                carousel.find('.image-carouse__item[data-index="' + newIndex + '"]').addClass('image-carouse__item--active')
            };

            var slider = null;

            var options = {
                controls: true,
                touchEnabled: true,
                preventDefaultSwipeX: true,
                preventDefaultSwipeY: false,
                nextText: '<span><span class="sr-only">Go to next slide</span><span class="fa fa-chevron-right" aria-hidden="true"></span></span>',
                prevText: '<span><span class="sr-only">Go to previous slide</span><span class="fa fa-chevron-left" aria-hidden="true"></span></span>',
                pager: false,
                moveSlides: 1,
                slideWidth: 0,
                firstSlideMargin: 0,
                onSlideBefore: updateActive,
                onSlideAfter: updateActive,
                onSliderLoad: function (currentIndex) {
                    carousel.find('.bx-controls a').attr('role', 'button');

                    if (parseInt(carousel.find('.image-carouse__item').css('width')) !== options.slideWidth) {
                        setTimeout(update, 0);
                    } else {
                        carousel.find('.image-carouse__item[data-index="' + currentIndex + '"]').addClass('image-carouse__item--active');
                        carousel.find('.image-carouse__item').css({
                            'margin-left': options.firstSlideMargin + 'px',
                            'margin-right': (-options.firstSlideMargin) + 'px'
                        });
                    }
                }
            };

            var update = function () {
                var width = carousel.width();
                if (Modernizr.mq('(min-width: 600px)')) {
                    options.maxSlides = 2;
                    options.slideWidth = Math.round(.5 * (20 + width));
                    options.firstSlideMargin = .25 * width - 5;
                } else {
                    options.maxSlides = 1;
                    options.slideWidth = width;
                    options.firstSlideMargin = 0;
                }


                if (slider === null) {
                    slider = carousel.children().bxSlider(options);
                } else {
                    slider.reloadSlider(options);
                }
            };

            $(window).resize(update);
        });
    };
}();


/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = function () {
    'use strict';

    var initWhiteCards = function () {
        if ($(window).width() < 600) {
            $('.white-card').each(function () {
                var box = $(this),
                    content = box.find('.white-card__content');

                if (content.height() > 200) {
                    content.addClass('white-card__content--read-more');
                    var button = $('<div class="white-card__read-more">' +
                        '<div class="white-card__read-more__bg"></div>' +
                        '<a  href="#"><span>read more</span></a>' +
                        '</div>')
                        .click(function (e) {
                            content.removeClass('white-card__content--read-more');
                            button.remove();
                            e.preventDefault();
                        }).appendTo(box);
                }
            });
        }

        $('.white-card .embed-container').videoPreview({allowFullscreen: true});
    };

    return initWhiteCards;
}();

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * adds autocomplete functionality to the main search bar, using jQuery UI
 * @param: {Object} form - jQuery object for form to run autoSuggest on
 * @param: {Object} input - jQuery object for input elements to run autoSuggest on
 * @param: {String} collection - the name of the Funnelback collection to query
 * @retun: {Undefined}
 */
module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1),

        arrayDuplicateZapper = function (myArray) {
            var myUniqueArray = [];
            $.each(myArray, function (i, el) {
                if ($.inArray(el, myUniqueArray) === -1) myUniqueArray.push(el);
            });
            return myUniqueArray;
        };

    return function (form, input, collection) {
        input.autocomplete({

            source: function (request, response) {
                var fbcollection = collection || "main-all";
                $.ajax({
                    url: "/api/suggest.json?collection=" + fbcollection + "&fmt=json",
                    dataType: "json",
                    data: {
                        partial_query: request.term
                    },
                    success: function (data) {
                        data = arrayDuplicateZapper(data);
                        response($.map(data, function (item) {
                            return {
                                label: item
                            };
                        }));
                    }
                }); //end $.ajax

            }, //end source function

            minLength: 2,
            delay: 20,

            //when you have selected something
            "select": function (event, ui) {
                //close the drop down
                //need to create a dummy assignment, to please jslint
                //close is still performed
                var c = this.close;
                //make sure on click the selected value replaces the type value
                $(this).val(ui.item.value);
                form.submit();
            },

            //show the drop down
            open: function () {
                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
            },

            //close the drop down
            close: function () {
                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
            }

        });
    };

}();


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    var $ = __webpack_require__(1),

        screenWidth = -1,
        inMd = true,
        slider = null,
        $w = $(window),

        updateNewsSlider = function () {
            var $homeNews = $('.news-events-strip__news'),
                width = Math.round($w.width());

            if (width !== screenWidth) {
                screenWidth = width;

                var newInMd = screenWidth >= 850;
                if (newInMd !== inMd) {
                    inMd = newInMd;

                    if (inMd) {
                        slider.destroySlider();
                        setTimeout(function () {
                            $homeNews.addClass('row').attr('style', '').children().addClass('col-xs-24 col-md-8').css('width', '');
                        }, 0);
                        slider = null;
                    } else {
                        slider = $homeNews.removeClass('row').children().removeClass('col-xs-24 col-md-8').end().bxSlider({
                            autoHover: true,
                            touchEnabled: true,
                            preventDefaultSwipeX: true,
                            preventDefaultSwipeY: false,
                            adaptiveHeight: true,
                            pager: false,
                            autoControls: false,
                            controls: true,
                            prevText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-left"></i>',
                            nextText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-right"></i>'
                        });
                    }
                }
            }
        };

    return function () {
        $w.resize(updateNewsSlider);
        updateNewsSlider();
    };
}();


/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = function () {

    var $menuWrapper = $(".primary-menu-wrapper"),
        $menuToggle  = $(".primary-menu-toggle"),
        $menu        = $(".primary-menu"),

        updateToggleLink = function (toggle, isOpen) {
            toggle.toggleClass("primary-menu__item-toggle--open", isOpen);
            toggle.attr('aria-expanded', isOpen ? 'true' : 'false');
        },

        buildMenu = function () {
            $menu.find("li:has(ul)")
                 .addClass("primary-menu__item--branch")
                 .children(".primary-menu__item-interior")
                 .each(function(index) {
                     $ariaLabel = "show or hide items under " + $(this).find(".primary-menu__item-text").text();
                     $(this).append("<a class='primary-menu__item-toggle' href='#' aria-label='" + $ariaLabel + "'></a>");
                 });

            $menuToggle.attr("aria-label", $menuToggle.find(".primary-menu-toggle__section-name").text() + " menu");
        },

        highlightCurrentPage = function () {
            var pathname = (window.location.href).replace("/_nocache", "").replace("/_recache", "");
            $(".primary-menu .primary-menu__item-link[href$='" + pathname  + "']").addClass("primary-menu__item-link--selected");
        },

        openCurrentSubmenus = function () {
            $menu.find(".primary-menu__submenu").each(function(index) {
                if ($(this).find(".primary-menu__item-link--selected").length > 0) {
                    $(this).show();
                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), true);
                }
                else {
                    $(this).hide();
                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), false);
                }
            });
        },

        openSubmenu = function ($toggle) {
            updateToggleLink($toggle, true);
            $toggle.parent(".primary-menu__item-interior").next().slideDown("fast", function() {
                closeSameLevelSubmenus($toggle);
            });
        },

        closeSameLevelSubmenus = function ($toggle) {
            var $siblingBranches = $toggle.closest(".primary-menu__item--branch").siblings(".primary-menu__item--branch");

            $.each($siblingBranches, function(index) {
                if ($(this).find(".primary-menu__item-link--selected").length <= 0) {
                    updateToggleLink($(this).find(".primary-menu__item-toggle"), false);
                    $(this).find(".primary-menu__submenu").slideUp("medium");
                }
            });
        },

        closeSubmenu = function ($toggle) {
            var $enclosingMenuItem = $toggle.closest(".primary-menu__item--branch");

            if ($enclosingMenuItem.find(".primary-menu__item-link--selected").length > 0) {
                updateToggleLink($toggle, false);
                $toggle.parent(".primary-menu__item-interior").next().slideUp("fast");
            }
            else {
                updateToggleLink($enclosingMenuItem.find(".primary-menu__item-toggle"), false);
                $enclosingMenuItem.find(".primary-menu__submenu").slideUp("fast");
            }
        },

        initMenu = function () {
            buildMenu();
            highlightCurrentPage();

            $menuToggle.attr('aria-expanded', 'false').click(function() {
                if ($menu.is(":hidden")) {
                    openCurrentSubmenus();
                }

                var setOpen = !$menuToggle.hasClass("primary-menu-toggle--open");

                $menuToggle.toggleClass("primary-menu-toggle--open", setOpen);
                $menuToggle.attr('aria-expanded', setOpen ? 'true' : 'false');

                $menu.slideToggle("fast");
                return false;
            });

            $(".primary-menu__item-toggle").click(function() {
                if ($(this).hasClass("primary-menu__item-toggle--open")) {
                    closeSubmenu($(this));
                }
                else {
                    openSubmenu($(this));
                }
                return false;
            });
        };

    return initMenu();
};



/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = function () {

    var
        $globalNavToggler = $(".global-nav__toggle"),
        $headerSearch = $(".header__search"),
        $headerSearchToggler = $(".header__search__toggle"),
        $globalNavWrapper = $(".global-nav__wrapper"),
        $globalNavDropToggler = $(".global-nav__menu-item__toggle"),
        $utilNav = $(".header__util__audience__button-link"),
        $body = $('body'),
        $compactWidth = 748,
        $stickyHeaderScrollThreshold = 70,
        $lastScrollTop = 0,
        $window = $(window),


        closeMenus = function () {
            $(".header__util__item--active").removeClass("header__util__item--active");
            $(".global-nav__menu-item--active").removeClass("global-nav__menu-item--active");
            $globalNavDropToggler.attr('aria-expanded', 'false');
            $utilNav.attr('aria-expanded', 'false');
        },

        toggleMobileGlobalMenu = function (openMenu) {
            var openSearch = openMenu === 'search' && !$headerSearch.hasClass("header__search--active");
            var openNav = openMenu === 'nav' && !$globalNavWrapper.hasClass("global-nav__wrapper--active");

            $globalNavWrapper.toggleClass("global-nav__wrapper--active", openNav);
            $globalNavToggler.attr('aria-expanded', openNav ? 'true' : 'false');

            $headerSearch.toggleClass("header__search--active", openSearch);
            $headerSearchToggler.attr('aria-expanded', openSearch ? 'true' : 'false');
        },

        initSkipLinks = function () {
            $('#skip-to-query').click(function () {
                setTimeout(function () {
                    toggleMobileGlobalMenu('search');
                    $('#query').focus();
                }, 25);
            });
            $('#skip-to-accessibility').click(function () {
                setTimeout(function () {
                    $('#accessibility').focus();
                }, 25);
            });
        },


        updateTabNavigation = function () {
            if ($window.width() > $compactWidth) {
                $(".global-nav__menu-item__link").each(function() {
                    if ($(this).siblings(".global-nav__menu-item__toggle").length) {
                        $(this).attr("tabindex", -1);
                    }
                });
            }
            else {
                $(".global-nav__menu-item__link").removeAttr("tabindex");
            }
        },

        updateScrollDown = function () {
            var $newScrollTop = $(this).scrollTop();
            $body.toggleClass('scroll-down', ($newScrollTop > $stickyHeaderScrollThreshold) && ($newScrollTop < $lastScrollTop));
            $lastScrollTop = $newScrollTop;
        },

        init = function () {

            initSkipLinks();

            /**
             * Update classname depending on scroll position
             */
            $window.scroll(updateScrollDown);
            updateScrollDown();

            /**
             * With JS enabled, links going to other pages should not be reachable through the tab key,
             * as opposed to toggle links - except when menu is in compact view.
             */
            $window.resize(updateTabNavigation);
            updateTabNavigation();

            closeMenus();

            $utilNav.on("click", function (e) {
                var
                    that = $(this),
                    parent = that.parent("li"),
                    targetIsActive = parent.hasClass("header__util__item--active");

                closeMenus();
                if (!targetIsActive) {
                    parent.addClass("header__util__item--active");
                    that.attr('aria-expanded', 'true');
                }


                e.preventDefault();
                e.stopPropagation();
                return false;
            });

            $body.click(function () {
                closeMenus();
            });

            /**
             * Not perfect as it relies on keyup instead of keydown
             */
            $body.keyup(function (e) {
                if (e.keyCode === 9 &&
                    $('.header__util__item--active,.global-nav__menu-item--active').length > 0 && !$(e.target).is('.header__util__item--active,.header__util__item--active *, .global-nav__menu-item--active, .global-nav__menu-item--active *')) {
                    closeMenus();
                }
            });

            $globalNavDropToggler.on("click", function (e) {
                var
                    that = $(this),
                    parent = that.parents(".global-nav__menu-item"),
                    targetIsActive = parent.hasClass("global-nav__menu-item--active");

                closeMenus();
                if (!targetIsActive) {
                    parent.addClass("global-nav__menu-item--active");
                    that.attr('aria-expanded', 'true');
                }


                e.preventDefault();
                e.stopPropagation();
                return false;
            });

            toggleMobileGlobalMenu('none');
            $globalNavToggler.on("click", function (e) {
                e.preventDefault();
                toggleMobileGlobalMenu('nav');
            });

            $headerSearchToggler.on("click", function (e) {
                e.preventDefault();
                toggleMobileGlobalMenu('search');
            });
        };

    return init();
};



/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = function () {

    init = function () {

        $(".link--goto").click(function() {
            $('html,body').scrollTop(0);
            return false;
        });
    };

    return init();
};



/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Init see popup
 */
module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function() {
        var anchors = $("a[data-popup-dialog]");

        anchors.each(function () {
            var anchor = $(this);

            anchor.click(function (e) {
            e.preventDefault();
            var link = $(e.currentTarget).attr('href');

            $('#'+anchor.attr('data-popup-dialog')).dialog({
                modal: true,
                title: anchor.attr('title'),
                width: 800,
                height: 500,
                draggable: false,
                resizable: false,
                buttons: [
                    {
                        text: "Cancel",
                        click: function() {
                            $( this ).dialog( "close" );
                        }
                    },
                    {
                        text: "Accept",
                        click: function() {
                            window.location = link;
                            $( this ).dialog( "close" );
                        }
                    }
                ]

            });
        });
    });
  };

}();


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function () {
        $(".responsive-table").each(function() {
            var thetable = $(this);
            thetable.find("tbody td").each(function() {
                $(this).attr("data-th", thetable.find("thead th:nth-child("+($(this).index()+1)+")").text());
            });
        });
    };
}();


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    'use strict';

    var $ = __webpack_require__(1);

    return function() {
        $('.cyclic-popup-item__title').click(function() {
            var clickedItemLink = $(this);
            var clickedItem     = $(this).closest('.cyclic-popup-item');
            var popupGroup      = clickedItemLink.closest(".cyclic-popup-group");
            var allPopupItems   = popupGroup.children('.cyclic-popup-item');
            var currentIndex    = 0;
            var noOfPopupItems  = allPopupItems.length;

            allPopupItems.each(function(index, value) {
                if ($(this).get(0) === clickedItem.get(0)) {
                    currentIndex = index;
                }
            });

            function getWidth() {
                var width = $(window).width() * 0.9;

                if (width > 500) {
                    width = 500;
                }
                return width;
            }

            function getNextItem(reverse) {
                if (reverse == false) {
                    if (currentIndex == noOfPopupItems - 1) {
                        currentIndex = 0;
                    }
                    else {
                        currentIndex++;
                    }
                }
                else {
                    if (currentIndex == 0) {
                        currentIndex = noOfPopupItems - 1;
                    }
                    else {
                        currentIndex--;
                    }
                }

                var nextItem = allPopupItems.get(currentIndex);
                return nextItem;
            }

            function setDialogButtons() {
                if (noOfPopupItems > 1) {
                    var buttonsToSet = [
                        {
                            text: 'PREVIOUS',
                            click: function() {
                                $(this).html($(getNextItem(true)).find('.cyclic-popup-item__detail').html());
                            }
                        },
                        {
                            text: 'NEXT',
                            click: function() {
                                $(this).html($(getNextItem(false)).find('.cyclic-popup-item__detail').html());
                            }
                        }
                    ];

                    $('.ui-dialog-content').dialog('option', 'buttons', buttonsToSet);
                }
            }

            $('<div></div>').dialog({
                modal: true,
                draggable: false,
                resizable: false,
                width: getWidth(),

                close: function() {
                    $(this).dialog('destroy')
                },

                create:function() {
                    $(this).closest('.ui-dialog').addClass('cyclic-popup');
                    $(this).html(clickedItem.find('.cyclic-popup-item__detail').html());
                    setDialogButtons();
                },

                open:function () {
                    if (noOfPopupItems > 1) {
                        $(this).parent().find('button:nth-child(2)').focus();
                    }
                    else {
                        $(this).parent().find('.ui-dialog-titlebar-close').focus();
                    }
                }
            });

            $(window).resize(function() {
                $('.ui-dialog-content').dialog('option', 'position', 'center');
                $('.ui-dialog-content').dialog('option', 'width', getWidth());
            });

            $('.ui-widget-overlay').click(function(){
                $('div:ui-dialog:visible').dialog('close');
            });

            return false;
        });
    };
}();


/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = function (bodyElement) {


/**
 * Adds a FontAwesome icon (or any other classes) as a <span> element to the specified DOM element.
 * The icon can be appended to the end or prepended to the beginning of the element based on the append flag.
 *
 * @param {HTMLElement} element - The DOM element to which the icon will be added. It must be a valid HTMLElement.
 * @param {string|string[]} classes - A string or an array of strings representing the class(es) to be added to the icon's <span> element. If a single class is passed, it will be added directly. If an array is passed, all classes will be added.
 * @param {boolean} [append=false] - A boolean flag indicating whether the icon should be appended or prepended.
 *                                   If true, the icon will be appended to the end of the element. 
 *                                   If false or not provided, the icon will be prepended to the beginning.
 *
 * Usage:
 * addIcon(element, 'fa-kit', true);       // Appends a single class icon
 * addIcon(element, ['fa-kit', 'fa-share'], false); // Prepends multiple classes
 */
    function addIcon(element, classes, append = false) {
        if (element && classes) {
            // Create span for FA icon
            const spanNode = document.createElement('span');
            
            // Check if 'classes' is a string (single class) or an array (multiple classes)
            if (typeof classes === 'string') {
                spanNode.classList.add(classes);  // Add the single class
            } else if (Array.isArray(classes)) {
                classes.forEach(cls => spanNode.classList.add(cls));  // Add multiple classes
            }
   
            // Append or prepend the icon based on the `pos` parameter
            if (append) {
                element.append(' ',spanNode); // Adds icon to the beginning
            } else {
                element.prepend(spanNode);  // Adds icon to the end
            }
        }
    }

/**
 * Checks if provided element is a sharepoint link and if so adds the fa-sharepoint icon.
 *
*/
    function findSharepointLink(anchor) {
        const url = new URL(anchor.href);
        const excludedExtensions = ['.pdf', '.docx', '.xlsx', '.pptx', '.xls', '.doc']; 
        const pathname = url.pathname.toLowerCase();

        // Check if the URL hostname ends with sharepoint.com and does not have an excluded extension
        const hasExcludedExtension = excludedExtensions.some(ext => pathname.endsWith(ext));

        if (url.hostname.endsWith('sharepoint.com') && !hasExcludedExtension) {
            const firstChild = anchor.firstChild;
            if (firstChild && firstChild.nodeType === 3) {
                // Only add the icon if the first child of anchor is a text node, avoiding duplicate icons
                addIcon(anchor, ['fa-kit', 'fa-sharepoint']);
            }
        }
    }



    /**
     * Loop over every link and apply nessessary classes
     *
     */
    function findLinks() {
        const anchors = bodyElement.querySelectorAll('a');

        anchors.forEach(function (anchor) {
            findSharepointLink(anchor);
        });
    }

    findLinks();

};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * This is custom Javascript to override unwanted text / characters printed by React on the following URL
 * https://researchcentres.city.ac.uk/software-reliability/publications/_nocache
 * A React solution wasn't found to stop the text being printed.
 *
 */

module.exports = (function () {
    'use strict';

    var $ = __webpack_require__(1);
    return function () {

        //checks if ID exists: publications-search-react
        if($('#publications-search-react').length){
            var string ='"},"staticData":false,"fixedProperties":{"divisions":"IICSWR"}}';
            $('#content').html($('#content').html().replace(string,''));
        }
    };
})();


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    const { aria } = __webpack_require__(45);
    const { appendAll, toBool, verticallyInWindow } = __webpack_require__(46);

    const className = 'accordion',
        headingClassName = className + '__heading',
        headingTextClassName = headingClassName + '__text',
        headingIconClassName = headingClassName + '__indicator',
        bodyClassName = className + '__body',
        oneSecond = 1000,
        tenthOfASecond = 100,
        scrollDuration = oneSecond,
        scrollTo = true;

    /**
     * Cleanup after transition.
     *
     * @param {HTMLElement} accordionSection - The section that transitioned.
     */
    function cleanupTransition(section) {
        const open = toBool(section.previousElementSibling.dataset.open);
        section.style.height = null;
        section.dataset.closed = open ? 'false' : 'true';
    }

    /**
     * Set style properties for transition.
     *
     * @param {HTMLElement} element - The section to transition.
     * @param {string} initialHeight - The initial height from which to transition.
     */
    function setupTransition(element, initialHeight) {
        element.style.height = initialHeight;
        element.dataset.closed = 'false';
        return true;
    }

    /**
     * Open a section, calculate its height, then close it again.
     *
     * With no transition, this is essentially invisible to the user.
     *
     * @param {HTMLHeadingElement} heading - An accordion heading.
     * @return {string} The pixel height of the section when open.
     */
    function calculateAccordionBodyHeight(heading) {
        const section = heading.nextElementSibling;

        setSection(heading, true);
        section.dataset.closed = 'false';
        const height = section.offsetHeight + 'px';

        setSection(heading, false);
        section.dataset.closed = 'true';

        return height;
    }

    /**
     * Respond to button clicks - open if closed, close if open.
     *
     * If opening, will also push the heading ID into the history, so C+Ping the URL
     * will open the most recently viewed section. Closing a section removes any
     * hash.
     *
     * @param {HTMLButtonElement} button - The button that was clicked.
     * @param {HTMLElement[]} headings - All headings in this accordion.
     * @param {boolean} [toggleOpen] - Should other accordion sections close? Default to false.
     */
    function buttonClick(button, headings, toggleOpen, e) {
        e.preventDefault();
        const heading = button.parentNode,
            accordionSection = heading.nextElementSibling;

        /**
         * After we've transitioned the opening/closing, we want to revert to
         * letting the CSS size the element. Add a listener to do this that will
         * self-destruct after running.
         */
        accordionSection.addEventListener(
            'transitionend',
            () => cleanupTransition(accordionSection),
            { capture: true, once: true }
        );

        if (toBool(button.getAttribute(aria.expanded))) {
            // Starting height is the current height
            setupTransition(accordionSection, accordionSection.offsetHeight + 'px');
            // setTimeout lets the DOM recalculate before we continue, so the transition will fire
            setTimeout(() => {
                accordionSection.style.height = '0px';
            }, tenthOfASecond);

            setSection(heading, false);
            // updates URL hash, by removing hash from URL when accordion closes
            //history.pushState({}, null, location.href.split('#')[0]);
        } else {
            // Calclulate and save how big we're transitioning to
            const sectionHeight = calculateAccordionBodyHeight(heading);
            // Starting height is 0
            setupTransition(accordionSection, '0px');
            // setTimeout lets the DOM recalculate before we continue, so the transition will fire
            setTimeout(() => {
                accordionSection.style.height = sectionHeight;
            }, tenthOfASecond);

            if (toggleOpen) {
                const sections = Array.from(
                    heading.parentNode.parentNode.querySelectorAll(
                        `#${heading.parentElement.id} > .${bodyClassName}`
                    )
                );
                headings.forEach((heading) => setSection(heading, false));
                sections
                    .filter((section) => section.id !== accordionSection.id)
                    .forEach((section) => {
                        section.dataset.closed = 'true';
                    });
            }
            setSection(heading, true);
            if (
                scrollTo &&
                !(
                    verticallyInWindow(heading) &&
                    verticallyInWindow(accordionSection)
                )
            ) {
                //scroll.to(heading, scrollDuration);
                window.scrollTo(
                    {
                        top: window.scrollY + heading.getBoundingClientRect().top - 200, 
                        left: window.scrollX + heading.getBoundingClientRect().left,
                        behavior : 'smooth'
                    });
            }

            // updates URL hash with accordion heading, when accordion opens
            //window.location.hash = event.currentTarget.parentElement.id;
        }
    }

    /**
     * Sets a heading and the button nested within to be open or closed.
     *
     * @param {HTMLHeadingElement} heading - An accordion heading.
     * @param {boolean} open - Set this section to be open?
     */
    function setSection(heading, open) {
        heading.dataset.open = open;
        heading.firstElementChild.setAttribute(aria.expanded, open);
    }

    /**
     * Create a button from the text content of a heading.
     *
     * @param {HTMLElement} heading - An accordion heading.
     * @returns {HTMLButtonElement} An accordion section button.
     */
    function buttonFromHeading(heading) {
        const button = document.createElement('button'),
            // Chrome can't apply grid layout to buttons, need to wrap contents
            wrapper = document.createElement('div'),
            textSpan = document.createElement('span'),
            iconSpan = document.createElement('span');

        textSpan.className = headingTextClassName;
        iconSpan.className = headingIconClassName;
        iconSpan.setAttribute(aria.hidden, true);
        button.setAttribute('type', 'button');

        textSpan.appendChild(document.createTextNode(heading.textContent));
        appendAll(wrapper, [textSpan, iconSpan]);
        button.appendChild(wrapper);

        return button;
    }

    return function (accordion, options) {
        const toggleOpen = false,
            defaultOpen = false,
            allowSingle = false,
            headingLevel = accordion.firstElementChild.tagName;

        const headings = Array.from(
            accordion.querySelectorAll(
                `:scope > ${headingLevel}`
            )
        );

        const contentBody = Array.from(
            accordion.querySelectorAll(
                ':scope > :nth-child(even)'
            ));

        contentBody.forEach( body => {
            body.classList.add(bodyClassName);
        });

        let idLinked = false;

        headings.forEach( h => 
            {
                const link = h.querySelector('a');

                if(link) {

                    h.id = h.firstChild.hash;

                    const el = document.createElement('span');
                    el.textContent = h.querySelector('a').textContent;
                    h.firstChild.replaceWith(el);
                }
                 h.classList.add(headingClassName);

                
                const content = h.nextElementSibling,
                    button = buttonFromHeading(h);

                content.setAttribute(aria.labelledBy, h.id);
                content.setAttribute('role', 'region');
                h.replaceChild(button, h.firstChild);

                setSection(h, false);
                h.nextElementSibling.dataset.closed = 'true';

                button.addEventListener(
                    'click',
                    (e) => buttonClick(button, headings, toggleOpen, e),
                    true
                );
            }
        );

        /* Show first item of accordion, if accordion is set to default open,
           and we haven't linked to a specific section */
        if (defaultOpen && !idLinked) {
            setSection(headings[0], true);
            headings[0].nextElementSibling.dataset.closed = 'false';
        }
    }
}();

/***/ }),
/* 45 */
/***/ (function(module, exports) {

/**
 * WAI-ARIA attributes
 *
 * Quicker to type, intellisensible, documents what they're for, and saves a
 * tiny amount of code by replacing the string 'aria-' with a minifiable
 * variable and dot notation.
 *
 * @module aria-attributes
 * @author Web Development
 * @copyright City, University of London 2018
 */

/**
 * @readonly
 * @enum {string}
 */
const aria = {
    /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */
    activeDescendant: 'aria-activedescendant',
    /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */
    atomic: 'aria-atomic',
    /** Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made. */
    autoComplete: 'aria-autocomplete',
    /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */
    busy: 'aria-busy',
    /** Indicates the current "checked" state of checkboxes, radio buttons, and other widgets. */
    checked: 'aria-checked',
    /** Defines the total number of columns in a table, grid, or treegrid. */
    colCount: 'aria-colcount',
    /** Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid. */
    colIndex: 'aria-colindex',
    /** Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid. */
    colSpan: 'aria-colspan',
    /** Identifies the element (or elements) whose contents or presence are controlled by the current element. */
    controls: 'aria-controls',
    /** Indicates the element that represents the current item within a container or set of related elements. */
    current: 'aria-current',
    /** Identifies the element (or elements) that describes the object. */
    describedBy: 'aria-describedby',
    /** Identifies the element that provides a detailed, extended description for the object. */
    details: 'aria-details',
    /** Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable. */
    disabled: 'aria-disabled',
    /** [Deprecated in ARIA 1.1] Indicates what functions can be performed when a dragged object is released on the drop target. */
    dropEffect: 'aria-dropeffect',
    /** Identifies the element that provides an error message for the object. */
    errorMessage: 'aria-errormessage',
    /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */
    expanded: 'aria-expanded',
    /** Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order. */
    flowTo: 'aria-flowto',
    /** [Deprecated in ARIA 1.1] Indicates an element's "grabbed" state in a drag-and-drop operation. */
    grabbed: 'aria-grabbed',
    /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */
    hasPopup: 'aria-haspopup',
    /** Indicates whether the element is exposed to an accessibility API. */
    hidden: 'aria-hidden',
    /** Indicates the entered value does not conform to the format expected by the application. */
    invalid: 'aria-invalid',
    /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */
    keyShortcuts: 'aria-keyshortcuts',
    /** Defines a string value that labels the current element. */
    label: 'aria-label',
    /** Identifies the element (or elements) that labels the current element. */
    labelledBy: 'aria-labelledby',
    /** Defines the hierarchical level of an element within a structure. */
    level: 'aria-level',
    /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */
    live: 'aria-live',
    /** Indicates whether an element is modal when displayed. */
    modal: 'aria-modal',
    /** Indicates whether a text box accepts multiple lines of input or only a single line. */
    multiLine: 'aria-multiline',
    /** Indicates that the user may select more than one item from the current selectable descendants. */
    multiSelectable: 'aria-multiselectable',
    /** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */
    orientation: 'aria-orientation',
    /** Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship. */
    owns: 'aria-owns',
    /** Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format. */
    placeholder: 'aria-placeholder',
    /** Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. */
    posInset: 'aria-posinset',
    /** Indicates the current "pressed" state of toggle buttons. */
    pressed: 'aria-pressed',
    /** Indicates that the element is not editable, but is otherwise operable. */
    readOnly: 'aria-readonly',
    /** Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. */
    relevant: 'aria-relevant',
    /** Indicates that user input is required on the element before a form may be submitted. */
    required: 'aria-required',
    /** Defines a human-readable, author-localized description for the role of an element. */
    roleDescription: 'aria-roledescription',
    /** Defines the total number of rows in a table, grid, or treegrid. */
    rowCount: 'aria-rowcount',
    /** Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid. */
    rowIndex: 'aria-rowindex',
    /** Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid. */
    rowSpan: 'aria-rowspan',
    /** Indicates the current "selected" state of various widgets. */
    selected: 'aria-selected',
    /** Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. */
    setSize: 'aria-setsize',
    /** Indicates if items in a table or grid are sorted in ascending or descending order. */
    sort: 'aria-sort',
    /** Defines the maximum allowed value for a range widget. */
    valueMax: 'aria-valuemax',
    /** Defines the minimum allowed value for a range widget. */
    valueMin: 'aria-valuemin',
    /** Defines the current value for a range widget. */
    valueNow: 'aria-valuenow',
    /** Defines the human readable text alternative of aria-valuenow for a range widget. */
    valueText: 'aria-valuetext',
};
exports.aria = Object.freeze(aria);

/***/ }),
/* 46 */
/***/ (function(module, exports) {

/**
 * Turns string boolean into real boolean.
 *
 * @param {string} s - A string that may be 'true'.
 * @returns {boolean} True if 'true'.
 */
const toBool =  function toBool(s) {
    return s === 'true' ? true : false;
}

/**
 * Append an array of elements to an element.
 *
 * @param {HTMLElement} elem - The parent element.
 * @param {HTMLElement[]} children - An array of elements to append to it.
 */
const appendAll = function (elem, children) {
    children.forEach((child) => elem.appendChild(child));
}

/**
 * Predicate testing whether an element is positioned in the window.
 *
 *
 * @param {HTMLElement} elem - An HTML element.
 * @returns {boolean} - Is it onscreen?
 */
const verticallyInWindow =  function(elem) {
    return elem.getBoundingClientRect().top >= 0 &&
        elem.getBoundingClientRect().top <= window.innerHeight
        ? true
        : false;
}


exports.appendAll = appendAll;
exports.toBool = toBool;
exports.verticallyInWindow = verticallyInWindow;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {

    var $ = __webpack_require__(1);

    $(function () {
        if (typeof CITY_OPTIONS !== 'undefined' && CITY_OPTIONS.defer) {
            for (var i = 0; i < CITY_OPTIONS.defer.length; i++) {
                CITY_OPTIONS.defer[i]();
            }
        }
    });
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * creates and adds a function as the default error handler for jQuery ajax operations
 */
module.exports = function () {

    var $ = __webpack_require__(1),
        webService = "//webapps.city.ac.uk/matrix/services/jQueryError.php",

        notify = function (event, jqXHR, ajaxSettings, errorThrown) {

            //insert an "image" which has a web service as the src,
            //the web service sends email to ucs-webteam
            $("<img />", {
                src: webService + "?u=" + escape(document.location.href) + "&s=" +
                escape(ajaxSettings.url) + "&t=" + ajaxSettings.type + "&e=" + escape(errorThrown),
                style: "display: none"
            }).appendTo("#footer");

        };

    //register this as a global ajax event handler
    $(function () {
        $(document).ajaxError(notify);
    });
};


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {
    "use strict";

    var $ = __webpack_require__(1),
        debug = __webpack_require__(3),

        createGallery = __webpack_require__(8),
        downloadFileTypes = __webpack_require__(50),
        viewportChanged = __webpack_require__(5),
        /**
         * object to hold google maps markers
         */
        googleMapsMarkers = {},

        /**
         * overlay pane for map
         */
        mapOverlayPane = null,
        /**
         *
         * What needs to happen after a bxslider carousel has finished loading:
         * 1. inject controls into @widget. finds default bxslider controls, replace with font awesome icons and append in widget
         * 2. add scrollable class to widget content
         * 3. remove loading spinner
         * @param jQuery widget: a jquery wrapped .widget (needed for widget controls)
         * @param string middleButtonText: what to write on the middle button (defaults to "All") (needed for widget controls)
         * @param string allLink: the "all" middle button href (needed for widget controls)
         */
        afterBxSliderLoaded = function (widget, allLink, middleButtonText) {

            var leftWidgetButton = "<i class=\" fa fa-caret-left\"></i>",
                rightWidgetButton = "<i class=\" fa fa-caret-right\"></i>",
            // carousel controls
                previousButton = widget.find(".bx-prev"),
                nextButton = widget.find(".bx-next"),
                inputMiddleButtonText = middleButtonText ? middleButtonText : "All";

            previousButton.empty().append(leftWidgetButton);
            nextButton.empty().append(rightWidgetButton);
            //add the "all" button between previous and next buttons if it is needed
            if (allLink) {
                previousButton.after("<a href=\"" + allLink + "\" class=\"bx-all\" >" + inputMiddleButtonText + "</a>");
            }
            widget.find(".bx-controls-direction").appendTo(widget);
            widget.children('h2').addClass('controls-direction');

            //add class
            widget.find(".widget-content").addClass("scrollable");

            //remove widget loading spinner
            widget.removeClass("widget-loading").children('.loading-fa-icon').remove();

        },

        /**
         * news widget
         */
        initNews = function () {

            var newsWidget = $("#news-widget"),
                newsList = newsWidget.find("#news-results"),
                allLink = "//www.city.ac.uk/news",
                showAmount = 3;

            //reformat the content into column sizes based on determined size, if there are more than showAmount items
            if ($("#news-results > .article").size() > showAmount) {
                //set up sortable
                newsList.wrapChildren({
                    childElem: ".article",
                    sets: showAmount
                });
                //launch bxslider
                newsList.bxSlider({
                    auto: false,
                    autoControls: false,
                    pause: 15000,
                    autoHover: true,
                    touchEnabled: false,
                    pager: false,
                    infiniteLoop: false,
                    hideControlOnEnd: true,
                    adaptiveHeight: true,
                    onSliderLoad: function () {
                        afterBxSliderLoaded(newsWidget, allLink);
                    }
                });
            }
            else {
                //remove widget loading spinner, case where the carousel isn't needed
                newsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            }
        },

        /**
         * events widget
         */
        initEvents = function () {

            var eventsWidget = $("#events-widget"),
                eventsList = $("#events-results"),
                allLink = "//www.city.ac.uk/events",
                showAmount = 3;

            //click anywhere on event
            $(".vevent", eventsList).click(function () {
                window.location = $(this).find("a").attr("href");
                return false;
            });

            if ($("#events-results > .vevent").size() > showAmount) {
                //sort the children into groups of showAmount
                eventsList.wrapChildren({
                    childElem: ".event",
                    sets: showAmount
                });
                eventsList.bxSlider({
                    auto: false,
                    autoControls: false,
                    pause: 15000,
                    autoHover: true,
                    touchEnabled: false,
                    pager: false,
                    infiniteLoop: false,
                    hideControlOnEnd: true,
                    adaptiveHeight: true,
                    onSliderLoad: function () {
                        afterBxSliderLoaded(eventsWidget, allLink);
                    }
                });
            }
            else {
                //remove widget loading spinner, case where the carousel isn't needed
                eventsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            }

        },//end initEvents

        initFlickr = function () {

            var $widget = $("#flickr-widget"),
                $slideWrapper = $widget.find("ul"),
                loadedOtherPics,
                bxSliderCallback = function () {

                    debug("flickr callback...");

                    $(".widget-content", $widget).each(function () {

                        //find the ul
                        var firstdiv = $("ul div:first-child", this),
                        //ul = $("ul", this), defined not used
                            thisJq = $(this),
                            height = firstdiv.height(),
                            width = firstdiv.width();

                        //add classes
                        thisJq.addClass("scrollable");

                        //add css to .widget-content
                        thisJq.stop().animate({
                            "min-height": height
                        });
                        thisJq.css("width", width);

                        //remove loading icon when the content is ready
                        $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();

                    });

                    afterBxSliderLoaded($widget);

                };

            //attach an event to init the rest of the pics
            $widget.mouseenter(function () {

                //we only want to run this once
                if (loadedOtherPics) {
                    return;
                }

                loadedOtherPics = true;

                //translate all the span.imageurl"s into actual images
                //(saves some rendering time)
                $("a .imageurl", $widget).each(function () {

                    var thisJq = $(this),
                        text = thisJq.text(),
                        imgTag = "<img src=\"" + text + "\" alt=\"\">";

                    thisJq.parent().text("").prepend(imgTag);

                });

                $("p .imageurl", $widget).each(function () {
                    var thisJq = $(this),
                        text = thisJq.text(),
                        styleAttr = "background-image: url(" + text + ");";

                    thisJq.parent().attr("style", styleAttr);
                    thisJq.remove();

                });

            });

            //set up scrollable
            $slideWrapper.bxSlider({
                auto: false,
                autoControls: false,
                pause: 15000,
                autoHover: true,
                touchEnabled: false,
                pager: false,
                infiniteLoop: false,
                hideControlOnEnd: true,
                adaptiveHeight: true,
                minSlides: 1,
                maxSlides: 4,
                slideWidth: 330,
                slideMargin: 0,
                onSliderLoad: function () {
                    bxSliderCallback();
                }
            });

        },//end initFlickr

        /**
         * courses widget
         */
        initCourses = function () {

            var $widget = $("#courses-widget"),
                widgetContent = $widget.find(".widget-content");

            widgetContent.accordion({
                heightStyle: "content",
                collapsible: true,
                active: false,
                animate: false,
                icons: {
                    "header": "ui-icon-triangle-1-s",
                    "headerSelected": "ui-icon-triangle-1-n"
                },
                create: function () {
                    afterBxSliderLoaded($widget);
                }
            });

        },//end initCourses

        /**
         * testimonials widget
         */
        initTestimonials = function () {
            var $testimonialsWidget = $("#testimonials-widget"),
                widgetContent = $testimonialsWidget.find(".widget-content"),
                testimonialsList = widgetContent.find("ul"),
                bxSliderCallback;

            //check there is more than 1 testimonials and if so, start the carousel
            if ($("li", testimonialsList).length < 2) {
                debug("Less than 2 testimonials, no need for carousel");
                $testimonialsWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
                return;
            }

            bxSliderCallback = function () {
                //add controls
                afterBxSliderLoaded($testimonialsWidget);
                $testimonialsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            };

            //initialise bxslider
            testimonialsList.bxSlider({
                auto: false,
                autoControls: false,
                pause: 15000,
                slideMargin: 10,
                autoHover: true,
                touchEnabled: false,
                pager: false,
                infiniteLoop: false,
                hideControlOnEnd: true,
                adaptiveHeight: true,
                onSliderLoad: function () {
                    bxSliderCallback();
                }
            });

        },//end initTestimonials

        /**
         * profiles widget
         */
        initProfiles = function () {

            var $profilesWidget = $("#profiles-widget"),
                widgetContent = $profilesWidget.find(".widget-content"),
                profilesList = widgetContent.find("ul"),
                bxSliderCallback;//end vars

            //check there is more than 1 testimonials and if so, start the carousel
            if ($("li", profilesList).length < 2) {
                debug("Less than 2 testimonials, no need for carousel");
                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
                return;
            }

            bxSliderCallback = function () {
                //add controls
                afterBxSliderLoaded($profilesWidget);
                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            };

            //initialise bxslider
            profilesList.bxSlider({
                auto: false,
                autoControls: false,
                pause: 15000,
                autoHover: true,
                touchEnabled: false,
                pager: false,
                infiniteLoop: false,
                hideControlOnEnd: true,
                adaptiveHeight: true,
                onSliderLoad: function () {
                    bxSliderCallback();
                }
            });

        },//end profilesWidgets

        /**
         * spotlight on research widget
         */
        initSpotlightResearch = function () {

            var $spotlightResearchWidget = $("#spotlight-research-widget"),
                widgetContent = $spotlightResearchWidget.find(".widget-content"),
                spotlightResearchList = widgetContent.find("ul"),
                bxSliderCallback;//end vars

            //check there is more than 1 spotlight on research items and if so, start the carousel
            if ($("li", spotlightResearchList).length < 2) {
                debug("Less than 2 spotlight on research, no need for carousel");
                $spotlightResearchWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
                return;
            }

            bxSliderCallback = function () {
                //add controls
                afterBxSliderLoaded($spotlightResearchWidget);
                $spotlightResearchWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            };

            //initialise bxslider
            spotlightResearchList.bxSlider({
                auto: false,
                autoControls: false,
                pause: 15000,
                autoHover: true,
                touchEnabled: false,
                pager: false,
                infiniteLoop: false,
                hideControlOnEnd: true,
                adaptiveHeight: true,
                onSliderLoad: function () {
                    bxSliderCallback();
                }
            });

        },//end initSpotlightResearch

        /**
         * RSS widget
         */
        initRss = function () {

            var $widget = $("#rss-widget"),
                widgetContent = $widget.find(".widget-content"),
                items = widgetContent.find(".items"); //end vars

            if (items.children().length > 1) {
                //load up bxslider
                items.bxSlider({
                    auto: false,
                    autoControls: false,
                    pause: 15000,
                    autoHover: true,
                    touchEnabled: false,
                    pager: false,
                    infiniteLoop: false,
                    hideControlOnEnd: true,
                    adaptiveHeight: true,
                    onSliderLoad: function () {
                        afterBxSliderLoaded($widget);
                    }
                });

            } else {
                //don't load the bxslider carousel , just show widget
                $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
            }

        },

        /**
         * Call to action widget
         */
        initCallToAction = function () {

            var start_date = $("#start_date").val(),
                end_date = $("#end_date").val(),
                sd = new Date(),
                ed = new Date(),
                cd,
                splitDate = function (dt, idt) {

                    var dateArray = dt.split("/"),
                        endofArray = dateArray[2].split(" ");

                    idt.setFullYear(endofArray[0]);
                    idt.setMonth(dateArray[1] - 1);
                    idt.setDate(dateArray[0]);

                    return idt;

                };

            sd = splitDate(start_date, sd);
            ed = splitDate(end_date, ed);

            //current date
            cd = new Date();

            if (ed >= cd && sd <= cd) {

                //Show the on date
                $("#content_on_date").attr("class", "widget-content cta-widget-show");
                $("#content_out_of_date").attr("class", "cta-widget-hide");

            } else {

                //Show out of date
                $("#content_out_of_date").attr("class", "widget-content cta-widget-show");
                $("#content_on_date").attr("class", "cta-widget-hide");
            }

        },

        /**
         * initiates an image gallery widget
         *
         * @return {object || undefined} returns the galleria jQuery object if
         * successful else undefined - for instance if $gallery is not a jQuery object
         *
         */
        initGallery = function () {

            var $gallery = $("#gallery-widget .gallery");
            return createGallery($gallery, true);

        },

        initFreeText = function () {
            $("div.free-text a").unbind("click").click(function () {
            });
        },

        /**
         * The master widget initialiser, calls all the other init{map,events...} functions
         */
        initWidgets = function () {

            var widgets = {
                    "events": {
                        f: initEvents
                    },
                    "news": {
                        f: initNews
                    },
                    "flickr": {
                        f: initFlickr
                    },
                    "courses": {
                        f: initCourses
                    },
                    "testimonials": {
                        f: initTestimonials
                    },
                    "rss": {
                        f: initRss
                    },
                    "gallery": {
                        f: initGallery
                    },
                    "cta": {
                        f: initCallToAction
                    },
                    "freetext": {
                        f: initFreeText
                    },
                    "profiles": {
                        f: initProfiles
                    },
                    "spotlight-research": {
                        f: initSpotlightResearch
                    }
                },

                id;


            //loop through each widget type and init if present
            for (id in widgets) {
                if (widgets.hasOwnProperty(id)) {
                    //bail here if the widget is not present
                    if ($("#" + id + "-widget").length === 0) {
                        debug("no " + id + " widget");
                    } else if (typeof widgets[id].f !== "function") {
                        debug("can't find init func of " + id + " widget");
                    } else {
                        //run the init
                        debug("running init func of " + id + " widget");
                        widgets[id].f.apply();
                    }
                }
            }
        };

    return initWidgets;

}();


/***/ }),
/* 50 */
/***/ (function(module, exports) {

/**
 * used for detecting download filetypes by extension
 */

module.exports = ["doc", "docx", "xls", "xlsx", "ppt", "pptx", "pps", "ppsx",
    "pdf", "jpg", "png", "gif", "zip", "txt", "rtf", "mp3"];

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {

    var $ = __webpack_require__(1),

        viewportChanged = __webpack_require__(5),
        getWindowWidth = __webpack_require__(9),

        bindMegaDdEvents = __webpack_require__(52),

        $window = $(window),
        $body = $("body"),

        $globalNav = $body.find("#global-nav1"),
        $navLis = $globalNav.children("li"),
        $megaLinks = $globalNav.find(".mega"),
        $drops = $globalNav.find(".drop"),


        $responsiveTogglers = $(".responsive-toggler"),
        $togglees = $(".toggle"),
        $utilNav = $("#util-nav"),

        breakpoints = __webpack_require__(10),

        onResize = function () {
            if (viewportChanged()) {
                var newWidth = getWindowWidth(window);

                if (newWidth >= breakpoints.wide) {
                    //big to small?
                    $body.addClass("screen-wide").removeClass("screen-thin screen-medium");

                    // if this is the first time going to desktop size,
                    // we need to bind the event handlers
                    bindMegaDdEvents($megaLinks, $navLis, $drops);

                    // close any openers which were open before width change
                    $responsiveTogglers.removeClass("active");
                    $togglees.removeClass("active");
                    $utilNav.removeClass("hidden");

                } else if (newWidth >= breakpoints.medium) {
                    //small to big?
                    $body.addClass("screen-medium").removeClass("screen-thin screen-wide");
                    $utilNav.addClass("hidden");
                    $drops.removeClass("active").hide();
                    $navLis.removeClass("active");
                } else {
                    $body.addClass("screen-thin").removeClass("screen-medium screen-wide");
                }
            }
        },

        init = function () {
            $window.resize(onResize);
            $window.resize();

            // attach click events on mobile navigation togglers
            $responsiveTogglers.on("click", function (e) {

                var $self = $(this),
                    $toggle = $self.next(".toggle");

                e.preventDefault();
                $self.toggleClass("active");
                $toggle.toggleClass("active");
            });

            // init the global navigation drop downs
            $drops.hide();

            if (getWindowWidth(window) < breakpoints.wide) {
                $utilNav.children("li").clone().appendTo($globalNav);
            }
        };

    return init;
}();

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {



    // we only need this stuff on a desktop sized browser
    var $ = __webpack_require__(1),
        $body = $('body'),
        $query = $("#search #query"),

        breakpoints = __webpack_require__(10),

        boundDropEvents = false,

        bindMegaDdEvents = function ($megaLinks, $navLis, $drops) {
            if (!boundDropEvents) {

                //attach click, keydown and focus handler
                $megaLinks.on("click keydown focus", function (e) {

                    var $target = $(this),
                        $li = $target.closest("li"),
                        $drop = $li.find(".drop");

                    // if we have bound the event, but are now on smaller width we don't want to
                    // show the mega dropdown
                    if (CITY.getWindowWidth(window) < breakpoints.desktop) {
                        return;
                    }

                    //what type of event was fired?
                    if (e.type === "keydown" && e.keyCode !== 13) {
                        //if a keypress event but button hit wasn't enter
                        return;
                    }

                    if (e.type === "focus") {
                        //always kill all drop downs when a megaLink receives focus then drop out of fn
                        $navLis.removeClass("active");
                        $drops.hide().removeClass("active");
                        return;
                    }

                    //if we are here then the event is either a click or "enter" keypress

                    //remove all active class from all other links
                    $navLis.not($li[0]).removeClass("active");
                    $drops.not($drop[0]).hide().removeClass("active");
                    $li.toggleClass("active");
                    $drop.toggleClass("active");
                    $drop.show();
                    e.preventDefault();
                    e.stopPropagation();

                });

                // on blur of last mega link (search input query will be focussed), close
                // any open drop down
                $query.on("focus", function () {
                    $navLis.removeClass("active");
                    $drops.hide().removeClass("active");
                });

                //don't propogate clicks inside mega menus
                $drops.on("click", function (e) {
                    e.stopPropagation();
                });

                //close any open mega menus when page is clicked
                $body.on("click", function () {
                    $drops.removeClass("active").hide();
                    $navLis.removeClass("active");
                });

                boundDropEvents = true;
            }
        };

    return bindMegaDdEvents;
}();


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = function () {

    var $ = __webpack_require__(1),

        sliders = [
            __webpack_require__(54),
            __webpack_require__(55)
        ],

        create = function (data) {
            var $carouselWrapper = $(data.id),
                $carousel = $carouselWrapper.find(".bxslider"),
                slideCount = $carousel.children().length;

            $carouselWrapper.removeClass("carousel-loading");
            if (slideCount > 1) {
                $carousel.bxSlider(data.options(slideCount));
            }
        },

        init = function () {
            for (var i = 0; i < sliders.length; i++) {
                create(sliders[i]);
            }
        };

    return init;
}();

/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = {
    id: '#profiles-carousel',
    options: function () {
        return {
            auto: false,
            autoControls: false,
            controls: true,
            pager: true,
            infiniteLoop: false,
            responsive: true,
            slideWidth: 330,
            slideMargin: 0,
            adaptiveHeight: false,
            hideControlOnEnd: true,
            maxSlides: 1,
            prevText: "<i class=\"fa fa-angle-left\"></i>",
            nextText: "<i class=\"fa fa-angle-right\"></i>"
        };
    }
};

/***/ }),
/* 55 */
/***/ (function(module, exports) {

module.exports = {
    id: '#statistic-carousel',
    options: function (n) {
        return {
            auto: false,
            autoControls: false,
            controls: true,
            pager: false,
            infiniteLoop: false,
            responsive: true,
            slideWidth: 300,
            slideMargin: 60,
            adaptiveHeight: true,
            hideControlOnEnd: true,
            minSlides: 1,
            moveSlides: 1,
            maxSlides: (n >= 3) ? 3 : 2,
            prevText: "<i class=\" fa fa-caret-left\"></i>",
            nextText: "<i class=\" fa fa-caret-right\"></i>"
        };
    }
};

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgZjc5ZmQzNzY0YzQ1MDZjYjc5MmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9kZWJ1Zy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy92aWV3cG9ydC1jaGFuZ2VkLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9hbWQtb3B0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvc2Nyb2xsLXRvLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2NyZWF0ZS1nYWxsZXJ5LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2dldC13aW5kb3ctd2lkdGguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vb24tcmVzaXplL2JyZWFrcG9pbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL21haW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2pxdWVyeS9saWIvanF1ZXJ5LXVpLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvbGliL2pxdWVyeS5iYS1iYnEubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ieHNsaWRlci9kaXN0L2pxdWVyeS5ieHNsaWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LmlkaXplLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2pxdWVyeS9qcXVlcnkuY2l0eWRyb3Bkb3duLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2pxdWVyeS9qcXVlcnkuYWNjb3JkaW9uLXRhYnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS55b3V0dWJlcHJldmlldy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5Lm11bHRpc2NyaXB0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvanMtcGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9jdXN0b20tYWpheC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9jcmVhdGUtc2xpZGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtZHJvcGRvd25zLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtZHluYW1pYy1tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvYXotbGlzdGluZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbWFnZS1hY2NvcmRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvaW5pdC1zZWUtbW9yZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbWFnZS1jcmVkaXRhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9wbGFjZWhvbGRlci1mYWxsYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LWltYWdlLWNhcm91c2VsLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtd2hpdGUtY2FyZHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3Mvc2VhcmNoLWF1dG9jb21wbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LW5ld3MtZXZlbnRzLXN0cmlwLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2hlYWRlci1wcmltYXJ5LW5hdi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9oZWFkZXItbmF2cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9mb290ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvcG9wdXAtZGlhbG9nLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL3Jlc3BvbnNpdmUtdGFibGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2N5Y2xpYy1wb3B1cC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9saW5rLWZpbmRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9yZXNlYXJjaC1wdWJsaWNhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvYWNjb3JkaW9uLTIwMjQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vYXJpYS1hdHRyaWJ1dGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9kZWZlcnJlZC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcy1lcnJvci1ub3RpZmllci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi93aWRnZXRzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2Rvd25sb2FkLWZpbGUtdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vb24tcmVzaXplL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL29uLXJlc2l6ZS9iaW5kLW1lZ2EtZXZlbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2N1c3RvbS1zbGlkZXJzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2N1c3RvbS1zbGlkZXJzL3Byb2ZpbGVzLWNhcm91c2VsLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2N1c3RvbS1zbGlkZXJzL3N0YXQtY2Fyb3VzZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7OztBQzdEQTs7QUFFQSxJQUFJLG1CQUFPLENBQUMsRUFBa0I7QUFDOUIsSUFBSSxtQkFBTyxDQUFDLEVBQXFCO0FBQ2pDLElBQUksbUJBQU8sQ0FBQyxFQUF5QjtBQUNyQyxJQUFJLG1CQUFPLENBQUMsRUFBa0M7O0FBRTlDLElBQUksbUJBQU8sQ0FBQyxFQUFnQjtBQUM1QixJQUFJLG1CQUFPLENBQUMsRUFBdUI7QUFDbkMsSUFBSSxtQkFBTyxDQUFDLEVBQXlCO0FBQ3JDLElBQUksbUJBQU8sQ0FBQyxFQUF5QjtBQUNyQyxJQUFJLG1CQUFPLENBQUMsRUFBdUI7O0FBRW5DO0FBQ0EsQ0FBQyxHOzs7Ozs7O0FDZEQ7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOzs7Ozs7OztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsb0JBQW9CLG1CQUFPLENBQUMsQ0FBbUI7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OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQyxrQjs7Ozs7O0FDN1BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDOztBQUVEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFD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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFFBQVE7QUFDNUQ7QUFDQSxvRUFBb0UsZUFBZTtBQUNuRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsUUFBUTtBQUM1RDtBQUNBLG9FQUFvRSxlQUFlO0FBQ25GO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsZUFBZTtBQUNwRjtB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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QUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBOzs7Ozs7OztBQ3RHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUzs7O0FBR1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7Ozs7Ozs7O0FDdEpBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBOzs7Ozs7OztBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLENBQVc7O0FBRS9CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDs7QUFFQSxDQUFDOzs7Ozs7O0FDOUNEO0FBQ0E7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLENBQVc7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsQ0FBQzs7Ozs7OztBQ2JEO0FBQ0E7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLENBQVc7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0Es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QVM7O0FBRVQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEc7Ozs7OztBQ2hQRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUM7Ozs7OztBQ2xIQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLGNBQWM7QUFDekI7QUFD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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEUiLCJmaWxlIjoiQ0lUWV9SLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTEpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIGY3OWZkMzc2NGM0NTA2Y2I3OTJjIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICByZXF1aXJlKCcuL2xpYi9qcXVlcnkubWluJyk7XG4gICAgcmVxdWlyZSgnLi9saWIvanF1ZXJ5LXVpLm1pbicpO1xuICAgIHJlcXVpcmUoJy4vbGliL2pxdWVyeS5iYS1iYnEubWluJyk7XG4gICAgcmVxdWlyZSgnYnhzbGlkZXIvZGlzdC9qcXVlcnkuYnhzbGlkZXIuanMnKTtcblxuICAgIHJlcXVpcmUoJy4vanF1ZXJ5LmlkaXplJykod2luZG93LmpRdWVyeSk7XG4gICAgcmVxdWlyZSgnLi9qcXVlcnkuY2l0eWRyb3Bkb3duJykod2luZG93LmpRdWVyeSk7XG4gICAgcmVxdWlyZSgnLi9qcXVlcnkuYWNjb3JkaW9uLXRhYnMnKSh3aW5kb3cualF1ZXJ5KTtcbiAgICByZXF1aXJlKCcuL2pxdWVyeS55b3V0dWJlcHJldmlldycpKHdpbmRvdy5qUXVlcnkpO1xuICAgIHJlcXVpcmUoJy4vanF1ZXJ5Lm11bHRpc2NyaXB0cycpKHdpbmRvdy5qUXVlcnkpO1xuXG4gICAgcmV0dXJuIHdpbmRvdy5qUXVlcnk7XG59KCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9qcXVlcnkvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBTZW5kcyBhIG1lc3NhZ2UgdG8gdGhlIGJyb3dzZXIgY29uc29sZSAoR2Vja28sIFdlYmtpdCkgb3IgaW50byB0aGUgPGJvZHk+IChJRSlcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlOiB0aGUgbWVzc2FnZSB0byBwcmludCBvdXRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG5cbiAgICB2YXIgZGVidWcgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICAgICAgaWYgKGRlYnVnLmRlYnVnTGV2ZWwgPiAwIHx8IGxvY2F0aW9uLnNlYXJjaC5tYXRjaChcImRlYnVnXCIpKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy9mb3IgU2FmYXJpLCBDaHJvbWUsIEZpcmVmb3gody8gZmlyZWJ1ZylcbiAgICAgICAgICAgICAgICAgICAgdy5jb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2ZvciBPcGVyYVxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmEucG9zdEVycm9yLmFwcGx5KG9wZXJhLCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZTEpIHtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIGRlYnVnLmRlYnVnTGV2ZWwgPSAwO1xuXG4gICAgcmV0dXJuIGRlYnVnO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL3V0aWxzL2RlYnVnLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiByZXR1cm5zIHRydWUgaWYgdGhlIHZpZXdwb3J0IHNpemUgaGFzIGNoYW5nZWQgLVxuICogdXNlZnVsIGluIHJlc3BvbnNpdmUgbGF5b3V0LCBzZWVcbiAqIHNub29rLmNhL2FyY2hpdmVzL2phdmFzY3JpcHQvaWU2X2ZpcmVzX29ucmVzaXplXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHcpIHtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgdmFyIGRlYnVnID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvZGVidWcnKSxcbiAgICAgICAgICAgIGNoYW5nZWQgPSBmYWxzZSxcbiAgICAgICAgICAgIGRvY0VsID0gdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICAgICAgICBjb29sT2ZmID0gMjAsIC8vZnVydGhlciBjYWxscyB3aXRoaW4gdGhpcyB3aW5kb3cgZ2V0XG4gICAgICAgIC8vdGhlIHNhbWUgcmV0dXJuIHZhbHVlXG4gICAgICAgICAgICBub3cgPSBEYXRlLm5vdyA/IERhdGUubm93KCkgOiAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICAgICAgICAgIH0oKSk7XG5cbiAgICAgICAgLy9zZXQgdXAgYSBob2xkZXIgb2JqZWN0IChpZiBpdCBkb2Vzbid0IGV4aXN0KVxuICAgICAgICB3LnZpZXdwb3J0ID0gdy52aWV3cG9ydCB8fCB7fTtcblxuICAgICAgICAvL3RoZXNlIG5lZWQgemVyb2luZyBiZWZvcmUgd2UgYmVnaW4gKGlmIG5vdCBhbHJlYWR5IHNldClcbiAgICAgICAgdy52aWV3cG9ydC5kaW1lbnNpb25zID0gdy52aWV3cG9ydC5kaW1lbnNpb25zIHx8IHtoZWlnaHQ6IG51bGwsIHdpZHRoOiBudWxsfTtcblxuICAgICAgICAvL25lZWQgdG8gaGFuZGxlIHRoZSBzaXR1YXRpb24gd2hlcmUgbWFueSBjYWxscyB0byB0aGlzXG4gICAgICAgIC8vZnVuY3Rpb24gaGFwcGVuIGluIHF1aWNrIHN1Y2Nlc3Npb25cbiAgICAgICAgaWYgKHcudmlld3BvcnQudGltZVN0YW1wICYmIG5vdyAtIHcudmlld3BvcnQudGltZVN0YW1wIDwgY29vbE9mZikge1xuICAgICAgICAgICAgZGVidWcoXCJ3aXRoaW4gd2luZG93LCByZXR1cm5pbmcgXCIgKyB3LnZpZXdwb3J0LnN0b3JlZFJlc3VsdCk7XG4gICAgICAgICAgICByZXR1cm4gdy52aWV3cG9ydC5zdG9yZWRSZXN1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICAvL3N0b3JlIHRoZSB0aW1lIG9mIHRoaXMgY2FsbFxuICAgICAgICB3LnZpZXdwb3J0LnRpbWVTdGFtcCA9IG5vdztcblxuICAgICAgICAvL2hhdmUgd2UgY2hhbmdlZCB2aWV3cG9ydCBzaXplP1xuICAgICAgICBpZiAody52aWV3cG9ydC5kaW1lbnNpb25zLndpZHRoICE9PSBkb2NFbC5jbGllbnRXaWR0aCB8fFxuICAgICAgICAgICAgdy52aWV3cG9ydC5kaW1lbnNpb25zLmhlaWdodCAhPT0gZG9jRWwuY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgICBjaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vc3RvcmUgbmV3IGRpbWVuc2lvbnNcbiAgICAgICAgdy52aWV3cG9ydC5kaW1lbnNpb25zLmhlaWdodCA9IGRvY0VsLmNsaWVudEhlaWdodDtcbiAgICAgICAgdy52aWV3cG9ydC5kaW1lbnNpb25zLndpZHRoID0gZG9jRWwuY2xpZW50V2lkdGg7XG5cbiAgICAgICAgLy9zdG9yZSB0aGlzIHJlc3VsdCBpbiBjYXNlIG9mIGEgcmUtY2FsbCB3aXRoaW4gY29vbE9mZlxuICAgICAgICB3LnZpZXdwb3J0LnN0b3JlZFJlc3VsdCA9IGNoYW5nZWQ7XG5cbiAgICAgICAgZGVidWcoXCJ2aWV3cG9ydCBjaGFuZ2VkOiBcIiArIGNoYW5nZWQpO1xuXG4gICAgICAgIHJldHVybiBjaGFuZ2VkO1xuICAgIH1cbn0od2luZG93KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3Mvdmlld3BvcnQtY2hhbmdlZC5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXHJcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2FtZC1vcHRpb25zLmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBpZiAoZWxlbWVudCAmJiAhJC5pc0VtcHR5T2JqZWN0KGVsZW1lbnQub2Zmc2V0KCkpKSB7XG4gICAgICAgICQoJ2h0bWw6bm90KDphbmltYXRlZCksIGJvZHk6bm90KDphbmltYXRlZCknKS5hbmltYXRlKHtzY3JvbGxUb3A6IE1hdGgubWF4KDAsIGVsZW1lbnQub2Zmc2V0KCkudG9wIC0gODUpfSwgJ3Nsb3cnKTtcbiAgICB9XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvdXRpbHMvc2Nyb2xsLXRvLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogQ3JlYXRlIGEgaW1hZ2UgR2FsbGVyeVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhIGpxdWVyeSBvYmplY3QgcmVwcmVzZW50aW5nIGEgc2luZ2xlIGluc3RhbmNlIG9mIGEgZ2FsbGVyeVxuICogQHBhcmFtIHtCb29sZWFufSB0cnVlIGlmIHRoZSBnYWxsZXJ5IGlzIGluIGEgd2lkZ2V0LCBmYWxzZSBpZiBpbiBtYWluIGNvbnRlbnQgYm9keVxuICogQHJldHVybiB7T2JqZWN0IHx8IFVuZGVmaW5lZH0gcmV0dXJucyB0aGUgZ2FsbGVyaWEgalF1ZXJ5IG9iamVjdCBpZlxuICogc3VjY2Vzc2Z1bCBlbHNlIHVuZGVmaW5lZCAtIGZvciBpbnN0YW5jZSBpZiAkZ2FsbGVyeSBpcyBub3QgYSBqUXVlcnkgb2JqZWN0XG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuICAgICAgICBkZWJ1ZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2RlYnVnJyksXG4gICAgICAgIHN0YXRlID0gJ25vdC1sb2FkZWQnLFxuICAgICAgICBxdWV1ZSA9IFtdLFxuICAgICAgICBjcmVhdGUgPSBmdW5jdGlvbihnYWxsZXJ5LCBvcHRpb25zKSB7XG4gICAgICAgICAgICB2YXIgcm9vdCA9IGdhbGxlcnkuYXR0cignaWQnKS5yZXBsYWNlKCdnYWxsZXJ5LScsICcnKSxcbiAgICAgICAgICAgICAgICBnYWxsZXJ5SW5uZXIgPSBnYWxsZXJ5LmZpbmQoJy5nYWxsZXJ5LWlubmVyJyk7XG5cbiAgICAgICAgICAgICQuZ2V0SlNPTignL2FwaXMvZ2FsbGVyaWVzL2dhbGxlcmlhLWpzb24/cm9vdD0nICsgcm9vdCwgZnVuY3Rpb24oXG4gICAgICAgICAgICAgICAgZGF0YVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgLy9yZW1vdmUgbG9hZGVyXG4gICAgICAgICAgICAgICAgZ2FsbGVyeS5maW5kKCdzcGFuLmxvYWRpbmcnKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgZ2FsbGVyeS5jc3MoJ29wYWNpdHknLCAnMScpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuZGF0YV9zb3VyY2UgPSBkYXRhO1xuICAgICAgICAgICAgICAgIGdhbGxlcnlJbm5lci5nYWxsZXJpYShvcHRpb25zKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gZ2FsbGVyeUlubmVyO1xuICAgICAgICB9LFxuICAgICAgICBsb2FkQ29tcGxldGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vZ2V0IGlkIG9mIHJvb3QgZnJvbSBpZCBvZiBnYWxsZXJ5IGRpdlxuICAgICAgICAgICAgc3RhdGUgPSAnbG9hZGVkJztcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcXVldWUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjcmVhdGUocXVldWVbaV0uZ2FsbGVyeSwgcXVldWVbaV0ub3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB9LFxuICAgICAgICByZXF1ZXN0ID0gZnVuY3Rpb24oZ2FsbGVyeSkge1xuICAgICAgICAgICAgdmFyIGdhbGxlcnlJbm5lciA9IGdhbGxlcnkgJiYgZ2FsbGVyeS5maW5kKCcuZ2FsbGVyeS1pbm5lcicpO1xuXG4gICAgICAgICAgICBpZiAoIWdhbGxlcnlJbm5lciB8fCBnYWxsZXJ5SW5uZXIubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGVidWcoJ25vIGdhbGxlcnkgZm91bmQnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGdhbGxlcmlhT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwLjU2MjUsXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0Ym94OiBnYWxsZXJ5SW5uZXIuaGFzQ2xhc3MoJ2xpZ2h0Ym94JyksXG4gICAgICAgICAgICAgICAgICAgIG1heFNjYWxlUmF0aW86IDEsXG4gICAgICAgICAgICAgICAgICAgIHByZWxvYWQ6IDIsXG4gICAgICAgICAgICAgICAgICAgIHNob3dJbmZvOiBnYWxsZXJ5SW5uZXIuaGFzQ2xhc3MoJ2NhcHRpb24nKSxcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VDcm9wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgZGVidWc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBleHRlbmQ6IGZ1bmN0aW9uKC8qIGRlZmluZWQgYnV0IG5vdCB1c2VkOiBvcHRpb25zICovKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJ2NpdHknID09PSBnYWxsZXJ5LmF0dHIoJ2RhdGEtdGhlbWUnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhbGxlcnkucHJlcGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnPGRpdi8+Jywge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdjZy1jYXB0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLypsb2Fkc3RhcnQgaXMgdHJpZ2dlcmVkIGV2ZXJ5IHRpbWUgZ2FsbGVyaWEgbG9hZHMgYW4gaW1hZ2UqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmluZCgnbG9hZHN0YXJ0JywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGFbZS5pbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NhcHRpb24gaXMgcmVmb3VuZCBoZXJlIGFzIGl0IG5lZWRzIHRvIGJlIHNjb3BlZCB0byB0aGlzIGdhbGxlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb24gPSBnYWxsZXJ5LmZpbmQoJy5jZy1jYXB0aW9uJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubV9jYXB0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uLmh0bWwoZGF0YS5tX2NhcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FwdGlvbi5odG1sKCcmbmJzcDsnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT09ICdsb2FkZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZShnYWxsZXJ5LCBnYWxsZXJpYU9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PT0gJ25vdC1sb2FkZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9ICdsb2FkaW5nJztcbiAgICAgICAgICAgICAgICAgICAgICAgICQuZ2V0TXVsdGlKc1NjcmlwdHMoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGliL2pxdWVyeS9wbHVnaW5zL2dhbGxlcmlhL2dhbGxlcmlhLTEuNC4yL2dhbGxlcmlhLTEuNC4yLm1pbi5qcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsaWIvanF1ZXJ5L3BsdWdpbnMvZ2FsbGVyaWEvZ2FsbGVyaWEtMS40LjIvdGhlbWVzL2NsYXNzaWMvZ2FsbGVyaWEuY2xhc3NpYy5jaXR5Lm1pbi5qcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkQ29tcGxldGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGdhbGxlcnkucHJlcGVuZChcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJsb2FkaW5nXCI+PGRpdiBjbGFzcz1cImxvYWRpbmdfX2ljb25cIj48aSBjbGFzcz1cImZhIGZhLXJlZnJlc2ggZmEtc3BpblwiPjwvaT48L2Rpdj48L3NwYW4+J1xuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICBxdWV1ZS5wdXNoKHsgZ2FsbGVyeTogZ2FsbGVyeSwgb3B0aW9uczogZ2FsbGVyaWFPcHRpb25zIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIHJldHVybiByZXF1ZXN0O1xufSkoKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvY3JlYXRlLWdhbGxlcnkuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBnZXRzIHdpbmRvdyB3aWR0aFxuICogQHBhcmFtOiB7T2JqZWN0fSAtIHdpbmRvdyBvYmplY3RcbiAqIEByZXR1cm46IHtOdW1iZXJ9IC0gd2luZG93IHdpZHRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKHcpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoJCh3KS53aWR0aCgpKTtcbiAgICB9O1xufSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvZ2V0LXdpbmRvdy13aWR0aC5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBcInRoaW5cIjogNDgwLFxuICAgIFwibWVkaXVtXCI6IDc2OCxcbiAgICBcIndpZGVcIjogOTgwXG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvYnJlYWtwb2ludHMuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIlxudmFyIENJVFkgPSByZXF1aXJlKCcuL21haW4nKSxcbiAgICBkZWZlcnJlZCA9IHJlcXVpcmUoJy4vZGVmZXJyZWQnKSxcbiAgICBpbml0SnNGYWlsdXJlTm90aWZpZXIgPSByZXF1aXJlKCcuL2pzLWVycm9yLW5vdGlmaWVyJyksXG4gICAgaW5pdFdpZGdldHMgPSByZXF1aXJlKCcuL3dpZGdldHMnKSxcbiAgICBpbml0T25SZXNpemUgPSByZXF1aXJlKCcuL29uLXJlc2l6ZScpLFxuICAgIGluaXRDdXN0b21TbGlkZXJzID0gcmVxdWlyZSgnLi9jdXN0b20tc2xpZGVycycpO1xuXG5DSVRZLmluaXQoKTtcbmluaXRKc0ZhaWx1cmVOb3RpZmllcigpO1xuZGVmZXJyZWQoKTtcbmluaXRPblJlc2l6ZSgpO1xuaW5pdFdpZGdldHMoKTtcbmluaXRDdXN0b21TbGlkZXJzKCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnc3NzcycpO1xuICAgIHZhciAkID0gcmVxdWlyZSgnLi9qcXVlcnknKSxcbiAgICAgICAgZGVidWcgPSByZXF1aXJlKCcuLi91dGlscy9kZWJ1ZycpLFxuICAgICAgICBjdXN0b21BSkFYID0gcmVxdWlyZSgnLi9mdW5jcy9jdXN0b20tYWpheCcpLFxuICAgICAgICB2aWV3cG9ydENoYW5nZWQgPSByZXF1aXJlKCcuL2Z1bmNzL3ZpZXdwb3J0LWNoYW5nZWQnKSxcbiAgICAgICAgY3JlYXRlR2FsbGVyeSA9IHJlcXVpcmUoJy4vZnVuY3MvY3JlYXRlLWdhbGxlcnknKSxcbiAgICAgICAgY3JlYXRlU2xpZGVyID0gcmVxdWlyZSgnLi9mdW5jcy9jcmVhdGUtc2xpZGVyJyksXG4gICAgICAgIGdldFdpbmRvd1dpZHRoID0gcmVxdWlyZSgnLi9mdW5jcy9nZXQtd2luZG93LXdpZHRoJyksXG4gICAgICAgIGluaXREcm9wZG93bnMgPSByZXF1aXJlKCcuL2Z1bmNzL2luaXQtZHJvcGRvd25zJyksXG4gICAgICAgIGluaXREeW5hbWljR21hcCA9IHJlcXVpcmUoJy4vZnVuY3MvaW5pdC1keW5hbWljLW1hcCcpLFxuICAgICAgICBpbml0QXpMaXN0aW5nID0gcmVxdWlyZSgnLi9mdW5jcy9hei1saXN0aW5nJyksXG4gICAgICAgIGltYWdlQWNjb3JkaW9uID0gcmVxdWlyZSgnLi9mdW5jcy9pbWFnZS1hY2NvcmRpb24nKSxcbiAgICAgICAgaW5pdFNlZU1vcmUgPSByZXF1aXJlKCcuL2Z1bmNzL2luaXQtc2VlLW1vcmUnKSxcbiAgICAgICAgaW1hZ2VDcmVkaXRhdGlvbiA9IHJlcXVpcmUoJy4vZnVuY3MvaW1hZ2UtY3JlZGl0YXRpb24nKSxcbiAgICAgICAgaW5pdFBsYWNlaG9sZGVySGFsbGJhY2sgPSByZXF1aXJlKCcuL2Z1bmNzL3BsYWNlaG9sZGVyLWZhbGxiYWNrJyksXG4gICAgICAgIGluaXRJbWFnZUNhcm91c2VsID0gcmVxdWlyZSgnLi9mdW5jcy9pbml0LWltYWdlLWNhcm91c2VsJyksXG4gICAgICAgIGluaXRXaGl0ZUNhcmRzID0gcmVxdWlyZSgnLi9mdW5jcy9pbml0LXdoaXRlLWNhcmRzJyksXG4gICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZSA9IHJlcXVpcmUoJy4vZnVuY3Mvc2VhcmNoLWF1dG9jb21wbGV0ZScpLFxuICAgICAgICBpbml0TmV3c0V2ZW50c1N0cmlwID0gcmVxdWlyZSgnLi9mdW5jcy9pbml0LW5ld3MtZXZlbnRzLXN0cmlwJyksXG4gICAgICAgIGhlYWRlclByaW1hcnlOYXYgPSByZXF1aXJlKCcuL2Z1bmNzL2hlYWRlci1wcmltYXJ5LW5hdicpLFxuICAgICAgICBoZWFkZXJOYXZzID0gcmVxdWlyZSgnLi9mdW5jcy9oZWFkZXItbmF2cycpLFxuICAgICAgICBmb290ZXIgPSByZXF1aXJlKCcuL2Z1bmNzL2Zvb3RlcicpLFxuICAgICAgICBwb3B1cERpYWxvZyA9IHJlcXVpcmUoJy4vZnVuY3MvcG9wdXAtZGlhbG9nJyksXG4gICAgICAgIHNjcm9sbFRvID0gcmVxdWlyZSgnLi4vdXRpbHMvc2Nyb2xsLXRvJyksXG4gICAgICAgIHJlc3BvbnNpdmVUYWJsZXMgPSByZXF1aXJlKCcuL2Z1bmNzL3Jlc3BvbnNpdmUtdGFibGVzJyksXG4gICAgICAgIGN5Y2xpY1BvcHVwID0gcmVxdWlyZSgnLi9mdW5jcy9jeWNsaWMtcG9wdXAnKSxcbiAgICAgICAgbGlua0ZpbmRlciA9IHJlcXVpcmUoJy4vZnVuY3MvbGluay1maW5kZXInKSxcbiAgICAgICAgcmVzZWFyY2hQdWJzID0gcmVxdWlyZSgnLi9mdW5jcy9yZXNlYXJjaC1wdWJsaWNhdGlvbnMnKTtcbiAgICAgICAgYWNjb3JkaW9uMjAyNCA9IHJlcXVpcmUoJy4vZnVuY3MvYWNjb3JkaW9uLTIwMjQnKTtcbiAgICAvKipcbiAgICAgKiBUaGUgbWFpbiBDSVRZIHdyYXBwZXIgb2JqZWN0XG4gICAgICogQHZlcnNpb24gJFJldmlzaW9uOiA2MjkxICQgKCREYXRlOiAyMDEyLTA5LTA1IDE2OjA2OjMwICswMTAwIChXZWQsIDA1IFNlcCAyMDEyKSAkKVxuICAgICAqIEBhdXRob3IgQ2l0eSBXZWIgVGVhbVxuICAgICAqL1xuICAgIHZhciBDSVRZID0gKGZ1bmN0aW9uKHcpIHtcbiAgICAgICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgb2JqZWN0IHRvIGhvbGQgYWxsIGxvYWRhYmxlIHNjcmlwdHMsIGFkZCBhbiBvYmplY3QgaGVyZSB0byBhbGxvdyBpdCdzIGxvYWRpbmcgaW4gYSBwYWdlXG4gICAgICAgICAqXG4gICAgICAgICAqIEVhY2ggY2hpbGQgb2JqZWN0IGhhcyB0aHJlZSBwcm9wZXJ0aWVzOlxuICAgICAgICAgKiAgIGRlc2NyaXB0aW9uOiBhIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBzY3JpcHRcbiAgICAgICAgICogICAgICAgICAgIHNyYzogdGhlIGZpbGVuYW1lIG9mIHRoZSBzY3JpcHRcbiAgICAgICAgICogICAgICAgW2FzeW5jXTogV2hldGhlciB0byBsb2FkIHRoZSBzY3JpcHQgYXN5bmNocm9ub3VzbHkgKGFzc3VtZWQgZmFsc2UgdW5sZXNzIGdpdmVuKVxuICAgICAgICAgKlxuICAgICAgICAgKiBAdmFyIE9iamVjdFxuICAgICAgICAgKi9cbiAgICAgICAgdmFyIHNjcmlwdHMgPSB7XG4gICAgICAgICAgICAgICAgZ29vZ2xlTWFwc0FwaToge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ2dvb2dsZSBtYXBzIGFwaScsXG4gICAgICAgICAgICAgICAgICAgIHNyYzpcbiAgICAgICAgICAgICAgICAgICAgICAgICdodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvanM/a2V5PUFJemFTeUJ2ZzZyMXgyWlJLUEFzY2VWYUtQbGc2dE8yMFFpQkRwbyZzZW5zb3I9ZmFsc2UnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmxvd3BsYXllcjoge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ2luY2x1ZGUgZmxvd3BsYXllciBmb3IgcGFnZXMgd2l0aCB2aWRlb3MnLFxuICAgICAgICAgICAgICAgICAgICBzcmM6ICdsaWIvZmxvd3BsYXllci9mbG93cGxheWVyLTMuMi40Lm1pbi5qcycsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmbG93cGxheWVyRW1iZWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdFbWJlZCBjb2RlIGZvciBmbG93cGxheWVyJyxcbiAgICAgICAgICAgICAgICAgICAgc3JjOiAnbGliL2Zsb3dwbGF5ZXIvZmxvd3BsYXllci5lbWJlZC0zLjAuMy5taW4uanMnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3dmb2JqZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnc3dmb2JqZWN0IGZvciB5b3V0dWJlIHZpZGVvKHMpJyxcbiAgICAgICAgICAgICAgICAgICAgc3JjOiAnbGliL3N3Zm9iamVjdC9zd2ZvYmplY3QuanMnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaGlnaGNoYXJ0czoge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0pRdWVyeSBjaGFydGluZyBwbHVnaW4nLFxuICAgICAgICAgICAgICAgICAgICBzcmM6ICdsaWIvanF1ZXJ5L3BsdWdpbnMvaGlnaGNoYXJ0cy9oaWdoY2hhcnRzLTQtMS00LmpzJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGpWZWN0b3JNYXA6IHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdqUXVlcnkgcGx1Z2luIGZvciBTVkcgd29ybGQgbWFwJyxcbiAgICAgICAgICAgICAgICAgICAgc3JjOlxuICAgICAgICAgICAgICAgICAgICAgICAgJ2xpYi9qcXVlcnkvcGx1Z2lucy92ZWN0b3ItbWFwL2pxdWVyeS52ZWN0b3ItbWFwLm1pbi5qcycsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB3b3JsZE1hcDoge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ21hcCBzdmcnLFxuICAgICAgICAgICAgICAgICAgICBzcmM6ICdsaWIvanF1ZXJ5L3BsdWdpbnMvdmVjdG9yLW1hcC93b3JsZC1lbi5qcycsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBidWlsZGluZ1RoZVZpc2lvbjoge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ2J1aWxkaW5nIHRoZSB2aXNpb24gc3BlY2lmaWMgc2NyaXB0cycsXG4gICAgICAgICAgICAgICAgICAgIHNyYzogJ2J1aWxkaW5nVGhlVmlzaW9uLmpzJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGxpYnJhcnk6IHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdsaWJyYXJ5IHNpdGUgc2NyaXB0cycsXG4gICAgICAgICAgICAgICAgICAgIHNyYzogJ2xpYnJhcnkuanMnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbG9jYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdDb21wdXRlciBSb29tIHNpdGUgc2NyaXB0cycsXG4gICAgICAgICAgICAgICAgICAgIHNyYzogJ2xvY2F0aW9uLmpzJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgICAgICAgICAqIEdMT0JBTCBWQVJJQUJMRVNcbiAgICAgICAgICAgICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVGhlIGxvY2F0aW9uIG9mIGV4dGVybmFsIHNjcmlwdHMgKHdpdGggdHJhaWxpbmcgc2xhc2gpXG4gICAgICAgICAgICAgKiBAdmFyIFN0cmluZ1xuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBnZXRHaXRCcmlkZ2VQYXRoID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgc2NyaXB0IGVsZW1lbnRcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U2NyaXB0UGF0aCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7XG5cbiAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIHNvdXJjZSBvZiB0aGUgc2NyaXB0IGZpbGVcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U2NyaXB0U3JjID0gY3VycmVudFNjcmlwdFBhdGggPyBjdXJyZW50U2NyaXB0UGF0aC5zcmMgOiBudWxsO1xuICAgICAgICAgICAgICAgIC8vIHJlZ2V4IHRvIGV4dHJhY3QgcGF0aCBiZXR3ZWVuIFwiZ2l0X2JyaWRnZVwiIGFuZCBcImpzXCJcbiAgICAgICAgICAgICAgICBjb25zdCBtYXRjaEdpdEJyaWRnZVBhdGggPSBzdHIubWF0Y2goL2dpdF9icmlkZ2VcXC8oLio/KVxcL2pzLyk7IFxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaEdpdEJyaWRnZVBhdGggJiYgbWF0Y2hHaXRCcmlkZ2VQYXRoWzFdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRyYWN0ZWRHaXRCcmlkZ2VQYXRoID0gbWF0Y2hbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXh0cmFjdGVkR2l0QnJpZGdlUGF0aDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnMDAwNC84NDE0MDVjL21haW4nO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuXG5cbiAgICAgICAgICAgIHNyY1ByZWZpeCA9XG4gICAgICAgICAgICAgICAgJ2h0dHBzOi8vJyArXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWUucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgJ2NpdHlzcG9ydC5vcmcudWsnLFxuICAgICAgICAgICAgICAgICAgICAnY2l0eS5hYy51aydcbiAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAnL19fZGF0YS9hc3NldHMvZ2l0X2JyaWRnZS8wMDA0Lzg0MTQwNWMvbWFpbi9qcy8nLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgdmVyc2lvbiBudW1iZXIgdG8gcHJlcGVuZCB0byB0aGUgZmlsZSBuYW1lLCBzZXQgaW4gcGFnZVxuICAgICAgICAgICAgICogQHZhciBTdHJpbmdcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmVyc2lvbiA9IHcuY2l0eVZlcnNpb24gfHwgJzEyMzQ1Njc4OS4nLFxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBMYXp5bG9hZCBmdW5jdGlvbiwgaW5qZWN0cyBhIDxzY3JpcHQ+IGVsZW1lbnQgaW50byB0aGUgcGFnZSBoZWFkXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogbm93IHByb3hpZXMgdG8geWVwbm9wZVxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBqc0hhbmRsZTogVGhlIE9iamVjdCBmcm9tIENJVFkuc2NyaXB0cyB0byBsb2FkXG4gICAgICAgICAgICAgKiBAcGFyYW0ge1N0cmluZ30gY2FsbGJhY2s6IFRoZSBuYW1lIG9mIHRoZSBjYWxsYmFjayB0byBiZSBleGVjdXRlZCBhZnRlciB0aGlzIHNjcmlwdCBoYXMgbG9hZGVkXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGxvYWQgPSBmdW5jdGlvbihqc0hhbmRsZSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAvL3dvcmsgb3V0IGZ1bGwgcGF0aFxuICAgICAgICAgICAgICAgIHZhciBwYXRoID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2NyaXB0ID0gc2NyaXB0c1tqc0hhbmRsZV07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKC9eaHR0cHM/OlxcL1xcLy8udGVzdChzY3JpcHQuc3JjKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNjcmlwdC5zcmM7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjUHJlZml4ICtcbiAgICAgICAgICAgICAgICAgICAgICAgICgvcGx1Z2luc3xsaWIvLnRlc3Qoc2NyaXB0LnNyYykgPyAnJyA6ICdtb2R1bGVzLycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcmlwdC5zcmNcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KSgpO1xuXG4gICAgICAgICAgICAgICAgeWVwbm9wZSh7XG4gICAgICAgICAgICAgICAgICAgIGxvYWQ6IHBhdGgsXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZXRWZXJzaW9uID0gZnVuY3Rpb24odikge1xuICAgICAgICAgICAgICAgIHZlcnNpb24gPSB2O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgICAgICAgICAqIFVTRUZVTCBHTE9CQUwgRlVOQ1RJT05TXG4gICAgICAgICAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFN0dWZmIG5lZWRlZCBvbiBldmVyeXBhZ2UgLSBleHBsb3JlIGNpdHksIGxvZ2luIGV0Yy5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgaW5pdFBhZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgbG9jIGlzICR7Z2V0R2l0QnJpZGdlUGF0aCgpfWApO1xuICAgICAgICAgICAgICAgIHZhciAkYm9keSA9ICQoJ2JvZHknKSxcbiAgICAgICAgICAgICAgICAgICAgYm9keUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5JyksIC8vVmFuaWxsYSBKUyByZWZlcmVuY2UgdG8gdGhlIGJvZHkgdGFnXG4gICAgICAgICAgICAgICAgICAgICRmb3JtID0gJGJvZHkuZmluZCgnI3NlYXJjaCwgI2hlYWRlcl9fc2VhcmNoX19mb3JtJyksXG4gICAgICAgICAgICAgICAgICAgICRzZWFyY2hGb3JtID0gJGJvZHkuZmluZChcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiLnNlYXJjaC1mb3JtW2RhdGEtYXV0b2NvbXBsZXRlLXN0YXR1cyE9J29mZiddXCJcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgJHNlYXJjaEZvcm1RdWVyeSA9ICRzZWFyY2hGb3JtLmZpbmQoJy5zZWFyY2gtZm9ybV9fcXVlcnknKSxcbiAgICAgICAgICAgICAgICAgICAgJHF1ZXJ5ID0gJGZvcm0uZmluZCgnI3F1ZXJ5JyksXG4gICAgICAgICAgICAgICAgICAgIGluZGV4Rm9ybSA9ICQoJyNmYi1xdWVyeWZvcm0nKSxcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhRdWVyeSA9ICQoJyNzZWFyY2gtcXVlcnknLCBpbmRleEZvcm0pLFxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hQYWdlQXV0b0NvbXBsZXRlQ29sbGVjdGlvbiA9XG4gICAgICAgICAgICAgICAgICAgICAgICAkYm9keS5hdHRyKCdpZCcpID09PSAnaW50cmFuZXQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnc3RhZmYtaW50cmFuZXQtbWF0cml4J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ21haW4tYWxsJyxcbiAgICAgICAgICAgICAgICAgICAgJGdhbGxlcmllcyA9ICQoJyNjb250ZW50JykuZmluZCgnLmdhbGxlcnknKSxcbiAgICAgICAgICAgICAgICAgICAgYXpMaXN0aW5ncyA9ICQoJy5hei1zaW5nbGUtcGFnZScpLFxuICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGVDb2xsZWN0aW9uID0gJHNlYXJjaEZvcm0uYXR0cihcbiAgICAgICAgICAgICAgICAgICAgICAgICdkYXRhLWNvbGxlY3Rpb24nXG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIC8vIG5hdmlnYXRpb25cblxuICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeU5hdiA9ICQoJyNwcmltYXJ5LW5hdicpLFxuICAgICAgICAgICAgICAgICAgICAkc2Vjb25kYXJ5TmF2ID0gJCgnI3NlY29uZGFyeS1uYXYnKSxcbiAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdkxpcyA9ICQoJyNzZWNvbmRhcnktbmF2ID4gbGknKSxcbiAgICAgICAgICAgICAgICAgICAgJGNhcm91c2VsT2JqID0gJCgnI3Byb21vLWFyZWEnKSwgLy9jYXJvdXNlbCBjb250YWluZXJcbiAgICAgICAgICAgICAgICAgICAgLy8gVUkgZWxlbWVudHNcbiAgICAgICAgICAgICAgICAgICAgJGFjY29yZGlvbnMgPSAkYm9keS5maW5kKCcuYWNjb3JkaW9uJyksXG4gICAgICAgICAgICAgICAgICAgICRyZXNwb25zaXZlVGFicyA9ICRib2R5LmZpbmQoJy5yZXNwb25zaXZlLXRhYnMnKSxcbiAgICAgICAgICAgICAgICAgICAgLy8gbWlzYy5cbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFVybCA9ICRwcmltYXJ5TmF2LmRhdGEoJ3VybCcpIHx8ICcnLFxuICAgICAgICAgICAgICAgICAgICBtb2RpZnlTZWNOYXYgPSBjdXJyZW50VXJsLmluZGV4T2YoJy9teS1jb3VudHJ5LycpIDwgMDtcblxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvL2VuZCBpbml0UGFnZSB2YXJzXG5cbiAgICAgICAgICAgICAgICAvLyBzdmcgZmFsbGJhY2tcbiAgICAgICAgICAgICAgICBpZiAoIU1vZGVybml6ci5zdmcpIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnI2hlYWRlcl9fbG9nbyBpbWcnKS5hdHRyKCdzcmMnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkKHRoaXMpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3NyYycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoJy5zdmcnLCAnLnBuZycpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBoZWFkZXJQcmltYXJ5TmF2KCk7XG4gICAgICAgICAgICAgICAgaGVhZGVyTmF2cygpO1xuICAgICAgICAgICAgICAgIGZvb3RlcigpO1xuICAgICAgICAgICAgICAgICRyZXNwb25zaXZlVGFicy5hY2NvcmRpb25UYWJzKCk7XG4gICAgICAgICAgICAgICAgaW5pdERyb3Bkb3ducygpO1xuICAgICAgICAgICAgICAgIGluaXRBekxpc3RpbmcoYXpMaXN0aW5ncyk7XG4gICAgICAgICAgICAgICAgaW1hZ2VBY2NvcmRpb24oKTtcbiAgICAgICAgICAgICAgICBpbml0U2VlTW9yZSgpO1xuICAgICAgICAgICAgICAgIGluaXRXaGl0ZUNhcmRzKCk7XG4gICAgICAgICAgICAgICAgaW5pdE5ld3NFdmVudHNTdHJpcCgpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZVNsaWRlcigkY2Fyb3VzZWxPYmopO1xuICAgICAgICAgICAgICAgIGluaXRQbGFjZWhvbGRlckhhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgaW5pdEltYWdlQ2Fyb3VzZWwoKTtcbiAgICAgICAgICAgICAgICBwb3B1cERpYWxvZygpO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNpdmVUYWJsZXMoKTtcbiAgICAgICAgICAgICAgICBjeWNsaWNQb3B1cCgpO1xuICAgICAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gd2FpdCBmb3IgdGhlIERPTSB0byBiZSBtb2RpZmllZCBiZWZvcmVcbiAgICAgICAgICAgICAgICAvLyB0cmF2ZXJzaW5nIGZvciBJbWFnZSBDcmVkaXRzXG4gICAgICAgICAgICAgICAgaW1hZ2VDcmVkaXRhdGlvbigpO1xuICAgICAgICAgICAgICAgIHJlc2VhcmNoUHVicygpO1xuICAgICAgICAgICAgICAgIGxpbmtGaW5kZXIoYm9keUVsZW1lbnQpO1xuXG4gICAgICAgICAgICAgICAgJGdhbGxlcmllcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGVHYWxsZXJ5KCQodGhpcykpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy9zb21lIGhlbHBlciBzdHVmZiB0byBzdHlsZSBwcmltYXJ5IG5hdmlnYXRpb25cblxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VXJsLmluZGV4T2YoJy8vd3d3LmNpdHkuYWMudWsvbmV3cycpID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdi5oaWRlKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtb2RpZnlTZWNOYXYpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkIHNlY29uZGFyeS1uYXYtc2libGluZ3MgdG8gc2Vjb25kYXJ5LW5hdiBvbmx5IGlmIHdlIGhhdmUgc29tZVxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCdvbCNzZWNvbmRhcnktbmF2ID4gbGk6bGFzdCA+IGEnKS5sZW5ndGggJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ29sI3NlY29uZGFyeS1uYXYtc2libGluZ3MnKS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGUgbGluayB0byB0aGlzIHBhZ2UgaXNuJ3QgaW4gc2Vjb25kYXJ5LW5hdi1zaWJsaW5ncywganVzdCBhZGQgdGhlIHNpYmxpbmdzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnb2wjc2Vjb25kYXJ5LW5hdi1zaWJsaW5ncyBhJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhyZWY7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50b0FycmF5KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluZGV4T2YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCdvbCNzZWNvbmRhcnktbmF2ID4gbGk6bGFzdCA+IGEnKVswXS5ocmVmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgPT09IC0xXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCdvbCNzZWNvbmRhcnktbmF2JykuYXBwZW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCc8bGk+JykuaHRtbCgkKCdvbCNzZWNvbmRhcnktbmF2LXNpYmxpbmdzJykpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIHJlcGxhY2UgdGhlIHNlY29uZGFyeSBuYXYgY29tcGxldGVseVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ29sI3NlY29uZGFyeS1uYXYgPiBsaTpsYXN0JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmVtcHR5KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgkKCdvbCNzZWNvbmRhcnktbmF2LXNpYmxpbmdzJykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnb2wjcHJpbWFyeS1uYXYgbGksIG9sI3NlY29uZGFyeS1uYXYgbGknKS5yZW1vdmVDbGFzcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICdzZWxlY3RlZCdcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgJChcbiAgICAgICAgICAgICAgICAgICAgICAgICdvbCNwcmltYXJ5LW5hdiBhW2hyZWY9XCInICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50VXJsICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCJdLCBvbCNzZWNvbmRhcnktbmF2IGFbaHJlZj1cIicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRVcmwgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcIl0nXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5wYXJlbnQoJ2xpJylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeU5hdi5maW5kKCcuY3VycmVudCcpLmxlbmd0aCA9PT0gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdi5maW5kKCcuc2VsZWN0ZWQnKS5sZW5ndGggPT09IDBcbiAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3dlIGFyZSBvbiB0aGUgaG9tZSBwYWdlIG9mIHRoZSBzZWN0aW9uIHNvIGhpZGUgc2Vjb25kYXJ5IG5hdiBhbmQgYWRkIGhlbHBlciBjbGFzc1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdi5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkcHJpbWFyeU5hdi5hZGRDbGFzcygndG9wLWxldmVsJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL2hpZGUgc2Vjb25kYXJ5IGxldmVsIGlmIGVtcHR5XG4gICAgICAgICAgICAgICAgICAgIGlmICgkc2Vjb25kYXJ5TmF2TGlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdi5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3NlY29uZGFyeSBuYXYgaXMgZGVmaW5pdGVseSBzaG93aW5nLCBhZGQgc29tZSBjbGFzc2VzIHRvIGhlbHAgc3R5bGluZ1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2lmIHdlIGhhdmUgc2Vjb25kYXJ5LW5hdi1zaWJsaW5ncyB0aGUgcHJldm91cyBsaSBlbGVtZW50IHdpbGwgYmUgdGhlIHBhcmVudCBmcm9tIG9uZSBsZXZlbCB1cFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZS5nLiBodHRwOi8vd3d3LmNpdHkuYWMudWsvYXJ0cy1zb2NpYWwtc2NpZW5jZXMvam91cm5hbGlzbS9zdHVkZW50LXdvcmsvY2l0eS1qb3VybmFsaXNtLXN0dWRlbnQtYnlsaW5lcy9qYW51YXJ5LTIwMTIvdGVzdC1sZXZlbFxuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI3NlY29uZGFyeS1uYXYtc2libGluZ3MnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5wYXJlbnQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5wcmV2KCdsaScpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFkZENsYXNzKCdlbmQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2hlbiB0aGUgY3VycmVudCBwYWdlIGlzIHBhcnQgb2YgdGhlIGJyZWFkY3J1bWIgaXRzIHByZXZpb3VzIHNpYmxpbmcgcmVndWlyZXMgYSBjbGFzcyBvZiBcInNlbGVjdGVkLWpvaW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2Ugb25seSB3YW50IHRoaXMgdG8gaGFwcGVuIG9uIGRpcmVjdCBjaGlsZHJlbiBvZiAkc2Vjb25kYXJ5TmF2XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlLmcgaHR0cDovL3d3dy5jaXR5LmFjLnVrL2FydHMtc29jaWFsLXNjaWVuY2VzL2pvdXJuYWxpc20vc3R1ZGVudC13b3JrL2NpdHktam91cm5hbGlzbS1zdHVkZW50LWJ5bGluZXMvamFudWFyeS0yMDEyXG4gICAgICAgICAgICAgICAgICAgICAgICAkc2Vjb25kYXJ5TmF2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJz4gbGkuc2VsZWN0ZWQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5wcmV2KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoJ3NlbGVjdGVkLWpvaW4nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRzZWNvbmRhcnlOYXYuZmluZCgnLnNlbGVjdGVkJykubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9hZGQgYSBjbGFzcyBvZiBcIi5wYXJlbnRcIiB0byBhY3RpdmUgZWxlbWVudCBpbiBwcmltYXJ5IG5hdiBzbyB3ZSBjYW4gdW4tYm9sZCBpdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwcmltYXJ5TmF2LmZpbmQoJy5jdXJyZW50JykuYWRkQ2xhc3MoJ3BhcmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmKCRhY2NvcmRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gaW5pdGFsaXNlIGFueSBhY2NvcmRpb25zIGZvdW5kXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oJGFjY29yZGlvbnMpLmZvckVhY2goIGFjY29yZGlvbiA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY2NvcmRpb24uY2hpbGRyZW4ubGVuZ3RoICYmIGFjY29yZGlvbjIwMjQoYWNjb3JkaW9uKVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL3NldCB1cCBhdXRvY29tcGxldGUgb24gc2VhcmNoIGJveFxuICAgICAgICAgICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZShcbiAgICAgICAgICAgICAgICAgICAgJGZvcm0sXG4gICAgICAgICAgICAgICAgICAgICRxdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoUGFnZUF1dG9Db21wbGV0ZUNvbGxlY3Rpb25cbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgLy9zZXQgdXAgYXV0b2NvbXBsZXRlIG9uIHNlYXJjaCBib3ggb24gbWFpbiBzZWFyY2ggcGFnZVxuICAgICAgICAgICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZShcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhGb3JtLFxuICAgICAgICAgICAgICAgICAgICBpbmRleFF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hQYWdlQXV0b0NvbXBsZXRlQ29sbGVjdGlvblxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAvL3NldCB1cCBhdXRvY29tcGxldGUgb24gc2VhcmNoIGJveCBvbiBpbnRyYW5ldCBtYWluIHNlYXJjaCBwYWdlXG4gICAgICAgICAgICAgICAgc2VhcmNoQXV0b0NvbXBsZXRlKFxuICAgICAgICAgICAgICAgICAgICAkc2VhcmNoRm9ybSxcbiAgICAgICAgICAgICAgICAgICAgJHNlYXJjaEZvcm1RdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbXBsZXRlQ29sbGVjdGlvblxuICAgICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgICAvLyBjYXRjaCBhbnkgdmlkZW9zIHRoYXQgaGF2ZSBiZWVuIG1hbnVhbGx5IGlucHV0XG4gICAgICAgICAgICAgICAgJChcImlmcmFtZVtzcmMqPSd5b3V0dWJlJ11cIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICRlbGVtZW50ID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZFdpZHRoID0gJGVsZW1lbnQub3V0ZXJXaWR0aCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHBhcmVudCA9ICRlbGVtZW50LnBhcmVudCgpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGRvbid0IGRvdWJsZSB3cmFwIGFuIGlmcmFtZVxuICAgICAgICAgICAgICAgICAgICBpZiAoISRwYXJlbnQuaGFzQ2xhc3MoJ2VtYmVkLWNvbnRhaW5lcicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBmb3IgZWxhc3RpYyBvYmplY3RzLCB3ZSBuZWVkIDIgKCEpIHdyYXBwZXJzXG4gICAgICAgICAgICAgICAgICAgICAgICAkZWxlbWVudC53cmFwKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZW1iZWQtd3JhcHBlclwiIHN0eWxlPVwid2lkdGg6JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZFdpZHRoICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3B4XCI+PGRpdiBjbGFzcz1cImVtYmVkLWNvbnRhaW5lclwiPjwvZGl2PjwvZGl2PidcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGluaXREeW5hbWljR21hcCgkKCcjZHluYW1pYy1nbWFwJykpO1xuXG4gICAgICAgICAgICAgICAgLy8gaGlkZS9zaG93IGZ1bmN0aW9uYWxpdHkgZm9yIHVuaXQgbGlzdHMgKGV4YW1wbGUgb24gc3ViamVjdCBhcmVhIHBhZ2VzKVxuICAgICAgICAgICAgICAgICQoJy51bml0LWxpc3RzIC51bml0LWxpc3RzLXRpdGxlJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcylcbiAgICAgICAgICAgICAgICAgICAgICAgIC5wYXJlbnRzKCcudW5pdC1saXN0cycpXG4gICAgICAgICAgICAgICAgICAgICAgICAudG9nZ2xlQ2xhc3MoJ3VuaXQtbGlzdHMtZXhwYW5kZWQnKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vaGlkZS9zaG93IG90aGVyIGFtb3VudCBhbmQgcGFzcyB0aGUgY29ycmVjdCB2YWx1ZSBvbiBDaXR5IEZ1dHVyZSBGdW5kIHBhZ2VcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICQoJyNmdXR1cmUtZnVuZC1mb3JtcycpLmxlbmd0aCA9PT0gMSB8fFxuICAgICAgICAgICAgICAgICAgICAkKCcjcmFjaW5nLWZvcm0nKS5sZW5ndGggPT09IDFcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgJCgnI2NmZi1yZWd1bGFyLWRvbmF0aW9uIGlucHV0W3R5cGU9cmFkaW9dJykuY2xpY2soXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50RWxlbWVudCA9ICQodGhpcykucGFyZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLmRvbmF0ZS1hcHBlYWwnKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRFbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuZmluZCgnLmRvbmF0aW9uLW90aGVyLW9wdGlvbicpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuaXMoJzpjaGVja2VkJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJy5kb25hdGlvbi1vdGhlci1hbW91bnQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNob3coKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJ2lucHV0JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCduYW1lJywgJ3JlZ3VsYXJfYW1vdW50Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJy5kb25hdGlvbi1vdGhlci1hbW91bnQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmhpZGUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJ2lucHV0JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5hdHRyKCduYW1lJywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigndmFsdWUnLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAkKCcjY2ZmLXNpbmdsZS1kb25hdGlvbiBpbnB1dFt0eXBlPXJhZGlvXScpLmNsaWNrKFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudEVsZW1lbnQgPSAkKHRoaXMpLnBhcmVudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoJy5kb25hdGlvbi1vdGhlci1vcHRpb24nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmlzKCc6Y2hlY2tlZCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKCcuZG9uYXRpb24tb3RoZXItYW1vdW50JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5zaG93KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKCdpbnB1dCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignbmFtZScsICd0ZmFfQW1vdW50eW91d2lzaHRvZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKCcuZG9uYXRpb24tb3RoZXItYW1vdW50JylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5oaWRlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maW5kKCdpbnB1dCcpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuYXR0cignbmFtZScsICcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ3ZhbHVlJywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAkKCcubWVkaWEtcmliYm9uIC5lbWJlZC1jb250YWluZXInKS52aWRlb1ByZXZpZXcoe1xuICAgICAgICAgICAgICAgICAgICBzaG93SW5mbzogMCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAkKCcud2lkZ2V0LWNvbnRlbnQgLmVtYmVkLWNvbnRhaW5lcicpLnZpZGVvUHJldmlldygpO1xuICAgICAgICAgICAgICAgICQoJy5pbnRlcm5hdGlvbmFsLWxvbmRvbiAuZW1iZWQtY29udGFpbmVyJykudmlkZW9QcmV2aWV3KCk7XG4gICAgICAgICAgICAgICAgJCgnLnNvY2lhbC13YWxsIC5lbWJlZC1jb250YWluZXInKS52aWRlb1ByZXZpZXcoKTtcbiAgICAgICAgICAgICAgICAkKFxuICAgICAgICAgICAgICAgICAgICAnLmVtYmVkLWNvbnRhaW5lci5lbWJlZC1jb250YWluZXItLWRlZmF1bHQteXQtcHJldmlldydcbiAgICAgICAgICAgICAgICApLnZpZGVvUHJldmlldygpO1xuICAgICAgICAgICAgfSwgLy9lbmQgaW5pdFBhZ2VcbiAgICAgICAgICAgIG9iamVjdFNpemUgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2l6ZSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIGtleTtcblxuICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpemUgKz0gMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiBzaXplO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogRmluZHMgYW55IHZpZCBpbWFnZXMgb24gYSBwYWdlIGFuZCByZXBsYWNlcyB0aGVtIHdpdGggZWl0aGVyIGEgWW91VHViZSBpZnJhbWUgb3IgU1dGT2JqZWN0IGZvciBGTVMgdmlkc1xuICAgICAgICAgICAgICogQHJldHVybjogVW5kZWZpbmVkXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHZpZGVvcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciAkeW91dHViZVZpZHMgPSAkKCdpbWcueW91dHViZScpLFxuICAgICAgICAgICAgICAgICAgICAkZm1zVmlkcyA9ICQoJ2ltZy5mbXMnKSxcbiAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgICogUmVwbGFjZXMgYW4gaW1hZ2UgZWxlbWVudCB3aXRoIFlvdVR1YmUgaUZyYW1lXG4gICAgICAgICAgICAgICAgICAgICAqIEBwYXJhbToge09iamVjdH0gOiAkZWwgLSBqUXVlcnkgb2JqZWN0IGZvciB5b3VUdWJlIGltYWdlcyB0byBiZSByZXBsYWNlZFxuICAgICAgICAgICAgICAgICAgICAgKiBAcmV0dW46IHtVbmRlZmluZWR9XG4gICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICBlbWJlZFlvdXR1YmUgPSBmdW5jdGlvbigkeW91dHViZVZpZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR5b3V0dWJlVmlkcy5lYWNoKGZ1bmN0aW9uKGksIGVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRlbCA9ICQoZWwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRXaWR0aCA9IDUwMCwgLy8gZGVmYXVsdCB3aWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQgPSAzMjAsIC8vIGRlZmF1bHQgaGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvSUQgPSAkZWwuYXR0cignaWQnKS5yZXBsYWNlKCd2aWRfJywgJycpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsLnJlcGxhY2VXaXRoKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImVtYmVkLXdyYXBwZXJcIj48ZGl2IGNsYXNzPVwiZW1iZWQtY29udGFpbmVyXCI+PGlmcmFtZSBoZWlnaHQ9JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyB3aWR0aD0gJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRXaWR0aCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIHNyYz1cIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkLycgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9JRCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIj9yZWw9MCZ3bW9kZT10cmFuc3BhcmVudFxcXCIgZnJhbWVib3JkZXI9JzAnIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT48L2Rpdj48L2Rpdj5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgICogUmVwbGFjZXMgYW4gaW1hZ2UgZWxlbWVudCB3aXRoIFNXRiBPYmplY3RcbiAgICAgICAgICAgICAgICAgICAgICogQHBhcmFtOiB7T2JqZWN0fSA6ICRlbCAtIGpRdWVyeSBvYmplY3QgZm9yIGFsbCBmbXMgaW1hZ2VzIHRvIGJlIHJlcGxhY2VkXG4gICAgICAgICAgICAgICAgICAgICAqIEByZXR1bjoge1VuZGVmaW5lZH1cbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGVtYmVkRm1zID0gZnVuY3Rpb24oJGZtc1ZpZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzcGxhc2hJbWFnZXMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Fzc1N0YW5kYXJkOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLy9zMS5jaXR5LmFjLnVrL2kvZmxvd3BsYXllci1jYXNzLmpwZz92PTgxMDUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc3NSZXRpbmE6ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdHlTdGFuZGFyZDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy8vczEuY2l0eS5hYy51ay9pL2Zsb3dwbGF5ZXItY2l0eS5qcGc/dj04MTA1JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaXR5UmVudGluYTogJycsXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAkZm1zVmlkcy5lYWNoKGZ1bmN0aW9uKGksIGVsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRlbCA9ICQoZWwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRXaWR0aCA9IDY4NywgLy9kZWZhdWx0IHdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZEhlaWdodCA9IDQxOSwgLy8gZGVmYXVsdCBoZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxJZCA9ICRlbC5hdHRyKCdpZCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRJZCA9IGVsSWQucmVwbGFjZSgndmlkXycsICcnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc0luc3RhbGwgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy8vczEuY2l0eS5hYy51ay9qcy9zd2ZvYmplY3QvZXhwcmVzc0luc3RhbGwuc3dmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhc2h0YXJnZXR2ZXJzaW9uID0gJzkuMC4yOCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXNodmFycyA9IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93U2NyaXB0QWNjZXNzOiAnYWx3YXlzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93ZnVsbHNjcmVlbjogJ3RydWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd21vZGU6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3ZpZHBsYXllcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogdmlkSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwbGFzaEltYWdlID0gQ0lUWS5pc0Nhc3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gc3BsYXNoSW1hZ2VzLmNhc3NTdGFuZGFyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBzcGxhc2hJbWFnZXMuY2l0eVN0YW5kYXJkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2ZDYWxsQmFjayA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoZS5yZWYpLndyYXAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJlbWJlZC13cmFwcGVyXCIgc3R5bGU9XCJ3aWR0aDonICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkV2lkdGggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHhcIj48ZGl2IGNsYXNzPVwiZW1iZWQtY29udGFpbmVyXCI+PC9kaXY+PC9kaXY+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgdmlkZW8gaXMgaW5jbHVkZWQgaW4gdGhlIGNvdXJzZSBkZXNjcmlwdGlvbiBkaXYgb2YgYSBjb3Vyc2UgTiBwYWdlLCB3aWR0aCBuZWVkcyB0byBiZSA0MTlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlbC5wYXJlbnRzKCcuY291cnNlLWRlc2NyaXB0aW9uJykubGVuZ3RoICE9PSAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZFdpZHRoID0gNDE5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vdmlkcyBoYXZlIGRpZmZlcmVudCBzaXplcyBkZXBlbmRpbmcgb24gdGhlIHNpemUgb2YgdGhlIGNvbnRlbnQgZGl2IGFuZCBpZiB0aGV5IGFyZSB3aWRlc2NyZWVuIG9uIHNxdWFyZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZWwuaGFzQ2xhc3MoJ3dpZGVzY3JlZW4nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQgPSB2aWRXaWR0aCAqIDAuNjE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkV2lkdGggPSA1MDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZEhlaWdodCA9IDMyMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFzd2ZvYmplY3QuaGFzRmxhc2hQbGF5ZXJWZXJzaW9uKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhc2h0YXJnZXR2ZXJzaW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9leHBsYWluIHdoeSB0aGVyZSBpcyBubyB2aWRlb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZWwuYWZ0ZXIoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJub3RpY2UtbWVzc2FnZVwiPjxpIGNsYXNzPVwiZmEgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGVcIiBzdHlsZT1cImNvbG9yIDogI0NDQ0MwMFwiPjwvaT4gWW91IG5lZWQgdG8gaGF2ZSBmbGFzaCBwbGF5ZXIgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhc2h0YXJnZXR2ZXJzaW9uICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIG9yIGdyZWF0ZXIgaW5zdGFsbGVkIHRvIHNlZSB0aGUgdmlkZW8uPC9wPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8cD48YSBocmVmPVwiaHR0cDovL2dldC5hZG9iZS5jb20vZmxhc2hwbGF5ZXIvXCI+R2V0IEZsYXNoIFBsYXllcjwvYT48L3A+J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uZmlnIGhhcyB0byBiZSBpbiBhIHN0cmluZyBhbmQga2V5IGFuZCB2YWx1ZXMgaGF2ZSB0byBiZSBcInF1b3RlZFwiIC0gbmlnaHRtYXJlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnN0cnVjdCBhbGwgdGhlIHZhcmlhYmxlcyB0byBwYXNzIHRvIHRoZSBwbGF5ZXIgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0cmllZCB0byBtYWtlIHRoaXMgYSBwcm9wZXIganNvbiBhcnJheSwgZGlkbid0IHdvcmsgOihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSUUgZG9lc24ndCBsaWtlIGRvdWJsZSBxdW90ZXMgaGVyZSBzbyBpZ25vcmUgSlNIaW50IGVycm9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXNodmFycyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInsnY2xpcCc6IHsncHJvdmlkZXInOiAncnRtcCd9LCAncGxheWxpc3QnOiBbeyd1cmwnOidcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGxhc2hJbWFnZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIicsICdhdXRvUGxheSc6IHRydWV9LCB7J3VybCc6ICdcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRJZC5yZXBsYWNlKCd2aWRfJywgJycpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiL0hpX2JhbmR3aWR0aCcsICdhdXRvUGxheSc6IGZhbHNlLCAnc2NhbGluZyc6ICdmaXQnfV0sICdwbHVnaW5zJzogeydydG1wJzogeyd1cmwnOiAnLy9zMS5jaXR5LmFjLnVrL2pzL2Zsb3dwbGF5ZXIvZmxvd3BsYXllci5ydG1wLTMuMi4zLnN3ZicsICduZXRDb25uZWN0aW9uVXJsJzogJ3J0bXA6Ly9tZWRpYS5jaXR5LmFjLnVrL2Zsb3dwbGF5ZXInLCAnb2JqZWN0RW5jb2RpbmcnOiAnMCcsICdwcm94eVR5cGUnOiAnbm9uZScgfSwgJ2NvbnRyb2xzJzogeyd1cmwnOiAnZmxvd3BsYXllci5jb250cm9scy5zd2YnfSB9IH1cIjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpbml0aWF0ZSB0aGUgcGxheWVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3Zm9iamVjdC5lbWJlZFNXRihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcvL3MxLmNpdHkuYWMudWsvanMvZmxvd3BsYXllci9mbG93cGxheWVyLTMuMi42LnN3ZicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkV2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnOS4wLjAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc0luc3RhbGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbmZpZzogZmxhc2h2YXJzIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3ZkNhbGxCYWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSAvL2VuZCBoYXMgZmxhc2ggaWZcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgaWYgKCR5b3V0dWJlVmlkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgZW1iZWRZb3V0dWJlKCR5b3V0dWJlVmlkcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgkZm1zVmlkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgeWVwbm9wZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2FkOiBzY3JpcHRzLnN3Zm9iamVjdC5zcmMsXG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW1iZWRGbXMoJGZtc1ZpZHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgLy8gZW5kIHZpZGVvc1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGlzIGlzIG91ciB5ZXBub3BlIGZpbHRlclxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIHNwbGljZXMgaW4gdGhlIHZlcnNpb24gc3RyaW5nIHdlIGhhdmUgc2V0IHVwIGluIHNldFZlcnNpb25cbiAgICAgICAgICAgICAqIHByZXBlbmRzIHRoZSBjb3JyZWN0IHMxIGRvbWFpbiwgd2hlcmUgaXQgaGFzbid0IGJlZW4gcHJvdmlkZWRcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBOLkIuIHdpbGwgZmFpbCBpZiB3ZSBoYXZlIGFuIHMxIHRvcCBsZXZlbCBmb2xkZXIgY29udGFpbmluZ1xuICAgICAgICAgICAgICogZG90cyAoc2VlIGNvbW1lbnQgYmVsb3cpXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICB5ZXBub3BlRmlsdGVyID0gZnVuY3Rpb24ocmVzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgbG9jLCBsYXN0SXRlbTtcblxuICAgICAgICAgICAgICAgIC8qIElmIHdlIGFyZSBsb2FkaW5nIGluIGFuIGFic29sdXRlIHVybCwgZG9uJ3QgdG91Y2ggaXRcbiAgICAgICAgICAgICAgICAgKiB0aGlzIGlzIHRoZSByZWdleCB3aGljaCBmYWlscyBvbiBhIHRvcCBsZXZlbCBmb2xkZXIgd2l0aCBkb3RzXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKiBtYXRjaGVzOlxuICAgICAgICAgICAgICAgICAqIGh0dHA6Ly93d3cuZXh0ZXJuYWwuY29tL3NjcmlwdHMvc2NyaXB0LmpzXG4gICAgICAgICAgICAgICAgICogd3d3LmV4dGVybmFsLmNvbS9zY3JpcHRzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAqIGFic29sdXRlLndpdGgubWFueS5zdWIuZG9tYWlucy5kb21haW4uY29tL3NjcmlwdHMvc2NyaXB0LmpzXG4gICAgICAgICAgICAgICAgICogaHR0cHM6Ly9hYnNvdWx0ZS53aXRoLm1hbnkuc3ViLmRvbWFpbnMuZG9tYWluLmNvbS9zY3JpcHRzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgICAgICogZG9lc24ndCBtYXRjaDpcbiAgICAgICAgICAgICAgICAgKiBtb2R1bGVzL3Rlc3QuanNcbiAgICAgICAgICAgICAgICAgKiBsaWIvc3ViZGlyL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAqIGxpYi9zdWJkaXIuMTIzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgICAgICogd2lsbCBtYXRjaCB3aGVuIHdlIGRvbid0IHdhbnQgdG86XG4gICAgICAgICAgICAgICAgICogdG9wbGV2ZWwud2l0aC5kb3RzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAqIGxpYi52Mi9qcXVlcnkvc2NyaXB0LmpzXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKiBJIHRoaW5rIGl0J3MgYW4gdW5saWtlbHkgaXNzdWUsIGJ1dCBpZiBhbnlvbmUgY2FuIHR3ZWFrIHRoZSByZWdleFxuICAgICAgICAgICAgICAgICAqIHRvIHByZXZlbnQgdGhpcyBwbGVhc2UgZG8uXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBpZiAoL14oaHR0cHM/OlxcL1xcLyk/KFteXFwvLl0rXFwuKStbXlxcL10rXFwvLy50ZXN0KHJlc291cmNlLnVybCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxvYyA9XG4gICAgICAgICAgICAgICAgICAgIC8vYWxyZWFkeSBjb250YWlucyBzMT8gLSBkb24ndCBhZGQgcHJlZml4XG4gICAgICAgICAgICAgICAgICAgIChzcmNQcmVmaXggKyByZXNvdXJjZS51cmwpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc3BsaXQgZm9yIHNwbGljaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3BsaXQoJy8nKTtcblxuICAgICAgICAgICAgICAgIHJlc291cmNlLnVybCA9IGxvYy5qb2luKCcvJyk7XG5cbiAgICAgICAgICAgICAgICAvLyBpZiBvbiBwcm9kIGFuZCB3ZSBhcmUgbG9hZGluZyBhIG1vZHVsZS8uanMgZmlsZVxuICAgICAgICAgICAgICAgIC8vIHdlIHdhbnQgLm1pbi5qcyByYXRoZXIgdGhhbiAuanNcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIC93d3dcXC5jaXR5Ly50ZXN0KHJlc291cmNlLnVybCkgJiZcbiAgICAgICAgICAgICAgICAgICAgIS9qc1xcL2xpYi8udGVzdChyZXNvdXJjZS51cmwpXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc291cmNlLnVybCA9IHJlc291cmNlLnVybC5yZXBsYWNlKC9qcyQvLCAnbWluLmpzJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSW5pdGlhbGlzYXRpb24gZnVuY3Rpb24sIGNhbGxlZCBpbW1lZGlhdGVseSBhZnRlciBDSVRZIGRlY2xhcmF0aW9uIGJlbG93XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZygnQ0lUWSByZWFkeSAod2UgYXJlIGluICcgKyBkb2N1bWVudC5jb21wYXRNb2RlICsgJyknKTtcblxuICAgICAgICAgICAgICAgIHllcG5vcGUuYWRkRmlsdGVyKHllcG5vcGVGaWx0ZXIpO1xuXG4gICAgICAgICAgICAgICAgaW5pdFBhZ2UoKTtcblxuICAgICAgICAgICAgICAgIC8vLy8gbGlicmFyeSBob21lIHBhZ2Ugb3BlbmluZyB0aW1lc1xuICAgICAgICAgICAgICAgIGlmICgkKCcjbGlicmFyeScpLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB5ZXBub3BlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQ6ICdtb2R1bGVzL2xpYnJhcnkvbGlicmFyeS1vcGVuaW5nLXRpbWVzLmpzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWJ1ZygnbG9hZGVkIGxpYnJhcnkgZGF0ZXBpY2tlcicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICBcbiAgICAgICAgICAgICAgICAvLyB0aGUgZm9sbG93aW5nIG5lZWRzIGRvbXJlYWR5XG4gICAgICAgICAgICAgICAgJChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc2V0IHVwIGFueSB2aWRlb3Mgb24gcGFnZVxuICAgICAgICAgICAgICAgICAgICB2aWRlb3MoKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBtb2JpbGUgYnJvd3NlciBjbGljayBkZWxheSBmaXhcbiAgICAgICAgICAgICAgICAgICAgLy9pbml0RmFzdENsaWNrdCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqICBUaGlzIGxpdGVyYWwgZGVmaW5lcyB3aGF0IG1ldGhvZHMgdG8gbWFrZSBwdWJsaWNseSBhY2Nlc3NpYmxlXG4gICAgICAgICAqICBvdXRzaXRlIENJVFlcbiAgICAgICAgICovXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpbml0OiBpbml0LFxuICAgICAgICAgICAgbG9hZDogbG9hZCxcbiAgICAgICAgICAgIGRlYnVnOiBkZWJ1ZyxcbiAgICAgICAgICAgIHNldFZlcnNpb246IHNldFZlcnNpb24sXG4gICAgICAgICAgICBzZWFyY2hBdXRvQ29tcGxldGU6IHNlYXJjaEF1dG9Db21wbGV0ZSxcbiAgICAgICAgICAgIG9iamVjdFNpemU6IG9iamVjdFNpemUsXG4gICAgICAgICAgICBnZXRXaW5kb3dXaWR0aDogZ2V0V2luZG93V2lkdGgsXG4gICAgICAgICAgICBjdXN0b21BSkFYOiBjdXN0b21BSkFYLFxuICAgICAgICAgICAgaW1hZ2VDcmVkaXRhdGlvbjogaW1hZ2VDcmVkaXRhdGlvbixcbiAgICAgICAgICAgIC8vdGhpcyB3aWxsIGJlIHVzZWZ1bCBpbiBtb2R1bGVzXG4gICAgICAgICAgICBzMVNlcnZlcjogc3JjUHJlZml4LFxuICAgICAgICB9O1xuICAgIH0pKHdpbmRvdyk7IC8vZW5kIENJVFlcblxuICAgIHdpbmRvdy5DSVRZID0gQ0lUWTtcblxuICAgIHJldHVybiBDSVRZO1xufSkoKTtcblxuXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qISBqUXVlcnkgdjEuOC4yIGpxdWVyeS5jb20gfCBqcXVlcnkub3JnL2xpY2Vuc2UgKi9cbihmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIEcoYSl7dmFyIGI9RlthXT17fTtyZXR1cm4gcC5lYWNoKGEuc3BsaXQocyksZnVuY3Rpb24oYSxjKXtiW2NdPSEwfSksYn1mdW5jdGlvbiBKKGEsYyxkKXtpZihkPT09YiYmYS5ub2RlVHlwZT09PTEpe3ZhciBlPVwiZGF0YS1cIitjLnJlcGxhY2UoSSxcIi0kMVwiKS50b0xvd2VyQ2FzZSgpO2Q9YS5nZXRBdHRyaWJ1dGUoZSk7aWYodHlwZW9mIGQ9PVwic3RyaW5nXCIpe3RyeXtkPWQ9PT1cInRydWVcIj8hMDpkPT09XCJmYWxzZVwiPyExOmQ9PT1cIm51bGxcIj9udWxsOitkK1wiXCI9PT1kPytkOkgudGVzdChkKT9wLnBhcnNlSlNPTihkKTpkfWNhdGNoKGYpe31wLmRhdGEoYSxjLGQpfWVsc2UgZD1ifXJldHVybiBkfWZ1bmN0aW9uIEsoYSl7dmFyIGI7Zm9yKGIgaW4gYSl7aWYoYj09PVwiZGF0YVwiJiZwLmlzRW1wdHlPYmplY3QoYVtiXSkpY29udGludWU7aWYoYiE9PVwidG9KU09OXCIpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gYmEoKXtyZXR1cm4hMX1mdW5jdGlvbiBiYigpe3JldHVybiEwfWZ1bmN0aW9uIGJoKGEpe3JldHVybiFhfHwhYS5wYXJlbnROb2RlfHxhLnBhcmVudE5vZGUubm9kZVR5cGU9PT0xMX1mdW5jdGlvbiBiaShhLGIpe2RvIGE9YVtiXTt3aGlsZShhJiZhLm5vZGVUeXBlIT09MSk7cmV0dXJuIGF9ZnVuY3Rpb24gYmooYSxiLGMpe2I9Ynx8MDtpZihwLmlzRnVuY3Rpb24oYikpcmV0dXJuIHAuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7dmFyIGU9ISFiLmNhbGwoYSxkLGEpO3JldHVybiBlPT09Y30pO2lmKGIubm9kZVR5cGUpcmV0dXJuIHAuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7cmV0dXJuIGE9PT1iPT09Y30pO2lmKHR5cGVvZiBiPT1cInN0cmluZ1wiKXt2YXIgZD1wLmdyZXAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYS5ub2RlVHlwZT09PTF9KTtpZihiZS50ZXN0KGIpKXJldHVybiBwLmZpbHRlcihiLGQsIWMpO2I9cC5maWx0ZXIoYixkKX1yZXR1cm4gcC5ncmVwKGEsZnVuY3Rpb24oYSxkKXtyZXR1cm4gcC5pbkFycmF5KGEsYik+PTA9PT1jfSl9ZnVuY3Rpb24gYmsoYSl7dmFyIGI9Ymwuc3BsaXQoXCJ8XCIpLGM9YS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7aWYoYy5jcmVhdGVFbGVtZW50KXdoaWxlKGIubGVuZ3RoKWMuY3JlYXRlRWxlbWVudChiLnBvcCgpKTtyZXR1cm4gY31mdW5jdGlvbiBiQyhhLGIpe3JldHVybiBhLmdldEVsZW1lbnRzQnlUYWdOYW1lKGIpWzBdfHxhLmFwcGVuZENoaWxkKGEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KGIpKX1mdW5jdGlvbiBiRChhLGIpe2lmKGIubm9kZVR5cGUhPT0xfHwhcC5oYXNEYXRhKGEpKXJldHVybjt2YXIgYyxkLGUsZj1wLl9kYXRhKGEpLGc9cC5fZGF0YShiLGYpLGg9Zi5ldmVudHM7aWYoaCl7ZGVsZXRlIGcuaGFuZGxlLGcuZXZlbnRzPXt9O2ZvcihjIGluIGgpZm9yKGQ9MCxlPWhbY10ubGVuZ3RoO2Q8ZTtkKyspcC5ldmVudC5hZGQoYixjLGhbY11bZF0pfWcuZGF0YSYmKGcuZGF0YT1wLmV4dGVuZCh7fSxnLmRhdGEpKX1mdW5jdGlvbiBiRShhLGIpe3ZhciBjO2lmKGIubm9kZVR5cGUhPT0xKXJldHVybjtiLmNsZWFyQXR0cmlidXRlcyYmYi5jbGVhckF0dHJpYnV0ZXMoKSxiLm1lcmdlQXR0cmlidXRlcyYmYi5tZXJnZUF0dHJpYnV0ZXMoYSksYz1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksYz09PVwib2JqZWN0XCI/KGIucGFyZW50Tm9kZSYmKGIub3V0ZXJIVE1MPWEub3V0ZXJIVE1MKSxwLnN1cHBvcnQuaHRtbDVDbG9uZSYmYS5pbm5lckhUTUwmJiFwLnRyaW0oYi5pbm5lckhUTUwpJiYoYi5pbm5lckhUTUw9YS5pbm5lckhUTUwpKTpjPT09XCJpbnB1dFwiJiZidi50ZXN0KGEudHlwZSk/KGIuZGVmYXVsdENoZWNrZWQ9Yi5jaGVja2VkPWEuY2hlY2tlZCxiLnZhbHVlIT09YS52YWx1ZSYmKGIudmFsdWU9YS52YWx1ZSkpOmM9PT1cIm9wdGlvblwiP2Iuc2VsZWN0ZWQ9YS5kZWZhdWx0U2VsZWN0ZWQ6Yz09PVwiaW5wdXRcInx8Yz09PVwidGV4dGFyZWFcIj9iLmRlZmF1bHRWYWx1ZT1hLmRlZmF1bHRWYWx1ZTpjPT09XCJzY3JpcHRcIiYmYi50ZXh0IT09YS50ZXh0JiYoYi50ZXh0PWEudGV4dCksYi5yZW1vdmVBdHRyaWJ1dGUocC5leHBhbmRvKX1mdW5jdGlvbiBiRihhKXtyZXR1cm4gdHlwZW9mIGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPVwidW5kZWZpbmVkXCI/YS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIik6dHlwZW9mIGEucXVlcnlTZWxlY3RvckFsbCE9XCJ1bmRlZmluZWRcIj9hLnF1ZXJ5U2VsZWN0b3JBbGwoXCIqXCIpOltdfWZ1bmN0aW9uIGJHKGEpe2J2LnRlc3QoYS50eXBlKSYmKGEuZGVmYXVsdENoZWNrZWQ9YS5jaGVja2VkKX1mdW5jdGlvbiBiWShhLGIpe2lmKGIgaW4gYSlyZXR1cm4gYjt2YXIgYz1iLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Iuc2xpY2UoMSksZD1iLGU9YlcubGVuZ3RoO3doaWxlKGUtLSl7Yj1iV1tlXStjO2lmKGIgaW4gYSlyZXR1cm4gYn1yZXR1cm4gZH1mdW5jdGlvbiBiWihhLGIpe3JldHVybiBhPWJ8fGEscC5jc3MoYSxcImRpc3BsYXlcIik9PT1cIm5vbmVcInx8IXAuY29udGFpbnMoYS5vd25lckRvY3VtZW50LGEpfWZ1bmN0aW9uIGIkKGEsYil7dmFyIGMsZCxlPVtdLGY9MCxnPWEubGVuZ3RoO2Zvcig7ZjxnO2YrKyl7Yz1hW2ZdO2lmKCFjLnN0eWxlKWNvbnRpbnVlO2VbZl09cC5fZGF0YShjLFwib2xkZGlzcGxheVwiKSxiPyghZVtmXSYmYy5zdHlsZS5kaXNwbGF5PT09XCJub25lXCImJihjLnN0eWxlLmRpc3BsYXk9XCJcIiksYy5zdHlsZS5kaXNwbGF5PT09XCJcIiYmYlooYykmJihlW2ZdPXAuX2RhdGEoYyxcIm9sZGRpc3BsYXlcIixjYyhjLm5vZGVOYW1lKSkpKTooZD1iSChjLFwiZGlzcGxheVwiKSwhZVtmXSYmZCE9PVwibm9uZVwiJiZwLl9kYXRhKGMsXCJvbGRkaXNwbGF5XCIsZCkpfWZvcihmPTA7ZjxnO2YrKyl7Yz1hW2ZdO2lmKCFjLnN0eWxlKWNvbnRpbnVlO2lmKCFifHxjLnN0eWxlLmRpc3BsYXk9PT1cIm5vbmVcInx8Yy5zdHlsZS5kaXNwbGF5PT09XCJcIiljLnN0eWxlLmRpc3BsYXk9Yj9lW2ZdfHxcIlwiOlwibm9uZVwifXJldHVybiBhfWZ1bmN0aW9uIGJfKGEsYixjKXt2YXIgZD1iUC5leGVjKGIpO3JldHVybiBkP01hdGgubWF4KDAsZFsxXS0oY3x8MCkpKyhkWzJdfHxcInB4XCIpOmJ9ZnVuY3Rpb24gY2EoYSxiLGMsZCl7dmFyIGU9Yz09PShkP1wiYm9yZGVyXCI6XCJjb250ZW50XCIpPzQ6Yj09PVwid2lkdGhcIj8xOjAsZj0wO2Zvcig7ZTw0O2UrPTIpYz09PVwibWFyZ2luXCImJihmKz1wLmNzcyhhLGMrYlZbZV0sITApKSxkPyhjPT09XCJjb250ZW50XCImJihmLT1wYXJzZUZsb2F0KGJIKGEsXCJwYWRkaW5nXCIrYlZbZV0pKXx8MCksYyE9PVwibWFyZ2luXCImJihmLT1wYXJzZUZsb2F0KGJIKGEsXCJib3JkZXJcIitiVltlXStcIldpZHRoXCIpKXx8MCkpOihmKz1wYXJzZUZsb2F0KGJIKGEsXCJwYWRkaW5nXCIrYlZbZV0pKXx8MCxjIT09XCJwYWRkaW5nXCImJihmKz1wYXJzZUZsb2F0KGJIKGEsXCJib3JkZXJcIitiVltlXStcIldpZHRoXCIpKXx8MCkpO3JldHVybiBmfWZ1bmN0aW9uIGNiKGEsYixjKXt2YXIgZD1iPT09XCJ3aWR0aFwiP2Eub2Zmc2V0V2lkdGg6YS5vZmZzZXRIZWlnaHQsZT0hMCxmPXAuc3VwcG9ydC5ib3hTaXppbmcmJnAuY3NzKGEsXCJib3hTaXppbmdcIik9PT1cImJvcmRlci1ib3hcIjtpZihkPD0wfHxkPT1udWxsKXtkPWJIKGEsYik7aWYoZDwwfHxkPT1udWxsKWQ9YS5zdHlsZVtiXTtpZihiUS50ZXN0KGQpKXJldHVybiBkO2U9ZiYmKHAuc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZXx8ZD09PWEuc3R5bGVbYl0pLGQ9cGFyc2VGbG9hdChkKXx8MH1yZXR1cm4gZCtjYShhLGIsY3x8KGY/XCJib3JkZXJcIjpcImNvbnRlbnRcIiksZSkrXCJweFwifWZ1bmN0aW9uIGNjKGEpe2lmKGJTW2FdKXJldHVybiBiU1thXTt2YXIgYj1wKFwiPFwiK2ErXCI+XCIpLmFwcGVuZFRvKGUuYm9keSksYz1iLmNzcyhcImRpc3BsYXlcIik7Yi5yZW1vdmUoKTtpZihjPT09XCJub25lXCJ8fGM9PT1cIlwiKXtiST1lLmJvZHkuYXBwZW5kQ2hpbGQoYkl8fHAuZXh0ZW5kKGUuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKSx7ZnJhbWVCb3JkZXI6MCx3aWR0aDowLGhlaWdodDowfSkpO2lmKCFiSnx8IWJJLmNyZWF0ZUVsZW1lbnQpYko9KGJJLmNvbnRlbnRXaW5kb3d8fGJJLmNvbnRlbnREb2N1bWVudCkuZG9jdW1lbnQsYkoud3JpdGUoXCI8IWRvY3R5cGUgaHRtbD48aHRtbD48Ym9keT5cIiksYkouY2xvc2UoKTtiPWJKLmJvZHkuYXBwZW5kQ2hpbGQoYkouY3JlYXRlRWxlbWVudChhKSksYz1iSChiLFwiZGlzcGxheVwiKSxlLmJvZHkucmVtb3ZlQ2hpbGQoYkkpfXJldHVybiBiU1thXT1jLGN9ZnVuY3Rpb24gY2koYSxiLGMsZCl7dmFyIGU7aWYocC5pc0FycmF5KGIpKXAuZWFjaChiLGZ1bmN0aW9uKGIsZSl7Y3x8Y2UudGVzdChhKT9kKGEsZSk6Y2koYStcIltcIisodHlwZW9mIGU9PVwib2JqZWN0XCI/YjpcIlwiKStcIl1cIixlLGMsZCl9KTtlbHNlIGlmKCFjJiZwLnR5cGUoYik9PT1cIm9iamVjdFwiKWZvcihlIGluIGIpY2koYStcIltcIitlK1wiXVwiLGJbZV0sYyxkKTtlbHNlIGQoYSxiKX1mdW5jdGlvbiBjeihhKXtyZXR1cm4gZnVuY3Rpb24oYixjKXt0eXBlb2YgYiE9XCJzdHJpbmdcIiYmKGM9YixiPVwiKlwiKTt2YXIgZCxlLGYsZz1iLnRvTG93ZXJDYXNlKCkuc3BsaXQocyksaD0wLGk9Zy5sZW5ndGg7aWYocC5pc0Z1bmN0aW9uKGMpKWZvcig7aDxpO2grKylkPWdbaF0sZj0vXlxcKy8udGVzdChkKSxmJiYoZD1kLnN1YnN0cigxKXx8XCIqXCIpLGU9YVtkXT1hW2RdfHxbXSxlW2Y/XCJ1bnNoaWZ0XCI6XCJwdXNoXCJdKGMpfX1mdW5jdGlvbiBjQShhLGMsZCxlLGYsZyl7Zj1mfHxjLmRhdGFUeXBlc1swXSxnPWd8fHt9LGdbZl09ITA7dmFyIGgsaT1hW2ZdLGo9MCxrPWk/aS5sZW5ndGg6MCxsPWE9PT1jdjtmb3IoO2o8ayYmKGx8fCFoKTtqKyspaD1pW2pdKGMsZCxlKSx0eXBlb2YgaD09XCJzdHJpbmdcIiYmKCFsfHxnW2hdP2g9YjooYy5kYXRhVHlwZXMudW5zaGlmdChoKSxoPWNBKGEsYyxkLGUsaCxnKSkpO3JldHVybihsfHwhaCkmJiFnW1wiKlwiXSYmKGg9Y0EoYSxjLGQsZSxcIipcIixnKSksaH1mdW5jdGlvbiBjQihhLGMpe3ZhciBkLGUsZj1wLmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9uc3x8e307Zm9yKGQgaW4gYyljW2RdIT09YiYmKChmW2RdP2E6ZXx8KGU9e30pKVtkXT1jW2RdKTtlJiZwLmV4dGVuZCghMCxhLGUpfWZ1bmN0aW9uIGNDKGEsYyxkKXt2YXIgZSxmLGcsaCxpPWEuY29udGVudHMsaj1hLmRhdGFUeXBlcyxrPWEucmVzcG9uc2VGaWVsZHM7Zm9yKGYgaW4gaylmIGluIGQmJihjW2tbZl1dPWRbZl0pO3doaWxlKGpbMF09PT1cIipcIilqLnNoaWZ0KCksZT09PWImJihlPWEubWltZVR5cGV8fGMuZ2V0UmVzcG9uc2VIZWFkZXIoXCJjb250ZW50LXR5cGVcIikpO2lmKGUpZm9yKGYgaW4gaSlpZihpW2ZdJiZpW2ZdLnRlc3QoZSkpe2oudW5zaGlmdChmKTticmVha31pZihqWzBdaW4gZClnPWpbMF07ZWxzZXtmb3IoZiBpbiBkKXtpZighalswXXx8YS5jb252ZXJ0ZXJzW2YrXCIgXCIralswXV0pe2c9ZjticmVha31ofHwoaD1mKX1nPWd8fGh9aWYoZylyZXR1cm4gZyE9PWpbMF0mJmoudW5zaGlmdChnKSxkW2ddfWZ1bmN0aW9uIGNEKGEsYil7dmFyIGMsZCxlLGYsZz1hLmRhdGFUeXBlcy5zbGljZSgpLGg9Z1swXSxpPXt9LGo9MDthLmRhdGFGaWx0ZXImJihiPWEuZGF0YUZpbHRlcihiLGEuZGF0YVR5cGUpKTtpZihnWzFdKWZvcihjIGluIGEuY29udmVydGVycylpW2MudG9Mb3dlckNhc2UoKV09YS5jb252ZXJ0ZXJzW2NdO2Zvcig7ZT1nWysral07KWlmKGUhPT1cIipcIil7aWYoaCE9PVwiKlwiJiZoIT09ZSl7Yz1pW2grXCIgXCIrZV18fGlbXCIqIFwiK2VdO2lmKCFjKWZvcihkIGluIGkpe2Y9ZC5zcGxpdChcIiBcIik7aWYoZlsxXT09PWUpe2M9aVtoK1wiIFwiK2ZbMF1dfHxpW1wiKiBcIitmWzBdXTtpZihjKXtjPT09ITA/Yz1pW2RdOmlbZF0hPT0hMCYmKGU9ZlswXSxnLnNwbGljZShqLS0sMCxlKSk7YnJlYWt9fX1pZihjIT09ITApaWYoYyYmYVtcInRocm93c1wiXSliPWMoYik7ZWxzZSB0cnl7Yj1jKGIpfWNhdGNoKGspe3JldHVybntzdGF0ZTpcInBhcnNlcmVycm9yXCIsZXJyb3I6Yz9rOlwiTm8gY29udmVyc2lvbiBmcm9tIFwiK2grXCIgdG8gXCIrZX19fWg9ZX1yZXR1cm57c3RhdGU6XCJzdWNjZXNzXCIsZGF0YTpifX1mdW5jdGlvbiBjTCgpe3RyeXtyZXR1cm4gbmV3IGEuWE1MSHR0cFJlcXVlc3R9Y2F0Y2goYil7fX1mdW5jdGlvbiBjTSgpe3RyeXtyZXR1cm4gbmV3IGEuQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxIVFRQXCIpfWNhdGNoKGIpe319ZnVuY3Rpb24gY1UoKXtyZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpe2NOPWJ9LDApLGNOPXAubm93KCl9ZnVuY3Rpb24gY1YoYSxiKXtwLmVhY2goYixmdW5jdGlvbihiLGMpe3ZhciBkPShjVFtiXXx8W10pLmNvbmNhdChjVFtcIipcIl0pLGU9MCxmPWQubGVuZ3RoO2Zvcig7ZTxmO2UrKylpZihkW2VdLmNhbGwoYSxiLGMpKXJldHVybn0pfWZ1bmN0aW9uIGNXKGEsYixjKXt2YXIgZCxlPTAsZj0wLGc9Y1MubGVuZ3RoLGg9cC5EZWZlcnJlZCgpLmFsd2F5cyhmdW5jdGlvbigpe2RlbGV0ZSBpLmVsZW19KSxpPWZ1bmN0aW9uKCl7dmFyIGI9Y058fGNVKCksYz1NYXRoLm1heCgwLGouc3RhcnRUaW1lK2ouZHVyYXRpb24tYiksZD0xLShjL2ouZHVyYXRpb258fDApLGU9MCxmPWoudHdlZW5zLmxlbmd0aDtmb3IoO2U8ZjtlKyspai50d2VlbnNbZV0ucnVuKGQpO3JldHVybiBoLm5vdGlmeVdpdGgoYSxbaixkLGNdKSxkPDEmJmY/YzooaC5yZXNvbHZlV2l0aChhLFtqXSksITEpfSxqPWgucHJvbWlzZSh7ZWxlbTphLHByb3BzOnAuZXh0ZW5kKHt9LGIpLG9wdHM6cC5leHRlbmQoITAse3NwZWNpYWxFYXNpbmc6e319LGMpLG9yaWdpbmFsUHJvcGVydGllczpiLG9yaWdpbmFsT3B0aW9uczpjLHN0YXJ0VGltZTpjTnx8Y1UoKSxkdXJhdGlvbjpjLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihiLGMsZCl7dmFyIGU9cC5Ud2VlbihhLGoub3B0cyxiLGMsai5vcHRzLnNwZWNpYWxFYXNpbmdbYl18fGoub3B0cy5lYXNpbmcpO3JldHVybiBqLnR3ZWVucy5wdXNoKGUpLGV9LHN0b3A6ZnVuY3Rpb24oYil7dmFyIGM9MCxkPWI/ai50d2VlbnMubGVuZ3RoOjA7Zm9yKDtjPGQ7YysrKWoudHdlZW5zW2NdLnJ1bigxKTtyZXR1cm4gYj9oLnJlc29sdmVXaXRoKGEsW2osYl0pOmgucmVqZWN0V2l0aChhLFtqLGJdKSx0aGlzfX0pLGs9ai5wcm9wcztjWChrLGoub3B0cy5zcGVjaWFsRWFzaW5nKTtmb3IoO2U8ZztlKyspe2Q9Y1NbZV0uY2FsbChqLGEsayxqLm9wdHMpO2lmKGQpcmV0dXJuIGR9cmV0dXJuIGNWKGosaykscC5pc0Z1bmN0aW9uKGoub3B0cy5zdGFydCkmJmoub3B0cy5zdGFydC5jYWxsKGEsaikscC5meC50aW1lcihwLmV4dGVuZChpLHthbmltOmoscXVldWU6ai5vcHRzLnF1ZXVlLGVsZW06YX0pKSxqLnByb2dyZXNzKGoub3B0cy5wcm9ncmVzcykuZG9uZShqLm9wdHMuZG9uZSxqLm9wdHMuY29tcGxldGUpLmZhaWwoai5vcHRzLmZhaWwpLmFsd2F5cyhqLm9wdHMuYWx3YXlzKX1mdW5jdGlvbiBjWChhLGIpe3ZhciBjLGQsZSxmLGc7Zm9yKGMgaW4gYSl7ZD1wLmNhbWVsQ2FzZShjKSxlPWJbZF0sZj1hW2NdLHAuaXNBcnJheShmKSYmKGU9ZlsxXSxmPWFbY109ZlswXSksYyE9PWQmJihhW2RdPWYsZGVsZXRlIGFbY10pLGc9cC5jc3NIb29rc1tkXTtpZihnJiZcImV4cGFuZFwiaW4gZyl7Zj1nLmV4cGFuZChmKSxkZWxldGUgYVtkXTtmb3IoYyBpbiBmKWMgaW4gYXx8KGFbY109ZltjXSxiW2NdPWUpfWVsc2UgYltkXT1lfX1mdW5jdGlvbiBjWShhLGIsYyl7dmFyIGQsZSxmLGcsaCxpLGosayxsPXRoaXMsbT1hLnN0eWxlLG49e30sbz1bXSxxPWEubm9kZVR5cGUmJmJaKGEpO2MucXVldWV8fChqPXAuX3F1ZXVlSG9va3MoYSxcImZ4XCIpLGoudW5xdWV1ZWQ9PW51bGwmJihqLnVucXVldWVkPTAsaz1qLmVtcHR5LmZpcmUsai5lbXB0eS5maXJlPWZ1bmN0aW9uKCl7ai51bnF1ZXVlZHx8aygpfSksai51bnF1ZXVlZCsrLGwuYWx3YXlzKGZ1bmN0aW9uKCl7bC5hbHdheXMoZnVuY3Rpb24oKXtqLnVucXVldWVkLS0scC5xdWV1ZShhLFwiZnhcIikubGVuZ3RofHxqLmVtcHR5LmZpcmUoKX0pfSkpLGEubm9kZVR5cGU9PT0xJiYoXCJoZWlnaHRcImluIGJ8fFwid2lkdGhcImluIGIpJiYoYy5vdmVyZmxvdz1bbS5vdmVyZmxvdyxtLm92ZXJmbG93WCxtLm92ZXJmbG93WV0scC5jc3MoYSxcImRpc3BsYXlcIik9PT1cImlubGluZVwiJiZwLmNzcyhhLFwiZmxvYXRcIik9PT1cIm5vbmVcIiYmKCFwLnN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dHx8Y2MoYS5ub2RlTmFtZSk9PT1cImlubGluZVwiP20uZGlzcGxheT1cImlubGluZS1ibG9ja1wiOm0uem9vbT0xKSksYy5vdmVyZmxvdyYmKG0ub3ZlcmZsb3c9XCJoaWRkZW5cIixwLnN1cHBvcnQuc2hyaW5rV3JhcEJsb2Nrc3x8bC5kb25lKGZ1bmN0aW9uKCl7bS5vdmVyZmxvdz1jLm92ZXJmbG93WzBdLG0ub3ZlcmZsb3dYPWMub3ZlcmZsb3dbMV0sbS5vdmVyZmxvd1k9Yy5vdmVyZmxvd1syXX0pKTtmb3IoZCBpbiBiKXtmPWJbZF07aWYoY1AuZXhlYyhmKSl7ZGVsZXRlIGJbZF07aWYoZj09PShxP1wiaGlkZVwiOlwic2hvd1wiKSljb250aW51ZTtvLnB1c2goZCl9fWc9by5sZW5ndGg7aWYoZyl7aD1wLl9kYXRhKGEsXCJmeHNob3dcIil8fHAuX2RhdGEoYSxcImZ4c2hvd1wiLHt9KSxxP3AoYSkuc2hvdygpOmwuZG9uZShmdW5jdGlvbigpe3AoYSkuaGlkZSgpfSksbC5kb25lKGZ1bmN0aW9uKCl7dmFyIGI7cC5yZW1vdmVEYXRhKGEsXCJmeHNob3dcIiwhMCk7Zm9yKGIgaW4gbilwLnN0eWxlKGEsYixuW2JdKX0pO2ZvcihkPTA7ZDxnO2QrKyllPW9bZF0saT1sLmNyZWF0ZVR3ZWVuKGUscT9oW2VdOjApLG5bZV09aFtlXXx8cC5zdHlsZShhLGUpLGUgaW4gaHx8KGhbZV09aS5zdGFydCxxJiYoaS5lbmQ9aS5zdGFydCxpLnN0YXJ0PWU9PT1cIndpZHRoXCJ8fGU9PT1cImhlaWdodFwiPzE6MCkpfX1mdW5jdGlvbiBjWihhLGIsYyxkLGUpe3JldHVybiBuZXcgY1oucHJvdG90eXBlLmluaXQoYSxiLGMsZCxlKX1mdW5jdGlvbiBjJChhLGIpe3ZhciBjLGQ9e2hlaWdodDphfSxlPTA7Yj1iPzE6MDtmb3IoO2U8NDtlKz0yLWIpYz1iVltlXSxkW1wibWFyZ2luXCIrY109ZFtcInBhZGRpbmdcIitjXT1hO3JldHVybiBiJiYoZC5vcGFjaXR5PWQud2lkdGg9YSksZH1mdW5jdGlvbiBkYShhKXtyZXR1cm4gcC5pc1dpbmRvdyhhKT9hOmEubm9kZVR5cGU9PT05P2EuZGVmYXVsdFZpZXd8fGEucGFyZW50V2luZG93OiExfXZhciBjLGQsZT1hLmRvY3VtZW50LGY9YS5sb2NhdGlvbixnPWEubmF2aWdhdG9yLGg9YS5qUXVlcnksaT1hLiQsaj1BcnJheS5wcm90b3R5cGUucHVzaCxrPUFycmF5LnByb3RvdHlwZS5zbGljZSxsPUFycmF5LnByb3RvdHlwZS5pbmRleE9mLG09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxuPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbz1TdHJpbmcucHJvdG90eXBlLnRyaW0scD1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgcC5mbi5pbml0KGEsYixjKX0scT0vW1xcLStdPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdW1xcLStdP1xcZCt8KS8uc291cmNlLHI9L1xcUy8scz0vXFxzKy8sdD0vXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2csdT0vXig/OlteIzxdKig8W1xcd1xcV10rPilbXj5dKiR8IyhbXFx3XFwtXSopJCkvLHY9L148KFxcdyspXFxzKlxcLz8+KD86PFxcL1xcMT58KSQvLHc9L15bXFxdLDp7fVxcc10qJC8seD0vKD86Xnw6fCwpKD86XFxzKlxcWykrL2cseT0vXFxcXCg/OltcIlxcXFxcXC9iZm5ydF18dVtcXGRhLWZBLUZdezR9KS9nLHo9L1wiW15cIlxcXFxcXHJcXG5dKlwifHRydWV8ZmFsc2V8bnVsbHwtPyg/OlxcZFxcZCpcXC58KVxcZCsoPzpbZUVdW1xcLStdP1xcZCt8KS9nLEE9L14tbXMtLyxCPS8tKFtcXGRhLXpdKS9naSxDPWZ1bmN0aW9uKGEsYil7cmV0dXJuKGIrXCJcIikudG9VcHBlckNhc2UoKX0sRD1mdW5jdGlvbigpe2UuYWRkRXZlbnRMaXN0ZW5lcj8oZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLEQsITEpLHAucmVhZHkoKSk6ZS5yZWFkeVN0YXRlPT09XCJjb21wbGV0ZVwiJiYoZS5kZXRhY2hFdmVudChcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLEQpLHAucmVhZHkoKSl9LEU9e307cC5mbj1wLnByb3RvdHlwZT17Y29uc3RydWN0b3I6cCxpbml0OmZ1bmN0aW9uKGEsYyxkKXt2YXIgZixnLGgsaTtpZighYSlyZXR1cm4gdGhpcztpZihhLm5vZGVUeXBlKXJldHVybiB0aGlzLmNvbnRleHQ9dGhpc1swXT1hLHRoaXMubGVuZ3RoPTEsdGhpcztpZih0eXBlb2YgYT09XCJzdHJpbmdcIil7YS5jaGFyQXQoMCk9PT1cIjxcIiYmYS5jaGFyQXQoYS5sZW5ndGgtMSk9PT1cIj5cIiYmYS5sZW5ndGg+PTM/Zj1bbnVsbCxhLG51bGxdOmY9dS5leGVjKGEpO2lmKGYmJihmWzFdfHwhYykpe2lmKGZbMV0pcmV0dXJuIGM9YyBpbnN0YW5jZW9mIHA/Y1swXTpjLGk9YyYmYy5ub2RlVHlwZT9jLm93bmVyRG9jdW1lbnR8fGM6ZSxhPXAucGFyc2VIVE1MKGZbMV0saSwhMCksdi50ZXN0KGZbMV0pJiZwLmlzUGxhaW5PYmplY3QoYykmJnRoaXMuYXR0ci5jYWxsKGEsYywhMCkscC5tZXJnZSh0aGlzLGEpO2c9ZS5nZXRFbGVtZW50QnlJZChmWzJdKTtpZihnJiZnLnBhcmVudE5vZGUpe2lmKGcuaWQhPT1mWzJdKXJldHVybiBkLmZpbmQoYSk7dGhpcy5sZW5ndGg9MSx0aGlzWzBdPWd9cmV0dXJuIHRoaXMuY29udGV4dD1lLHRoaXMuc2VsZWN0b3I9YSx0aGlzfXJldHVybiFjfHxjLmpxdWVyeT8oY3x8ZCkuZmluZChhKTp0aGlzLmNvbnN0cnVjdG9yKGMpLmZpbmQoYSl9cmV0dXJuIHAuaXNGdW5jdGlvbihhKT9kLnJlYWR5KGEpOihhLnNlbGVjdG9yIT09YiYmKHRoaXMuc2VsZWN0b3I9YS5zZWxlY3Rvcix0aGlzLmNvbnRleHQ9YS5jb250ZXh0KSxwLm1ha2VBcnJheShhLHRoaXMpKX0sc2VsZWN0b3I6XCJcIixqcXVlcnk6XCIxLjguMlwiLGxlbmd0aDowLHNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sZW5ndGh9LHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gay5jYWxsKHRoaXMpfSxnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PW51bGw/dGhpcy50b0FycmF5KCk6YTwwP3RoaXNbdGhpcy5sZW5ndGgrYV06dGhpc1thXX0scHVzaFN0YWNrOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1wLm1lcmdlKHRoaXMuY29uc3RydWN0b3IoKSxhKTtyZXR1cm4gZC5wcmV2T2JqZWN0PXRoaXMsZC5jb250ZXh0PXRoaXMuY29udGV4dCxiPT09XCJmaW5kXCI/ZC5zZWxlY3Rvcj10aGlzLnNlbGVjdG9yKyh0aGlzLnNlbGVjdG9yP1wiIFwiOlwiXCIpK2M6YiYmKGQuc2VsZWN0b3I9dGhpcy5zZWxlY3RvcitcIi5cIitiK1wiKFwiK2MrXCIpXCIpLGR9LGVhY2g6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcC5lYWNoKHRoaXMsYSxiKX0scmVhZHk6ZnVuY3Rpb24oYSl7cmV0dXJuIHAucmVhZHkucHJvbWlzZSgpLmRvbmUoYSksdGhpc30sZXE6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9K2EsYT09PS0xP3RoaXMuc2xpY2UoYSk6dGhpcy5zbGljZShhLGErMSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LHNsaWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGsuYXBwbHkodGhpcyxhcmd1bWVudHMpLFwic2xpY2VcIixrLmNhbGwoYXJndW1lbnRzKS5qb2luKFwiLFwiKSl9LG1hcDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2socC5tYXAodGhpcyxmdW5jdGlvbihiLGMpe3JldHVybiBhLmNhbGwoYixjLGIpfSkpfSxlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcmV2T2JqZWN0fHx0aGlzLmNvbnN0cnVjdG9yKG51bGwpfSxwdXNoOmosc29ydDpbXS5zb3J0LHNwbGljZTpbXS5zcGxpY2V9LHAuZm4uaW5pdC5wcm90b3R5cGU9cC5mbixwLmV4dGVuZD1wLmZuLmV4dGVuZD1mdW5jdGlvbigpe3ZhciBhLGMsZCxlLGYsZyxoPWFyZ3VtZW50c1swXXx8e30saT0xLGo9YXJndW1lbnRzLmxlbmd0aCxrPSExO3R5cGVvZiBoPT1cImJvb2xlYW5cIiYmKGs9aCxoPWFyZ3VtZW50c1sxXXx8e30saT0yKSx0eXBlb2YgaCE9XCJvYmplY3RcIiYmIXAuaXNGdW5jdGlvbihoKSYmKGg9e30pLGo9PT1pJiYoaD10aGlzLC0taSk7Zm9yKDtpPGo7aSsrKWlmKChhPWFyZ3VtZW50c1tpXSkhPW51bGwpZm9yKGMgaW4gYSl7ZD1oW2NdLGU9YVtjXTtpZihoPT09ZSljb250aW51ZTtrJiZlJiYocC5pc1BsYWluT2JqZWN0KGUpfHwoZj1wLmlzQXJyYXkoZSkpKT8oZj8oZj0hMSxnPWQmJnAuaXNBcnJheShkKT9kOltdKTpnPWQmJnAuaXNQbGFpbk9iamVjdChkKT9kOnt9LGhbY109cC5leHRlbmQoayxnLGUpKTplIT09YiYmKGhbY109ZSl9cmV0dXJuIGh9LHAuZXh0ZW5kKHtub0NvbmZsaWN0OmZ1bmN0aW9uKGIpe3JldHVybiBhLiQ9PT1wJiYoYS4kPWkpLGImJmEualF1ZXJ5PT09cCYmKGEualF1ZXJ5PWgpLHB9LGlzUmVhZHk6ITEscmVhZHlXYWl0OjEsaG9sZFJlYWR5OmZ1bmN0aW9uKGEpe2E/cC5yZWFkeVdhaXQrKzpwLnJlYWR5KCEwKX0scmVhZHk6ZnVuY3Rpb24oYSl7aWYoYT09PSEwPy0tcC5yZWFkeVdhaXQ6cC5pc1JlYWR5KXJldHVybjtpZighZS5ib2R5KXJldHVybiBzZXRUaW1lb3V0KHAucmVhZHksMSk7cC5pc1JlYWR5PSEwO2lmKGEhPT0hMCYmLS1wLnJlYWR5V2FpdD4wKXJldHVybjtkLnJlc29sdmVXaXRoKGUsW3BdKSxwLmZuLnRyaWdnZXImJnAoZSkudHJpZ2dlcihcInJlYWR5XCIpLm9mZihcInJlYWR5XCIpfSxpc0Z1bmN0aW9uOmZ1bmN0aW9uKGEpe3JldHVybiBwLnR5cGUoYSk9PT1cImZ1bmN0aW9uXCJ9LGlzQXJyYXk6QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oYSl7cmV0dXJuIHAudHlwZShhKT09PVwiYXJyYXlcIn0saXNXaW5kb3c6ZnVuY3Rpb24oYSl7cmV0dXJuIGEhPW51bGwmJmE9PWEud2luZG93fSxpc051bWVyaWM6ZnVuY3Rpb24oYSl7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQoYSkpJiZpc0Zpbml0ZShhKX0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gYT09bnVsbD9TdHJpbmcoYSk6RVttLmNhbGwoYSldfHxcIm9iamVjdFwifSxpc1BsYWluT2JqZWN0OmZ1bmN0aW9uKGEpe2lmKCFhfHxwLnR5cGUoYSkhPT1cIm9iamVjdFwifHxhLm5vZGVUeXBlfHxwLmlzV2luZG93KGEpKXJldHVybiExO3RyeXtpZihhLmNvbnN0cnVjdG9yJiYhbi5jYWxsKGEsXCJjb25zdHJ1Y3RvclwiKSYmIW4uY2FsbChhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxcImlzUHJvdG90eXBlT2ZcIikpcmV0dXJuITF9Y2F0Y2goYyl7cmV0dXJuITF9dmFyIGQ7Zm9yKGQgaW4gYSk7cmV0dXJuIGQ9PT1ifHxuLmNhbGwoYSxkKX0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihhKXt2YXIgYjtmb3IoYiBpbiBhKXJldHVybiExO3JldHVybiEwfSxlcnJvcjpmdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoYSl9LHBhcnNlSFRNTDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7cmV0dXJuIWF8fHR5cGVvZiBhIT1cInN0cmluZ1wiP251bGw6KHR5cGVvZiBiPT1cImJvb2xlYW5cIiYmKGM9YixiPTApLGI9Ynx8ZSwoZD12LmV4ZWMoYSkpP1tiLmNyZWF0ZUVsZW1lbnQoZFsxXSldOihkPXAuYnVpbGRGcmFnbWVudChbYV0sYixjP251bGw6W10pLHAubWVyZ2UoW10sKGQuY2FjaGVhYmxlP3AuY2xvbmUoZC5mcmFnbWVudCk6ZC5mcmFnbWVudCkuY2hpbGROb2RlcykpKX0scGFyc2VKU09OOmZ1bmN0aW9uKGIpe2lmKCFifHx0eXBlb2YgYiE9XCJzdHJpbmdcIilyZXR1cm4gbnVsbDtiPXAudHJpbShiKTtpZihhLkpTT04mJmEuSlNPTi5wYXJzZSlyZXR1cm4gYS5KU09OLnBhcnNlKGIpO2lmKHcudGVzdChiLnJlcGxhY2UoeSxcIkBcIikucmVwbGFjZSh6LFwiXVwiKS5yZXBsYWNlKHgsXCJcIikpKXJldHVybihuZXcgRnVuY3Rpb24oXCJyZXR1cm4gXCIrYikpKCk7cC5lcnJvcihcIkludmFsaWQgSlNPTjogXCIrYil9LHBhcnNlWE1MOmZ1bmN0aW9uKGMpe3ZhciBkLGU7aWYoIWN8fHR5cGVvZiBjIT1cInN0cmluZ1wiKXJldHVybiBudWxsO3RyeXthLkRPTVBhcnNlcj8oZT1uZXcgRE9NUGFyc2VyLGQ9ZS5wYXJzZUZyb21TdHJpbmcoYyxcInRleHQveG1sXCIpKTooZD1uZXcgQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxET01cIiksZC5hc3luYz1cImZhbHNlXCIsZC5sb2FkWE1MKGMpKX1jYXRjaChmKXtkPWJ9cmV0dXJuKCFkfHwhZC5kb2N1bWVudEVsZW1lbnR8fGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwYXJzZXJlcnJvclwiKS5sZW5ndGgpJiZwLmVycm9yKFwiSW52YWxpZCBYTUw6IFwiK2MpLGR9LG5vb3A6ZnVuY3Rpb24oKXt9LGdsb2JhbEV2YWw6ZnVuY3Rpb24oYil7YiYmci50ZXN0KGIpJiYoYS5leGVjU2NyaXB0fHxmdW5jdGlvbihiKXthLmV2YWwuY2FsbChhLGIpfSkoYil9LGNhbWVsQ2FzZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZXBsYWNlKEEsXCJtcy1cIikucmVwbGFjZShCLEMpfSxub2RlTmFtZTpmdW5jdGlvbihhLGIpe3JldHVybiBhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1iLnRvTG93ZXJDYXNlKCl9LGVhY2g6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlLGY9MCxnPWEubGVuZ3RoLGg9Zz09PWJ8fHAuaXNGdW5jdGlvbihhKTtpZihkKXtpZihoKXtmb3IoZSBpbiBhKWlmKGMuYXBwbHkoYVtlXSxkKT09PSExKWJyZWFrfWVsc2UgZm9yKDtmPGc7KWlmKGMuYXBwbHkoYVtmKytdLGQpPT09ITEpYnJlYWt9ZWxzZSBpZihoKXtmb3IoZSBpbiBhKWlmKGMuY2FsbChhW2VdLGUsYVtlXSk9PT0hMSlicmVha31lbHNlIGZvcig7ZjxnOylpZihjLmNhbGwoYVtmXSxmLGFbZisrXSk9PT0hMSlicmVhaztyZXR1cm4gYX0sdHJpbTpvJiYhby5jYWxsKFwi77u/wqBcIik/ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PW51bGw/XCJcIjpvLmNhbGwoYSl9OmZ1bmN0aW9uKGEpe3JldHVybiBhPT1udWxsP1wiXCI6KGErXCJcIikucmVwbGFjZSh0LFwiXCIpfSxtYWtlQXJyYXk6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPWJ8fFtdO3JldHVybiBhIT1udWxsJiYoYz1wLnR5cGUoYSksYS5sZW5ndGg9PW51bGx8fGM9PT1cInN0cmluZ1wifHxjPT09XCJmdW5jdGlvblwifHxjPT09XCJyZWdleHBcInx8cC5pc1dpbmRvdyhhKT9qLmNhbGwoZCxhKTpwLm1lcmdlKGQsYSkpLGR9LGluQXJyYXk6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKGIpe2lmKGwpcmV0dXJuIGwuY2FsbChiLGEsYyk7ZD1iLmxlbmd0aCxjPWM/YzwwP01hdGgubWF4KDAsZCtjKTpjOjA7Zm9yKDtjPGQ7YysrKWlmKGMgaW4gYiYmYltjXT09PWEpcmV0dXJuIGN9cmV0dXJuLTF9LG1lcmdlOmZ1bmN0aW9uKGEsYyl7dmFyIGQ9Yy5sZW5ndGgsZT1hLmxlbmd0aCxmPTA7aWYodHlwZW9mIGQ9PVwibnVtYmVyXCIpZm9yKDtmPGQ7ZisrKWFbZSsrXT1jW2ZdO2Vsc2Ugd2hpbGUoY1tmXSE9PWIpYVtlKytdPWNbZisrXTtyZXR1cm4gYS5sZW5ndGg9ZSxhfSxncmVwOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlPVtdLGY9MCxnPWEubGVuZ3RoO2M9ISFjO2Zvcig7ZjxnO2YrKylkPSEhYihhW2ZdLGYpLGMhPT1kJiZlLnB1c2goYVtmXSk7cmV0dXJuIGV9LG1hcDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZixnPVtdLGg9MCxpPWEubGVuZ3RoLGo9YSBpbnN0YW5jZW9mIHB8fGkhPT1iJiZ0eXBlb2YgaT09XCJudW1iZXJcIiYmKGk+MCYmYVswXSYmYVtpLTFdfHxpPT09MHx8cC5pc0FycmF5KGEpKTtpZihqKWZvcig7aDxpO2grKyllPWMoYVtoXSxoLGQpLGUhPW51bGwmJihnW2cubGVuZ3RoXT1lKTtlbHNlIGZvcihmIGluIGEpZT1jKGFbZl0sZixkKSxlIT1udWxsJiYoZ1tnLmxlbmd0aF09ZSk7cmV0dXJuIGcuY29uY2F0LmFwcGx5KFtdLGcpfSxndWlkOjEscHJveHk6ZnVuY3Rpb24oYSxjKXt2YXIgZCxlLGY7cmV0dXJuIHR5cGVvZiBjPT1cInN0cmluZ1wiJiYoZD1hW2NdLGM9YSxhPWQpLHAuaXNGdW5jdGlvbihhKT8oZT1rLmNhbGwoYXJndW1lbnRzLDIpLGY9ZnVuY3Rpb24oKXtyZXR1cm4gYS5hcHBseShjLGUuY29uY2F0KGsuY2FsbChhcmd1bWVudHMpKSl9LGYuZ3VpZD1hLmd1aWQ9YS5ndWlkfHxwLmd1aWQrKyxmKTpifSxhY2Nlc3M6ZnVuY3Rpb24oYSxjLGQsZSxmLGcsaCl7dmFyIGksaj1kPT1udWxsLGs9MCxsPWEubGVuZ3RoO2lmKGQmJnR5cGVvZiBkPT1cIm9iamVjdFwiKXtmb3IoayBpbiBkKXAuYWNjZXNzKGEsYyxrLGRba10sMSxnLGUpO2Y9MX1lbHNlIGlmKGUhPT1iKXtpPWg9PT1iJiZwLmlzRnVuY3Rpb24oZSksaiYmKGk/KGk9YyxjPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gaS5jYWxsKHAoYSksYyl9KTooYy5jYWxsKGEsZSksYz1udWxsKSk7aWYoYylmb3IoO2s8bDtrKyspYyhhW2tdLGQsaT9lLmNhbGwoYVtrXSxrLGMoYVtrXSxkKSk6ZSxoKTtmPTF9cmV0dXJuIGY/YTpqP2MuY2FsbChhKTpsP2MoYVswXSxkKTpnfSxub3c6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX19KSxwLnJlYWR5LnByb21pc2U9ZnVuY3Rpb24oYil7aWYoIWQpe2Q9cC5EZWZlcnJlZCgpO2lmKGUucmVhZHlTdGF0ZT09PVwiY29tcGxldGVcIilzZXRUaW1lb3V0KHAucmVhZHksMSk7ZWxzZSBpZihlLmFkZEV2ZW50TGlzdGVuZXIpZS5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLEQsITEpLGEuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixwLnJlYWR5LCExKTtlbHNle2UuYXR0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIixEKSxhLmF0dGFjaEV2ZW50KFwib25sb2FkXCIscC5yZWFkeSk7dmFyIGM9ITE7dHJ5e2M9YS5mcmFtZUVsZW1lbnQ9PW51bGwmJmUuZG9jdW1lbnRFbGVtZW50fWNhdGNoKGYpe31jJiZjLmRvU2Nyb2xsJiZmdW5jdGlvbiBnKCl7aWYoIXAuaXNSZWFkeSl7dHJ5e2MuZG9TY3JvbGwoXCJsZWZ0XCIpfWNhdGNoKGEpe3JldHVybiBzZXRUaW1lb3V0KGcsNTApfXAucmVhZHkoKX19KCl9fXJldHVybiBkLnByb21pc2UoYil9LHAuZWFjaChcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3RcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtFW1wiW29iamVjdCBcIitiK1wiXVwiXT1iLnRvTG93ZXJDYXNlKCl9KSxjPXAoZSk7dmFyIEY9e307cC5DYWxsYmFja3M9ZnVuY3Rpb24oYSl7YT10eXBlb2YgYT09XCJzdHJpbmdcIj9GW2FdfHxHKGEpOnAuZXh0ZW5kKHt9LGEpO3ZhciBjLGQsZSxmLGcsaCxpPVtdLGo9IWEub25jZSYmW10saz1mdW5jdGlvbihiKXtjPWEubWVtb3J5JiZiLGQ9ITAsaD1mfHwwLGY9MCxnPWkubGVuZ3RoLGU9ITA7Zm9yKDtpJiZoPGc7aCsrKWlmKGlbaF0uYXBwbHkoYlswXSxiWzFdKT09PSExJiZhLnN0b3BPbkZhbHNlKXtjPSExO2JyZWFrfWU9ITEsaSYmKGo/ai5sZW5ndGgmJmsoai5zaGlmdCgpKTpjP2k9W106bC5kaXNhYmxlKCkpfSxsPXthZGQ6ZnVuY3Rpb24oKXtpZihpKXt2YXIgYj1pLmxlbmd0aDsoZnVuY3Rpb24gZChiKXtwLmVhY2goYixmdW5jdGlvbihiLGMpe3ZhciBlPXAudHlwZShjKTtlPT09XCJmdW5jdGlvblwiJiYoIWEudW5pcXVlfHwhbC5oYXMoYykpP2kucHVzaChjKTpjJiZjLmxlbmd0aCYmZSE9PVwic3RyaW5nXCImJmQoYyl9KX0pKGFyZ3VtZW50cyksZT9nPWkubGVuZ3RoOmMmJihmPWIsayhjKSl9cmV0dXJuIHRoaXN9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiBpJiZwLmVhY2goYXJndW1lbnRzLGZ1bmN0aW9uKGEsYil7dmFyIGM7d2hpbGUoKGM9cC5pbkFycmF5KGIsaSxjKSk+LTEpaS5zcGxpY2UoYywxKSxlJiYoYzw9ZyYmZy0tLGM8PWgmJmgtLSl9KSx0aGlzfSxoYXM6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuaW5BcnJheShhLGkpPi0xfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBpPVtdLHRoaXN9LGRpc2FibGU6ZnVuY3Rpb24oKXtyZXR1cm4gaT1qPWM9Yix0aGlzfSxkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiFpfSxsb2NrOmZ1bmN0aW9uKCl7cmV0dXJuIGo9YixjfHxsLmRpc2FibGUoKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4han0sZmlyZVdpdGg6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj1ifHxbXSxiPVthLGIuc2xpY2U/Yi5zbGljZSgpOmJdLGkmJighZHx8aikmJihlP2oucHVzaChiKTprKGIpKSx0aGlzfSxmaXJlOmZ1bmN0aW9uKCl7cmV0dXJuIGwuZmlyZVdpdGgodGhpcyxhcmd1bWVudHMpLHRoaXN9LGZpcmVkOmZ1bmN0aW9uKCl7cmV0dXJuISFkfX07cmV0dXJuIGx9LHAuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihhKXt2YXIgYj1bW1wicmVzb2x2ZVwiLFwiZG9uZVwiLHAuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksXCJyZXNvbHZlZFwiXSxbXCJyZWplY3RcIixcImZhaWxcIixwLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLFwicmVqZWN0ZWRcIl0sW1wibm90aWZ5XCIsXCJwcm9ncmVzc1wiLHAuQ2FsbGJhY2tzKFwibWVtb3J5XCIpXV0sYz1cInBlbmRpbmdcIixkPXtzdGF0ZTpmdW5jdGlvbigpe3JldHVybiBjfSxhbHdheXM6ZnVuY3Rpb24oKXtyZXR1cm4gZS5kb25lKGFyZ3VtZW50cykuZmFpbChhcmd1bWVudHMpLHRoaXN9LHRoZW46ZnVuY3Rpb24oKXt2YXIgYT1hcmd1bWVudHM7cmV0dXJuIHAuRGVmZXJyZWQoZnVuY3Rpb24oYyl7cC5lYWNoKGIsZnVuY3Rpb24oYixkKXt2YXIgZj1kWzBdLGc9YVtiXTtlW2RbMV1dKHAuaXNGdW5jdGlvbihnKT9mdW5jdGlvbigpe3ZhciBhPWcuYXBwbHkodGhpcyxhcmd1bWVudHMpO2EmJnAuaXNGdW5jdGlvbihhLnByb21pc2UpP2EucHJvbWlzZSgpLmRvbmUoYy5yZXNvbHZlKS5mYWlsKGMucmVqZWN0KS5wcm9ncmVzcyhjLm5vdGlmeSk6Y1tmK1wiV2l0aFwiXSh0aGlzPT09ZT9jOnRoaXMsW2FdKX06Y1tmXSl9KSxhPW51bGx9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGEhPW51bGw/cC5leHRlbmQoYSxkKTpkfX0sZT17fTtyZXR1cm4gZC5waXBlPWQudGhlbixwLmVhY2goYixmdW5jdGlvbihhLGYpe3ZhciBnPWZbMl0saD1mWzNdO2RbZlsxXV09Zy5hZGQsaCYmZy5hZGQoZnVuY3Rpb24oKXtjPWh9LGJbYV4xXVsyXS5kaXNhYmxlLGJbMl1bMl0ubG9jayksZVtmWzBdXT1nLmZpcmUsZVtmWzBdK1wiV2l0aFwiXT1nLmZpcmVXaXRofSksZC5wcm9taXNlKGUpLGEmJmEuY2FsbChlLGUpLGV9LHdoZW46ZnVuY3Rpb24oYSl7dmFyIGI9MCxjPWsuY2FsbChhcmd1bWVudHMpLGQ9Yy5sZW5ndGgsZT1kIT09MXx8YSYmcC5pc0Z1bmN0aW9uKGEucHJvbWlzZSk/ZDowLGY9ZT09PTE/YTpwLkRlZmVycmVkKCksZz1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGZ1bmN0aW9uKGQpe2JbYV09dGhpcyxjW2FdPWFyZ3VtZW50cy5sZW5ndGg+MT9rLmNhbGwoYXJndW1lbnRzKTpkLGM9PT1oP2Yubm90aWZ5V2l0aChiLGMpOi0tZXx8Zi5yZXNvbHZlV2l0aChiLGMpfX0saCxpLGo7aWYoZD4xKXtoPW5ldyBBcnJheShkKSxpPW5ldyBBcnJheShkKSxqPW5ldyBBcnJheShkKTtmb3IoO2I8ZDtiKyspY1tiXSYmcC5pc0Z1bmN0aW9uKGNbYl0ucHJvbWlzZSk/Y1tiXS5wcm9taXNlKCkuZG9uZShnKGIsaixjKSkuZmFpbChmLnJlamVjdCkucHJvZ3Jlc3MoZyhiLGksaCkpOi0tZX1yZXR1cm4gZXx8Zi5yZXNvbHZlV2l0aChqLGMpLGYucHJvbWlzZSgpfX0pLHAuc3VwcG9ydD1mdW5jdGlvbigpe3ZhciBiLGMsZCxmLGcsaCxpLGosayxsLG0sbj1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bi5zZXRBdHRyaWJ1dGUoXCJjbGFzc05hbWVcIixcInRcIiksbi5pbm5lckhUTUw9XCIgIDxsaW5rLz48dGFibGU+PC90YWJsZT48YSBocmVmPScvYSc+YTwvYT48aW5wdXQgdHlwZT0nY2hlY2tib3gnLz5cIixjPW4uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLGQ9bi5nZXRFbGVtZW50c0J5VGFnTmFtZShcImFcIilbMF0sZC5zdHlsZS5jc3NUZXh0PVwidG9wOjFweDtmbG9hdDpsZWZ0O29wYWNpdHk6LjVcIjtpZighY3x8IWMubGVuZ3RoKXJldHVybnt9O2Y9ZS5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpLGc9Zi5hcHBlbmRDaGlsZChlLmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIikpLGg9bi5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpWzBdLGI9e2xlYWRpbmdXaGl0ZXNwYWNlOm4uZmlyc3RDaGlsZC5ub2RlVHlwZT09PTMsdGJvZHk6IW4uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ0Ym9keVwiKS5sZW5ndGgsaHRtbFNlcmlhbGl6ZTohIW4uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJsaW5rXCIpLmxlbmd0aCxzdHlsZTovdG9wLy50ZXN0KGQuZ2V0QXR0cmlidXRlKFwic3R5bGVcIikpLGhyZWZOb3JtYWxpemVkOmQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKT09PVwiL2FcIixvcGFjaXR5Oi9eMC41Ly50ZXN0KGQuc3R5bGUub3BhY2l0eSksY3NzRmxvYXQ6ISFkLnN0eWxlLmNzc0Zsb2F0LGNoZWNrT246aC52YWx1ZT09PVwib25cIixvcHRTZWxlY3RlZDpnLnNlbGVjdGVkLGdldFNldEF0dHJpYnV0ZTpuLmNsYXNzTmFtZSE9PVwidFwiLGVuY3R5cGU6ISFlLmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpLmVuY3R5cGUsaHRtbDVDbG9uZTplLmNyZWF0ZUVsZW1lbnQoXCJuYXZcIikuY2xvbmVOb2RlKCEwKS5vdXRlckhUTUwhPT1cIjw6bmF2PjwvOm5hdj5cIixib3hNb2RlbDplLmNvbXBhdE1vZGU9PT1cIkNTUzFDb21wYXRcIixzdWJtaXRCdWJibGVzOiEwLGNoYW5nZUJ1YmJsZXM6ITAsZm9jdXNpbkJ1YmJsZXM6ITEsZGVsZXRlRXhwYW5kbzohMCxub0Nsb25lRXZlbnQ6ITAsaW5saW5lQmxvY2tOZWVkc0xheW91dDohMSxzaHJpbmtXcmFwQmxvY2tzOiExLHJlbGlhYmxlTWFyZ2luUmlnaHQ6ITAsYm94U2l6aW5nUmVsaWFibGU6ITAscGl4ZWxQb3NpdGlvbjohMX0saC5jaGVja2VkPSEwLGIubm9DbG9uZUNoZWNrZWQ9aC5jbG9uZU5vZGUoITApLmNoZWNrZWQsZi5kaXNhYmxlZD0hMCxiLm9wdERpc2FibGVkPSFnLmRpc2FibGVkO3RyeXtkZWxldGUgbi50ZXN0fWNhdGNoKG8pe2IuZGVsZXRlRXhwYW5kbz0hMX0hbi5hZGRFdmVudExpc3RlbmVyJiZuLmF0dGFjaEV2ZW50JiZuLmZpcmVFdmVudCYmKG4uYXR0YWNoRXZlbnQoXCJvbmNsaWNrXCIsbT1mdW5jdGlvbigpe2Iubm9DbG9uZUV2ZW50PSExfSksbi5jbG9uZU5vZGUoITApLmZpcmVFdmVudChcIm9uY2xpY2tcIiksbi5kZXRhY2hFdmVudChcIm9uY2xpY2tcIixtKSksaD1lLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSxoLnZhbHVlPVwidFwiLGguc2V0QXR0cmlidXRlKFwidHlwZVwiLFwicmFkaW9cIiksYi5yYWRpb1ZhbHVlPWgudmFsdWU9PT1cInRcIixoLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIixcImNoZWNrZWRcIiksaC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJ0XCIpLG4uYXBwZW5kQ2hpbGQoaCksaT1lLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxpLmFwcGVuZENoaWxkKG4ubGFzdENoaWxkKSxiLmNoZWNrQ2xvbmU9aS5jbG9uZU5vZGUoITApLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmNoZWNrZWQsYi5hcHBlbmRDaGVja2VkPWguY2hlY2tlZCxpLnJlbW92ZUNoaWxkKGgpLGkuYXBwZW5kQ2hpbGQobik7aWYobi5hdHRhY2hFdmVudClmb3IoayBpbntzdWJtaXQ6ITAsY2hhbmdlOiEwLGZvY3VzaW46ITB9KWo9XCJvblwiK2ssbD1qIGluIG4sbHx8KG4uc2V0QXR0cmlidXRlKGosXCJyZXR1cm47XCIpLGw9dHlwZW9mIG5bal09PVwiZnVuY3Rpb25cIiksYltrK1wiQnViYmxlc1wiXT1sO3JldHVybiBwKGZ1bmN0aW9uKCl7dmFyIGMsZCxmLGcsaD1cInBhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MDtkaXNwbGF5OmJsb2NrO292ZXJmbG93OmhpZGRlbjtcIixpPWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdO2lmKCFpKXJldHVybjtjPWUuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjLnN0eWxlLmNzc1RleHQ9XCJ2aXNpYmlsaXR5OmhpZGRlbjtib3JkZXI6MDt3aWR0aDowO2hlaWdodDowO3Bvc2l0aW9uOnN0YXRpYzt0b3A6MDttYXJnaW4tdG9wOjFweFwiLGkuaW5zZXJ0QmVmb3JlKGMsaS5maXJzdENoaWxkKSxkPWUuY3JlYXRlRWxlbWVudChcImRpdlwiKSxjLmFwcGVuZENoaWxkKGQpLGQuaW5uZXJIVE1MPVwiPHRhYmxlPjx0cj48dGQ+PC90ZD48dGQ+dDwvdGQ+PC90cj48L3RhYmxlPlwiLGY9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInRkXCIpLGZbMF0uc3R5bGUuY3NzVGV4dD1cInBhZGRpbmc6MDttYXJnaW46MDtib3JkZXI6MDtkaXNwbGF5Om5vbmVcIixsPWZbMF0ub2Zmc2V0SGVpZ2h0PT09MCxmWzBdLnN0eWxlLmRpc3BsYXk9XCJcIixmWzFdLnN0eWxlLmRpc3BsYXk9XCJub25lXCIsYi5yZWxpYWJsZUhpZGRlbk9mZnNldHM9bCYmZlswXS5vZmZzZXRIZWlnaHQ9PT0wLGQuaW5uZXJIVE1MPVwiXCIsZC5zdHlsZS5jc3NUZXh0PVwiYm94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MXB4O2JvcmRlcjoxcHg7ZGlzcGxheTpibG9jazt3aWR0aDo0cHg7bWFyZ2luLXRvcDoxJTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MSU7XCIsYi5ib3hTaXppbmc9ZC5vZmZzZXRXaWR0aD09PTQsYi5kb2VzTm90SW5jbHVkZU1hcmdpbkluQm9keU9mZnNldD1pLm9mZnNldFRvcCE9PTEsYS5nZXRDb21wdXRlZFN0eWxlJiYoYi5waXhlbFBvc2l0aW9uPShhLmdldENvbXB1dGVkU3R5bGUoZCxudWxsKXx8e30pLnRvcCE9PVwiMSVcIixiLmJveFNpemluZ1JlbGlhYmxlPShhLmdldENvbXB1dGVkU3R5bGUoZCxudWxsKXx8e3dpZHRoOlwiNHB4XCJ9KS53aWR0aD09PVwiNHB4XCIsZz1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZy5zdHlsZS5jc3NUZXh0PWQuc3R5bGUuY3NzVGV4dD1oLGcuc3R5bGUubWFyZ2luUmlnaHQ9Zy5zdHlsZS53aWR0aD1cIjBcIixkLnN0eWxlLndpZHRoPVwiMXB4XCIsZC5hcHBlbmRDaGlsZChnKSxiLnJlbGlhYmxlTWFyZ2luUmlnaHQ9IXBhcnNlRmxvYXQoKGEuZ2V0Q29tcHV0ZWRTdHlsZShnLG51bGwpfHx7fSkubWFyZ2luUmlnaHQpKSx0eXBlb2YgZC5zdHlsZS56b29tIT1cInVuZGVmaW5lZFwiJiYoZC5pbm5lckhUTUw9XCJcIixkLnN0eWxlLmNzc1RleHQ9aCtcIndpZHRoOjFweDtwYWRkaW5nOjFweDtkaXNwbGF5OmlubGluZTt6b29tOjFcIixiLmlubGluZUJsb2NrTmVlZHNMYXlvdXQ9ZC5vZmZzZXRXaWR0aD09PTMsZC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIixkLnN0eWxlLm92ZXJmbG93PVwidmlzaWJsZVwiLGQuaW5uZXJIVE1MPVwiPGRpdj48L2Rpdj5cIixkLmZpcnN0Q2hpbGQuc3R5bGUud2lkdGg9XCI1cHhcIixiLnNocmlua1dyYXBCbG9ja3M9ZC5vZmZzZXRXaWR0aCE9PTMsYy5zdHlsZS56b29tPTEpLGkucmVtb3ZlQ2hpbGQoYyksYz1kPWY9Zz1udWxsfSksaS5yZW1vdmVDaGlsZChuKSxjPWQ9Zj1nPWg9aT1uPW51bGwsYn0oKTt2YXIgSD0vKD86XFx7W1xcc1xcU10qXFx9fFxcW1tcXHNcXFNdKlxcXSkkLyxJPS8oW0EtWl0pL2c7cC5leHRlbmQoe2NhY2hlOnt9LGRlbGV0ZWRJZHM6W10sdXVpZDowLGV4cGFuZG86XCJqUXVlcnlcIisocC5mbi5qcXVlcnkrTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXFxEL2csXCJcIiksbm9EYXRhOntlbWJlZDohMCxvYmplY3Q6XCJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDBcIixhcHBsZXQ6ITB9LGhhc0RhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9YS5ub2RlVHlwZT9wLmNhY2hlW2FbcC5leHBhbmRvXV06YVtwLmV4cGFuZG9dLCEhYSYmIUsoYSl9LGRhdGE6ZnVuY3Rpb24oYSxjLGQsZSl7aWYoIXAuYWNjZXB0RGF0YShhKSlyZXR1cm47dmFyIGYsZyxoPXAuZXhwYW5kbyxpPXR5cGVvZiBjPT1cInN0cmluZ1wiLGo9YS5ub2RlVHlwZSxrPWo/cC5jYWNoZTphLGw9aj9hW2hdOmFbaF0mJmg7aWYoKCFsfHwha1tsXXx8IWUmJiFrW2xdLmRhdGEpJiZpJiZkPT09YilyZXR1cm47bHx8KGo/YVtoXT1sPXAuZGVsZXRlZElkcy5wb3AoKXx8cC5ndWlkKys6bD1oKSxrW2xdfHwoa1tsXT17fSxqfHwoa1tsXS50b0pTT049cC5ub29wKSk7aWYodHlwZW9mIGM9PVwib2JqZWN0XCJ8fHR5cGVvZiBjPT1cImZ1bmN0aW9uXCIpZT9rW2xdPXAuZXh0ZW5kKGtbbF0sYyk6a1tsXS5kYXRhPXAuZXh0ZW5kKGtbbF0uZGF0YSxjKTtyZXR1cm4gZj1rW2xdLGV8fChmLmRhdGF8fChmLmRhdGE9e30pLGY9Zi5kYXRhKSxkIT09YiYmKGZbcC5jYW1lbENhc2UoYyldPWQpLGk/KGc9ZltjXSxnPT1udWxsJiYoZz1mW3AuY2FtZWxDYXNlKGMpXSkpOmc9ZixnfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEsYixjKXtpZighcC5hY2NlcHREYXRhKGEpKXJldHVybjt2YXIgZCxlLGYsZz1hLm5vZGVUeXBlLGg9Zz9wLmNhY2hlOmEsaT1nP2FbcC5leHBhbmRvXTpwLmV4cGFuZG87aWYoIWhbaV0pcmV0dXJuO2lmKGIpe2Q9Yz9oW2ldOmhbaV0uZGF0YTtpZihkKXtwLmlzQXJyYXkoYil8fChiIGluIGQ/Yj1bYl06KGI9cC5jYW1lbENhc2UoYiksYiBpbiBkP2I9W2JdOmI9Yi5zcGxpdChcIiBcIikpKTtmb3IoZT0wLGY9Yi5sZW5ndGg7ZTxmO2UrKylkZWxldGUgZFtiW2VdXTtpZighKGM/SzpwLmlzRW1wdHlPYmplY3QpKGQpKXJldHVybn19aWYoIWMpe2RlbGV0ZSBoW2ldLmRhdGE7aWYoIUsoaFtpXSkpcmV0dXJufWc/cC5jbGVhbkRhdGEoW2FdLCEwKTpwLnN1cHBvcnQuZGVsZXRlRXhwYW5kb3x8aCE9aC53aW5kb3c/ZGVsZXRlIGhbaV06aFtpXT1udWxsfSxfZGF0YTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHAuZGF0YShhLGIsYywhMCl9LGFjY2VwdERhdGE6ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZSYmcC5ub0RhdGFbYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXTtyZXR1cm4hYnx8YiE9PSEwJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzaWRcIik9PT1ifX0pLHAuZm4uZXh0ZW5kKHtkYXRhOmZ1bmN0aW9uKGEsYyl7dmFyIGQsZSxmLGcsaCxpPXRoaXNbMF0saj0wLGs9bnVsbDtpZihhPT09Yil7aWYodGhpcy5sZW5ndGgpe2s9cC5kYXRhKGkpO2lmKGkubm9kZVR5cGU9PT0xJiYhcC5fZGF0YShpLFwicGFyc2VkQXR0cnNcIikpe2Y9aS5hdHRyaWJ1dGVzO2ZvcihoPWYubGVuZ3RoO2o8aDtqKyspZz1mW2pdLm5hbWUsZy5pbmRleE9mKFwiZGF0YS1cIil8fChnPXAuY2FtZWxDYXNlKGcuc3Vic3RyaW5nKDUpKSxKKGksZyxrW2ddKSk7cC5fZGF0YShpLFwicGFyc2VkQXR0cnNcIiwhMCl9fXJldHVybiBrfXJldHVybiB0eXBlb2YgYT09XCJvYmplY3RcIj90aGlzLmVhY2goZnVuY3Rpb24oKXtwLmRhdGEodGhpcyxhKX0pOihkPWEuc3BsaXQoXCIuXCIsMiksZFsxXT1kWzFdP1wiLlwiK2RbMV06XCJcIixlPWRbMV0rXCIhXCIscC5hY2Nlc3ModGhpcyxmdW5jdGlvbihjKXtpZihjPT09YilyZXR1cm4gaz10aGlzLnRyaWdnZXJIYW5kbGVyKFwiZ2V0RGF0YVwiK2UsW2RbMF1dKSxrPT09YiYmaSYmKGs9cC5kYXRhKGksYSksaz1KKGksYSxrKSksaz09PWImJmRbMV0/dGhpcy5kYXRhKGRbMF0pOms7ZFsxXT1jLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPXAodGhpcyk7Yi50cmlnZ2VySGFuZGxlcihcInNldERhdGFcIitlLGQpLHAuZGF0YSh0aGlzLGEsYyksYi50cmlnZ2VySGFuZGxlcihcImNoYW5nZURhdGFcIitlLGQpfSl9LG51bGwsYyxhcmd1bWVudHMubGVuZ3RoPjEsbnVsbCwhMSkpfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtwLnJlbW92ZURhdGEodGhpcyxhKX0pfX0pLHAuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoYSlyZXR1cm4gYj0oYnx8XCJmeFwiKStcInF1ZXVlXCIsZD1wLl9kYXRhKGEsYiksYyYmKCFkfHxwLmlzQXJyYXkoYyk/ZD1wLl9kYXRhKGEsYixwLm1ha2VBcnJheShjKSk6ZC5wdXNoKGMpKSxkfHxbXX0sZGVxdWV1ZTpmdW5jdGlvbihhLGIpe2I9Ynx8XCJmeFwiO3ZhciBjPXAucXVldWUoYSxiKSxkPWMubGVuZ3RoLGU9Yy5zaGlmdCgpLGY9cC5fcXVldWVIb29rcyhhLGIpLGc9ZnVuY3Rpb24oKXtwLmRlcXVldWUoYSxiKX07ZT09PVwiaW5wcm9ncmVzc1wiJiYoZT1jLnNoaWZ0KCksZC0tKSxlJiYoYj09PVwiZnhcIiYmYy51bnNoaWZ0KFwiaW5wcm9ncmVzc1wiKSxkZWxldGUgZi5zdG9wLGUuY2FsbChhLGcsZikpLCFkJiZmJiZmLmVtcHR5LmZpcmUoKX0sX3F1ZXVlSG9va3M6ZnVuY3Rpb24oYSxiKXt2YXIgYz1iK1wicXVldWVIb29rc1wiO3JldHVybiBwLl9kYXRhKGEsYyl8fHAuX2RhdGEoYSxjLHtlbXB0eTpwLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLmFkZChmdW5jdGlvbigpe3AucmVtb3ZlRGF0YShhLGIrXCJxdWV1ZVwiLCEwKSxwLnJlbW92ZURhdGEoYSxjLCEwKX0pfSl9fSkscC5mbi5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKGEsYyl7dmFyIGQ9MjtyZXR1cm4gdHlwZW9mIGEhPVwic3RyaW5nXCImJihjPWEsYT1cImZ4XCIsZC0tKSxhcmd1bWVudHMubGVuZ3RoPGQ/cC5xdWV1ZSh0aGlzWzBdLGEpOmM9PT1iP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9cC5xdWV1ZSh0aGlzLGEsYyk7cC5fcXVldWVIb29rcyh0aGlzLGEpLGE9PT1cImZ4XCImJmJbMF0hPT1cImlucHJvZ3Jlc3NcIiYmcC5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVxdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7cC5kZXF1ZXVlKHRoaXMsYSl9KX0sZGVsYXk6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT1wLmZ4P3AuZnguc3BlZWRzW2FdfHxhOmEsYj1ifHxcImZ4XCIsdGhpcy5xdWV1ZShiLGZ1bmN0aW9uKGIsYyl7dmFyIGQ9c2V0VGltZW91dChiLGEpO2Muc3RvcD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChkKX19KX0sY2xlYXJRdWV1ZTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5xdWV1ZShhfHxcImZ4XCIsW10pfSxwcm9taXNlOmZ1bmN0aW9uKGEsYyl7dmFyIGQsZT0xLGY9cC5EZWZlcnJlZCgpLGc9dGhpcyxoPXRoaXMubGVuZ3RoLGk9ZnVuY3Rpb24oKXstLWV8fGYucmVzb2x2ZVdpdGgoZyxbZ10pfTt0eXBlb2YgYSE9XCJzdHJpbmdcIiYmKGM9YSxhPWIpLGE9YXx8XCJmeFwiO3doaWxlKGgtLSlkPXAuX2RhdGEoZ1toXSxhK1wicXVldWVIb29rc1wiKSxkJiZkLmVtcHR5JiYoZSsrLGQuZW1wdHkuYWRkKGkpKTtyZXR1cm4gaSgpLGYucHJvbWlzZShjKX19KTt2YXIgTCxNLE4sTz0vW1xcdFxcclxcbl0vZyxQPS9cXHIvZyxRPS9eKD86YnV0dG9ufGlucHV0KSQvaSxSPS9eKD86YnV0dG9ufGlucHV0fG9iamVjdHxzZWxlY3R8dGV4dGFyZWEpJC9pLFM9L15hKD86cmVhfCkkL2ksVD0vXig/OmF1dG9mb2N1c3xhdXRvcGxheXxhc3luY3xjaGVja2VkfGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkfHNlbGVjdGVkKSQvaSxVPXAuc3VwcG9ydC5nZXRTZXRBdHRyaWJ1dGU7cC5mbi5leHRlbmQoe2F0dHI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcC5hY2Nlc3ModGhpcyxwLmF0dHIsYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3AucmVtb3ZlQXR0cih0aGlzLGEpfSl9LHByb3A6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcC5hY2Nlc3ModGhpcyxwLnByb3AsYSxiLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZVByb3A6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9cC5wcm9wRml4W2FdfHxhLHRoaXMuZWFjaChmdW5jdGlvbigpe3RyeXt0aGlzW2FdPWIsZGVsZXRlIHRoaXNbYV19Y2F0Y2goYyl7fX0pfSxhZGRDbGFzczpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaDtpZihwLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtwKHRoaXMpLmFkZENsYXNzKGEuY2FsbCh0aGlzLGIsdGhpcy5jbGFzc05hbWUpKX0pO2lmKGEmJnR5cGVvZiBhPT1cInN0cmluZ1wiKXtiPWEuc3BsaXQocyk7Zm9yKGM9MCxkPXRoaXMubGVuZ3RoO2M8ZDtjKyspe2U9dGhpc1tjXTtpZihlLm5vZGVUeXBlPT09MSlpZighZS5jbGFzc05hbWUmJmIubGVuZ3RoPT09MSllLmNsYXNzTmFtZT1hO2Vsc2V7Zj1cIiBcIitlLmNsYXNzTmFtZStcIiBcIjtmb3IoZz0wLGg9Yi5sZW5ndGg7ZzxoO2crKylmLmluZGV4T2YoXCIgXCIrYltnXStcIiBcIik8MCYmKGYrPWJbZ10rXCIgXCIpO2UuY2xhc3NOYW1lPXAudHJpbShmKX19fXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbihhKXt2YXIgYyxkLGUsZixnLGgsaTtpZihwLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtwKHRoaXMpLnJlbW92ZUNsYXNzKGEuY2FsbCh0aGlzLGIsdGhpcy5jbGFzc05hbWUpKX0pO2lmKGEmJnR5cGVvZiBhPT1cInN0cmluZ1wifHxhPT09Yil7Yz0oYXx8XCJcIikuc3BsaXQocyk7Zm9yKGg9MCxpPXRoaXMubGVuZ3RoO2g8aTtoKyspe2U9dGhpc1toXTtpZihlLm5vZGVUeXBlPT09MSYmZS5jbGFzc05hbWUpe2Q9KFwiIFwiK2UuY2xhc3NOYW1lK1wiIFwiKS5yZXBsYWNlKE8sXCIgXCIpO2ZvcihmPTAsZz1jLmxlbmd0aDtmPGc7ZisrKXdoaWxlKGQuaW5kZXhPZihcIiBcIitjW2ZdK1wiIFwiKT49MClkPWQucmVwbGFjZShcIiBcIitjW2ZdK1wiIFwiLFwiIFwiKTtlLmNsYXNzTmFtZT1hP3AudHJpbShkKTpcIlwifX19cmV0dXJuIHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKGEsYil7dmFyIGM9dHlwZW9mIGEsZD10eXBlb2YgYj09XCJib29sZWFuXCI7cmV0dXJuIHAuaXNGdW5jdGlvbihhKT90aGlzLmVhY2goZnVuY3Rpb24oYyl7cCh0aGlzKS50b2dnbGVDbGFzcyhhLmNhbGwodGhpcyxjLHRoaXMuY2xhc3NOYW1lLGIpLGIpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7aWYoYz09PVwic3RyaW5nXCIpe3ZhciBlLGY9MCxnPXAodGhpcyksaD1iLGk9YS5zcGxpdChzKTt3aGlsZShlPWlbZisrXSloPWQ/aDohZy5oYXNDbGFzcyhlKSxnW2g/XCJhZGRDbGFzc1wiOlwicmVtb3ZlQ2xhc3NcIl0oZSl9ZWxzZSBpZihjPT09XCJ1bmRlZmluZWRcInx8Yz09PVwiYm9vbGVhblwiKXRoaXMuY2xhc3NOYW1lJiZwLl9kYXRhKHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIsdGhpcy5jbGFzc05hbWUpLHRoaXMuY2xhc3NOYW1lPXRoaXMuY2xhc3NOYW1lfHxhPT09ITE/XCJcIjpwLl9kYXRhKHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIpfHxcIlwifSl9LGhhc0NsYXNzOmZ1bmN0aW9uKGEpe3ZhciBiPVwiIFwiK2ErXCIgXCIsYz0wLGQ9dGhpcy5sZW5ndGg7Zm9yKDtjPGQ7YysrKWlmKHRoaXNbY10ubm9kZVR5cGU9PT0xJiYoXCIgXCIrdGhpc1tjXS5jbGFzc05hbWUrXCIgXCIpLnJlcGxhY2UoTyxcIiBcIikuaW5kZXhPZihiKT49MClyZXR1cm4hMDtyZXR1cm4hMX0sdmFsOmZ1bmN0aW9uKGEpe3ZhciBjLGQsZSxmPXRoaXNbMF07aWYoIWFyZ3VtZW50cy5sZW5ndGgpe2lmKGYpcmV0dXJuIGM9cC52YWxIb29rc1tmLnR5cGVdfHxwLnZhbEhvb2tzW2Yubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0sYyYmXCJnZXRcImluIGMmJihkPWMuZ2V0KGYsXCJ2YWx1ZVwiKSkhPT1iP2Q6KGQ9Zi52YWx1ZSx0eXBlb2YgZD09XCJzdHJpbmdcIj9kLnJlcGxhY2UoUCxcIlwiKTpkPT1udWxsP1wiXCI6ZCk7cmV0dXJufXJldHVybiBlPXAuaXNGdW5jdGlvbihhKSx0aGlzLmVhY2goZnVuY3Rpb24oZCl7dmFyIGYsZz1wKHRoaXMpO2lmKHRoaXMubm9kZVR5cGUhPT0xKXJldHVybjtlP2Y9YS5jYWxsKHRoaXMsZCxnLnZhbCgpKTpmPWEsZj09bnVsbD9mPVwiXCI6dHlwZW9mIGY9PVwibnVtYmVyXCI/Zis9XCJcIjpwLmlzQXJyYXkoZikmJihmPXAubWFwKGYsZnVuY3Rpb24oYSl7cmV0dXJuIGE9PW51bGw/XCJcIjphK1wiXCJ9KSksYz1wLnZhbEhvb2tzW3RoaXMudHlwZV18fHAudmFsSG9va3NbdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXTtpZighY3x8IShcInNldFwiaW4gYyl8fGMuc2V0KHRoaXMsZixcInZhbHVlXCIpPT09Yil0aGlzLnZhbHVlPWZ9KX19KSxwLmV4dGVuZCh7dmFsSG9va3M6e29wdGlvbjp7Z2V0OmZ1bmN0aW9uKGEpe3ZhciBiPWEuYXR0cmlidXRlcy52YWx1ZTtyZXR1cm4hYnx8Yi5zcGVjaWZpZWQ/YS52YWx1ZTphLnRleHR9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmPWEuc2VsZWN0ZWRJbmRleCxnPVtdLGg9YS5vcHRpb25zLGk9YS50eXBlPT09XCJzZWxlY3Qtb25lXCI7aWYoZjwwKXJldHVybiBudWxsO2M9aT9mOjAsZD1pP2YrMTpoLmxlbmd0aDtmb3IoO2M8ZDtjKyspe2U9aFtjXTtpZihlLnNlbGVjdGVkJiYocC5zdXBwb3J0Lm9wdERpc2FibGVkPyFlLmRpc2FibGVkOmUuZ2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIik9PT1udWxsKSYmKCFlLnBhcmVudE5vZGUuZGlzYWJsZWR8fCFwLm5vZGVOYW1lKGUucGFyZW50Tm9kZSxcIm9wdGdyb3VwXCIpKSl7Yj1wKGUpLnZhbCgpO2lmKGkpcmV0dXJuIGI7Zy5wdXNoKGIpfX1yZXR1cm4gaSYmIWcubGVuZ3RoJiZoLmxlbmd0aD9wKGhbZl0pLnZhbCgpOmd9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjPXAubWFrZUFycmF5KGIpO3JldHVybiBwKGEpLmZpbmQoXCJvcHRpb25cIikuZWFjaChmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWQ9cC5pbkFycmF5KHAodGhpcykudmFsKCksYyk+PTB9KSxjLmxlbmd0aHx8KGEuc2VsZWN0ZWRJbmRleD0tMSksY319fSxhdHRyRm46e30sYXR0cjpmdW5jdGlvbihhLGMsZCxlKXt2YXIgZixnLGgsaT1hLm5vZGVUeXBlO2lmKCFhfHxpPT09M3x8aT09PTh8fGk9PT0yKXJldHVybjtpZihlJiZwLmlzRnVuY3Rpb24ocC5mbltjXSkpcmV0dXJuIHAoYSlbY10oZCk7aWYodHlwZW9mIGEuZ2V0QXR0cmlidXRlPT1cInVuZGVmaW5lZFwiKXJldHVybiBwLnByb3AoYSxjLGQpO2g9aSE9PTF8fCFwLmlzWE1MRG9jKGEpLGgmJihjPWMudG9Mb3dlckNhc2UoKSxnPXAuYXR0ckhvb2tzW2NdfHwoVC50ZXN0KGMpP006TCkpO2lmKGQhPT1iKXtpZihkPT09bnVsbCl7cC5yZW1vdmVBdHRyKGEsYyk7cmV0dXJufXJldHVybiBnJiZcInNldFwiaW4gZyYmaCYmKGY9Zy5zZXQoYSxkLGMpKSE9PWI/ZjooYS5zZXRBdHRyaWJ1dGUoYyxkK1wiXCIpLGQpfXJldHVybiBnJiZcImdldFwiaW4gZyYmaCYmKGY9Zy5nZXQoYSxjKSkhPT1udWxsP2Y6KGY9YS5nZXRBdHRyaWJ1dGUoYyksZj09PW51bGw/YjpmKX0scmVtb3ZlQXR0cjpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc9MDtpZihiJiZhLm5vZGVUeXBlPT09MSl7ZD1iLnNwbGl0KHMpO2Zvcig7ZzxkLmxlbmd0aDtnKyspZT1kW2ddLGUmJihjPXAucHJvcEZpeFtlXXx8ZSxmPVQudGVzdChlKSxmfHxwLmF0dHIoYSxlLFwiXCIpLGEucmVtb3ZlQXR0cmlidXRlKFU/ZTpjKSxmJiZjIGluIGEmJihhW2NdPSExKSl9fSxhdHRySG9va3M6e3R5cGU6e3NldDpmdW5jdGlvbihhLGIpe2lmKFEudGVzdChhLm5vZGVOYW1lKSYmYS5wYXJlbnROb2RlKXAuZXJyb3IoXCJ0eXBlIHByb3BlcnR5IGNhbid0IGJlIGNoYW5nZWRcIik7ZWxzZSBpZighcC5zdXBwb3J0LnJhZGlvVmFsdWUmJmI9PT1cInJhZGlvXCImJnAubm9kZU5hbWUoYSxcImlucHV0XCIpKXt2YXIgYz1hLnZhbHVlO3JldHVybiBhLnNldEF0dHJpYnV0ZShcInR5cGVcIixiKSxjJiYoYS52YWx1ZT1jKSxifX19LHZhbHVlOntnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gTCYmcC5ub2RlTmFtZShhLFwiYnV0dG9uXCIpP0wuZ2V0KGEsYik6YiBpbiBhP2EudmFsdWU6bnVsbH0sc2V0OmZ1bmN0aW9uKGEsYixjKXtpZihMJiZwLm5vZGVOYW1lKGEsXCJidXR0b25cIikpcmV0dXJuIEwuc2V0KGEsYixjKTthLnZhbHVlPWJ9fX0scHJvcEZpeDp7dGFiaW5kZXg6XCJ0YWJJbmRleFwiLHJlYWRvbmx5OlwicmVhZE9ubHlcIixcImZvclwiOlwiaHRtbEZvclwiLFwiY2xhc3NcIjpcImNsYXNzTmFtZVwiLG1heGxlbmd0aDpcIm1heExlbmd0aFwiLGNlbGxzcGFjaW5nOlwiY2VsbFNwYWNpbmdcIixjZWxscGFkZGluZzpcImNlbGxQYWRkaW5nXCIscm93c3BhbjpcInJvd1NwYW5cIixjb2xzcGFuOlwiY29sU3BhblwiLHVzZW1hcDpcInVzZU1hcFwiLGZyYW1lYm9yZGVyOlwiZnJhbWVCb3JkZXJcIixjb250ZW50ZWRpdGFibGU6XCJjb250ZW50RWRpdGFibGVcIn0scHJvcDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZixnLGg9YS5ub2RlVHlwZTtpZighYXx8aD09PTN8fGg9PT04fHxoPT09MilyZXR1cm47cmV0dXJuIGc9aCE9PTF8fCFwLmlzWE1MRG9jKGEpLGcmJihjPXAucHJvcEZpeFtjXXx8YyxmPXAucHJvcEhvb2tzW2NdKSxkIT09Yj9mJiZcInNldFwiaW4gZiYmKGU9Zi5zZXQoYSxkLGMpKSE9PWI/ZTphW2NdPWQ6ZiYmXCJnZXRcImluIGYmJihlPWYuZ2V0KGEsYykpIT09bnVsbD9lOmFbY119LHByb3BIb29rczp7dGFiSW5kZXg6e2dldDpmdW5jdGlvbihhKXt2YXIgYz1hLmdldEF0dHJpYnV0ZU5vZGUoXCJ0YWJpbmRleFwiKTtyZXR1cm4gYyYmYy5zcGVjaWZpZWQ/cGFyc2VJbnQoYy52YWx1ZSwxMCk6Ui50ZXN0KGEubm9kZU5hbWUpfHxTLnRlc3QoYS5ub2RlTmFtZSkmJmEuaHJlZj8wOmJ9fX19KSxNPXtnZXQ6ZnVuY3Rpb24oYSxjKXt2YXIgZCxlPXAucHJvcChhLGMpO3JldHVybiBlPT09ITB8fHR5cGVvZiBlIT1cImJvb2xlYW5cIiYmKGQ9YS5nZXRBdHRyaWJ1dGVOb2RlKGMpKSYmZC5ub2RlVmFsdWUhPT0hMT9jLnRvTG93ZXJDYXNlKCk6Yn0sc2V0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZDtyZXR1cm4gYj09PSExP3AucmVtb3ZlQXR0cihhLGMpOihkPXAucHJvcEZpeFtjXXx8YyxkIGluIGEmJihhW2RdPSEwKSxhLnNldEF0dHJpYnV0ZShjLGMudG9Mb3dlckNhc2UoKSkpLGN9fSxVfHwoTj17bmFtZTohMCxpZDohMCxjb29yZHM6ITB9LEw9cC52YWxIb29rcy5idXR0b249e2dldDpmdW5jdGlvbihhLGMpe3ZhciBkO3JldHVybiBkPWEuZ2V0QXR0cmlidXRlTm9kZShjKSxkJiYoTltjXT9kLnZhbHVlIT09XCJcIjpkLnNwZWNpZmllZCk/ZC52YWx1ZTpifSxzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWEuZ2V0QXR0cmlidXRlTm9kZShjKTtyZXR1cm4gZHx8KGQ9ZS5jcmVhdGVBdHRyaWJ1dGUoYyksYS5zZXRBdHRyaWJ1dGVOb2RlKGQpKSxkLnZhbHVlPWIrXCJcIn19LHAuZWFjaChbXCJ3aWR0aFwiLFwiaGVpZ2h0XCJdLGZ1bmN0aW9uKGEsYil7cC5hdHRySG9va3NbYl09cC5leHRlbmQocC5hdHRySG9va3NbYl0se3NldDpmdW5jdGlvbihhLGMpe2lmKGM9PT1cIlwiKXJldHVybiBhLnNldEF0dHJpYnV0ZShiLFwiYXV0b1wiKSxjfX0pfSkscC5hdHRySG9va3MuY29udGVudGVkaXRhYmxlPXtnZXQ6TC5nZXQsc2V0OmZ1bmN0aW9uKGEsYixjKXtiPT09XCJcIiYmKGI9XCJmYWxzZVwiKSxMLnNldChhLGIsYyl9fSkscC5zdXBwb3J0LmhyZWZOb3JtYWxpemVkfHxwLmVhY2goW1wiaHJlZlwiLFwic3JjXCIsXCJ3aWR0aFwiLFwiaGVpZ2h0XCJdLGZ1bmN0aW9uKGEsYyl7cC5hdHRySG9va3NbY109cC5leHRlbmQocC5hdHRySG9va3NbY10se2dldDpmdW5jdGlvbihhKXt2YXIgZD1hLmdldEF0dHJpYnV0ZShjLDIpO3JldHVybiBkPT09bnVsbD9iOmR9fSl9KSxwLnN1cHBvcnQuc3R5bGV8fChwLmF0dHJIb29rcy5zdHlsZT17Z2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnN0eWxlLmNzc1RleHQudG9Mb3dlckNhc2UoKXx8Yn0sc2V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEuc3R5bGUuY3NzVGV4dD1iK1wiXCJ9fSkscC5zdXBwb3J0Lm9wdFNlbGVjdGVkfHwocC5wcm9wSG9va3Muc2VsZWN0ZWQ9cC5leHRlbmQocC5wcm9wSG9va3Muc2VsZWN0ZWQse2dldDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJihiLnNlbGVjdGVkSW5kZXgsYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCksbnVsbH19KSkscC5zdXBwb3J0LmVuY3R5cGV8fChwLnByb3BGaXguZW5jdHlwZT1cImVuY29kaW5nXCIpLHAuc3VwcG9ydC5jaGVja09ufHxwLmVhY2goW1wicmFkaW9cIixcImNoZWNrYm94XCJdLGZ1bmN0aW9uKCl7cC52YWxIb29rc1t0aGlzXT17Z2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLmdldEF0dHJpYnV0ZShcInZhbHVlXCIpPT09bnVsbD9cIm9uXCI6YS52YWx1ZX19fSkscC5lYWNoKFtcInJhZGlvXCIsXCJjaGVja2JveFwiXSxmdW5jdGlvbigpe3AudmFsSG9va3NbdGhpc109cC5leHRlbmQocC52YWxIb29rc1t0aGlzXSx7c2V0OmZ1bmN0aW9uKGEsYil7aWYocC5pc0FycmF5KGIpKXJldHVybiBhLmNoZWNrZWQ9cC5pbkFycmF5KHAoYSkudmFsKCksYik+PTB9fSl9KTt2YXIgVj0vXig/OnRleHRhcmVhfGlucHV0fHNlbGVjdCkkL2ksVz0vXihbXlxcLl0qfCkoPzpcXC4oLispfCkkLyxYPS8oPzpefFxccylob3ZlcihcXC5cXFMrfClcXGIvLFk9L15rZXkvLFo9L14oPzptb3VzZXxjb250ZXh0bWVudSl8Y2xpY2svLCQ9L14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLF89ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZXZlbnQuc3BlY2lhbC5ob3Zlcj9hOmEucmVwbGFjZShYLFwibW91c2VlbnRlciQxIG1vdXNlbGVhdmUkMVwiKX07cC5ldmVudD17YWRkOmZ1bmN0aW9uKGEsYyxkLGUsZil7dmFyIGcsaCxpLGosayxsLG0sbixvLHEscjtpZihhLm5vZGVUeXBlPT09M3x8YS5ub2RlVHlwZT09PTh8fCFjfHwhZHx8IShnPXAuX2RhdGEoYSkpKXJldHVybjtkLmhhbmRsZXImJihvPWQsZD1vLmhhbmRsZXIsZj1vLnNlbGVjdG9yKSxkLmd1aWR8fChkLmd1aWQ9cC5ndWlkKyspLGk9Zy5ldmVudHMsaXx8KGcuZXZlbnRzPWk9e30pLGg9Zy5oYW5kbGUsaHx8KGcuaGFuZGxlPWg9ZnVuY3Rpb24oYSl7cmV0dXJuIHR5cGVvZiBwIT1cInVuZGVmaW5lZFwiJiYoIWF8fHAuZXZlbnQudHJpZ2dlcmVkIT09YS50eXBlKT9wLmV2ZW50LmRpc3BhdGNoLmFwcGx5KGguZWxlbSxhcmd1bWVudHMpOmJ9LGguZWxlbT1hKSxjPXAudHJpbShfKGMpKS5zcGxpdChcIiBcIik7Zm9yKGo9MDtqPGMubGVuZ3RoO2orKyl7az1XLmV4ZWMoY1tqXSl8fFtdLGw9a1sxXSxtPShrWzJdfHxcIlwiKS5zcGxpdChcIi5cIikuc29ydCgpLHI9cC5ldmVudC5zcGVjaWFsW2xdfHx7fSxsPShmP3IuZGVsZWdhdGVUeXBlOnIuYmluZFR5cGUpfHxsLHI9cC5ldmVudC5zcGVjaWFsW2xdfHx7fSxuPXAuZXh0ZW5kKHt0eXBlOmwsb3JpZ1R5cGU6a1sxXSxkYXRhOmUsaGFuZGxlcjpkLGd1aWQ6ZC5ndWlkLHNlbGVjdG9yOmYsbmVlZHNDb250ZXh0OmYmJnAuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdChmKSxuYW1lc3BhY2U6bS5qb2luKFwiLlwiKX0sbykscT1pW2xdO2lmKCFxKXtxPWlbbF09W10scS5kZWxlZ2F0ZUNvdW50PTA7aWYoIXIuc2V0dXB8fHIuc2V0dXAuY2FsbChhLGUsbSxoKT09PSExKWEuYWRkRXZlbnRMaXN0ZW5lcj9hLmFkZEV2ZW50TGlzdGVuZXIobCxoLCExKTphLmF0dGFjaEV2ZW50JiZhLmF0dGFjaEV2ZW50KFwib25cIitsLGgpfXIuYWRkJiYoci5hZGQuY2FsbChhLG4pLG4uaGFuZGxlci5ndWlkfHwobi5oYW5kbGVyLmd1aWQ9ZC5ndWlkKSksZj9xLnNwbGljZShxLmRlbGVnYXRlQ291bnQrKywwLG4pOnEucHVzaChuKSxwLmV2ZW50Lmdsb2JhbFtsXT0hMH1hPW51bGx9LGdsb2JhbDp7fSxyZW1vdmU6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZixnLGgsaSxqLGssbCxtLG4sbyxxLHI9cC5oYXNEYXRhKGEpJiZwLl9kYXRhKGEpO2lmKCFyfHwhKG09ci5ldmVudHMpKXJldHVybjtiPXAudHJpbShfKGJ8fFwiXCIpKS5zcGxpdChcIiBcIik7Zm9yKGY9MDtmPGIubGVuZ3RoO2YrKyl7Zz1XLmV4ZWMoYltmXSl8fFtdLGg9aT1nWzFdLGo9Z1syXTtpZighaCl7Zm9yKGggaW4gbSlwLmV2ZW50LnJlbW92ZShhLGgrYltmXSxjLGQsITApO2NvbnRpbnVlfW49cC5ldmVudC5zcGVjaWFsW2hdfHx7fSxoPShkP24uZGVsZWdhdGVUeXBlOm4uYmluZFR5cGUpfHxoLG89bVtoXXx8W10saz1vLmxlbmd0aCxqPWo/bmV3IFJlZ0V4cChcIihefFxcXFwuKVwiK2ouc3BsaXQoXCIuXCIpLnNvcnQoKS5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikrXCIoXFxcXC58JClcIik6bnVsbDtmb3IobD0wO2w8by5sZW5ndGg7bCsrKXE9b1tsXSwoZXx8aT09PXEub3JpZ1R5cGUpJiYoIWN8fGMuZ3VpZD09PXEuZ3VpZCkmJighanx8ai50ZXN0KHEubmFtZXNwYWNlKSkmJighZHx8ZD09PXEuc2VsZWN0b3J8fGQ9PT1cIioqXCImJnEuc2VsZWN0b3IpJiYoby5zcGxpY2UobC0tLDEpLHEuc2VsZWN0b3ImJm8uZGVsZWdhdGVDb3VudC0tLG4ucmVtb3ZlJiZuLnJlbW92ZS5jYWxsKGEscSkpO28ubGVuZ3RoPT09MCYmayE9PW8ubGVuZ3RoJiYoKCFuLnRlYXJkb3dufHxuLnRlYXJkb3duLmNhbGwoYSxqLHIuaGFuZGxlKT09PSExKSYmcC5yZW1vdmVFdmVudChhLGgsci5oYW5kbGUpLGRlbGV0ZSBtW2hdKX1wLmlzRW1wdHlPYmplY3QobSkmJihkZWxldGUgci5oYW5kbGUscC5yZW1vdmVEYXRhKGEsXCJldmVudHNcIiwhMCkpfSxjdXN0b21FdmVudDp7Z2V0RGF0YTohMCxzZXREYXRhOiEwLGNoYW5nZURhdGE6ITB9LHRyaWdnZXI6ZnVuY3Rpb24oYyxkLGYsZyl7aWYoIWZ8fGYubm9kZVR5cGUhPT0zJiZmLm5vZGVUeXBlIT09OCl7dmFyIGgsaSxqLGssbCxtLG4sbyxxLHIscz1jLnR5cGV8fGMsdD1bXTtpZigkLnRlc3QocytwLmV2ZW50LnRyaWdnZXJlZCkpcmV0dXJuO3MuaW5kZXhPZihcIiFcIik+PTAmJihzPXMuc2xpY2UoMCwtMSksaT0hMCkscy5pbmRleE9mKFwiLlwiKT49MCYmKHQ9cy5zcGxpdChcIi5cIikscz10LnNoaWZ0KCksdC5zb3J0KCkpO2lmKCghZnx8cC5ldmVudC5jdXN0b21FdmVudFtzXSkmJiFwLmV2ZW50Lmdsb2JhbFtzXSlyZXR1cm47Yz10eXBlb2YgYz09XCJvYmplY3RcIj9jW3AuZXhwYW5kb10/YzpuZXcgcC5FdmVudChzLGMpOm5ldyBwLkV2ZW50KHMpLGMudHlwZT1zLGMuaXNUcmlnZ2VyPSEwLGMuZXhjbHVzaXZlPWksYy5uYW1lc3BhY2U9dC5qb2luKFwiLlwiKSxjLm5hbWVzcGFjZV9yZT1jLm5hbWVzcGFjZT9uZXcgUmVnRXhwKFwiKF58XFxcXC4pXCIrdC5qb2luKFwiXFxcXC4oPzouKlxcXFwufClcIikrXCIoXFxcXC58JClcIik6bnVsbCxtPXMuaW5kZXhPZihcIjpcIik8MD9cIm9uXCIrczpcIlwiO2lmKCFmKXtoPXAuY2FjaGU7Zm9yKGogaW4gaCloW2pdLmV2ZW50cyYmaFtqXS5ldmVudHNbc10mJnAuZXZlbnQudHJpZ2dlcihjLGQsaFtqXS5oYW5kbGUuZWxlbSwhMCk7cmV0dXJufWMucmVzdWx0PWIsYy50YXJnZXR8fChjLnRhcmdldD1mKSxkPWQhPW51bGw/cC5tYWtlQXJyYXkoZCk6W10sZC51bnNoaWZ0KGMpLG49cC5ldmVudC5zcGVjaWFsW3NdfHx7fTtpZihuLnRyaWdnZXImJm4udHJpZ2dlci5hcHBseShmLGQpPT09ITEpcmV0dXJuO3E9W1tmLG4uYmluZFR5cGV8fHNdXTtpZighZyYmIW4ubm9CdWJibGUmJiFwLmlzV2luZG93KGYpKXtyPW4uZGVsZWdhdGVUeXBlfHxzLGs9JC50ZXN0KHIrcyk/ZjpmLnBhcmVudE5vZGU7Zm9yKGw9ZjtrO2s9ay5wYXJlbnROb2RlKXEucHVzaChbayxyXSksbD1rO2w9PT0oZi5vd25lckRvY3VtZW50fHxlKSYmcS5wdXNoKFtsLmRlZmF1bHRWaWV3fHxsLnBhcmVudFdpbmRvd3x8YSxyXSl9Zm9yKGo9MDtqPHEubGVuZ3RoJiYhYy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2orKylrPXFbal1bMF0sYy50eXBlPXFbal1bMV0sbz0ocC5fZGF0YShrLFwiZXZlbnRzXCIpfHx7fSlbYy50eXBlXSYmcC5fZGF0YShrLFwiaGFuZGxlXCIpLG8mJm8uYXBwbHkoayxkKSxvPW0mJmtbbV0sbyYmcC5hY2NlcHREYXRhKGspJiZvLmFwcGx5JiZvLmFwcGx5KGssZCk9PT0hMSYmYy5wcmV2ZW50RGVmYXVsdCgpO3JldHVybiBjLnR5cGU9cywhZyYmIWMuaXNEZWZhdWx0UHJldmVudGVkKCkmJighbi5fZGVmYXVsdHx8bi5fZGVmYXVsdC5hcHBseShmLm93bmVyRG9jdW1lbnQsZCk9PT0hMSkmJihzIT09XCJjbGlja1wifHwhcC5ub2RlTmFtZShmLFwiYVwiKSkmJnAuYWNjZXB0RGF0YShmKSYmbSYmZltzXSYmKHMhPT1cImZvY3VzXCImJnMhPT1cImJsdXJcInx8Yy50YXJnZXQub2Zmc2V0V2lkdGghPT0wKSYmIXAuaXNXaW5kb3coZikmJihsPWZbbV0sbCYmKGZbbV09bnVsbCkscC5ldmVudC50cmlnZ2VyZWQ9cyxmW3NdKCkscC5ldmVudC50cmlnZ2VyZWQ9YixsJiYoZlttXT1sKSksYy5yZXN1bHR9cmV0dXJufSxkaXNwYXRjaDpmdW5jdGlvbihjKXtjPXAuZXZlbnQuZml4KGN8fGEuZXZlbnQpO3ZhciBkLGUsZixnLGgsaSxqLGwsbSxuLG89KHAuX2RhdGEodGhpcyxcImV2ZW50c1wiKXx8e30pW2MudHlwZV18fFtdLHE9by5kZWxlZ2F0ZUNvdW50LHI9ay5jYWxsKGFyZ3VtZW50cykscz0hYy5leGNsdXNpdmUmJiFjLm5hbWVzcGFjZSx0PXAuZXZlbnQuc3BlY2lhbFtjLnR5cGVdfHx7fSx1PVtdO3JbMF09YyxjLmRlbGVnYXRlVGFyZ2V0PXRoaXM7aWYodC5wcmVEaXNwYXRjaCYmdC5wcmVEaXNwYXRjaC5jYWxsKHRoaXMsYyk9PT0hMSlyZXR1cm47aWYocSYmKCFjLmJ1dHRvbnx8Yy50eXBlIT09XCJjbGlja1wiKSlmb3IoZj1jLnRhcmdldDtmIT10aGlzO2Y9Zi5wYXJlbnROb2RlfHx0aGlzKWlmKGYuZGlzYWJsZWQhPT0hMHx8Yy50eXBlIT09XCJjbGlja1wiKXtoPXt9LGo9W107Zm9yKGQ9MDtkPHE7ZCsrKWw9b1tkXSxtPWwuc2VsZWN0b3IsaFttXT09PWImJihoW21dPWwubmVlZHNDb250ZXh0P3AobSx0aGlzKS5pbmRleChmKT49MDpwLmZpbmQobSx0aGlzLG51bGwsW2ZdKS5sZW5ndGgpLGhbbV0mJmoucHVzaChsKTtqLmxlbmd0aCYmdS5wdXNoKHtlbGVtOmYsbWF0Y2hlczpqfSl9by5sZW5ndGg+cSYmdS5wdXNoKHtlbGVtOnRoaXMsbWF0Y2hlczpvLnNsaWNlKHEpfSk7Zm9yKGQ9MDtkPHUubGVuZ3RoJiYhYy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl7aT11W2RdLGMuY3VycmVudFRhcmdldD1pLmVsZW07Zm9yKGU9MDtlPGkubWF0Y2hlcy5sZW5ndGgmJiFjLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCk7ZSsrKXtsPWkubWF0Y2hlc1tlXTtpZihzfHwhYy5uYW1lc3BhY2UmJiFsLm5hbWVzcGFjZXx8Yy5uYW1lc3BhY2VfcmUmJmMubmFtZXNwYWNlX3JlLnRlc3QobC5uYW1lc3BhY2UpKWMuZGF0YT1sLmRhdGEsYy5oYW5kbGVPYmo9bCxnPSgocC5ldmVudC5zcGVjaWFsW2wub3JpZ1R5cGVdfHx7fSkuaGFuZGxlfHxsLmhhbmRsZXIpLmFwcGx5KGkuZWxlbSxyKSxnIT09YiYmKGMucmVzdWx0PWcsZz09PSExJiYoYy5wcmV2ZW50RGVmYXVsdCgpLGMuc3RvcFByb3BhZ2F0aW9uKCkpKX19cmV0dXJuIHQucG9zdERpc3BhdGNoJiZ0LnBvc3REaXNwYXRjaC5jYWxsKHRoaXMsYyksYy5yZXN1bHR9LHByb3BzOlwiYXR0ckNoYW5nZSBhdHRyTmFtZSByZWxhdGVkTm9kZSBzcmNFbGVtZW50IGFsdEtleSBidWJibGVzIGNhbmNlbGFibGUgY3RybEtleSBjdXJyZW50VGFyZ2V0IGV2ZW50UGhhc2UgbWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaFwiLnNwbGl0KFwiIFwiKSxmaXhIb29rczp7fSxrZXlIb29rczp7cHJvcHM6XCJjaGFyIGNoYXJDb2RlIGtleSBrZXlDb2RlXCIuc3BsaXQoXCIgXCIpLGZpbHRlcjpmdW5jdGlvbihhLGIpe3JldHVybiBhLndoaWNoPT1udWxsJiYoYS53aGljaD1iLmNoYXJDb2RlIT1udWxsP2IuY2hhckNvZGU6Yi5rZXlDb2RlKSxhfX0sbW91c2VIb29rczp7cHJvcHM6XCJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VYIHBhZ2VZIHNjcmVlblggc2NyZWVuWSB0b0VsZW1lbnRcIi5zcGxpdChcIiBcIiksZmlsdGVyOmZ1bmN0aW9uKGEsYyl7dmFyIGQsZixnLGg9Yy5idXR0b24saT1jLmZyb21FbGVtZW50O3JldHVybiBhLnBhZ2VYPT1udWxsJiZjLmNsaWVudFghPW51bGwmJihkPWEudGFyZ2V0Lm93bmVyRG9jdW1lbnR8fGUsZj1kLmRvY3VtZW50RWxlbWVudCxnPWQuYm9keSxhLnBhZ2VYPWMuY2xpZW50WCsoZiYmZi5zY3JvbGxMZWZ0fHxnJiZnLnNjcm9sbExlZnR8fDApLShmJiZmLmNsaWVudExlZnR8fGcmJmcuY2xpZW50TGVmdHx8MCksYS5wYWdlWT1jLmNsaWVudFkrKGYmJmYuc2Nyb2xsVG9wfHxnJiZnLnNjcm9sbFRvcHx8MCktKGYmJmYuY2xpZW50VG9wfHxnJiZnLmNsaWVudFRvcHx8MCkpLCFhLnJlbGF0ZWRUYXJnZXQmJmkmJihhLnJlbGF0ZWRUYXJnZXQ9aT09PWEudGFyZ2V0P2MudG9FbGVtZW50OmkpLCFhLndoaWNoJiZoIT09YiYmKGEud2hpY2g9aCYxPzE6aCYyPzM6aCY0PzI6MCksYX19LGZpeDpmdW5jdGlvbihhKXtpZihhW3AuZXhwYW5kb10pcmV0dXJuIGE7dmFyIGIsYyxkPWEsZj1wLmV2ZW50LmZpeEhvb2tzW2EudHlwZV18fHt9LGc9Zi5wcm9wcz90aGlzLnByb3BzLmNvbmNhdChmLnByb3BzKTp0aGlzLnByb3BzO2E9cC5FdmVudChkKTtmb3IoYj1nLmxlbmd0aDtiOyljPWdbLS1iXSxhW2NdPWRbY107cmV0dXJuIGEudGFyZ2V0fHwoYS50YXJnZXQ9ZC5zcmNFbGVtZW50fHxlKSxhLnRhcmdldC5ub2RlVHlwZT09PTMmJihhLnRhcmdldD1hLnRhcmdldC5wYXJlbnROb2RlKSxhLm1ldGFLZXk9ISFhLm1ldGFLZXksZi5maWx0ZXI/Zi5maWx0ZXIoYSxkKTphfSxzcGVjaWFsOntsb2FkOntub0J1YmJsZTohMH0sZm9jdXM6e2RlbGVnYXRlVHlwZTpcImZvY3VzaW5cIn0sYmx1cjp7ZGVsZWdhdGVUeXBlOlwiZm9jdXNvdXRcIn0sYmVmb3JldW5sb2FkOntzZXR1cDpmdW5jdGlvbihhLGIsYyl7cC5pc1dpbmRvdyh0aGlzKSYmKHRoaXMub25iZWZvcmV1bmxvYWQ9Yyl9LHRlYXJkb3duOmZ1bmN0aW9uKGEsYil7dGhpcy5vbmJlZm9yZXVubG9hZD09PWImJih0aGlzLm9uYmVmb3JldW5sb2FkPW51bGwpfX19LHNpbXVsYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXAuZXh0ZW5kKG5ldyBwLkV2ZW50LGMse3R5cGU6YSxpc1NpbXVsYXRlZDohMCxvcmlnaW5hbEV2ZW50Ont9fSk7ZD9wLmV2ZW50LnRyaWdnZXIoZSxudWxsLGIpOnAuZXZlbnQuZGlzcGF0Y2guY2FsbChiLGUpLGUuaXNEZWZhdWx0UHJldmVudGVkKCkmJmMucHJldmVudERlZmF1bHQoKX19LHAuZXZlbnQuaGFuZGxlPXAuZXZlbnQuZGlzcGF0Y2gscC5yZW1vdmVFdmVudD1lLnJlbW92ZUV2ZW50TGlzdGVuZXI/ZnVuY3Rpb24oYSxiLGMpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lciYmYS5yZW1vdmVFdmVudExpc3RlbmVyKGIsYywhMSl9OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1cIm9uXCIrYjthLmRldGFjaEV2ZW50JiYodHlwZW9mIGFbZF09PVwidW5kZWZpbmVkXCImJihhW2RdPW51bGwpLGEuZGV0YWNoRXZlbnQoZCxjKSl9LHAuRXZlbnQ9ZnVuY3Rpb24oYSxiKXtpZih0aGlzIGluc3RhbmNlb2YgcC5FdmVudClhJiZhLnR5cGU/KHRoaXMub3JpZ2luYWxFdmVudD1hLHRoaXMudHlwZT1hLnR5cGUsdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YS5kZWZhdWx0UHJldmVudGVkfHxhLnJldHVyblZhbHVlPT09ITF8fGEuZ2V0UHJldmVudERlZmF1bHQmJmEuZ2V0UHJldmVudERlZmF1bHQoKT9iYjpiYSk6dGhpcy50eXBlPWEsYiYmcC5leHRlbmQodGhpcyxiKSx0aGlzLnRpbWVTdGFtcD1hJiZhLnRpbWVTdGFtcHx8cC5ub3coKSx0aGlzW3AuZXhwYW5kb109ITA7ZWxzZSByZXR1cm4gbmV3IHAuRXZlbnQoYSxiKX0scC5FdmVudC5wcm90b3R5cGU9e3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmI7dmFyIGE9dGhpcy5vcmlnaW5hbEV2ZW50O2lmKCFhKXJldHVybjthLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTphLnJldHVyblZhbHVlPSExfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJiO3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDtpZighYSlyZXR1cm47YS5zdG9wUHJvcGFnYXRpb24mJmEuc3RvcFByb3BhZ2F0aW9uKCksYS5jYW5jZWxCdWJibGU9ITB9LHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9YmIsdGhpcy5zdG9wUHJvcGFnYXRpb24oKX0saXNEZWZhdWx0UHJldmVudGVkOmJhLGlzUHJvcGFnYXRpb25TdG9wcGVkOmJhLGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOmJhfSxwLmVhY2goe21vdXNlZW50ZXI6XCJtb3VzZW92ZXJcIixtb3VzZWxlYXZlOlwibW91c2VvdXRcIn0sZnVuY3Rpb24oYSxiKXtwLmV2ZW50LnNwZWNpYWxbYV09e2RlbGVnYXRlVHlwZTpiLGJpbmRUeXBlOmIsaGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBjLGQ9dGhpcyxlPWEucmVsYXRlZFRhcmdldCxmPWEuaGFuZGxlT2JqLGc9Zi5zZWxlY3RvcjtpZighZXx8ZSE9PWQmJiFwLmNvbnRhaW5zKGQsZSkpYS50eXBlPWYub3JpZ1R5cGUsYz1mLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGEudHlwZT1iO3JldHVybiBjfX19KSxwLnN1cHBvcnQuc3VibWl0QnViYmxlc3x8KHAuZXZlbnQuc3BlY2lhbC5zdWJtaXQ9e3NldHVwOmZ1bmN0aW9uKCl7aWYocC5ub2RlTmFtZSh0aGlzLFwiZm9ybVwiKSlyZXR1cm4hMTtwLmV2ZW50LmFkZCh0aGlzLFwiY2xpY2suX3N1Ym1pdCBrZXlwcmVzcy5fc3VibWl0XCIsZnVuY3Rpb24oYSl7dmFyIGM9YS50YXJnZXQsZD1wLm5vZGVOYW1lKGMsXCJpbnB1dFwiKXx8cC5ub2RlTmFtZShjLFwiYnV0dG9uXCIpP2MuZm9ybTpiO2QmJiFwLl9kYXRhKGQsXCJfc3VibWl0X2F0dGFjaGVkXCIpJiYocC5ldmVudC5hZGQoZCxcInN1Ym1pdC5fc3VibWl0XCIsZnVuY3Rpb24oYSl7YS5fc3VibWl0X2J1YmJsZT0hMH0pLHAuX2RhdGEoZCxcIl9zdWJtaXRfYXR0YWNoZWRcIiwhMCkpfSl9LHBvc3REaXNwYXRjaDpmdW5jdGlvbihhKXthLl9zdWJtaXRfYnViYmxlJiYoZGVsZXRlIGEuX3N1Ym1pdF9idWJibGUsdGhpcy5wYXJlbnROb2RlJiYhYS5pc1RyaWdnZXImJnAuZXZlbnQuc2ltdWxhdGUoXCJzdWJtaXRcIix0aGlzLnBhcmVudE5vZGUsYSwhMCkpfSx0ZWFyZG93bjpmdW5jdGlvbigpe2lmKHAubm9kZU5hbWUodGhpcyxcImZvcm1cIikpcmV0dXJuITE7cC5ldmVudC5yZW1vdmUodGhpcyxcIi5fc3VibWl0XCIpfX0pLHAuc3VwcG9ydC5jaGFuZ2VCdWJibGVzfHwocC5ldmVudC5zcGVjaWFsLmNoYW5nZT17c2V0dXA6ZnVuY3Rpb24oKXtpZihWLnRlc3QodGhpcy5ub2RlTmFtZSkpe2lmKHRoaXMudHlwZT09PVwiY2hlY2tib3hcInx8dGhpcy50eXBlPT09XCJyYWRpb1wiKXAuZXZlbnQuYWRkKHRoaXMsXCJwcm9wZXJ0eWNoYW5nZS5fY2hhbmdlXCIsZnVuY3Rpb24oYSl7YS5vcmlnaW5hbEV2ZW50LnByb3BlcnR5TmFtZT09PVwiY2hlY2tlZFwiJiYodGhpcy5fanVzdF9jaGFuZ2VkPSEwKX0pLHAuZXZlbnQuYWRkKHRoaXMsXCJjbGljay5fY2hhbmdlXCIsZnVuY3Rpb24oYSl7dGhpcy5fanVzdF9jaGFuZ2VkJiYhYS5pc1RyaWdnZXImJih0aGlzLl9qdXN0X2NoYW5nZWQ9ITEpLHAuZXZlbnQuc2ltdWxhdGUoXCJjaGFuZ2VcIix0aGlzLGEsITApfSk7cmV0dXJuITF9cC5ldmVudC5hZGQodGhpcyxcImJlZm9yZWFjdGl2YXRlLl9jaGFuZ2VcIixmdW5jdGlvbihhKXt2YXIgYj1hLnRhcmdldDtWLnRlc3QoYi5ub2RlTmFtZSkmJiFwLl9kYXRhKGIsXCJfY2hhbmdlX2F0dGFjaGVkXCIpJiYocC5ldmVudC5hZGQoYixcImNoYW5nZS5fY2hhbmdlXCIsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlJiYhYS5pc1NpbXVsYXRlZCYmIWEuaXNUcmlnZ2VyJiZwLmV2ZW50LnNpbXVsYXRlKFwiY2hhbmdlXCIsdGhpcy5wYXJlbnROb2RlLGEsITApfSkscC5fZGF0YShiLFwiX2NoYW5nZV9hdHRhY2hlZFwiLCEwKSl9KX0saGFuZGxlOmZ1bmN0aW9uKGEpe3ZhciBiPWEudGFyZ2V0O2lmKHRoaXMhPT1ifHxhLmlzU2ltdWxhdGVkfHxhLmlzVHJpZ2dlcnx8Yi50eXBlIT09XCJyYWRpb1wiJiZiLnR5cGUhPT1cImNoZWNrYm94XCIpcmV0dXJuIGEuaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3JldHVybiBwLmV2ZW50LnJlbW92ZSh0aGlzLFwiLl9jaGFuZ2VcIiksIVYudGVzdCh0aGlzLm5vZGVOYW1lKX19KSxwLnN1cHBvcnQuZm9jdXNpbkJ1YmJsZXN8fHAuZWFjaCh7Zm9jdXM6XCJmb2N1c2luXCIsYmx1cjpcImZvY3Vzb3V0XCJ9LGZ1bmN0aW9uKGEsYil7dmFyIGM9MCxkPWZ1bmN0aW9uKGEpe3AuZXZlbnQuc2ltdWxhdGUoYixhLnRhcmdldCxwLmV2ZW50LmZpeChhKSwhMCl9O3AuZXZlbnQuc3BlY2lhbFtiXT17c2V0dXA6ZnVuY3Rpb24oKXtjKys9PT0wJiZlLmFkZEV2ZW50TGlzdGVuZXIoYSxkLCEwKX0sdGVhcmRvd246ZnVuY3Rpb24oKXstLWM9PT0wJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIoYSxkLCEwKX19fSkscC5mbi5leHRlbmQoe29uOmZ1bmN0aW9uKGEsYyxkLGUsZil7dmFyIGcsaDtpZih0eXBlb2YgYT09XCJvYmplY3RcIil7dHlwZW9mIGMhPVwic3RyaW5nXCImJihkPWR8fGMsYz1iKTtmb3IoaCBpbiBhKXRoaXMub24oaCxjLGQsYVtoXSxmKTtyZXR1cm4gdGhpc31kPT1udWxsJiZlPT1udWxsPyhlPWMsZD1jPWIpOmU9PW51bGwmJih0eXBlb2YgYz09XCJzdHJpbmdcIj8oZT1kLGQ9Yik6KGU9ZCxkPWMsYz1iKSk7aWYoZT09PSExKWU9YmE7ZWxzZSBpZighZSlyZXR1cm4gdGhpcztyZXR1cm4gZj09PTEmJihnPWUsZT1mdW5jdGlvbihhKXtyZXR1cm4gcCgpLm9mZihhKSxnLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZS5ndWlkPWcuZ3VpZHx8KGcuZ3VpZD1wLmd1aWQrKykpLHRoaXMuZWFjaChmdW5jdGlvbigpe3AuZXZlbnQuYWRkKHRoaXMsYSxlLGQsYyl9KX0sb25lOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB0aGlzLm9uKGEsYixjLGQsMSl9LG9mZjpmdW5jdGlvbihhLGMsZCl7dmFyIGUsZjtpZihhJiZhLnByZXZlbnREZWZhdWx0JiZhLmhhbmRsZU9iailyZXR1cm4gZT1hLmhhbmRsZU9iaixwKGEuZGVsZWdhdGVUYXJnZXQpLm9mZihlLm5hbWVzcGFjZT9lLm9yaWdUeXBlK1wiLlwiK2UubmFtZXNwYWNlOmUub3JpZ1R5cGUsZS5zZWxlY3RvcixlLmhhbmRsZXIpLHRoaXM7aWYodHlwZW9mIGE9PVwib2JqZWN0XCIpe2ZvcihmIGluIGEpdGhpcy5vZmYoZixjLGFbZl0pO3JldHVybiB0aGlzfWlmKGM9PT0hMXx8dHlwZW9mIGM9PVwiZnVuY3Rpb25cIilkPWMsYz1iO3JldHVybiBkPT09ITEmJihkPWJhKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtwLmV2ZW50LnJlbW92ZSh0aGlzLGEsZCxjKX0pfSxiaW5kOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5vbihhLG51bGwsYixjKX0sdW5iaW5kOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMub2ZmKGEsbnVsbCxiKX0sbGl2ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHAodGhpcy5jb250ZXh0KS5vbihhLHRoaXMuc2VsZWN0b3IsYixjKSx0aGlzfSxkaWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gcCh0aGlzLmNvbnRleHQpLm9mZihhLHRoaXMuc2VsZWN0b3J8fFwiKipcIixiKSx0aGlzfSxkZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihiLGEsYyxkKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg9PT0xP3RoaXMub2ZmKGEsXCIqKlwiKTp0aGlzLm9mZihiLGF8fFwiKipcIixjKX0sdHJpZ2dlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtwLmV2ZW50LnRyaWdnZXIoYSxiLHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKGEsYil7aWYodGhpc1swXSlyZXR1cm4gcC5ldmVudC50cmlnZ2VyKGEsYix0aGlzWzBdLCEwKX0sdG9nZ2xlOmZ1bmN0aW9uKGEpe3ZhciBiPWFyZ3VtZW50cyxjPWEuZ3VpZHx8cC5ndWlkKyssZD0wLGU9ZnVuY3Rpb24oYyl7dmFyIGU9KHAuX2RhdGEodGhpcyxcImxhc3RUb2dnbGVcIithLmd1aWQpfHwwKSVkO3JldHVybiBwLl9kYXRhKHRoaXMsXCJsYXN0VG9nZ2xlXCIrYS5ndWlkLGUrMSksYy5wcmV2ZW50RGVmYXVsdCgpLGJbZV0uYXBwbHkodGhpcyxhcmd1bWVudHMpfHwhMX07ZS5ndWlkPWM7d2hpbGUoZDxiLmxlbmd0aCliW2QrK10uZ3VpZD1jO3JldHVybiB0aGlzLmNsaWNrKGUpfSxob3ZlcjpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLm1vdXNlZW50ZXIoYSkubW91c2VsZWF2ZShifHxhKX19KSxwLmVhY2goXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgbG9hZCByZXNpemUgc2Nyb2xsIHVubG9hZCBjbGljayBkYmxjbGljayBtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGVycm9yIGNvbnRleHRtZW51XCIuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKGEsYil7cC5mbltiXT1mdW5jdGlvbihhLGMpe3JldHVybiBjPT1udWxsJiYoYz1hLGE9bnVsbCksYXJndW1lbnRzLmxlbmd0aD4wP3RoaXMub24oYixudWxsLGEsYyk6dGhpcy50cmlnZ2VyKGIpfSxZLnRlc3QoYikmJihwLmV2ZW50LmZpeEhvb2tzW2JdPXAuZXZlbnQua2V5SG9va3MpLFoudGVzdChiKSYmKHAuZXZlbnQuZml4SG9va3NbYl09cC5ldmVudC5tb3VzZUhvb2tzKX0pLGZ1bmN0aW9uKGEsYil7ZnVuY3Rpb24gYmMoYSxiLGMsZCl7Yz1jfHxbXSxiPWJ8fHI7dmFyIGUsZixpLGosaz1iLm5vZGVUeXBlO2lmKCFhfHx0eXBlb2YgYSE9XCJzdHJpbmdcIilyZXR1cm4gYztpZihrIT09MSYmayE9PTkpcmV0dXJuW107aT1nKGIpO2lmKCFpJiYhZClpZihlPVAuZXhlYyhhKSlpZihqPWVbMV0pe2lmKGs9PT05KXtmPWIuZ2V0RWxlbWVudEJ5SWQoaik7aWYoIWZ8fCFmLnBhcmVudE5vZGUpcmV0dXJuIGM7aWYoZi5pZD09PWopcmV0dXJuIGMucHVzaChmKSxjfWVsc2UgaWYoYi5vd25lckRvY3VtZW50JiYoZj1iLm93bmVyRG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaikpJiZoKGIsZikmJmYuaWQ9PT1qKXJldHVybiBjLnB1c2goZiksY31lbHNle2lmKGVbMl0pcmV0dXJuIHcuYXBwbHkoYyx4LmNhbGwoYi5nZXRFbGVtZW50c0J5VGFnTmFtZShhKSwwKSksYztpZigoaj1lWzNdKSYmXyYmYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXJldHVybiB3LmFwcGx5KGMseC5jYWxsKGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShqKSwwKSksY31yZXR1cm4gYnAoYS5yZXBsYWNlKEwsXCIkMVwiKSxiLGMsZCxpKX1mdW5jdGlvbiBiZChhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBjPT09XCJpbnB1dFwiJiZiLnR5cGU9PT1hfX1mdW5jdGlvbiBiZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dmFyIGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybihjPT09XCJpbnB1dFwifHxjPT09XCJidXR0b25cIikmJmIudHlwZT09PWF9fWZ1bmN0aW9uIGJmKGEpe3JldHVybiB6KGZ1bmN0aW9uKGIpe3JldHVybiBiPStiLHooZnVuY3Rpb24oYyxkKXt2YXIgZSxmPWEoW10sYy5sZW5ndGgsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pY1tlPWZbZ11dJiYoY1tlXT0hKGRbZV09Y1tlXSkpfSl9KX1mdW5jdGlvbiBiZyhhLGIsYyl7aWYoYT09PWIpcmV0dXJuIGM7dmFyIGQ9YS5uZXh0U2libGluZzt3aGlsZShkKXtpZihkPT09YilyZXR1cm4tMTtkPWQubmV4dFNpYmxpbmd9cmV0dXJuIDF9ZnVuY3Rpb24gYmgoYSxiKXt2YXIgYyxkLGYsZyxoLGksaixrPUNbb11bYV07aWYoaylyZXR1cm4gYj8wOmsuc2xpY2UoMCk7aD1hLGk9W10saj1lLnByZUZpbHRlcjt3aGlsZShoKXtpZighY3x8KGQ9TS5leGVjKGgpKSlkJiYoaD1oLnNsaWNlKGRbMF0ubGVuZ3RoKSksaS5wdXNoKGY9W10pO2M9ITE7aWYoZD1OLmV4ZWMoaCkpZi5wdXNoKGM9bmV3IHEoZC5zaGlmdCgpKSksaD1oLnNsaWNlKGMubGVuZ3RoKSxjLnR5cGU9ZFswXS5yZXBsYWNlKEwsXCIgXCIpO2ZvcihnIGluIGUuZmlsdGVyKShkPVdbZ10uZXhlYyhoKSkmJighaltnXXx8KGQ9altnXShkLHIsITApKSkmJihmLnB1c2goYz1uZXcgcShkLnNoaWZ0KCkpKSxoPWguc2xpY2UoYy5sZW5ndGgpLGMudHlwZT1nLGMubWF0Y2hlcz1kKTtpZighYylicmVha31yZXR1cm4gYj9oLmxlbmd0aDpoP2JjLmVycm9yKGEpOkMoYSxpKS5zbGljZSgwKX1mdW5jdGlvbiBiaShhLGIsZCl7dmFyIGU9Yi5kaXIsZj1kJiZiLmRpcj09PVwicGFyZW50Tm9kZVwiLGc9dSsrO3JldHVybiBiLmZpcnN0P2Z1bmN0aW9uKGIsYyxkKXt3aGlsZShiPWJbZV0paWYoZnx8Yi5ub2RlVHlwZT09PTEpcmV0dXJuIGEoYixjLGQpfTpmdW5jdGlvbihiLGQsaCl7aWYoIWgpe3ZhciBpLGo9dCtcIiBcIitnK1wiIFwiLGs9aitjO3doaWxlKGI9YltlXSlpZihmfHxiLm5vZGVUeXBlPT09MSl7aWYoKGk9YltvXSk9PT1rKXJldHVybiBiLnNpenNldDtpZih0eXBlb2YgaT09XCJzdHJpbmdcIiYmaS5pbmRleE9mKGopPT09MCl7aWYoYi5zaXpzZXQpcmV0dXJuIGJ9ZWxzZXtiW29dPWs7aWYoYShiLGQsaCkpcmV0dXJuIGIuc2l6c2V0PSEwLGI7Yi5zaXpzZXQ9ITF9fX1lbHNlIHdoaWxlKGI9YltlXSlpZihmfHxiLm5vZGVUeXBlPT09MSlpZihhKGIsZCxoKSlyZXR1cm4gYn19ZnVuY3Rpb24gYmooYSl7cmV0dXJuIGEubGVuZ3RoPjE/ZnVuY3Rpb24oYixjLGQpe3ZhciBlPWEubGVuZ3RoO3doaWxlKGUtLSlpZighYVtlXShiLGMsZCkpcmV0dXJuITE7cmV0dXJuITB9OmFbMF19ZnVuY3Rpb24gYmsoYSxiLGMsZCxlKXt2YXIgZixnPVtdLGg9MCxpPWEubGVuZ3RoLGo9YiE9bnVsbDtmb3IoO2g8aTtoKyspaWYoZj1hW2hdKWlmKCFjfHxjKGYsZCxlKSlnLnB1c2goZiksaiYmYi5wdXNoKGgpO3JldHVybiBnfWZ1bmN0aW9uIGJsKGEsYixjLGQsZSxmKXtyZXR1cm4gZCYmIWRbb10mJihkPWJsKGQpKSxlJiYhZVtvXSYmKGU9YmwoZSxmKSkseihmdW5jdGlvbihmLGcsaCxpKXtpZihmJiZlKXJldHVybjt2YXIgaixrLGwsbT1bXSxuPVtdLG89Zy5sZW5ndGgscD1mfHxibyhifHxcIipcIixoLm5vZGVUeXBlP1toXTpoLFtdLGYpLHE9YSYmKGZ8fCFiKT9iayhwLG0sYSxoLGkpOnAscj1jP2V8fChmP2E6b3x8ZCk/W106ZzpxO2MmJmMocSxyLGgsaSk7aWYoZCl7bD1iayhyLG4pLGQobCxbXSxoLGkpLGo9bC5sZW5ndGg7d2hpbGUoai0tKWlmKGs9bFtqXSlyW25bal1dPSEocVtuW2pdXT1rKX1pZihmKXtqPWEmJnIubGVuZ3RoO3doaWxlKGotLSlpZihrPXJbal0pZlttW2pdXT0hKGdbbVtqXV09ayl9ZWxzZSByPWJrKHI9PT1nP3Iuc3BsaWNlKG8sci5sZW5ndGgpOnIpLGU/ZShudWxsLGcscixpKTp3LmFwcGx5KGcscil9KX1mdW5jdGlvbiBibShhKXt2YXIgYixjLGQsZj1hLmxlbmd0aCxnPWUucmVsYXRpdmVbYVswXS50eXBlXSxoPWd8fGUucmVsYXRpdmVbXCIgXCJdLGk9Zz8xOjAsaj1iaShmdW5jdGlvbihhKXtyZXR1cm4gYT09PWJ9LGgsITApLGs9YmkoZnVuY3Rpb24oYSl7cmV0dXJuIHkuY2FsbChiLGEpPi0xfSxoLCEwKSxtPVtmdW5jdGlvbihhLGMsZCl7cmV0dXJuIWcmJihkfHxjIT09bCl8fCgoYj1jKS5ub2RlVHlwZT9qKGEsYyxkKTprKGEsYyxkKSl9XTtmb3IoO2k8ZjtpKyspaWYoYz1lLnJlbGF0aXZlW2FbaV0udHlwZV0pbT1bYmkoYmoobSksYyldO2Vsc2V7Yz1lLmZpbHRlclthW2ldLnR5cGVdLmFwcGx5KG51bGwsYVtpXS5tYXRjaGVzKTtpZihjW29dKXtkPSsraTtmb3IoO2Q8ZjtkKyspaWYoZS5yZWxhdGl2ZVthW2RdLnR5cGVdKWJyZWFrO3JldHVybiBibChpPjEmJmJqKG0pLGk+MSYmYS5zbGljZSgwLGktMSkuam9pbihcIlwiKS5yZXBsYWNlKEwsXCIkMVwiKSxjLGk8ZCYmYm0oYS5zbGljZShpLGQpKSxkPGYmJmJtKGE9YS5zbGljZShkKSksZDxmJiZhLmpvaW4oXCJcIikpfW0ucHVzaChjKX1yZXR1cm4gYmoobSl9ZnVuY3Rpb24gYm4oYSxiKXt2YXIgZD1iLmxlbmd0aD4wLGY9YS5sZW5ndGg+MCxnPWZ1bmN0aW9uKGgsaSxqLGssbSl7dmFyIG4sbyxwLHE9W10scz0wLHU9XCIwXCIseD1oJiZbXSx5PW0hPW51bGwsej1sLEE9aHx8ZiYmZS5maW5kLlRBRyhcIipcIixtJiZpLnBhcmVudE5vZGV8fGkpLEI9dCs9ej09bnVsbD8xOk1hdGguRTt5JiYobD1pIT09ciYmaSxjPWcuZWwpO2Zvcig7KG49QVt1XSkhPW51bGw7dSsrKXtpZihmJiZuKXtmb3Iobz0wO3A9YVtvXTtvKyspaWYocChuLGksaikpe2sucHVzaChuKTticmVha315JiYodD1CLGM9KytnLmVsKX1kJiYoKG49IXAmJm4pJiZzLS0saCYmeC5wdXNoKG4pKX1zKz11O2lmKGQmJnUhPT1zKXtmb3Iobz0wO3A9YltvXTtvKyspcCh4LHEsaSxqKTtpZihoKXtpZihzPjApd2hpbGUodS0tKSF4W3VdJiYhcVt1XSYmKHFbdV09di5jYWxsKGspKTtxPWJrKHEpfXcuYXBwbHkoayxxKSx5JiYhaCYmcS5sZW5ndGg+MCYmcytiLmxlbmd0aD4xJiZiYy51bmlxdWVTb3J0KGspfXJldHVybiB5JiYodD1CLGw9eikseH07cmV0dXJuIGcuZWw9MCxkP3ooZyk6Z31mdW5jdGlvbiBibyhhLGIsYyxkKXt2YXIgZT0wLGY9Yi5sZW5ndGg7Zm9yKDtlPGY7ZSsrKWJjKGEsYltlXSxjLGQpO3JldHVybiBjfWZ1bmN0aW9uIGJwKGEsYixjLGQsZil7dmFyIGcsaCxqLGssbCxtPWJoKGEpLG49bS5sZW5ndGg7aWYoIWQmJm0ubGVuZ3RoPT09MSl7aD1tWzBdPW1bMF0uc2xpY2UoMCk7aWYoaC5sZW5ndGg+MiYmKGo9aFswXSkudHlwZT09PVwiSURcIiYmYi5ub2RlVHlwZT09PTkmJiFmJiZlLnJlbGF0aXZlW2hbMV0udHlwZV0pe2I9ZS5maW5kLklEKGoubWF0Y2hlc1swXS5yZXBsYWNlKFYsXCJcIiksYixmKVswXTtpZighYilyZXR1cm4gYzthPWEuc2xpY2UoaC5zaGlmdCgpLmxlbmd0aCl9Zm9yKGc9Vy5QT1MudGVzdChhKT8tMTpoLmxlbmd0aC0xO2c+PTA7Zy0tKXtqPWhbZ107aWYoZS5yZWxhdGl2ZVtrPWoudHlwZV0pYnJlYWs7aWYobD1lLmZpbmRba10paWYoZD1sKGoubWF0Y2hlc1swXS5yZXBsYWNlKFYsXCJcIiksUi50ZXN0KGhbMF0udHlwZSkmJmIucGFyZW50Tm9kZXx8YixmKSl7aC5zcGxpY2UoZywxKSxhPWQubGVuZ3RoJiZoLmpvaW4oXCJcIik7aWYoIWEpcmV0dXJuIHcuYXBwbHkoYyx4LmNhbGwoZCwwKSksYzticmVha319fXJldHVybiBpKGEsbSkoZCxiLGYsYyxSLnRlc3QoYSkpLGN9ZnVuY3Rpb24gYnEoKXt9dmFyIGMsZCxlLGYsZyxoLGksaixrLGwsbT0hMCxuPVwidW5kZWZpbmVkXCIsbz0oXCJzaXpjYWNoZVwiK01hdGgucmFuZG9tKCkpLnJlcGxhY2UoXCIuXCIsXCJcIikscT1TdHJpbmcscj1hLmRvY3VtZW50LHM9ci5kb2N1bWVudEVsZW1lbnQsdD0wLHU9MCx2PVtdLnBvcCx3PVtdLnB1c2gseD1bXS5zbGljZSx5PVtdLmluZGV4T2Z8fGZ1bmN0aW9uKGEpe3ZhciBiPTAsYz10aGlzLmxlbmd0aDtmb3IoO2I8YztiKyspaWYodGhpc1tiXT09PWEpcmV0dXJuIGI7cmV0dXJuLTF9LHo9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYVtvXT1iPT1udWxsfHxiLGF9LEE9ZnVuY3Rpb24oKXt2YXIgYT17fSxiPVtdO3JldHVybiB6KGZ1bmN0aW9uKGMsZCl7cmV0dXJuIGIucHVzaChjKT5lLmNhY2hlTGVuZ3RoJiZkZWxldGUgYVtiLnNoaWZ0KCldLGFbY109ZH0sYSl9LEI9QSgpLEM9QSgpLEQ9QSgpLEU9XCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLEY9XCIoPzpcXFxcXFxcXC58Wy1cXFxcd118W15cXFxceDAwLVxcXFx4YTBdKStcIixHPUYucmVwbGFjZShcIndcIixcIncjXCIpLEg9XCIoWypeJHwhfl0/PSlcIixJPVwiXFxcXFtcIitFK1wiKihcIitGK1wiKVwiK0UrXCIqKD86XCIrSCtFK1wiKig/OihbJ1xcXCJdKSgoPzpcXFxcXFxcXC58W15cXFxcXFxcXF0pKj8pXFxcXDN8KFwiK0crXCIpfCl8KVwiK0UrXCIqXFxcXF1cIixKPVwiOihcIitGK1wiKSg/OlxcXFwoKD86KFsnXFxcIl0pKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXSkqPylcXFxcMnwoW14oKVtcXFxcXV0qfCg/Oig/OlwiK0krXCIpfFteOl18XFxcXFxcXFwuKSp8LiopKVxcXFwpfClcIixLPVwiOihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiK0UrXCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiK0UrXCIqXFxcXCl8KSg/PVteLV18JClcIixMPW5ldyBSZWdFeHAoXCJeXCIrRStcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIrRStcIiskXCIsXCJnXCIpLE09bmV3IFJlZ0V4cChcIl5cIitFK1wiKixcIitFK1wiKlwiKSxOPW5ldyBSZWdFeHAoXCJeXCIrRStcIiooW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZj4rfl0pXCIrRStcIipcIiksTz1uZXcgUmVnRXhwKEopLFA9L14oPzojKFtcXHdcXC1dKyl8KFxcdyspfFxcLihbXFx3XFwtXSspKSQvLFE9L146bm90LyxSPS9bXFx4MjBcXHRcXHJcXG5cXGZdKlsrfl0vLFM9Lzpub3RcXCgkLyxUPS9oXFxkL2ksVT0vaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbi9pLFY9L1xcXFwoPyFcXFxcKS9nLFc9e0lEOm5ldyBSZWdFeHAoXCJeIyhcIitGK1wiKVwiKSxDTEFTUzpuZXcgUmVnRXhwKFwiXlxcXFwuKFwiK0YrXCIpXCIpLE5BTUU6bmV3IFJlZ0V4cChcIl5cXFxcW25hbWU9WydcXFwiXT8oXCIrRitcIilbJ1xcXCJdP1xcXFxdXCIpLFRBRzpuZXcgUmVnRXhwKFwiXihcIitGLnJlcGxhY2UoXCJ3XCIsXCJ3KlwiKStcIilcIiksQVRUUjpuZXcgUmVnRXhwKFwiXlwiK0kpLFBTRVVETzpuZXcgUmVnRXhwKFwiXlwiK0opLFBPUzpuZXcgUmVnRXhwKEssXCJpXCIpLENISUxEOm5ldyBSZWdFeHAoXCJeOihvbmx5fG50aHxmaXJzdHxsYXN0KS1jaGlsZCg/OlxcXFwoXCIrRStcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiK0UrXCIqKD86KFsrLV18KVwiK0UrXCIqKFxcXFxkKyl8KSlcIitFK1wiKlxcXFwpfClcIixcImlcIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoXCJeXCIrRStcIipbPit+XXxcIitLLFwiaVwiKX0sWD1mdW5jdGlvbihhKXt2YXIgYj1yLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe3JldHVybiExfWZpbmFsbHl7Yj1udWxsfX0sWT1YKGZ1bmN0aW9uKGEpe3JldHVybiBhLmFwcGVuZENoaWxkKHIuY3JlYXRlQ29tbWVudChcIlwiKSksIWEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLmxlbmd0aH0pLFo9WChmdW5jdGlvbihhKXtyZXR1cm4gYS5pbm5lckhUTUw9XCI8YSBocmVmPScjJz48L2E+XCIsYS5maXJzdENoaWxkJiZ0eXBlb2YgYS5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSE9PW4mJmEuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpPT09XCIjXCJ9KSwkPVgoZnVuY3Rpb24oYSl7YS5pbm5lckhUTUw9XCI8c2VsZWN0Pjwvc2VsZWN0PlwiO3ZhciBiPXR5cGVvZiBhLmxhc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJtdWx0aXBsZVwiKTtyZXR1cm4gYiE9PVwiYm9vbGVhblwiJiZiIT09XCJzdHJpbmdcIn0pLF89WChmdW5jdGlvbihhKXtyZXR1cm4gYS5pbm5lckhUTUw9XCI8ZGl2IGNsYXNzPSdoaWRkZW4gZSc+PC9kaXY+PGRpdiBjbGFzcz0naGlkZGVuJz48L2Rpdj5cIiwhYS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lfHwhYS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZVwiKS5sZW5ndGg/ITE6KGEubGFzdENoaWxkLmNsYXNzTmFtZT1cImVcIixhLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJlXCIpLmxlbmd0aD09PTIpfSksYmE9WChmdW5jdGlvbihhKXthLmlkPW8rMCxhLmlubmVySFRNTD1cIjxhIG5hbWU9J1wiK28rXCInPjwvYT48ZGl2IG5hbWU9J1wiK28rXCInPjwvZGl2PlwiLHMuaW5zZXJ0QmVmb3JlKGEscy5maXJzdENoaWxkKTt2YXIgYj1yLmdldEVsZW1lbnRzQnlOYW1lJiZyLmdldEVsZW1lbnRzQnlOYW1lKG8pLmxlbmd0aD09PTIrci5nZXRFbGVtZW50c0J5TmFtZShvKzApLmxlbmd0aDtyZXR1cm4gZD0hci5nZXRFbGVtZW50QnlJZChvKSxzLnJlbW92ZUNoaWxkKGEpLGJ9KTt0cnl7eC5jYWxsKHMuY2hpbGROb2RlcywwKVswXS5ub2RlVHlwZX1jYXRjaChiYil7eD1mdW5jdGlvbihhKXt2YXIgYixjPVtdO2Zvcig7Yj10aGlzW2FdO2ErKyljLnB1c2goYik7cmV0dXJuIGN9fWJjLm1hdGNoZXM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYmMoYSxudWxsLG51bGwsYil9LGJjLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihhLGIpe3JldHVybiBiYyhiLG51bGwsbnVsbCxbYV0pLmxlbmd0aD4wfSxmPWJjLmdldFRleHQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz1cIlwiLGQ9MCxlPWEubm9kZVR5cGU7aWYoZSl7aWYoZT09PTF8fGU9PT05fHxlPT09MTEpe2lmKHR5cGVvZiBhLnRleHRDb250ZW50PT1cInN0cmluZ1wiKXJldHVybiBhLnRleHRDb250ZW50O2ZvcihhPWEuZmlyc3RDaGlsZDthO2E9YS5uZXh0U2libGluZyljKz1mKGEpfWVsc2UgaWYoZT09PTN8fGU9PT00KXJldHVybiBhLm5vZGVWYWx1ZX1lbHNlIGZvcig7Yj1hW2RdO2QrKyljKz1mKGIpO3JldHVybiBjfSxnPWJjLmlzWE1MPWZ1bmN0aW9uKGEpe3ZhciBiPWEmJihhLm93bmVyRG9jdW1lbnR8fGEpLmRvY3VtZW50RWxlbWVudDtyZXR1cm4gYj9iLm5vZGVOYW1lIT09XCJIVE1MXCI6ITF9LGg9YmMuY29udGFpbnM9cy5jb250YWlucz9mdW5jdGlvbihhLGIpe3ZhciBjPWEubm9kZVR5cGU9PT05P2EuZG9jdW1lbnRFbGVtZW50OmEsZD1iJiZiLnBhcmVudE5vZGU7cmV0dXJuIGE9PT1kfHwhIShkJiZkLm5vZGVUeXBlPT09MSYmYy5jb250YWlucyYmYy5jb250YWlucyhkKSl9OnMuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYiYmISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNil9OmZ1bmN0aW9uKGEsYil7d2hpbGUoYj1iLnBhcmVudE5vZGUpaWYoYj09PWEpcmV0dXJuITA7cmV0dXJuITF9LGJjLmF0dHI9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPWcoYSk7cmV0dXJuIGR8fChiPWIudG9Mb3dlckNhc2UoKSksKGM9ZS5hdHRySGFuZGxlW2JdKT9jKGEpOmR8fCQ/YS5nZXRBdHRyaWJ1dGUoYik6KGM9YS5nZXRBdHRyaWJ1dGVOb2RlKGIpLGM/dHlwZW9mIGFbYl09PVwiYm9vbGVhblwiP2FbYl0/YjpudWxsOmMuc3BlY2lmaWVkP2MudmFsdWU6bnVsbDpudWxsKX0sZT1iYy5zZWxlY3RvcnM9e2NhY2hlTGVuZ3RoOjUwLGNyZWF0ZVBzZXVkbzp6LG1hdGNoOlcsYXR0ckhhbmRsZTpaP3t9OntocmVmOmZ1bmN0aW9uKGEpe3JldHVybiBhLmdldEF0dHJpYnV0ZShcImhyZWZcIiwyKX0sdHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpfX0sZmluZDp7SUQ6ZD9mdW5jdGlvbihhLGIsYyl7aWYodHlwZW9mIGIuZ2V0RWxlbWVudEJ5SWQhPT1uJiYhYyl7dmFyIGQ9Yi5nZXRFbGVtZW50QnlJZChhKTtyZXR1cm4gZCYmZC5wYXJlbnROb2RlP1tkXTpbXX19OmZ1bmN0aW9uKGEsYyxkKXtpZih0eXBlb2YgYy5nZXRFbGVtZW50QnlJZCE9PW4mJiFkKXt2YXIgZT1jLmdldEVsZW1lbnRCeUlkKGEpO3JldHVybiBlP2UuaWQ9PT1hfHx0eXBlb2YgZS5nZXRBdHRyaWJ1dGVOb2RlIT09biYmZS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIikudmFsdWU9PT1hP1tlXTpiOltdfX0sVEFHOlk/ZnVuY3Rpb24oYSxiKXtpZih0eXBlb2YgYi5nZXRFbGVtZW50c0J5VGFnTmFtZSE9PW4pcmV0dXJuIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSl9OmZ1bmN0aW9uKGEsYil7dmFyIGM9Yi5nZXRFbGVtZW50c0J5VGFnTmFtZShhKTtpZihhPT09XCIqXCIpe3ZhciBkLGU9W10sZj0wO2Zvcig7ZD1jW2ZdO2YrKylkLm5vZGVUeXBlPT09MSYmZS5wdXNoKGQpO3JldHVybiBlfXJldHVybiBjfSxOQU1FOmJhJiZmdW5jdGlvbihhLGIpe2lmKHR5cGVvZiBiLmdldEVsZW1lbnRzQnlOYW1lIT09bilyZXR1cm4gYi5nZXRFbGVtZW50c0J5TmFtZShuYW1lKX0sQ0xBU1M6XyYmZnVuY3Rpb24oYSxiLGMpe2lmKHR5cGVvZiBiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUhPT1uJiYhYylyZXR1cm4gYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGEpfX0scmVsYXRpdmU6e1wiPlwiOntkaXI6XCJwYXJlbnROb2RlXCIsZmlyc3Q6ITB9LFwiIFwiOntkaXI6XCJwYXJlbnROb2RlXCJ9LFwiK1wiOntkaXI6XCJwcmV2aW91c1NpYmxpbmdcIixmaXJzdDohMH0sXCJ+XCI6e2RpcjpcInByZXZpb3VzU2libGluZ1wifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKGEpe3JldHVybiBhWzFdPWFbMV0ucmVwbGFjZShWLFwiXCIpLGFbM109KGFbNF18fGFbNV18fFwiXCIpLnJlcGxhY2UoVixcIlwiKSxhWzJdPT09XCJ+PVwiJiYoYVszXT1cIiBcIithWzNdK1wiIFwiKSxhLnNsaWNlKDAsNCl9LENISUxEOmZ1bmN0aW9uKGEpe3JldHVybiBhWzFdPWFbMV0udG9Mb3dlckNhc2UoKSxhWzFdPT09XCJudGhcIj8oYVsyXXx8YmMuZXJyb3IoYVswXSksYVszXT0rKGFbM10/YVs0XSsoYVs1XXx8MSk6MiooYVsyXT09PVwiZXZlblwifHxhWzJdPT09XCJvZGRcIikpLGFbNF09KyhhWzZdK2FbN118fGFbMl09PT1cIm9kZFwiKSk6YVsyXSYmYmMuZXJyb3IoYVswXSksYX0sUFNFVURPOmZ1bmN0aW9uKGEpe3ZhciBiLGM7aWYoVy5DSElMRC50ZXN0KGFbMF0pKXJldHVybiBudWxsO2lmKGFbM10pYVsyXT1hWzNdO2Vsc2UgaWYoYj1hWzRdKU8udGVzdChiKSYmKGM9YmgoYiwhMCkpJiYoYz1iLmluZGV4T2YoXCIpXCIsYi5sZW5ndGgtYyktYi5sZW5ndGgpJiYoYj1iLnNsaWNlKDAsYyksYVswXT1hWzBdLnNsaWNlKDAsYykpLGFbMl09YjtyZXR1cm4gYS5zbGljZSgwLDMpfX0sZmlsdGVyOntJRDpkP2Z1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShWLFwiXCIpLGZ1bmN0aW9uKGIpe3JldHVybiBiLmdldEF0dHJpYnV0ZShcImlkXCIpPT09YX19OmZ1bmN0aW9uKGEpe3JldHVybiBhPWEucmVwbGFjZShWLFwiXCIpLGZ1bmN0aW9uKGIpe3ZhciBjPXR5cGVvZiBiLmdldEF0dHJpYnV0ZU5vZGUhPT1uJiZiLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtyZXR1cm4gYyYmYy52YWx1ZT09PWF9fSxUQUc6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1cIipcIj9mdW5jdGlvbigpe3JldHVybiEwfTooYT1hLnJlcGxhY2UoVixcIlwiKS50b0xvd2VyQ2FzZSgpLGZ1bmN0aW9uKGIpe3JldHVybiBiLm5vZGVOYW1lJiZiLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1hfSl9LENMQVNTOmZ1bmN0aW9uKGEpe3ZhciBiPUJbb11bYV07cmV0dXJuIGJ8fChiPUIoYSxuZXcgUmVnRXhwKFwiKF58XCIrRStcIilcIithK1wiKFwiK0UrXCJ8JClcIikpKSxmdW5jdGlvbihhKXtyZXR1cm4gYi50ZXN0KGEuY2xhc3NOYW1lfHx0eXBlb2YgYS5nZXRBdHRyaWJ1dGUhPT1uJiZhLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKX19LEFUVFI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmdW5jdGlvbihkLGUpe3ZhciBmPWJjLmF0dHIoZCxhKTtyZXR1cm4gZj09bnVsbD9iPT09XCIhPVwiOmI/KGYrPVwiXCIsYj09PVwiPVwiP2Y9PT1jOmI9PT1cIiE9XCI/ZiE9PWM6Yj09PVwiXj1cIj9jJiZmLmluZGV4T2YoYyk9PT0wOmI9PT1cIio9XCI/YyYmZi5pbmRleE9mKGMpPi0xOmI9PT1cIiQ9XCI/YyYmZi5zdWJzdHIoZi5sZW5ndGgtYy5sZW5ndGgpPT09YzpiPT09XCJ+PVwiPyhcIiBcIitmK1wiIFwiKS5pbmRleE9mKGMpPi0xOmI9PT1cInw9XCI/Zj09PWN8fGYuc3Vic3RyKDAsYy5sZW5ndGgrMSk9PT1jK1wiLVwiOiExKTohMH19LENISUxEOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiBhPT09XCJudGhcIj9mdW5jdGlvbihhKXt2YXIgYixlLGY9YS5wYXJlbnROb2RlO2lmKGM9PT0xJiZkPT09MClyZXR1cm4hMDtpZihmKXtlPTA7Zm9yKGI9Zi5maXJzdENoaWxkO2I7Yj1iLm5leHRTaWJsaW5nKWlmKGIubm9kZVR5cGU9PT0xKXtlKys7aWYoYT09PWIpYnJlYWt9fXJldHVybiBlLT1kLGU9PT1jfHxlJWM9PT0wJiZlL2M+PTB9OmZ1bmN0aW9uKGIpe3ZhciBjPWI7c3dpdGNoKGEpe2Nhc2VcIm9ubHlcIjpjYXNlXCJmaXJzdFwiOndoaWxlKGM9Yy5wcmV2aW91c1NpYmxpbmcpaWYoYy5ub2RlVHlwZT09PTEpcmV0dXJuITE7aWYoYT09PVwiZmlyc3RcIilyZXR1cm4hMDtjPWI7Y2FzZVwibGFzdFwiOndoaWxlKGM9Yy5uZXh0U2libGluZylpZihjLm5vZGVUeXBlPT09MSlyZXR1cm4hMTtyZXR1cm4hMH19fSxQU0VVRE86ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPWUucHNldWRvc1thXXx8ZS5zZXRGaWx0ZXJzW2EudG9Mb3dlckNhc2UoKV18fGJjLmVycm9yKFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIithKTtyZXR1cm4gZFtvXT9kKGIpOmQubGVuZ3RoPjE/KGM9W2EsYSxcIlwiLGJdLGUuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eShhLnRvTG93ZXJDYXNlKCkpP3ooZnVuY3Rpb24oYSxjKXt2YXIgZSxmPWQoYSxiKSxnPWYubGVuZ3RoO3doaWxlKGctLSllPXkuY2FsbChhLGZbZ10pLGFbZV09IShjW2VdPWZbZ10pfSk6ZnVuY3Rpb24oYSl7cmV0dXJuIGQoYSwwLGMpfSk6ZH19LHBzZXVkb3M6e25vdDp6KGZ1bmN0aW9uKGEpe3ZhciBiPVtdLGM9W10sZD1pKGEucmVwbGFjZShMLFwiJDFcIikpO3JldHVybiBkW29dP3ooZnVuY3Rpb24oYSxiLGMsZSl7dmFyIGYsZz1kKGEsbnVsbCxlLFtdKSxoPWEubGVuZ3RoO3doaWxlKGgtLSlpZihmPWdbaF0pYVtoXT0hKGJbaF09Zil9KTpmdW5jdGlvbihhLGUsZil7cmV0dXJuIGJbMF09YSxkKGIsbnVsbCxmLGMpLCFjLnBvcCgpfX0pLGhhczp6KGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4gYmMoYSxiKS5sZW5ndGg+MH19KSxjb250YWluczp6KGZ1bmN0aW9uKGEpe3JldHVybiBmdW5jdGlvbihiKXtyZXR1cm4oYi50ZXh0Q29udGVudHx8Yi5pbm5lclRleHR8fGYoYikpLmluZGV4T2YoYSk+LTF9fSksZW5hYmxlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kaXNhYmxlZD09PSExfSxkaXNhYmxlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5kaXNhYmxlZD09PSEwfSxjaGVja2VkOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYj09PVwiaW5wdXRcIiYmISFhLmNoZWNrZWR8fGI9PT1cIm9wdGlvblwiJiYhIWEuc2VsZWN0ZWR9LHNlbGVjdGVkOmZ1bmN0aW9uKGEpe3JldHVybiBhLnBhcmVudE5vZGUmJmEucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LGEuc2VsZWN0ZWQ9PT0hMH0scGFyZW50OmZ1bmN0aW9uKGEpe3JldHVybiFlLnBzZXVkb3MuZW1wdHkoYSl9LGVtcHR5OmZ1bmN0aW9uKGEpe3ZhciBiO2E9YS5maXJzdENoaWxkO3doaWxlKGEpe2lmKGEubm9kZU5hbWU+XCJAXCJ8fChiPWEubm9kZVR5cGUpPT09M3x8Yj09PTQpcmV0dXJuITE7YT1hLm5leHRTaWJsaW5nfXJldHVybiEwfSxoZWFkZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIFQudGVzdChhLm5vZGVOYW1lKX0sdGV4dDpmdW5jdGlvbihhKXt2YXIgYixjO3JldHVybiBhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1cImlucHV0XCImJihiPWEudHlwZSk9PT1cInRleHRcIiYmKChjPWEuZ2V0QXR0cmlidXRlKFwidHlwZVwiKSk9PW51bGx8fGMudG9Mb3dlckNhc2UoKT09PWIpfSxyYWRpbzpiZChcInJhZGlvXCIpLGNoZWNrYm94OmJkKFwiY2hlY2tib3hcIiksZmlsZTpiZChcImZpbGVcIikscGFzc3dvcmQ6YmQoXCJwYXNzd29yZFwiKSxpbWFnZTpiZChcImltYWdlXCIpLHN1Ym1pdDpiZShcInN1Ym1pdFwiKSxyZXNldDpiZShcInJlc2V0XCIpLGJ1dHRvbjpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGI9PT1cImlucHV0XCImJmEudHlwZT09PVwiYnV0dG9uXCJ8fGI9PT1cImJ1dHRvblwifSxpbnB1dDpmdW5jdGlvbihhKXtyZXR1cm4gVS50ZXN0KGEubm9kZU5hbWUpfSxmb2N1czpmdW5jdGlvbihhKXt2YXIgYj1hLm93bmVyRG9jdW1lbnQ7cmV0dXJuIGE9PT1iLmFjdGl2ZUVsZW1lbnQmJighYi5oYXNGb2N1c3x8Yi5oYXNGb2N1cygpKSYmKCEhYS50eXBlfHwhIWEuaHJlZil9LGFjdGl2ZTpmdW5jdGlvbihhKXtyZXR1cm4gYT09PWEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50fSxmaXJzdDpiZihmdW5jdGlvbihhLGIsYyl7cmV0dXJuWzBdfSksbGFzdDpiZihmdW5jdGlvbihhLGIsYyl7cmV0dXJuW2ItMV19KSxlcTpiZihmdW5jdGlvbihhLGIsYyl7cmV0dXJuW2M8MD9jK2I6Y119KSxldmVuOmJmKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9MDtkPGI7ZCs9MilhLnB1c2goZCk7cmV0dXJuIGF9KSxvZGQ6YmYoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD0xO2Q8YjtkKz0yKWEucHVzaChkKTtyZXR1cm4gYX0pLGx0OmJmKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YzwwP2MrYjpjOy0tZD49MDspYS5wdXNoKGQpO3JldHVybiBhfSksZ3Q6YmYoZnVuY3Rpb24oYSxiLGMpe2Zvcih2YXIgZD1jPDA/YytiOmM7KytkPGI7KWEucHVzaChkKTtyZXR1cm4gYX0pfX0saj1zLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uP2Z1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1iPyhrPSEwLDApOighYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbnx8IWIuY29tcGFyZURvY3VtZW50UG9zaXRpb24/YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjQpPy0xOjF9OmZ1bmN0aW9uKGEsYil7aWYoYT09PWIpcmV0dXJuIGs9ITAsMDtpZihhLnNvdXJjZUluZGV4JiZiLnNvdXJjZUluZGV4KXJldHVybiBhLnNvdXJjZUluZGV4LWIuc291cmNlSW5kZXg7dmFyIGMsZCxlPVtdLGY9W10sZz1hLnBhcmVudE5vZGUsaD1iLnBhcmVudE5vZGUsaT1nO2lmKGc9PT1oKXJldHVybiBiZyhhLGIpO2lmKCFnKXJldHVybi0xO2lmKCFoKXJldHVybiAxO3doaWxlKGkpZS51bnNoaWZ0KGkpLGk9aS5wYXJlbnROb2RlO2k9aDt3aGlsZShpKWYudW5zaGlmdChpKSxpPWkucGFyZW50Tm9kZTtjPWUubGVuZ3RoLGQ9Zi5sZW5ndGg7Zm9yKHZhciBqPTA7ajxjJiZqPGQ7aisrKWlmKGVbal0hPT1mW2pdKXJldHVybiBiZyhlW2pdLGZbal0pO3JldHVybiBqPT09Yz9iZyhhLGZbal0sLTEpOmJnKGVbal0sYiwxKX0sWzAsMF0uc29ydChqKSxtPSFrLGJjLnVuaXF1ZVNvcnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYz0xO2s9bSxhLnNvcnQoaik7aWYoaylmb3IoO2I9YVtjXTtjKyspYj09PWFbYy0xXSYmYS5zcGxpY2UoYy0tLDEpO3JldHVybiBhfSxiYy5lcnJvcj1mdW5jdGlvbihhKXt0aHJvdyBuZXcgRXJyb3IoXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIithKX0saT1iYy5jb21waWxlPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXSxlPVtdLGY9RFtvXVthXTtpZighZil7Ynx8KGI9YmgoYSkpLGM9Yi5sZW5ndGg7d2hpbGUoYy0tKWY9Ym0oYltjXSksZltvXT9kLnB1c2goZik6ZS5wdXNoKGYpO2Y9RChhLGJuKGUsZCkpfXJldHVybiBmfSxyLnF1ZXJ5U2VsZWN0b3JBbGwmJmZ1bmN0aW9uKCl7dmFyIGEsYj1icCxjPS8nfFxcXFwvZyxkPS9cXD1bXFx4MjBcXHRcXHJcXG5cXGZdKihbXidcIlxcXV0qKVtcXHgyMFxcdFxcclxcblxcZl0qXFxdL2csZT1bXCI6Zm9jdXNcIl0sZj1bXCI6YWN0aXZlXCIsXCI6Zm9jdXNcIl0saD1zLm1hdGNoZXNTZWxlY3Rvcnx8cy5tb3pNYXRjaGVzU2VsZWN0b3J8fHMud2Via2l0TWF0Y2hlc1NlbGVjdG9yfHxzLm9NYXRjaGVzU2VsZWN0b3J8fHMubXNNYXRjaGVzU2VsZWN0b3I7WChmdW5jdGlvbihhKXthLmlubmVySFRNTD1cIjxzZWxlY3Q+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIixhLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbc2VsZWN0ZWRdXCIpLmxlbmd0aHx8ZS5wdXNoKFwiXFxcXFtcIitFK1wiKig/OmNoZWNrZWR8ZGlzYWJsZWR8aXNtYXB8bXVsdGlwbGV8cmVhZG9ubHl8c2VsZWN0ZWR8dmFsdWUpXCIpLGEucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aHx8ZS5wdXNoKFwiOmNoZWNrZWRcIil9KSxYKGZ1bmN0aW9uKGEpe2EuaW5uZXJIVE1MPVwiPHAgdGVzdD0nJz48L3A+XCIsYS5xdWVyeVNlbGVjdG9yQWxsKFwiW3Rlc3RePScnXVwiKS5sZW5ndGgmJmUucHVzaChcIlsqXiRdPVwiK0UrXCIqKD86XFxcIlxcXCJ8JycpXCIpLGEuaW5uZXJIVE1MPVwiPGlucHV0IHR5cGU9J2hpZGRlbicvPlwiLGEucXVlcnlTZWxlY3RvckFsbChcIjplbmFibGVkXCIpLmxlbmd0aHx8ZS5wdXNoKFwiOmVuYWJsZWRcIixcIjpkaXNhYmxlZFwiKX0pLGU9bmV3IFJlZ0V4cChlLmpvaW4oXCJ8XCIpKSxicD1mdW5jdGlvbihhLGQsZixnLGgpe2lmKCFnJiYhaCYmKCFlfHwhZS50ZXN0KGEpKSl7dmFyIGksaixrPSEwLGw9byxtPWQsbj1kLm5vZGVUeXBlPT09OSYmYTtpZihkLm5vZGVUeXBlPT09MSYmZC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIT09XCJvYmplY3RcIil7aT1iaChhKSwoaz1kLmdldEF0dHJpYnV0ZShcImlkXCIpKT9sPWsucmVwbGFjZShjLFwiXFxcXCQmXCIpOmQuc2V0QXR0cmlidXRlKFwiaWRcIixsKSxsPVwiW2lkPSdcIitsK1wiJ10gXCIsaj1pLmxlbmd0aDt3aGlsZShqLS0paVtqXT1sK2lbal0uam9pbihcIlwiKTttPVIudGVzdChhKSYmZC5wYXJlbnROb2RlfHxkLG49aS5qb2luKFwiLFwiKX1pZihuKXRyeXtyZXR1cm4gdy5hcHBseShmLHguY2FsbChtLnF1ZXJ5U2VsZWN0b3JBbGwobiksMCkpLGZ9Y2F0Y2gocCl7fWZpbmFsbHl7a3x8ZC5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKX19cmV0dXJuIGIoYSxkLGYsZyxoKX0saCYmKFgoZnVuY3Rpb24oYil7YT1oLmNhbGwoYixcImRpdlwiKTt0cnl7aC5jYWxsKGIsXCJbdGVzdCE9JyddOnNpenpsZVwiKSxmLnB1c2goXCIhPVwiLEopfWNhdGNoKGMpe319KSxmPW5ldyBSZWdFeHAoZi5qb2luKFwifFwiKSksYmMubWF0Y2hlc1NlbGVjdG9yPWZ1bmN0aW9uKGIsYyl7Yz1jLnJlcGxhY2UoZCxcIj0nJDEnXVwiKTtpZighZyhiKSYmIWYudGVzdChjKSYmKCFlfHwhZS50ZXN0KGMpKSl0cnl7dmFyIGk9aC5jYWxsKGIsYyk7aWYoaXx8YXx8Yi5kb2N1bWVudCYmYi5kb2N1bWVudC5ub2RlVHlwZSE9PTExKXJldHVybiBpfWNhdGNoKGope31yZXR1cm4gYmMoYyxudWxsLG51bGwsW2JdKS5sZW5ndGg+MH0pfSgpLGUucHNldWRvcy5udGg9ZS5wc2V1ZG9zLmVxLGUuZmlsdGVycz1icS5wcm90b3R5cGU9ZS5wc2V1ZG9zLGUuc2V0RmlsdGVycz1uZXcgYnEsYmMuYXR0cj1wLmF0dHIscC5maW5kPWJjLHAuZXhwcj1iYy5zZWxlY3RvcnMscC5leHByW1wiOlwiXT1wLmV4cHIucHNldWRvcyxwLnVuaXF1ZT1iYy51bmlxdWVTb3J0LHAudGV4dD1iYy5nZXRUZXh0LHAuaXNYTUxEb2M9YmMuaXNYTUwscC5jb250YWlucz1iYy5jb250YWluc30oYSk7dmFyIGJjPS9VbnRpbCQvLGJkPS9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLGJlPS9eLlteOiNcXFtcXC4sXSokLyxiZj1wLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LGJnPXtjaGlsZHJlbjohMCxjb250ZW50czohMCxuZXh0OiEwLHByZXY6ITB9O3AuZm4uZXh0ZW5kKHtmaW5kOmZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoPXRoaXM7aWYodHlwZW9mIGEhPVwic3RyaW5nXCIpcmV0dXJuIHAoYSkuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGI9MCxjPWgubGVuZ3RoO2I8YztiKyspaWYocC5jb250YWlucyhoW2JdLHRoaXMpKXJldHVybiEwfSk7Zz10aGlzLnB1c2hTdGFjayhcIlwiLFwiZmluZFwiLGEpO2ZvcihiPTAsYz10aGlzLmxlbmd0aDtiPGM7YisrKXtkPWcubGVuZ3RoLHAuZmluZChhLHRoaXNbYl0sZyk7aWYoYj4wKWZvcihlPWQ7ZTxnLmxlbmd0aDtlKyspZm9yKGY9MDtmPGQ7ZisrKWlmKGdbZl09PT1nW2VdKXtnLnNwbGljZShlLS0sMSk7YnJlYWt9fXJldHVybiBnfSxoYXM6ZnVuY3Rpb24oYSl7dmFyIGIsYz1wKGEsdGhpcyksZD1jLmxlbmd0aDtyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oKXtmb3IoYj0wO2I8ZDtiKyspaWYocC5jb250YWlucyh0aGlzLGNbYl0pKXJldHVybiEwfSl9LG5vdDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soYmoodGhpcyxhLCExKSxcIm5vdFwiLGEpfSxmaWx0ZXI6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGJqKHRoaXMsYSwhMCksXCJmaWx0ZXJcIixhKX0saXM6ZnVuY3Rpb24oYSl7cmV0dXJuISFhJiYodHlwZW9mIGE9PVwic3RyaW5nXCI/YmYudGVzdChhKT9wKGEsdGhpcy5jb250ZXh0KS5pbmRleCh0aGlzWzBdKT49MDpwLmZpbHRlcihhLHRoaXMpLmxlbmd0aD4wOnRoaXMuZmlsdGVyKGEpLmxlbmd0aD4wKX0sY2xvc2VzdDpmdW5jdGlvbihhLGIpe3ZhciBjLGQ9MCxlPXRoaXMubGVuZ3RoLGY9W10sZz1iZi50ZXN0KGEpfHx0eXBlb2YgYSE9XCJzdHJpbmdcIj9wKGEsYnx8dGhpcy5jb250ZXh0KTowO2Zvcig7ZDxlO2QrKyl7Yz10aGlzW2RdO3doaWxlKGMmJmMub3duZXJEb2N1bWVudCYmYyE9PWImJmMubm9kZVR5cGUhPT0xMSl7aWYoZz9nLmluZGV4KGMpPi0xOnAuZmluZC5tYXRjaGVzU2VsZWN0b3IoYyxhKSl7Zi5wdXNoKGMpO2JyZWFrfWM9Yy5wYXJlbnROb2RlfX1yZXR1cm4gZj1mLmxlbmd0aD4xP3AudW5pcXVlKGYpOmYsdGhpcy5wdXNoU3RhY2soZixcImNsb3Nlc3RcIixhKX0saW5kZXg6ZnVuY3Rpb24oYSl7cmV0dXJuIGE/dHlwZW9mIGE9PVwic3RyaW5nXCI/cC5pbkFycmF5KHRoaXNbMF0scChhKSk6cC5pbkFycmF5KGEuanF1ZXJ5P2FbMF06YSx0aGlzKTp0aGlzWzBdJiZ0aGlzWzBdLnBhcmVudE5vZGU/dGhpcy5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYT09XCJzdHJpbmdcIj9wKGEsYik6cC5tYWtlQXJyYXkoYSYmYS5ub2RlVHlwZT9bYV06YSksZD1wLm1lcmdlKHRoaXMuZ2V0KCksYyk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGJoKGNbMF0pfHxiaChkWzBdKT9kOnAudW5pcXVlKGQpKX0sYWRkQmFjazpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hZGQoYT09bnVsbD90aGlzLnByZXZPYmplY3Q6dGhpcy5wcmV2T2JqZWN0LmZpbHRlcihhKSl9fSkscC5mbi5hbmRTZWxmPXAuZm4uYWRkQmFjayxwLmVhY2goe3BhcmVudDpmdW5jdGlvbihhKXt2YXIgYj1hLnBhcmVudE5vZGU7cmV0dXJuIGImJmIubm9kZVR5cGUhPT0xMT9iOm51bGx9LHBhcmVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZGlyKGEsXCJwYXJlbnROb2RlXCIpfSxwYXJlbnRzVW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBwLmRpcihhLFwicGFyZW50Tm9kZVwiLGMpfSxuZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBiaShhLFwibmV4dFNpYmxpbmdcIil9LHByZXY6ZnVuY3Rpb24oYSl7cmV0dXJuIGJpKGEsXCJwcmV2aW91c1NpYmxpbmdcIil9LG5leHRBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZGlyKGEsXCJuZXh0U2libGluZ1wiKX0scHJldkFsbDpmdW5jdGlvbihhKXtyZXR1cm4gcC5kaXIoYSxcInByZXZpb3VzU2libGluZ1wiKX0sbmV4dFVudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gcC5kaXIoYSxcIm5leHRTaWJsaW5nXCIsYyl9LHByZXZVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHAuZGlyKGEsXCJwcmV2aW91c1NpYmxpbmdcIixjKX0sc2libGluZ3M6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuc2libGluZygoYS5wYXJlbnROb2RlfHx7fSkuZmlyc3RDaGlsZCxhKX0sY2hpbGRyZW46ZnVuY3Rpb24oYSl7cmV0dXJuIHAuc2libGluZyhhLmZpcnN0Q2hpbGQpfSxjb250ZW50czpmdW5jdGlvbihhKXtyZXR1cm4gcC5ub2RlTmFtZShhLFwiaWZyYW1lXCIpP2EuY29udGVudERvY3VtZW50fHxhLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ6cC5tZXJnZShbXSxhLmNoaWxkTm9kZXMpfX0sZnVuY3Rpb24oYSxiKXtwLmZuW2FdPWZ1bmN0aW9uKGMsZCl7dmFyIGU9cC5tYXAodGhpcyxiLGMpO3JldHVybiBiYy50ZXN0KGEpfHwoZD1jKSxkJiZ0eXBlb2YgZD09XCJzdHJpbmdcIiYmKGU9cC5maWx0ZXIoZCxlKSksZT10aGlzLmxlbmd0aD4xJiYhYmdbYV0/cC51bmlxdWUoZSk6ZSx0aGlzLmxlbmd0aD4xJiZiZC50ZXN0KGEpJiYoZT1lLnJldmVyc2UoKSksdGhpcy5wdXNoU3RhY2soZSxhLGsuY2FsbChhcmd1bWVudHMpLmpvaW4oXCIsXCIpKX19KSxwLmV4dGVuZCh7ZmlsdGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gYyYmKGE9XCI6bm90KFwiK2ErXCIpXCIpLGIubGVuZ3RoPT09MT9wLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGJbMF0sYSk/W2JbMF1dOltdOnAuZmluZC5tYXRjaGVzKGEsYil9LGRpcjpmdW5jdGlvbihhLGMsZCl7dmFyIGU9W10sZj1hW2NdO3doaWxlKGYmJmYubm9kZVR5cGUhPT05JiYoZD09PWJ8fGYubm9kZVR5cGUhPT0xfHwhcChmKS5pcyhkKSkpZi5ub2RlVHlwZT09PTEmJmUucHVzaChmKSxmPWZbY107cmV0dXJuIGV9LHNpYmxpbmc6ZnVuY3Rpb24oYSxiKXt2YXIgYz1bXTtmb3IoO2E7YT1hLm5leHRTaWJsaW5nKWEubm9kZVR5cGU9PT0xJiZhIT09YiYmYy5wdXNoKGEpO3JldHVybiBjfX0pO3ZhciBibD1cImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8ZGV0YWlsc3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8aGVhZGVyfGhncm91cHxtYXJrfG1ldGVyfG5hdnxvdXRwdXR8cHJvZ3Jlc3N8c2VjdGlvbnxzdW1tYXJ5fHRpbWV8dmlkZW9cIixibT0vIGpRdWVyeVxcZCs9XCIoPzpudWxsfFxcZCspXCIvZyxibj0vXlxccysvLGJvPS88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFtcXHc6XSspW14+XSopXFwvPi9naSxicD0vPChbXFx3Ol0rKS8sYnE9Lzx0Ym9keS9pLGJyPS88fCYjP1xcdys7Lyxicz0vPCg/OnNjcmlwdHxzdHlsZXxsaW5rKS9pLGJ0PS88KD86c2NyaXB0fG9iamVjdHxlbWJlZHxvcHRpb258c3R5bGUpL2ksYnU9bmV3IFJlZ0V4cChcIjwoPzpcIitibCtcIilbXFxcXHMvPl1cIixcImlcIiksYnY9L14oPzpjaGVja2JveHxyYWRpbykkLyxidz0vY2hlY2tlZFxccyooPzpbXj1dfD1cXHMqLmNoZWNrZWQuKS9pLGJ4PS9cXC8oamF2YXxlY21hKXNjcmlwdC9pLGJ5PS9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8XFwtXFwtKXxbXFxdXFwtXXsyfT5cXHMqJC9nLGJ6PXtvcHRpb246WzEsXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsXCI8L3NlbGVjdD5cIl0sbGVnZW5kOlsxLFwiPGZpZWxkc2V0PlwiLFwiPC9maWVsZHNldD5cIl0sdGhlYWQ6WzEsXCI8dGFibGU+XCIsXCI8L3RhYmxlPlwiXSx0cjpbMixcIjx0YWJsZT48dGJvZHk+XCIsXCI8L3Rib2R5PjwvdGFibGU+XCJdLHRkOlszLFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIl0sY29sOlsyLFwiPHRhYmxlPjx0Ym9keT48L3Rib2R5Pjxjb2xncm91cD5cIixcIjwvY29sZ3JvdXA+PC90YWJsZT5cIl0sYXJlYTpbMSxcIjxtYXA+XCIsXCI8L21hcD5cIl0sX2RlZmF1bHQ6WzAsXCJcIixcIlwiXX0sYkE9YmsoZSksYkI9YkEuYXBwZW5kQ2hpbGQoZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKTtiei5vcHRncm91cD1iei5vcHRpb24sYnoudGJvZHk9YnoudGZvb3Q9YnouY29sZ3JvdXA9YnouY2FwdGlvbj1iei50aGVhZCxiei50aD1iei50ZCxwLnN1cHBvcnQuaHRtbFNlcmlhbGl6ZXx8KGJ6Ll9kZWZhdWx0PVsxLFwiWDxkaXY+XCIsXCI8L2Rpdj5cIl0pLHAuZm4uZXh0ZW5kKHt0ZXh0OmZ1bmN0aW9uKGEpe3JldHVybiBwLmFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGEpe3JldHVybiBhPT09Yj9wLnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmFwcGVuZCgodGhpc1swXSYmdGhpc1swXS5vd25lckRvY3VtZW50fHxlKS5jcmVhdGVUZXh0Tm9kZShhKSl9LG51bGwsYSxhcmd1bWVudHMubGVuZ3RoKX0sd3JhcEFsbDpmdW5jdGlvbihhKXtpZihwLmlzRnVuY3Rpb24oYSkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihiKXtwKHRoaXMpLndyYXBBbGwoYS5jYWxsKHRoaXMsYikpfSk7aWYodGhpc1swXSl7dmFyIGI9cChhLHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCkuY2xvbmUoITApO3RoaXNbMF0ucGFyZW50Tm9kZSYmYi5pbnNlcnRCZWZvcmUodGhpc1swXSksYi5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzO3doaWxlKGEuZmlyc3RDaGlsZCYmYS5maXJzdENoaWxkLm5vZGVUeXBlPT09MSlhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX0pLmFwcGVuZCh0aGlzKX1yZXR1cm4gdGhpc30sd3JhcElubmVyOmZ1bmN0aW9uKGEpe3JldHVybiBwLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGIpe3AodGhpcykud3JhcElubmVyKGEuY2FsbCh0aGlzLGIpKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPXAodGhpcyksYz1iLmNvbnRlbnRzKCk7Yy5sZW5ndGg/Yy53cmFwQWxsKGEpOmIuYXBwZW5kKGEpfSl9LHdyYXA6ZnVuY3Rpb24oYSl7dmFyIGI9cC5pc0Z1bmN0aW9uKGEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYyl7cCh0aGlzKS53cmFwQWxsKGI/YS5jYWxsKHRoaXMsYyk6YSl9KX0sdW53cmFwOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaChmdW5jdGlvbigpe3Aubm9kZU5hbWUodGhpcyxcImJvZHlcIil8fHAodGhpcykucmVwbGFjZVdpdGgodGhpcy5jaGlsZE5vZGVzKX0pLmVuZCgpfSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsITAsZnVuY3Rpb24oYSl7KHRoaXMubm9kZVR5cGU9PT0xfHx0aGlzLm5vZGVUeXBlPT09MTEpJiZ0aGlzLmFwcGVuZENoaWxkKGEpfSl9LHByZXBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsITAsZnVuY3Rpb24oYSl7KHRoaXMubm9kZVR5cGU9PT0xfHx0aGlzLm5vZGVUeXBlPT09MTEpJiZ0aGlzLmluc2VydEJlZm9yZShhLHRoaXMuZmlyc3RDaGlsZCl9KX0sYmVmb3JlOmZ1bmN0aW9uKCl7aWYoIWJoKHRoaXNbMF0pKXJldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cywhMSxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcyl9KTtpZihhcmd1bWVudHMubGVuZ3RoKXt2YXIgYT1wLmNsZWFuKGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHAubWVyZ2UoYSx0aGlzKSxcImJlZm9yZVwiLHRoaXMuc2VsZWN0b3IpfX0sYWZ0ZXI6ZnVuY3Rpb24oKXtpZighYmgodGhpc1swXSkpcmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCExLGZ1bmN0aW9uKGEpe3RoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSx0aGlzLm5leHRTaWJsaW5nKX0pO2lmKGFyZ3VtZW50cy5sZW5ndGgpe3ZhciBhPXAuY2xlYW4oYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2socC5tZXJnZSh0aGlzLGEpLFwiYWZ0ZXJcIix0aGlzLnNlbGVjdG9yKX19LHJlbW92ZTpmdW5jdGlvbihhLGIpe3ZhciBjLGQ9MDtmb3IoOyhjPXRoaXNbZF0pIT1udWxsO2QrKylpZighYXx8cC5maWx0ZXIoYSxbY10pLmxlbmd0aCkhYiYmYy5ub2RlVHlwZT09PTEmJihwLmNsZWFuRGF0YShjLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSkscC5jbGVhbkRhdGEoW2NdKSksYy5wYXJlbnROb2RlJiZjLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7dmFyIGEsYj0wO2Zvcig7KGE9dGhpc1tiXSkhPW51bGw7YisrKXthLm5vZGVUeXBlPT09MSYmcC5jbGVhbkRhdGEoYS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikpO3doaWxlKGEuZmlyc3RDaGlsZClhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCl9cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9YT09bnVsbD8hMTphLGI9Yj09bnVsbD9hOmIsdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gcC5jbG9uZSh0aGlzLGEsYil9KX0saHRtbDpmdW5jdGlvbihhKXtyZXR1cm4gcC5hY2Nlc3ModGhpcyxmdW5jdGlvbihhKXt2YXIgYz10aGlzWzBdfHx7fSxkPTAsZT10aGlzLmxlbmd0aDtpZihhPT09YilyZXR1cm4gYy5ub2RlVHlwZT09PTE/Yy5pbm5lckhUTUwucmVwbGFjZShibSxcIlwiKTpiO2lmKHR5cGVvZiBhPT1cInN0cmluZ1wiJiYhYnMudGVzdChhKSYmKHAuc3VwcG9ydC5odG1sU2VyaWFsaXplfHwhYnUudGVzdChhKSkmJihwLnN1cHBvcnQubGVhZGluZ1doaXRlc3BhY2V8fCFibi50ZXN0KGEpKSYmIWJ6WyhicC5leGVjKGEpfHxbXCJcIixcIlwiXSlbMV0udG9Mb3dlckNhc2UoKV0pe2E9YS5yZXBsYWNlKGJvLFwiPCQxPjwvJDI+XCIpO3RyeXtmb3IoO2Q8ZTtkKyspYz10aGlzW2RdfHx7fSxjLm5vZGVUeXBlPT09MSYmKHAuY2xlYW5EYXRhKGMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpKSxjLmlubmVySFRNTD1hKTtjPTB9Y2F0Y2goZil7fX1jJiZ0aGlzLmVtcHR5KCkuYXBwZW5kKGEpfSxudWxsLGEsYXJndW1lbnRzLmxlbmd0aCl9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKGEpe3JldHVybiBiaCh0aGlzWzBdKT90aGlzLmxlbmd0aD90aGlzLnB1c2hTdGFjayhwKHAuaXNGdW5jdGlvbihhKT9hKCk6YSksXCJyZXBsYWNlV2l0aFwiLGEpOnRoaXM6cC5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihiKXt2YXIgYz1wKHRoaXMpLGQ9Yy5odG1sKCk7Yy5yZXBsYWNlV2l0aChhLmNhbGwodGhpcyxiLGQpKX0pOih0eXBlb2YgYSE9XCJzdHJpbmdcIiYmKGE9cChhKS5kZXRhY2goKSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9dGhpcy5uZXh0U2libGluZyxjPXRoaXMucGFyZW50Tm9kZTtwKHRoaXMpLnJlbW92ZSgpLGI/cChiKS5iZWZvcmUoYSk6cChjKS5hcHBlbmQoYSl9KSl9LGRldGFjaDpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5yZW1vdmUoYSwhMCl9LGRvbU1hbmlwOmZ1bmN0aW9uKGEsYyxkKXthPVtdLmNvbmNhdC5hcHBseShbXSxhKTt2YXIgZSxmLGcsaCxpPTAsaj1hWzBdLGs9W10sbD10aGlzLmxlbmd0aDtpZighcC5zdXBwb3J0LmNoZWNrQ2xvbmUmJmw+MSYmdHlwZW9mIGo9PVwic3RyaW5nXCImJmJ3LnRlc3QoaikpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3AodGhpcykuZG9tTWFuaXAoYSxjLGQpfSk7aWYocC5pc0Z1bmN0aW9uKGopKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oZSl7dmFyIGY9cCh0aGlzKTthWzBdPWouY2FsbCh0aGlzLGUsYz9mLmh0bWwoKTpiKSxmLmRvbU1hbmlwKGEsYyxkKX0pO2lmKHRoaXNbMF0pe2U9cC5idWlsZEZyYWdtZW50KGEsdGhpcyxrKSxnPWUuZnJhZ21lbnQsZj1nLmZpcnN0Q2hpbGQsZy5jaGlsZE5vZGVzLmxlbmd0aD09PTEmJihnPWYpO2lmKGYpe2M9YyYmcC5ub2RlTmFtZShmLFwidHJcIik7Zm9yKGg9ZS5jYWNoZWFibGV8fGwtMTtpPGw7aSsrKWQuY2FsbChjJiZwLm5vZGVOYW1lKHRoaXNbaV0sXCJ0YWJsZVwiKT9iQyh0aGlzW2ldLFwidGJvZHlcIik6dGhpc1tpXSxpPT09aD9nOnAuY2xvbmUoZywhMCwhMCkpfWc9Zj1udWxsLGsubGVuZ3RoJiZwLmVhY2goayxmdW5jdGlvbihhLGIpe2Iuc3JjP3AuYWpheD9wLmFqYXgoe3VybDpiLnNyYyx0eXBlOlwiR0VUXCIsZGF0YVR5cGU6XCJzY3JpcHRcIixhc3luYzohMSxnbG9iYWw6ITEsXCJ0aHJvd3NcIjohMH0pOnAuZXJyb3IoXCJubyBhamF4XCIpOnAuZ2xvYmFsRXZhbCgoYi50ZXh0fHxiLnRleHRDb250ZW50fHxiLmlubmVySFRNTHx8XCJcIikucmVwbGFjZShieSxcIlwiKSksYi5wYXJlbnROb2RlJiZiLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYil9KX1yZXR1cm4gdGhpc319KSxwLmJ1aWxkRnJhZ21lbnQ9ZnVuY3Rpb24oYSxjLGQpe3ZhciBmLGcsaCxpPWFbMF07cmV0dXJuIGM9Y3x8ZSxjPSFjLm5vZGVUeXBlJiZjWzBdfHxjLGM9Yy5vd25lckRvY3VtZW50fHxjLGEubGVuZ3RoPT09MSYmdHlwZW9mIGk9PVwic3RyaW5nXCImJmkubGVuZ3RoPDUxMiYmYz09PWUmJmkuY2hhckF0KDApPT09XCI8XCImJiFidC50ZXN0KGkpJiYocC5zdXBwb3J0LmNoZWNrQ2xvbmV8fCFidy50ZXN0KGkpKSYmKHAuc3VwcG9ydC5odG1sNUNsb25lfHwhYnUudGVzdChpKSkmJihnPSEwLGY9cC5mcmFnbWVudHNbaV0saD1mIT09YiksZnx8KGY9Yy5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscC5jbGVhbihhLGMsZixkKSxnJiYocC5mcmFnbWVudHNbaV09aCYmZikpLHtmcmFnbWVudDpmLGNhY2hlYWJsZTpnfX0scC5mcmFnbWVudHM9e30scC5lYWNoKHthcHBlbmRUbzpcImFwcGVuZFwiLHByZXBlbmRUbzpcInByZXBlbmRcIixpbnNlcnRCZWZvcmU6XCJiZWZvcmVcIixpbnNlcnRBZnRlcjpcImFmdGVyXCIscmVwbGFjZUFsbDpcInJlcGxhY2VXaXRoXCJ9LGZ1bmN0aW9uKGEsYil7cC5mblthXT1mdW5jdGlvbihjKXt2YXIgZCxlPTAsZj1bXSxnPXAoYyksaD1nLmxlbmd0aCxpPXRoaXMubGVuZ3RoPT09MSYmdGhpc1swXS5wYXJlbnROb2RlO2lmKChpPT1udWxsfHxpJiZpLm5vZGVUeXBlPT09MTEmJmkuY2hpbGROb2Rlcy5sZW5ndGg9PT0xKSYmaD09PTEpcmV0dXJuIGdbYl0odGhpc1swXSksdGhpcztmb3IoO2U8aDtlKyspZD0oZT4wP3RoaXMuY2xvbmUoITApOnRoaXMpLmdldCgpLHAoZ1tlXSlbYl0oZCksZj1mLmNvbmNhdChkKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soZixhLGcuc2VsZWN0b3IpfX0pLHAuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZSxmLGc7cC5zdXBwb3J0Lmh0bWw1Q2xvbmV8fHAuaXNYTUxEb2MoYSl8fCFidS50ZXN0KFwiPFwiK2Eubm9kZU5hbWUrXCI+XCIpP2c9YS5jbG9uZU5vZGUoITApOihiQi5pbm5lckhUTUw9YS5vdXRlckhUTUwsYkIucmVtb3ZlQ2hpbGQoZz1iQi5maXJzdENoaWxkKSk7aWYoKCFwLnN1cHBvcnQubm9DbG9uZUV2ZW50fHwhcC5zdXBwb3J0Lm5vQ2xvbmVDaGVja2VkKSYmKGEubm9kZVR5cGU9PT0xfHxhLm5vZGVUeXBlPT09MTEpJiYhcC5pc1hNTERvYyhhKSl7YkUoYSxnKSxkPWJGKGEpLGU9YkYoZyk7Zm9yKGY9MDtkW2ZdOysrZillW2ZdJiZiRShkW2ZdLGVbZl0pfWlmKGIpe2JEKGEsZyk7aWYoYyl7ZD1iRihhKSxlPWJGKGcpO2ZvcihmPTA7ZFtmXTsrK2YpYkQoZFtmXSxlW2ZdKX19cmV0dXJuIGQ9ZT1udWxsLGd9LGNsZWFuOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBmLGcsaCxpLGosayxsLG0sbixvLHEscixzPWI9PT1lJiZiQSx0PVtdO2lmKCFifHx0eXBlb2YgYi5jcmVhdGVEb2N1bWVudEZyYWdtZW50PT1cInVuZGVmaW5lZFwiKWI9ZTtmb3IoZj0wOyhoPWFbZl0pIT1udWxsO2YrKyl7dHlwZW9mIGg9PVwibnVtYmVyXCImJihoKz1cIlwiKTtpZighaCljb250aW51ZTtpZih0eXBlb2YgaD09XCJzdHJpbmdcIilpZighYnIudGVzdChoKSloPWIuY3JlYXRlVGV4dE5vZGUoaCk7ZWxzZXtzPXN8fGJrKGIpLGw9Yi5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLHMuYXBwZW5kQ2hpbGQobCksaD1oLnJlcGxhY2UoYm8sXCI8JDE+PC8kMj5cIiksaT0oYnAuZXhlYyhoKXx8W1wiXCIsXCJcIl0pWzFdLnRvTG93ZXJDYXNlKCksaj1ieltpXXx8YnouX2RlZmF1bHQsaz1qWzBdLGwuaW5uZXJIVE1MPWpbMV0raCtqWzJdO3doaWxlKGstLSlsPWwubGFzdENoaWxkO2lmKCFwLnN1cHBvcnQudGJvZHkpe209YnEudGVzdChoKSxuPWk9PT1cInRhYmxlXCImJiFtP2wuZmlyc3RDaGlsZCYmbC5maXJzdENoaWxkLmNoaWxkTm9kZXM6alsxXT09PVwiPHRhYmxlPlwiJiYhbT9sLmNoaWxkTm9kZXM6W107Zm9yKGc9bi5sZW5ndGgtMTtnPj0wOy0tZylwLm5vZGVOYW1lKG5bZ10sXCJ0Ym9keVwiKSYmIW5bZ10uY2hpbGROb2Rlcy5sZW5ndGgmJm5bZ10ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuW2ddKX0hcC5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlJiZibi50ZXN0KGgpJiZsLmluc2VydEJlZm9yZShiLmNyZWF0ZVRleHROb2RlKGJuLmV4ZWMoaClbMF0pLGwuZmlyc3RDaGlsZCksaD1sLmNoaWxkTm9kZXMsbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGwpfWgubm9kZVR5cGU/dC5wdXNoKGgpOnAubWVyZ2UodCxoKX1sJiYoaD1sPXM9bnVsbCk7aWYoIXAuc3VwcG9ydC5hcHBlbmRDaGVja2VkKWZvcihmPTA7KGg9dFtmXSkhPW51bGw7ZisrKXAubm9kZU5hbWUoaCxcImlucHV0XCIpP2JHKGgpOnR5cGVvZiBoLmdldEVsZW1lbnRzQnlUYWdOYW1lIT1cInVuZGVmaW5lZFwiJiZwLmdyZXAoaC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImlucHV0XCIpLGJHKTtpZihjKXtxPWZ1bmN0aW9uKGEpe2lmKCFhLnR5cGV8fGJ4LnRlc3QoYS50eXBlKSlyZXR1cm4gZD9kLnB1c2goYS5wYXJlbnROb2RlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKTphKTpjLmFwcGVuZENoaWxkKGEpfTtmb3IoZj0wOyhoPXRbZl0pIT1udWxsO2YrKylpZighcC5ub2RlTmFtZShoLFwic2NyaXB0XCIpfHwhcShoKSljLmFwcGVuZENoaWxkKGgpLHR5cGVvZiBoLmdldEVsZW1lbnRzQnlUYWdOYW1lIT1cInVuZGVmaW5lZFwiJiYocj1wLmdyZXAocC5tZXJnZShbXSxoLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpKSxxKSx0LnNwbGljZS5hcHBseSh0LFtmKzEsMF0uY29uY2F0KHIpKSxmKz1yLmxlbmd0aCl9cmV0dXJuIHR9LGNsZWFuRGF0YTpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc9MCxoPXAuZXhwYW5kbyxpPXAuY2FjaGUsaj1wLnN1cHBvcnQuZGVsZXRlRXhwYW5kbyxrPXAuZXZlbnQuc3BlY2lhbDtmb3IoOyhlPWFbZ10pIT1udWxsO2crKylpZihifHxwLmFjY2VwdERhdGEoZSkpe2Q9ZVtoXSxjPWQmJmlbZF07aWYoYyl7aWYoYy5ldmVudHMpZm9yKGYgaW4gYy5ldmVudHMpa1tmXT9wLmV2ZW50LnJlbW92ZShlLGYpOnAucmVtb3ZlRXZlbnQoZSxmLGMuaGFuZGxlKTtpW2RdJiYoZGVsZXRlIGlbZF0saj9kZWxldGUgZVtoXTplLnJlbW92ZUF0dHJpYnV0ZT9lLnJlbW92ZUF0dHJpYnV0ZShoKTplW2hdPW51bGwscC5kZWxldGVkSWRzLnB1c2goZCkpfX19fSksZnVuY3Rpb24oKXt2YXIgYSxiO3AudWFNYXRjaD1mdW5jdGlvbihhKXthPWEudG9Mb3dlckNhc2UoKTt2YXIgYj0vKGNocm9tZSlbIFxcL10oW1xcdy5dKykvLmV4ZWMoYSl8fC8od2Via2l0KVsgXFwvXShbXFx3Ll0rKS8uZXhlYyhhKXx8LyhvcGVyYSkoPzouKnZlcnNpb258KVsgXFwvXShbXFx3Ll0rKS8uZXhlYyhhKXx8Lyhtc2llKSAoW1xcdy5dKykvLmV4ZWMoYSl8fGEuaW5kZXhPZihcImNvbXBhdGlibGVcIik8MCYmLyhtb3ppbGxhKSg/Oi4qPyBydjooW1xcdy5dKyl8KS8uZXhlYyhhKXx8W107cmV0dXJue2Jyb3dzZXI6YlsxXXx8XCJcIix2ZXJzaW9uOmJbMl18fFwiMFwifX0sYT1wLnVhTWF0Y2goZy51c2VyQWdlbnQpLGI9e30sYS5icm93c2VyJiYoYlthLmJyb3dzZXJdPSEwLGIudmVyc2lvbj1hLnZlcnNpb24pLGIuY2hyb21lP2Iud2Via2l0PSEwOmIud2Via2l0JiYoYi5zYWZhcmk9ITApLHAuYnJvd3Nlcj1iLHAuc3ViPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiLGMpe3JldHVybiBuZXcgYS5mbi5pbml0KGIsYyl9cC5leHRlbmQoITAsYSx0aGlzKSxhLnN1cGVyY2xhc3M9dGhpcyxhLmZuPWEucHJvdG90eXBlPXRoaXMoKSxhLmZuLmNvbnN0cnVjdG9yPWEsYS5zdWI9dGhpcy5zdWIsYS5mbi5pbml0PWZ1bmN0aW9uIGMoYyxkKXtyZXR1cm4gZCYmZCBpbnN0YW5jZW9mIHAmJiEoZCBpbnN0YW5jZW9mIGEpJiYoZD1hKGQpKSxwLmZuLmluaXQuY2FsbCh0aGlzLGMsZCxiKX0sYS5mbi5pbml0LnByb3RvdHlwZT1hLmZuO3ZhciBiPWEoZSk7cmV0dXJuIGF9fSgpO3ZhciBiSCxiSSxiSixiSz0vYWxwaGFcXChbXildKlxcKS9pLGJMPS9vcGFjaXR5PShbXildKikvLGJNPS9eKHRvcHxyaWdodHxib3R0b218bGVmdCkkLyxiTj0vXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sYk89L15tYXJnaW4vLGJQPW5ldyBSZWdFeHAoXCJeKFwiK3ErXCIpKC4qKSRcIixcImlcIiksYlE9bmV3IFJlZ0V4cChcIl4oXCIrcStcIikoPyFweClbYS16JV0rJFwiLFwiaVwiKSxiUj1uZXcgUmVnRXhwKFwiXihbLStdKT0oXCIrcStcIilcIixcImlcIiksYlM9e30sYlQ9e3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix2aXNpYmlsaXR5OlwiaGlkZGVuXCIsZGlzcGxheTpcImJsb2NrXCJ9LGJVPXtsZXR0ZXJTcGFjaW5nOjAsZm9udFdlaWdodDo0MDB9LGJWPVtcIlRvcFwiLFwiUmlnaHRcIixcIkJvdHRvbVwiLFwiTGVmdFwiXSxiVz1bXCJXZWJraXRcIixcIk9cIixcIk1velwiLFwibXNcIl0sYlg9cC5mbi50b2dnbGU7cC5mbi5leHRlbmQoe2NzczpmdW5jdGlvbihhLGMpe3JldHVybiBwLmFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGEsYyxkKXtyZXR1cm4gZCE9PWI/cC5zdHlsZShhLGMsZCk6cC5jc3MoYSxjKX0sYSxjLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHNob3c6ZnVuY3Rpb24oKXtyZXR1cm4gYiQodGhpcywhMCl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gYiQodGhpcyl9LHRvZ2dsZTpmdW5jdGlvbihhLGIpe3ZhciBjPXR5cGVvZiBhPT1cImJvb2xlYW5cIjtyZXR1cm4gcC5pc0Z1bmN0aW9uKGEpJiZwLmlzRnVuY3Rpb24oYik/YlguYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuZWFjaChmdW5jdGlvbigpeyhjP2E6YloodGhpcykpP3AodGhpcykuc2hvdygpOnAodGhpcykuaGlkZSgpfSl9fSkscC5leHRlbmQoe2Nzc0hvb2tzOntvcGFjaXR5OntnZXQ6ZnVuY3Rpb24oYSxiKXtpZihiKXt2YXIgYz1iSChhLFwib3BhY2l0eVwiKTtyZXR1cm4gYz09PVwiXCI/XCIxXCI6Y319fX0sY3NzTnVtYmVyOntmaWxsT3BhY2l0eTohMCxmb250V2VpZ2h0OiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcnBoYW5zOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMH0sY3NzUHJvcHM6e1wiZmxvYXRcIjpwLnN1cHBvcnQuY3NzRmxvYXQ/XCJjc3NGbG9hdFwiOlwic3R5bGVGbG9hdFwifSxzdHlsZTpmdW5jdGlvbihhLGMsZCxlKXtpZighYXx8YS5ub2RlVHlwZT09PTN8fGEubm9kZVR5cGU9PT04fHwhYS5zdHlsZSlyZXR1cm47dmFyIGYsZyxoLGk9cC5jYW1lbENhc2UoYyksaj1hLnN0eWxlO2M9cC5jc3NQcm9wc1tpXXx8KHAuY3NzUHJvcHNbaV09YlkoaixpKSksaD1wLmNzc0hvb2tzW2NdfHxwLmNzc0hvb2tzW2ldO2lmKGQ9PT1iKXJldHVybiBoJiZcImdldFwiaW4gaCYmKGY9aC5nZXQoYSwhMSxlKSkhPT1iP2Y6altjXTtnPXR5cGVvZiBkLGc9PT1cInN0cmluZ1wiJiYoZj1iUi5leGVjKGQpKSYmKGQ9KGZbMV0rMSkqZlsyXStwYXJzZUZsb2F0KHAuY3NzKGEsYykpLGc9XCJudW1iZXJcIik7aWYoZD09bnVsbHx8Zz09PVwibnVtYmVyXCImJmlzTmFOKGQpKXJldHVybjtnPT09XCJudW1iZXJcIiYmIXAuY3NzTnVtYmVyW2ldJiYoZCs9XCJweFwiKTtpZighaHx8IShcInNldFwiaW4gaCl8fChkPWguc2V0KGEsZCxlKSkhPT1iKXRyeXtqW2NdPWR9Y2F0Y2goayl7fX0sY3NzOmZ1bmN0aW9uKGEsYyxkLGUpe3ZhciBmLGcsaCxpPXAuY2FtZWxDYXNlKGMpO3JldHVybiBjPXAuY3NzUHJvcHNbaV18fChwLmNzc1Byb3BzW2ldPWJZKGEuc3R5bGUsaSkpLGg9cC5jc3NIb29rc1tjXXx8cC5jc3NIb29rc1tpXSxoJiZcImdldFwiaW4gaCYmKGY9aC5nZXQoYSwhMCxlKSksZj09PWImJihmPWJIKGEsYykpLGY9PT1cIm5vcm1hbFwiJiZjIGluIGJVJiYoZj1iVVtjXSksZHx8ZSE9PWI/KGc9cGFyc2VGbG9hdChmKSxkfHxwLmlzTnVtZXJpYyhnKT9nfHwwOmYpOmZ9LHN3YXA6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZj17fTtmb3IoZSBpbiBiKWZbZV09YS5zdHlsZVtlXSxhLnN0eWxlW2VdPWJbZV07ZD1jLmNhbGwoYSk7Zm9yKGUgaW4gYilhLnN0eWxlW2VdPWZbZV07cmV0dXJuIGR9fSksYS5nZXRDb21wdXRlZFN0eWxlP2JIPWZ1bmN0aW9uKGIsYyl7dmFyIGQsZSxmLGcsaD1hLmdldENvbXB1dGVkU3R5bGUoYixudWxsKSxpPWIuc3R5bGU7cmV0dXJuIGgmJihkPWhbY10sZD09PVwiXCImJiFwLmNvbnRhaW5zKGIub3duZXJEb2N1bWVudCxiKSYmKGQ9cC5zdHlsZShiLGMpKSxiUS50ZXN0KGQpJiZiTy50ZXN0KGMpJiYoZT1pLndpZHRoLGY9aS5taW5XaWR0aCxnPWkubWF4V2lkdGgsaS5taW5XaWR0aD1pLm1heFdpZHRoPWkud2lkdGg9ZCxkPWgud2lkdGgsaS53aWR0aD1lLGkubWluV2lkdGg9ZixpLm1heFdpZHRoPWcpKSxkfTplLmRvY3VtZW50RWxlbWVudC5jdXJyZW50U3R5bGUmJihiSD1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZT1hLmN1cnJlbnRTdHlsZSYmYS5jdXJyZW50U3R5bGVbYl0sZj1hLnN0eWxlO3JldHVybiBlPT1udWxsJiZmJiZmW2JdJiYoZT1mW2JdKSxiUS50ZXN0KGUpJiYhYk0udGVzdChiKSYmKGM9Zi5sZWZ0LGQ9YS5ydW50aW1lU3R5bGUmJmEucnVudGltZVN0eWxlLmxlZnQsZCYmKGEucnVudGltZVN0eWxlLmxlZnQ9YS5jdXJyZW50U3R5bGUubGVmdCksZi5sZWZ0PWI9PT1cImZvbnRTaXplXCI/XCIxZW1cIjplLGU9Zi5waXhlbExlZnQrXCJweFwiLGYubGVmdD1jLGQmJihhLnJ1bnRpbWVTdHlsZS5sZWZ0PWQpKSxlPT09XCJcIj9cImF1dG9cIjplfSkscC5lYWNoKFtcImhlaWdodFwiLFwid2lkdGhcIl0sZnVuY3Rpb24oYSxiKXtwLmNzc0hvb2tzW2JdPXtnZXQ6ZnVuY3Rpb24oYSxjLGQpe2lmKGMpcmV0dXJuIGEub2Zmc2V0V2lkdGg9PT0wJiZiTi50ZXN0KGJIKGEsXCJkaXNwbGF5XCIpKT9wLnN3YXAoYSxiVCxmdW5jdGlvbigpe3JldHVybiBjYihhLGIsZCl9KTpjYihhLGIsZCl9LHNldDpmdW5jdGlvbihhLGMsZCl7cmV0dXJuIGJfKGEsYyxkP2NhKGEsYixkLHAuc3VwcG9ydC5ib3hTaXppbmcmJnAuY3NzKGEsXCJib3hTaXppbmdcIik9PT1cImJvcmRlci1ib3hcIik6MCl9fX0pLHAuc3VwcG9ydC5vcGFjaXR5fHwocC5jc3NIb29rcy5vcGFjaXR5PXtnZXQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYkwudGVzdCgoYiYmYS5jdXJyZW50U3R5bGU/YS5jdXJyZW50U3R5bGUuZmlsdGVyOmEuc3R5bGUuZmlsdGVyKXx8XCJcIik/LjAxKnBhcnNlRmxvYXQoUmVnRXhwLiQxKStcIlwiOmI/XCIxXCI6XCJcIn0sc2V0OmZ1bmN0aW9uKGEsYil7dmFyIGM9YS5zdHlsZSxkPWEuY3VycmVudFN0eWxlLGU9cC5pc051bWVyaWMoYik/XCJhbHBoYShvcGFjaXR5PVwiK2IqMTAwK1wiKVwiOlwiXCIsZj1kJiZkLmZpbHRlcnx8Yy5maWx0ZXJ8fFwiXCI7Yy56b29tPTE7aWYoYj49MSYmcC50cmltKGYucmVwbGFjZShiSyxcIlwiKSk9PT1cIlwiJiZjLnJlbW92ZUF0dHJpYnV0ZSl7Yy5yZW1vdmVBdHRyaWJ1dGUoXCJmaWx0ZXJcIik7aWYoZCYmIWQuZmlsdGVyKXJldHVybn1jLmZpbHRlcj1iSy50ZXN0KGYpP2YucmVwbGFjZShiSyxlKTpmK1wiIFwiK2V9fSkscChmdW5jdGlvbigpe3Auc3VwcG9ydC5yZWxpYWJsZU1hcmdpblJpZ2h0fHwocC5jc3NIb29rcy5tYXJnaW5SaWdodD17Z2V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHAuc3dhcChhLHtkaXNwbGF5OlwiaW5saW5lLWJsb2NrXCJ9LGZ1bmN0aW9uKCl7aWYoYilyZXR1cm4gYkgoYSxcIm1hcmdpblJpZ2h0XCIpfSl9fSksIXAuc3VwcG9ydC5waXhlbFBvc2l0aW9uJiZwLmZuLnBvc2l0aW9uJiZwLmVhY2goW1widG9wXCIsXCJsZWZ0XCJdLGZ1bmN0aW9uKGEsYil7cC5jc3NIb29rc1tiXT17Z2V0OmZ1bmN0aW9uKGEsYyl7aWYoYyl7dmFyIGQ9YkgoYSxiKTtyZXR1cm4gYlEudGVzdChkKT9wKGEpLnBvc2l0aW9uKClbYl0rXCJweFwiOmR9fX19KX0pLHAuZXhwciYmcC5leHByLmZpbHRlcnMmJihwLmV4cHIuZmlsdGVycy5oaWRkZW49ZnVuY3Rpb24oYSl7cmV0dXJuIGEub2Zmc2V0V2lkdGg9PT0wJiZhLm9mZnNldEhlaWdodD09PTB8fCFwLnN1cHBvcnQucmVsaWFibGVIaWRkZW5PZmZzZXRzJiYoYS5zdHlsZSYmYS5zdHlsZS5kaXNwbGF5fHxiSChhLFwiZGlzcGxheVwiKSk9PT1cIm5vbmVcIn0scC5leHByLmZpbHRlcnMudmlzaWJsZT1mdW5jdGlvbihhKXtyZXR1cm4hcC5leHByLmZpbHRlcnMuaGlkZGVuKGEpfSkscC5lYWNoKHttYXJnaW46XCJcIixwYWRkaW5nOlwiXCIsYm9yZGVyOlwiV2lkdGhcIn0sZnVuY3Rpb24oYSxiKXtwLmNzc0hvb2tzW2ErYl09e2V4cGFuZDpmdW5jdGlvbihjKXt2YXIgZCxlPXR5cGVvZiBjPT1cInN0cmluZ1wiP2Muc3BsaXQoXCIgXCIpOltjXSxmPXt9O2ZvcihkPTA7ZDw0O2QrKylmW2ErYlZbZF0rYl09ZVtkXXx8ZVtkLTJdfHxlWzBdO3JldHVybiBmfX0sYk8udGVzdChhKXx8KHAuY3NzSG9va3NbYStiXS5zZXQ9Yl8pfSk7dmFyIGNkPS8lMjAvZyxjZT0vXFxbXFxdJC8sY2Y9L1xccj9cXG4vZyxjZz0vXig/OmNvbG9yfGRhdGV8ZGF0ZXRpbWV8ZGF0ZXRpbWUtbG9jYWx8ZW1haWx8aGlkZGVufG1vbnRofG51bWJlcnxwYXNzd29yZHxyYW5nZXxzZWFyY2h8dGVsfHRleHR8dGltZXx1cmx8d2VlaykkL2ksY2g9L14oPzpzZWxlY3R8dGV4dGFyZWEpL2k7cC5mbi5leHRlbmQoe3NlcmlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiBwLnBhcmFtKHRoaXMuc2VyaWFsaXplQXJyYXkoKSl9LHNlcmlhbGl6ZUFycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudHM/cC5tYWtlQXJyYXkodGhpcy5lbGVtZW50cyk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWUmJiF0aGlzLmRpc2FibGVkJiYodGhpcy5jaGVja2VkfHxjaC50ZXN0KHRoaXMubm9kZU5hbWUpfHxjZy50ZXN0KHRoaXMudHlwZSkpfSkubWFwKGZ1bmN0aW9uKGEsYil7dmFyIGM9cCh0aGlzKS52YWwoKTtyZXR1cm4gYz09bnVsbD9udWxsOnAuaXNBcnJheShjKT9wLm1hcChjLGZ1bmN0aW9uKGEsYyl7cmV0dXJue25hbWU6Yi5uYW1lLHZhbHVlOmEucmVwbGFjZShjZixcIlxcclxcblwiKX19KTp7bmFtZTpiLm5hbWUsdmFsdWU6Yy5yZXBsYWNlKGNmLFwiXFxyXFxuXCIpfX0pLmdldCgpfX0pLHAucGFyYW09ZnVuY3Rpb24oYSxjKXt2YXIgZCxlPVtdLGY9ZnVuY3Rpb24oYSxiKXtiPXAuaXNGdW5jdGlvbihiKT9iKCk6Yj09bnVsbD9cIlwiOmIsZVtlLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KGEpK1wiPVwiK2VuY29kZVVSSUNvbXBvbmVudChiKX07Yz09PWImJihjPXAuYWpheFNldHRpbmdzJiZwLmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbCk7aWYocC5pc0FycmF5KGEpfHxhLmpxdWVyeSYmIXAuaXNQbGFpbk9iamVjdChhKSlwLmVhY2goYSxmdW5jdGlvbigpe2YodGhpcy5uYW1lLHRoaXMudmFsdWUpfSk7ZWxzZSBmb3IoZCBpbiBhKWNpKGQsYVtkXSxjLGYpO3JldHVybiBlLmpvaW4oXCImXCIpLnJlcGxhY2UoY2QsXCIrXCIpfTt2YXIgY2osY2ssY2w9LyMuKiQvLGNtPS9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKVxccj8kL21nLGNuPS9eKD86YWJvdXR8YXBwfGFwcFxcLXN0b3JhZ2V8LitcXC1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxjbz0vXig/OkdFVHxIRUFEKSQvLGNwPS9eXFwvXFwvLyxjcT0vXFw/Lyxjcj0vPHNjcmlwdFxcYltePF0qKD86KD8hPFxcL3NjcmlwdD4pPFtePF0qKSo8XFwvc2NyaXB0Pi9naSxjcz0vKFs/Jl0pXz1bXiZdKi8sY3Q9L14oW1xcd1xcK1xcLlxcLV0rOikoPzpcXC9cXC8oW15cXC8/IzpdKikoPzo6KFxcZCspfCl8KS8sY3U9cC5mbi5sb2FkLGN2PXt9LGN3PXt9LGN4PVtcIiovXCJdK1tcIipcIl07dHJ5e2NrPWYuaHJlZn1jYXRjaChjeSl7Y2s9ZS5jcmVhdGVFbGVtZW50KFwiYVwiKSxjay5ocmVmPVwiXCIsY2s9Y2suaHJlZn1jaj1jdC5leGVjKGNrLnRvTG93ZXJDYXNlKCkpfHxbXSxwLmZuLmxvYWQ9ZnVuY3Rpb24oYSxjLGQpe2lmKHR5cGVvZiBhIT1cInN0cmluZ1wiJiZjdSlyZXR1cm4gY3UuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKCF0aGlzLmxlbmd0aClyZXR1cm4gdGhpczt2YXIgZSxmLGcsaD10aGlzLGk9YS5pbmRleE9mKFwiIFwiKTtyZXR1cm4gaT49MCYmKGU9YS5zbGljZShpLGEubGVuZ3RoKSxhPWEuc2xpY2UoMCxpKSkscC5pc0Z1bmN0aW9uKGMpPyhkPWMsYz1iKTpjJiZ0eXBlb2YgYz09XCJvYmplY3RcIiYmKGY9XCJQT1NUXCIpLHAuYWpheCh7dXJsOmEsdHlwZTpmLGRhdGFUeXBlOlwiaHRtbFwiLGRhdGE6Yyxjb21wbGV0ZTpmdW5jdGlvbihhLGIpe2QmJmguZWFjaChkLGd8fFthLnJlc3BvbnNlVGV4dCxiLGFdKX19KS5kb25lKGZ1bmN0aW9uKGEpe2c9YXJndW1lbnRzLGguaHRtbChlP3AoXCI8ZGl2PlwiKS5hcHBlbmQoYS5yZXBsYWNlKGNyLFwiXCIpKS5maW5kKGUpOmEpfSksdGhpc30scC5lYWNoKFwiYWpheFN0YXJ0IGFqYXhTdG9wIGFqYXhDb21wbGV0ZSBhamF4RXJyb3IgYWpheFN1Y2Nlc3MgYWpheFNlbmRcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtwLmZuW2JdPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm9uKGIsYSl9fSkscC5lYWNoKFtcImdldFwiLFwicG9zdFwiXSxmdW5jdGlvbihhLGMpe3BbY109ZnVuY3Rpb24oYSxkLGUsZil7cmV0dXJuIHAuaXNGdW5jdGlvbihkKSYmKGY9Znx8ZSxlPWQsZD1iKSxwLmFqYXgoe3R5cGU6Yyx1cmw6YSxkYXRhOmQsc3VjY2VzczplLGRhdGFUeXBlOmZ9KX19KSxwLmV4dGVuZCh7Z2V0U2NyaXB0OmZ1bmN0aW9uKGEsYyl7cmV0dXJuIHAuZ2V0KGEsYixjLFwic2NyaXB0XCIpfSxnZXRKU09OOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gcC5nZXQoYSxiLGMsXCJqc29uXCIpfSxhamF4U2V0dXA6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYj9jQihhLHAuYWpheFNldHRpbmdzKTooYj1hLGE9cC5hamF4U2V0dGluZ3MpLGNCKGEsYiksYX0sYWpheFNldHRpbmdzOnt1cmw6Y2ssaXNMb2NhbDpjbi50ZXN0KGNqWzFdKSxnbG9iYWw6ITAsdHlwZTpcIkdFVFwiLGNvbnRlbnRUeXBlOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIscHJvY2Vzc0RhdGE6ITAsYXN5bmM6ITAsYWNjZXB0czp7eG1sOlwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLGh0bWw6XCJ0ZXh0L2h0bWxcIix0ZXh0OlwidGV4dC9wbGFpblwiLGpzb246XCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIixcIipcIjpjeH0sY29udGVudHM6e3htbDoveG1sLyxodG1sOi9odG1sLyxqc29uOi9qc29uL30scmVzcG9uc2VGaWVsZHM6e3htbDpcInJlc3BvbnNlWE1MXCIsdGV4dDpcInJlc3BvbnNlVGV4dFwifSxjb252ZXJ0ZXJzOntcIiogdGV4dFwiOmEuU3RyaW5nLFwidGV4dCBodG1sXCI6ITAsXCJ0ZXh0IGpzb25cIjpwLnBhcnNlSlNPTixcInRleHQgeG1sXCI6cC5wYXJzZVhNTH0sZmxhdE9wdGlvbnM6e2NvbnRleHQ6ITAsdXJsOiEwfX0sYWpheFByZWZpbHRlcjpjeihjdiksYWpheFRyYW5zcG9ydDpjeihjdyksYWpheDpmdW5jdGlvbihhLGMpe2Z1bmN0aW9uIHkoYSxjLGYsaSl7dmFyIGsscyx0LHUsdyx5PWM7aWYodj09PTIpcmV0dXJuO3Y9MixoJiZjbGVhclRpbWVvdXQoaCksZz1iLGU9aXx8XCJcIix4LnJlYWR5U3RhdGU9YT4wPzQ6MCxmJiYodT1jQyhsLHgsZikpO2lmKGE+PTIwMCYmYTwzMDB8fGE9PT0zMDQpbC5pZk1vZGlmaWVkJiYodz14LmdldFJlc3BvbnNlSGVhZGVyKFwiTGFzdC1Nb2RpZmllZFwiKSx3JiYocC5sYXN0TW9kaWZpZWRbZF09dyksdz14LmdldFJlc3BvbnNlSGVhZGVyKFwiRXRhZ1wiKSx3JiYocC5ldGFnW2RdPXcpKSxhPT09MzA0Pyh5PVwibm90bW9kaWZpZWRcIixrPSEwKTooaz1jRChsLHUpLHk9ay5zdGF0ZSxzPWsuZGF0YSx0PWsuZXJyb3Isaz0hdCk7ZWxzZXt0PXk7aWYoIXl8fGEpeT1cImVycm9yXCIsYTwwJiYoYT0wKX14LnN0YXR1cz1hLHguc3RhdHVzVGV4dD0oY3x8eSkrXCJcIixrP28ucmVzb2x2ZVdpdGgobSxbcyx5LHhdKTpvLnJlamVjdFdpdGgobSxbeCx5LHRdKSx4LnN0YXR1c0NvZGUocikscj1iLGomJm4udHJpZ2dlcihcImFqYXhcIisoaz9cIlN1Y2Nlc3NcIjpcIkVycm9yXCIpLFt4LGwsaz9zOnRdKSxxLmZpcmVXaXRoKG0sW3gseV0pLGomJihuLnRyaWdnZXIoXCJhamF4Q29tcGxldGVcIixbeCxsXSksLS1wLmFjdGl2ZXx8cC5ldmVudC50cmlnZ2VyKFwiYWpheFN0b3BcIikpfXR5cGVvZiBhPT1cIm9iamVjdFwiJiYoYz1hLGE9YiksYz1jfHx7fTt2YXIgZCxlLGYsZyxoLGksaixrLGw9cC5hamF4U2V0dXAoe30sYyksbT1sLmNvbnRleHR8fGwsbj1tIT09bCYmKG0ubm9kZVR5cGV8fG0gaW5zdGFuY2VvZiBwKT9wKG0pOnAuZXZlbnQsbz1wLkRlZmVycmVkKCkscT1wLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHI9bC5zdGF0dXNDb2RlfHx7fSx0PXt9LHU9e30sdj0wLHc9XCJjYW5jZWxlZFwiLHg9e3JlYWR5U3RhdGU6MCxzZXRSZXF1ZXN0SGVhZGVyOmZ1bmN0aW9uKGEsYil7aWYoIXYpe3ZhciBjPWEudG9Mb3dlckNhc2UoKTthPXVbY109dVtjXXx8YSx0W2FdPWJ9cmV0dXJuIHRoaXN9LGdldEFsbFJlc3BvbnNlSGVhZGVyczpmdW5jdGlvbigpe3JldHVybiB2PT09Mj9lOm51bGx9LGdldFJlc3BvbnNlSGVhZGVyOmZ1bmN0aW9uKGEpe3ZhciBjO2lmKHY9PT0yKXtpZighZil7Zj17fTt3aGlsZShjPWNtLmV4ZWMoZSkpZltjWzFdLnRvTG93ZXJDYXNlKCldPWNbMl19Yz1mW2EudG9Mb3dlckNhc2UoKV19cmV0dXJuIGM9PT1iP251bGw6Y30sb3ZlcnJpZGVNaW1lVHlwZTpmdW5jdGlvbihhKXtyZXR1cm4gdnx8KGwubWltZVR5cGU9YSksdGhpc30sYWJvcnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9YXx8dyxnJiZnLmFib3J0KGEpLHkoMCxhKSx0aGlzfX07by5wcm9taXNlKHgpLHguc3VjY2Vzcz14LmRvbmUseC5lcnJvcj14LmZhaWwseC5jb21wbGV0ZT1xLmFkZCx4LnN0YXR1c0NvZGU9ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI7aWYodjwyKWZvcihiIGluIGEpcltiXT1bcltiXSxhW2JdXTtlbHNlIGI9YVt4LnN0YXR1c10seC5hbHdheXMoYil9cmV0dXJuIHRoaXN9LGwudXJsPSgoYXx8bC51cmwpK1wiXCIpLnJlcGxhY2UoY2wsXCJcIikucmVwbGFjZShjcCxjalsxXStcIi8vXCIpLGwuZGF0YVR5cGVzPXAudHJpbShsLmRhdGFUeXBlfHxcIipcIikudG9Mb3dlckNhc2UoKS5zcGxpdChzKSxsLmNyb3NzRG9tYWluPT1udWxsJiYoaT1jdC5leGVjKGwudXJsLnRvTG93ZXJDYXNlKCkpfHwhMSxsLmNyb3NzRG9tYWluPWkmJmkuam9pbihcIjpcIikrKGlbM10/XCJcIjppWzFdPT09XCJodHRwOlwiPzgwOjQ0MykhPT1jai5qb2luKFwiOlwiKSsoY2pbM10/XCJcIjpjalsxXT09PVwiaHR0cDpcIj84MDo0NDMpKSxsLmRhdGEmJmwucHJvY2Vzc0RhdGEmJnR5cGVvZiBsLmRhdGEhPVwic3RyaW5nXCImJihsLmRhdGE9cC5wYXJhbShsLmRhdGEsbC50cmFkaXRpb25hbCkpLGNBKGN2LGwsYyx4KTtpZih2PT09MilyZXR1cm4geDtqPWwuZ2xvYmFsLGwudHlwZT1sLnR5cGUudG9VcHBlckNhc2UoKSxsLmhhc0NvbnRlbnQ9IWNvLnRlc3QobC50eXBlKSxqJiZwLmFjdGl2ZSsrPT09MCYmcC5ldmVudC50cmlnZ2VyKFwiYWpheFN0YXJ0XCIpO2lmKCFsLmhhc0NvbnRlbnQpe2wuZGF0YSYmKGwudXJsKz0oY3EudGVzdChsLnVybCk/XCImXCI6XCI/XCIpK2wuZGF0YSxkZWxldGUgbC5kYXRhKSxkPWwudXJsO2lmKGwuY2FjaGU9PT0hMSl7dmFyIHo9cC5ub3coKSxBPWwudXJsLnJlcGxhY2UoY3MsXCIkMV89XCIreik7bC51cmw9QSsoQT09PWwudXJsPyhjcS50ZXN0KGwudXJsKT9cIiZcIjpcIj9cIikrXCJfPVwiK3o6XCJcIil9fShsLmRhdGEmJmwuaGFzQ29udGVudCYmbC5jb250ZW50VHlwZSE9PSExfHxjLmNvbnRlbnRUeXBlKSYmeC5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsbC5jb250ZW50VHlwZSksbC5pZk1vZGlmaWVkJiYoZD1kfHxsLnVybCxwLmxhc3RNb2RpZmllZFtkXSYmeC5zZXRSZXF1ZXN0SGVhZGVyKFwiSWYtTW9kaWZpZWQtU2luY2VcIixwLmxhc3RNb2RpZmllZFtkXSkscC5ldGFnW2RdJiZ4LnNldFJlcXVlc3RIZWFkZXIoXCJJZi1Ob25lLU1hdGNoXCIscC5ldGFnW2RdKSkseC5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsbC5kYXRhVHlwZXNbMF0mJmwuYWNjZXB0c1tsLmRhdGFUeXBlc1swXV0/bC5hY2NlcHRzW2wuZGF0YVR5cGVzWzBdXSsobC5kYXRhVHlwZXNbMF0hPT1cIipcIj9cIiwgXCIrY3grXCI7IHE9MC4wMVwiOlwiXCIpOmwuYWNjZXB0c1tcIipcIl0pO2ZvcihrIGluIGwuaGVhZGVycyl4LnNldFJlcXVlc3RIZWFkZXIoayxsLmhlYWRlcnNba10pO2lmKCFsLmJlZm9yZVNlbmR8fGwuYmVmb3JlU2VuZC5jYWxsKG0seCxsKSE9PSExJiZ2IT09Mil7dz1cImFib3J0XCI7Zm9yKGsgaW57c3VjY2VzczoxLGVycm9yOjEsY29tcGxldGU6MX0peFtrXShsW2tdKTtnPWNBKGN3LGwsYyx4KTtpZighZyl5KC0xLFwiTm8gVHJhbnNwb3J0XCIpO2Vsc2V7eC5yZWFkeVN0YXRlPTEsaiYmbi50cmlnZ2VyKFwiYWpheFNlbmRcIixbeCxsXSksbC5hc3luYyYmbC50aW1lb3V0PjAmJihoPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt4LmFib3J0KFwidGltZW91dFwiKX0sbC50aW1lb3V0KSk7dHJ5e3Y9MSxnLnNlbmQodCx5KX1jYXRjaChCKXtpZih2PDIpeSgtMSxCKTtlbHNlIHRocm93IEJ9fXJldHVybiB4fXJldHVybiB4LmFib3J0KCl9LGFjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9fSk7dmFyIGNFPVtdLGNGPS9cXD8vLGNHPS8oPSlcXD8oPz0mfCQpfFxcP1xcPy8sY0g9cC5ub3coKTtwLmFqYXhTZXR1cCh7anNvbnA6XCJjYWxsYmFja1wiLGpzb25wQ2FsbGJhY2s6ZnVuY3Rpb24oKXt2YXIgYT1jRS5wb3AoKXx8cC5leHBhbmRvK1wiX1wiK2NIKys7cmV0dXJuIHRoaXNbYV09ITAsYX19KSxwLmFqYXhQcmVmaWx0ZXIoXCJqc29uIGpzb25wXCIsZnVuY3Rpb24oYyxkLGUpe3ZhciBmLGcsaCxpPWMuZGF0YSxqPWMudXJsLGs9Yy5qc29ucCE9PSExLGw9ayYmY0cudGVzdChqKSxtPWsmJiFsJiZ0eXBlb2YgaT09XCJzdHJpbmdcIiYmIShjLmNvbnRlbnRUeXBlfHxcIlwiKS5pbmRleE9mKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpJiZjRy50ZXN0KGkpO2lmKGMuZGF0YVR5cGVzWzBdPT09XCJqc29ucFwifHxsfHxtKXJldHVybiBmPWMuanNvbnBDYWxsYmFjaz1wLmlzRnVuY3Rpb24oYy5qc29ucENhbGxiYWNrKT9jLmpzb25wQ2FsbGJhY2soKTpjLmpzb25wQ2FsbGJhY2ssZz1hW2ZdLGw/Yy51cmw9ai5yZXBsYWNlKGNHLFwiJDFcIitmKTptP2MuZGF0YT1pLnJlcGxhY2UoY0csXCIkMVwiK2YpOmsmJihjLnVybCs9KGNGLnRlc3Qoaik/XCImXCI6XCI/XCIpK2MuanNvbnArXCI9XCIrZiksYy5jb252ZXJ0ZXJzW1wic2NyaXB0IGpzb25cIl09ZnVuY3Rpb24oKXtyZXR1cm4gaHx8cC5lcnJvcihmK1wiIHdhcyBub3QgY2FsbGVkXCIpLGhbMF19LGMuZGF0YVR5cGVzWzBdPVwianNvblwiLGFbZl09ZnVuY3Rpb24oKXtoPWFyZ3VtZW50c30sZS5hbHdheXMoZnVuY3Rpb24oKXthW2ZdPWcsY1tmXSYmKGMuanNvbnBDYWxsYmFjaz1kLmpzb25wQ2FsbGJhY2ssY0UucHVzaChmKSksaCYmcC5pc0Z1bmN0aW9uKGcpJiZnKGhbMF0pLGg9Zz1ifSksXCJzY3JpcHRcIn0pLHAuYWpheFNldHVwKHthY2NlcHRzOntzY3JpcHQ6XCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwifSxjb250ZW50czp7c2NyaXB0Oi9qYXZhc2NyaXB0fGVjbWFzY3JpcHQvfSxjb252ZXJ0ZXJzOntcInRleHQgc2NyaXB0XCI6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZ2xvYmFsRXZhbChhKSxhfX19KSxwLmFqYXhQcmVmaWx0ZXIoXCJzY3JpcHRcIixmdW5jdGlvbihhKXthLmNhY2hlPT09YiYmKGEuY2FjaGU9ITEpLGEuY3Jvc3NEb21haW4mJihhLnR5cGU9XCJHRVRcIixhLmdsb2JhbD0hMSl9KSxwLmFqYXhUcmFuc3BvcnQoXCJzY3JpcHRcIixmdW5jdGlvbihhKXtpZihhLmNyb3NzRG9tYWluKXt2YXIgYyxkPWUuaGVhZHx8ZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fGUuZG9jdW1lbnRFbGVtZW50O3JldHVybntzZW5kOmZ1bmN0aW9uKGYsZyl7Yz1lLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiksYy5hc3luYz1cImFzeW5jXCIsYS5zY3JpcHRDaGFyc2V0JiYoYy5jaGFyc2V0PWEuc2NyaXB0Q2hhcnNldCksYy5zcmM9YS51cmwsYy5vbmxvYWQ9Yy5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oYSxlKXtpZihlfHwhYy5yZWFkeVN0YXRlfHwvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KGMucmVhZHlTdGF0ZSkpYy5vbmxvYWQ9Yy5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxkJiZjLnBhcmVudE5vZGUmJmQucmVtb3ZlQ2hpbGQoYyksYz1iLGV8fGcoMjAwLFwic3VjY2Vzc1wiKX0sZC5pbnNlcnRCZWZvcmUoYyxkLmZpcnN0Q2hpbGQpfSxhYm9ydDpmdW5jdGlvbigpe2MmJmMub25sb2FkKDAsMSl9fX19KTt2YXIgY0ksY0o9YS5BY3RpdmVYT2JqZWN0P2Z1bmN0aW9uKCl7Zm9yKHZhciBhIGluIGNJKWNJW2FdKDAsMSl9OiExLGNLPTA7cC5hamF4U2V0dGluZ3MueGhyPWEuQWN0aXZlWE9iamVjdD9mdW5jdGlvbigpe3JldHVybiF0aGlzLmlzTG9jYWwmJmNMKCl8fGNNKCl9OmNMLGZ1bmN0aW9uKGEpe3AuZXh0ZW5kKHAuc3VwcG9ydCx7YWpheDohIWEsY29yczohIWEmJlwid2l0aENyZWRlbnRpYWxzXCJpbiBhfSl9KHAuYWpheFNldHRpbmdzLnhocigpKSxwLnN1cHBvcnQuYWpheCYmcC5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKGMpe2lmKCFjLmNyb3NzRG9tYWlufHxwLnN1cHBvcnQuY29ycyl7dmFyIGQ7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oZSxmKXt2YXIgZyxoLGk9Yy54aHIoKTtjLnVzZXJuYW1lP2kub3BlbihjLnR5cGUsYy51cmwsYy5hc3luYyxjLnVzZXJuYW1lLGMucGFzc3dvcmQpOmkub3BlbihjLnR5cGUsYy51cmwsYy5hc3luYyk7aWYoYy54aHJGaWVsZHMpZm9yKGggaW4gYy54aHJGaWVsZHMpaVtoXT1jLnhockZpZWxkc1toXTtjLm1pbWVUeXBlJiZpLm92ZXJyaWRlTWltZVR5cGUmJmkub3ZlcnJpZGVNaW1lVHlwZShjLm1pbWVUeXBlKSwhYy5jcm9zc0RvbWFpbiYmIWVbXCJYLVJlcXVlc3RlZC1XaXRoXCJdJiYoZVtcIlgtUmVxdWVzdGVkLVdpdGhcIl09XCJYTUxIdHRwUmVxdWVzdFwiKTt0cnl7Zm9yKGggaW4gZSlpLnNldFJlcXVlc3RIZWFkZXIoaCxlW2hdKX1jYXRjaChqKXt9aS5zZW5kKGMuaGFzQ29udGVudCYmYy5kYXRhfHxudWxsKSxkPWZ1bmN0aW9uKGEsZSl7dmFyIGgsaixrLGwsbTt0cnl7aWYoZCYmKGV8fGkucmVhZHlTdGF0ZT09PTQpKXtkPWIsZyYmKGkub25yZWFkeXN0YXRlY2hhbmdlPXAubm9vcCxjSiYmZGVsZXRlIGNJW2ddKTtpZihlKWkucmVhZHlTdGF0ZSE9PTQmJmkuYWJvcnQoKTtlbHNle2g9aS5zdGF0dXMsaz1pLmdldEFsbFJlc3BvbnNlSGVhZGVycygpLGw9e30sbT1pLnJlc3BvbnNlWE1MLG0mJm0uZG9jdW1lbnRFbGVtZW50JiYobC54bWw9bSk7dHJ5e2wudGV4dD1pLnJlc3BvbnNlVGV4dH1jYXRjaChhKXt9dHJ5e2o9aS5zdGF0dXNUZXh0fWNhdGNoKG4pe2o9XCJcIn0haCYmYy5pc0xvY2FsJiYhYy5jcm9zc0RvbWFpbj9oPWwudGV4dD8yMDA6NDA0Omg9PT0xMjIzJiYoaD0yMDQpfX19Y2F0Y2gobyl7ZXx8ZigtMSxvKX1sJiZmKGgsaixsLGspfSxjLmFzeW5jP2kucmVhZHlTdGF0ZT09PTQ/c2V0VGltZW91dChkLDApOihnPSsrY0ssY0omJihjSXx8KGNJPXt9LHAoYSkudW5sb2FkKGNKKSksY0lbZ109ZCksaS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZCk6ZCgpfSxhYm9ydDpmdW5jdGlvbigpe2QmJmQoMCwxKX19fX0pO3ZhciBjTixjTyxjUD0vXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sY1E9bmV3IFJlZ0V4cChcIl4oPzooWy0rXSk9fCkoXCIrcStcIikoW2EteiVdKikkXCIsXCJpXCIpLGNSPS9xdWV1ZUhvb2tzJC8sY1M9W2NZXSxjVD17XCIqXCI6W2Z1bmN0aW9uKGEsYil7dmFyIGMsZCxlPXRoaXMuY3JlYXRlVHdlZW4oYSxiKSxmPWNRLmV4ZWMoYiksZz1lLmN1cigpLGg9K2d8fDAsaT0xLGo9MjA7aWYoZil7Yz0rZlsyXSxkPWZbM118fChwLmNzc051bWJlclthXT9cIlwiOlwicHhcIik7aWYoZCE9PVwicHhcIiYmaCl7aD1wLmNzcyhlLmVsZW0sYSwhMCl8fGN8fDE7ZG8gaT1pfHxcIi41XCIsaD1oL2kscC5zdHlsZShlLmVsZW0sYSxoK2QpO3doaWxlKGkhPT0oaT1lLmN1cigpL2cpJiZpIT09MSYmLS1qKX1lLnVuaXQ9ZCxlLnN0YXJ0PWgsZS5lbmQ9ZlsxXT9oKyhmWzFdKzEpKmM6Y31yZXR1cm4gZX1dfTtwLkFuaW1hdGlvbj1wLmV4dGVuZChjVyx7dHdlZW5lcjpmdW5jdGlvbihhLGIpe3AuaXNGdW5jdGlvbihhKT8oYj1hLGE9W1wiKlwiXSk6YT1hLnNwbGl0KFwiIFwiKTt2YXIgYyxkPTAsZT1hLmxlbmd0aDtmb3IoO2Q8ZTtkKyspYz1hW2RdLGNUW2NdPWNUW2NdfHxbXSxjVFtjXS51bnNoaWZ0KGIpfSxwcmVmaWx0ZXI6ZnVuY3Rpb24oYSxiKXtiP2NTLnVuc2hpZnQoYSk6Y1MucHVzaChhKX19KSxwLlR3ZWVuPWNaLGNaLnByb3RvdHlwZT17Y29uc3RydWN0b3I6Y1osaW5pdDpmdW5jdGlvbihhLGIsYyxkLGUsZil7dGhpcy5lbGVtPWEsdGhpcy5wcm9wPWMsdGhpcy5lYXNpbmc9ZXx8XCJzd2luZ1wiLHRoaXMub3B0aW9ucz1iLHRoaXMuc3RhcnQ9dGhpcy5ub3c9dGhpcy5jdXIoKSx0aGlzLmVuZD1kLHRoaXMudW5pdD1mfHwocC5jc3NOdW1iZXJbY10/XCJcIjpcInB4XCIpfSxjdXI6ZnVuY3Rpb24oKXt2YXIgYT1jWi5wcm9wSG9va3NbdGhpcy5wcm9wXTtyZXR1cm4gYSYmYS5nZXQ/YS5nZXQodGhpcyk6Y1oucHJvcEhvb2tzLl9kZWZhdWx0LmdldCh0aGlzKX0scnVuOmZ1bmN0aW9uKGEpe3ZhciBiLGM9Y1oucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIHRoaXMub3B0aW9ucy5kdXJhdGlvbj90aGlzLnBvcz1iPXAuZWFzaW5nW3RoaXMuZWFzaW5nXShhLHRoaXMub3B0aW9ucy5kdXJhdGlvbiphLDAsMSx0aGlzLm9wdGlvbnMuZHVyYXRpb24pOnRoaXMucG9zPWI9YSx0aGlzLm5vdz0odGhpcy5lbmQtdGhpcy5zdGFydCkqYit0aGlzLnN0YXJ0LHRoaXMub3B0aW9ucy5zdGVwJiZ0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKHRoaXMuZWxlbSx0aGlzLm5vdyx0aGlzKSxjJiZjLnNldD9jLnNldCh0aGlzKTpjWi5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KHRoaXMpLHRoaXN9fSxjWi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGU9Y1oucHJvdG90eXBlLGNaLnByb3BIb29rcz17X2RlZmF1bHQ6e2dldDpmdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gYS5lbGVtW2EucHJvcF09PW51bGx8fCEhYS5lbGVtLnN0eWxlJiZhLmVsZW0uc3R5bGVbYS5wcm9wXSE9bnVsbD8oYj1wLmNzcyhhLmVsZW0sYS5wcm9wLCExLFwiXCIpLCFifHxiPT09XCJhdXRvXCI/MDpiKTphLmVsZW1bYS5wcm9wXX0sc2V0OmZ1bmN0aW9uKGEpe3AuZnguc3RlcFthLnByb3BdP3AuZnguc3RlcFthLnByb3BdKGEpOmEuZWxlbS5zdHlsZSYmKGEuZWxlbS5zdHlsZVtwLmNzc1Byb3BzW2EucHJvcF1dIT1udWxsfHxwLmNzc0hvb2tzW2EucHJvcF0pP3Auc3R5bGUoYS5lbGVtLGEucHJvcCxhLm5vdythLnVuaXQpOmEuZWxlbVthLnByb3BdPWEubm93fX19LGNaLnByb3BIb29rcy5zY3JvbGxUb3A9Y1oucHJvcEhvb2tzLnNjcm9sbExlZnQ9e3NldDpmdW5jdGlvbihhKXthLmVsZW0ubm9kZVR5cGUmJmEuZWxlbS5wYXJlbnROb2RlJiYoYS5lbGVtW2EucHJvcF09YS5ub3cpfX0scC5lYWNoKFtcInRvZ2dsZVwiLFwic2hvd1wiLFwiaGlkZVwiXSxmdW5jdGlvbihhLGIpe3ZhciBjPXAuZm5bYl07cC5mbltiXT1mdW5jdGlvbihkLGUsZil7cmV0dXJuIGQ9PW51bGx8fHR5cGVvZiBkPT1cImJvb2xlYW5cInx8IWEmJnAuaXNGdW5jdGlvbihkKSYmcC5pc0Z1bmN0aW9uKGUpP2MuYXBwbHkodGhpcyxhcmd1bWVudHMpOnRoaXMuYW5pbWF0ZShjJChiLCEwKSxkLGUsZil9fSkscC5mbi5leHRlbmQoe2ZhZGVUbzpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5maWx0ZXIoYlopLmNzcyhcIm9wYWNpdHlcIiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0ZSh7b3BhY2l0eTpifSxhLGMsZCl9LGFuaW1hdGU6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9cC5pc0VtcHR5T2JqZWN0KGEpLGY9cC5zcGVlZChiLGMsZCksZz1mdW5jdGlvbigpe3ZhciBiPWNXKHRoaXMscC5leHRlbmQoe30sYSksZik7ZSYmYi5zdG9wKCEwKX07cmV0dXJuIGV8fGYucXVldWU9PT0hMT90aGlzLmVhY2goZyk6dGhpcy5xdWV1ZShmLnF1ZXVlLGcpfSxzdG9wOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZT1mdW5jdGlvbihhKXt2YXIgYj1hLnN0b3A7ZGVsZXRlIGEuc3RvcCxiKGQpfTtyZXR1cm4gdHlwZW9mIGEhPVwic3RyaW5nXCImJihkPWMsYz1hLGE9YiksYyYmYSE9PSExJiZ0aGlzLnF1ZXVlKGF8fFwiZnhcIixbXSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGI9ITAsYz1hIT1udWxsJiZhK1wicXVldWVIb29rc1wiLGY9cC50aW1lcnMsZz1wLl9kYXRhKHRoaXMpO2lmKGMpZ1tjXSYmZ1tjXS5zdG9wJiZlKGdbY10pO2Vsc2UgZm9yKGMgaW4gZylnW2NdJiZnW2NdLnN0b3AmJmNSLnRlc3QoYykmJmUoZ1tjXSk7Zm9yKGM9Zi5sZW5ndGg7Yy0tOylmW2NdLmVsZW09PT10aGlzJiYoYT09bnVsbHx8ZltjXS5xdWV1ZT09PWEpJiYoZltjXS5hbmltLnN0b3AoZCksYj0hMSxmLnNwbGljZShjLDEpKTsoYnx8IWQpJiZwLmRlcXVldWUodGhpcyxhKX0pfX0pLHAuZWFjaCh7c2xpZGVEb3duOmMkKFwic2hvd1wiKSxzbGlkZVVwOmMkKFwiaGlkZVwiKSxzbGlkZVRvZ2dsZTpjJChcInRvZ2dsZVwiKSxmYWRlSW46e29wYWNpdHk6XCJzaG93XCJ9LGZhZGVPdXQ6e29wYWNpdHk6XCJoaWRlXCJ9LGZhZGVUb2dnbGU6e29wYWNpdHk6XCJ0b2dnbGVcIn19LGZ1bmN0aW9uKGEsYil7cC5mblthXT1mdW5jdGlvbihhLGMsZCl7cmV0dXJuIHRoaXMuYW5pbWF0ZShiLGEsYyxkKX19KSxwLnNwZWVkPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1hJiZ0eXBlb2YgYT09XCJvYmplY3RcIj9wLmV4dGVuZCh7fSxhKTp7Y29tcGxldGU6Y3x8IWMmJmJ8fHAuaXNGdW5jdGlvbihhKSYmYSxkdXJhdGlvbjphLGVhc2luZzpjJiZifHxiJiYhcC5pc0Z1bmN0aW9uKGIpJiZifTtkLmR1cmF0aW9uPXAuZngub2ZmPzA6dHlwZW9mIGQuZHVyYXRpb249PVwibnVtYmVyXCI/ZC5kdXJhdGlvbjpkLmR1cmF0aW9uIGluIHAuZnguc3BlZWRzP3AuZnguc3BlZWRzW2QuZHVyYXRpb25dOnAuZnguc3BlZWRzLl9kZWZhdWx0O2lmKGQucXVldWU9PW51bGx8fGQucXVldWU9PT0hMClkLnF1ZXVlPVwiZnhcIjtyZXR1cm4gZC5vbGQ9ZC5jb21wbGV0ZSxkLmNvbXBsZXRlPWZ1bmN0aW9uKCl7cC5pc0Z1bmN0aW9uKGQub2xkKSYmZC5vbGQuY2FsbCh0aGlzKSxkLnF1ZXVlJiZwLmRlcXVldWUodGhpcyxkLnF1ZXVlKX0sZH0scC5lYXNpbmc9e2xpbmVhcjpmdW5jdGlvbihhKXtyZXR1cm4gYX0sc3dpbmc6ZnVuY3Rpb24oYSl7cmV0dXJuLjUtTWF0aC5jb3MoYSpNYXRoLlBJKS8yfX0scC50aW1lcnM9W10scC5meD1jWi5wcm90b3R5cGUuaW5pdCxwLmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgYSxiPXAudGltZXJzLGM9MDtmb3IoO2M8Yi5sZW5ndGg7YysrKWE9YltjXSwhYSgpJiZiW2NdPT09YSYmYi5zcGxpY2UoYy0tLDEpO2IubGVuZ3RofHxwLmZ4LnN0b3AoKX0scC5meC50aW1lcj1mdW5jdGlvbihhKXthKCkmJnAudGltZXJzLnB1c2goYSkmJiFjTyYmKGNPPXNldEludGVydmFsKHAuZngudGljayxwLmZ4LmludGVydmFsKSl9LHAuZnguaW50ZXJ2YWw9MTMscC5meC5zdG9wPWZ1bmN0aW9uKCl7Y2xlYXJJbnRlcnZhbChjTyksY089bnVsbH0scC5meC5zcGVlZHM9e3Nsb3c6NjAwLGZhc3Q6MjAwLF9kZWZhdWx0OjQwMH0scC5meC5zdGVwPXt9LHAuZXhwciYmcC5leHByLmZpbHRlcnMmJihwLmV4cHIuZmlsdGVycy5hbmltYXRlZD1mdW5jdGlvbihhKXtyZXR1cm4gcC5ncmVwKHAudGltZXJzLGZ1bmN0aW9uKGIpe3JldHVybiBhPT09Yi5lbGVtfSkubGVuZ3RofSk7dmFyIGNfPS9eKD86Ym9keXxodG1sKSQvaTtwLmZuLm9mZnNldD1mdW5jdGlvbihhKXtpZihhcmd1bWVudHMubGVuZ3RoKXJldHVybiBhPT09Yj90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihiKXtwLm9mZnNldC5zZXRPZmZzZXQodGhpcyxhLGIpfSk7dmFyIGMsZCxlLGYsZyxoLGksaj17dG9wOjAsbGVmdDowfSxrPXRoaXNbMF0sbD1rJiZrLm93bmVyRG9jdW1lbnQ7aWYoIWwpcmV0dXJuO3JldHVybihkPWwuYm9keSk9PT1rP3Aub2Zmc2V0LmJvZHlPZmZzZXQoayk6KGM9bC5kb2N1bWVudEVsZW1lbnQscC5jb250YWlucyhjLGspPyh0eXBlb2Ygay5nZXRCb3VuZGluZ0NsaWVudFJlY3QhPVwidW5kZWZpbmVkXCImJihqPWsuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpLGU9ZGEobCksZj1jLmNsaWVudFRvcHx8ZC5jbGllbnRUb3B8fDAsZz1jLmNsaWVudExlZnR8fGQuY2xpZW50TGVmdHx8MCxoPWUucGFnZVlPZmZzZXR8fGMuc2Nyb2xsVG9wLGk9ZS5wYWdlWE9mZnNldHx8Yy5zY3JvbGxMZWZ0LHt0b3A6ai50b3AraC1mLGxlZnQ6ai5sZWZ0K2ktZ30pOmopfSxwLm9mZnNldD17Ym9keU9mZnNldDpmdW5jdGlvbihhKXt2YXIgYj1hLm9mZnNldFRvcCxjPWEub2Zmc2V0TGVmdDtyZXR1cm4gcC5zdXBwb3J0LmRvZXNOb3RJbmNsdWRlTWFyZ2luSW5Cb2R5T2Zmc2V0JiYoYis9cGFyc2VGbG9hdChwLmNzcyhhLFwibWFyZ2luVG9wXCIpKXx8MCxjKz1wYXJzZUZsb2F0KHAuY3NzKGEsXCJtYXJnaW5MZWZ0XCIpKXx8MCkse3RvcDpiLGxlZnQ6Y319LHNldE9mZnNldDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9cC5jc3MoYSxcInBvc2l0aW9uXCIpO2Q9PT1cInN0YXRpY1wiJiYoYS5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCIpO3ZhciBlPXAoYSksZj1lLm9mZnNldCgpLGc9cC5jc3MoYSxcInRvcFwiKSxoPXAuY3NzKGEsXCJsZWZ0XCIpLGk9KGQ9PT1cImFic29sdXRlXCJ8fGQ9PT1cImZpeGVkXCIpJiZwLmluQXJyYXkoXCJhdXRvXCIsW2csaF0pPi0xLGo9e30saz17fSxsLG07aT8oaz1lLnBvc2l0aW9uKCksbD1rLnRvcCxtPWsubGVmdCk6KGw9cGFyc2VGbG9hdChnKXx8MCxtPXBhcnNlRmxvYXQoaCl8fDApLHAuaXNGdW5jdGlvbihiKSYmKGI9Yi5jYWxsKGEsYyxmKSksYi50b3AhPW51bGwmJihqLnRvcD1iLnRvcC1mLnRvcCtsKSxiLmxlZnQhPW51bGwmJihqLmxlZnQ9Yi5sZWZ0LWYubGVmdCttKSxcInVzaW5nXCJpbiBiP2IudXNpbmcuY2FsbChhLGopOmUuY3NzKGopfX0scC5mbi5leHRlbmQoe3Bvc2l0aW9uOmZ1bmN0aW9uKCl7aWYoIXRoaXNbMF0pcmV0dXJuO3ZhciBhPXRoaXNbMF0sYj10aGlzLm9mZnNldFBhcmVudCgpLGM9dGhpcy5vZmZzZXQoKSxkPWNfLnRlc3QoYlswXS5ub2RlTmFtZSk/e3RvcDowLGxlZnQ6MH06Yi5vZmZzZXQoKTtyZXR1cm4gYy50b3AtPXBhcnNlRmxvYXQocC5jc3MoYSxcIm1hcmdpblRvcFwiKSl8fDAsYy5sZWZ0LT1wYXJzZUZsb2F0KHAuY3NzKGEsXCJtYXJnaW5MZWZ0XCIpKXx8MCxkLnRvcCs9cGFyc2VGbG9hdChwLmNzcyhiWzBdLFwiYm9yZGVyVG9wV2lkdGhcIikpfHwwLGQubGVmdCs9cGFyc2VGbG9hdChwLmNzcyhiWzBdLFwiYm9yZGVyTGVmdFdpZHRoXCIpKXx8MCx7dG9wOmMudG9wLWQudG9wLGxlZnQ6Yy5sZWZ0LWQubGVmdH19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciBhPXRoaXMub2Zmc2V0UGFyZW50fHxlLmJvZHk7d2hpbGUoYSYmIWNfLnRlc3QoYS5ub2RlTmFtZSkmJnAuY3NzKGEsXCJwb3NpdGlvblwiKT09PVwic3RhdGljXCIpYT1hLm9mZnNldFBhcmVudDtyZXR1cm4gYXx8ZS5ib2R5fSl9fSkscC5lYWNoKHtzY3JvbGxMZWZ0OlwicGFnZVhPZmZzZXRcIixzY3JvbGxUb3A6XCJwYWdlWU9mZnNldFwifSxmdW5jdGlvbihhLGMpe3ZhciBkPS9ZLy50ZXN0KGMpO3AuZm5bYV09ZnVuY3Rpb24oZSl7cmV0dXJuIHAuYWNjZXNzKHRoaXMsZnVuY3Rpb24oYSxlLGYpe3ZhciBnPWRhKGEpO2lmKGY9PT1iKXJldHVybiBnP2MgaW4gZz9nW2NdOmcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50W2VdOmFbZV07Zz9nLnNjcm9sbFRvKGQ/cChnKS5zY3JvbGxMZWZ0KCk6ZixkP2Y6cChnKS5zY3JvbGxUb3AoKSk6YVtlXT1mfSxhLGUsYXJndW1lbnRzLmxlbmd0aCxudWxsKX19KSxwLmVhY2goe0hlaWdodDpcImhlaWdodFwiLFdpZHRoOlwid2lkdGhcIn0sZnVuY3Rpb24oYSxjKXtwLmVhY2goe3BhZGRpbmc6XCJpbm5lclwiK2EsY29udGVudDpjLFwiXCI6XCJvdXRlclwiK2F9LGZ1bmN0aW9uKGQsZSl7cC5mbltlXT1mdW5jdGlvbihlLGYpe3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgmJihkfHx0eXBlb2YgZSE9XCJib29sZWFuXCIpLGg9ZHx8KGU9PT0hMHx8Zj09PSEwP1wibWFyZ2luXCI6XCJib3JkZXJcIik7cmV0dXJuIHAuYWNjZXNzKHRoaXMsZnVuY3Rpb24oYyxkLGUpe3ZhciBmO3JldHVybiBwLmlzV2luZG93KGMpP2MuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50W1wiY2xpZW50XCIrYV06Yy5ub2RlVHlwZT09PTk/KGY9Yy5kb2N1bWVudEVsZW1lbnQsTWF0aC5tYXgoYy5ib2R5W1wic2Nyb2xsXCIrYV0sZltcInNjcm9sbFwiK2FdLGMuYm9keVtcIm9mZnNldFwiK2FdLGZbXCJvZmZzZXRcIithXSxmW1wiY2xpZW50XCIrYV0pKTplPT09Yj9wLmNzcyhjLGQsZSxoKTpwLnN0eWxlKGMsZCxlLGgpfSxjLGc/ZTpiLGcsbnVsbCl9fSl9KSxhLmpRdWVyeT1hLiQ9cCx0eXBlb2YgZGVmaW5lPT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQmJmRlZmluZS5hbWQualF1ZXJ5JiZkZWZpbmUoXCJqcXVlcnlcIixbXSxmdW5jdGlvbigpe3JldHVybiBwfSl9KSh3aW5kb3cpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkubWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKiEgalF1ZXJ5IFVJIC0gdjEuOS4yIC0gMjAxNi0wNi0xN1xuICogaHR0cDovL2pxdWVyeXVpLmNvbVxuICogSW5jbHVkZXM6IGpxdWVyeS51aS5jb3JlLmpzLCBqcXVlcnkudWkud2lkZ2V0LmpzLCBqcXVlcnkudWkubW91c2UuanMsIGpxdWVyeS51aS5wb3NpdGlvbi5qcywganF1ZXJ5LnVpLmRyYWdnYWJsZS5qcywganF1ZXJ5LnVpLnJlc2l6YWJsZS5qcywganF1ZXJ5LnVpLmFjY29yZGlvbi5qcywganF1ZXJ5LnVpLmF1dG9jb21wbGV0ZS5qcywganF1ZXJ5LnVpLmJ1dHRvbi5qcywganF1ZXJ5LnVpLmRhdGVwaWNrZXIuanMsIGpxdWVyeS51aS5kaWFsb2cuanMsIGpxdWVyeS51aS5tZW51LmpzXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yczsgTGljZW5zZWQgTUlUICovXG5cbihmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIGkodCxpKXt2YXIgbixhLG8scj10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJhcmVhXCI9PT1yPyhuPXQucGFyZW50Tm9kZSxhPW4ubmFtZSx0LmhyZWYmJmEmJlwibWFwXCI9PT1uLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/KG89ZShcImltZ1t1c2VtYXA9I1wiK2ErXCJdXCIpWzBdLCEhbyYmcyhvKSk6ITEpOigvaW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QvLnRlc3Qocik/IXQuZGlzYWJsZWQ6XCJhXCI9PT1yP3QuaHJlZnx8aTppKSYmcyh0KX1mdW5jdGlvbiBzKHQpe3JldHVybiBlLmV4cHIuZmlsdGVycy52aXNpYmxlKHQpJiYhZSh0KS5wYXJlbnRzKCkuYW5kU2VsZigpLmZpbHRlcihmdW5jdGlvbigpe3JldHVyblwiaGlkZGVuXCI9PT1lLmNzcyh0aGlzLFwidmlzaWJpbGl0eVwiKX0pLmxlbmd0aH12YXIgbj0wLGE9L151aS1pZC1cXGQrJC87ZS51aT1lLnVpfHx7fSxlLnVpLnZlcnNpb258fChlLmV4dGVuZChlLnVpLHt2ZXJzaW9uOlwiMS45LjJcIixrZXlDb2RlOntCQUNLU1BBQ0U6OCxDT01NQToxODgsREVMRVRFOjQ2LERPV046NDAsRU5EOjM1LEVOVEVSOjEzLEVTQ0FQRToyNyxIT01FOjM2LExFRlQ6MzcsTlVNUEFEX0FERDoxMDcsTlVNUEFEX0RFQ0lNQUw6MTEwLE5VTVBBRF9ESVZJREU6MTExLE5VTVBBRF9FTlRFUjoxMDgsTlVNUEFEX01VTFRJUExZOjEwNixOVU1QQURfU1VCVFJBQ1Q6MTA5LFBBR0VfRE9XTjozNCxQQUdFX1VQOjMzLFBFUklPRDoxOTAsUklHSFQ6MzksU1BBQ0U6MzIsVEFCOjksVVA6Mzh9fSksZS5mbi5leHRlbmQoe19mb2N1czplLmZuLmZvY3VzLGZvY3VzOmZ1bmN0aW9uKHQsaSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHM9dGhpcztzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZShzKS5mb2N1cygpLGkmJmkuY2FsbChzKX0sdCl9KTp0aGlzLl9mb2N1cy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHNjcm9sbFBhcmVudDpmdW5jdGlvbigpe3ZhciB0O3JldHVybiB0PWUudWkuaWUmJi8oc3RhdGljfHJlbGF0aXZlKS8udGVzdCh0aGlzLmNzcyhcInBvc2l0aW9uXCIpKXx8L2Fic29sdXRlLy50ZXN0KHRoaXMuY3NzKFwicG9zaXRpb25cIikpP3RoaXMucGFyZW50cygpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybi8ocmVsYXRpdmV8YWJzb2x1dGV8Zml4ZWQpLy50ZXN0KGUuY3NzKHRoaXMsXCJwb3NpdGlvblwiKSkmJi8oYXV0b3xzY3JvbGwpLy50ZXN0KGUuY3NzKHRoaXMsXCJvdmVyZmxvd1wiKStlLmNzcyh0aGlzLFwib3ZlcmZsb3cteVwiKStlLmNzcyh0aGlzLFwib3ZlcmZsb3cteFwiKSl9KS5lcSgwKTp0aGlzLnBhcmVudHMoKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4vKGF1dG98c2Nyb2xsKS8udGVzdChlLmNzcyh0aGlzLFwib3ZlcmZsb3dcIikrZS5jc3ModGhpcyxcIm92ZXJmbG93LXlcIikrZS5jc3ModGhpcyxcIm92ZXJmbG93LXhcIikpfSkuZXEoMCksL2ZpeGVkLy50ZXN0KHRoaXMuY3NzKFwicG9zaXRpb25cIikpfHwhdC5sZW5ndGg/ZShkb2N1bWVudCk6dH0sekluZGV4OmZ1bmN0aW9uKGkpe2lmKGkhPT10KXJldHVybiB0aGlzLmNzcyhcInpJbmRleFwiLGkpO2lmKHRoaXMubGVuZ3RoKWZvcih2YXIgcyxuLGE9ZSh0aGlzWzBdKTthLmxlbmd0aCYmYVswXSE9PWRvY3VtZW50Oyl7aWYocz1hLmNzcyhcInBvc2l0aW9uXCIpLChcImFic29sdXRlXCI9PT1zfHxcInJlbGF0aXZlXCI9PT1zfHxcImZpeGVkXCI9PT1zKSYmKG49cGFyc2VJbnQoYS5jc3MoXCJ6SW5kZXhcIiksMTApLCFpc05hTihuKSYmMCE9PW4pKXJldHVybiBuO2E9YS5wYXJlbnQoKX1yZXR1cm4gMH0sdW5pcXVlSWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5pZHx8KHRoaXMuaWQ9XCJ1aS1pZC1cIisgKytuKX0pfSxyZW1vdmVVbmlxdWVJZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXthLnRlc3QodGhpcy5pZCkmJmUodGhpcykucmVtb3ZlQXR0cihcImlkXCIpfSl9fSksZS5leHRlbmQoZS5leHByW1wiOlwiXSx7ZGF0YTplLmV4cHIuY3JlYXRlUHNldWRvP2UuZXhwci5jcmVhdGVQc2V1ZG8oZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGkpe3JldHVybiEhZS5kYXRhKGksdCl9fSk6ZnVuY3Rpb24odCxpLHMpe3JldHVybiEhZS5kYXRhKHQsc1szXSl9LGZvY3VzYWJsZTpmdW5jdGlvbih0KXtyZXR1cm4gaSh0LCFpc05hTihlLmF0dHIodCxcInRhYmluZGV4XCIpKSl9LHRhYmJhYmxlOmZ1bmN0aW9uKHQpe3ZhciBzPWUuYXR0cih0LFwidGFiaW5kZXhcIiksbj1pc05hTihzKTtyZXR1cm4obnx8cz49MCkmJmkodCwhbil9fSksZShmdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmJvZHksaT10LmFwcGVuZENoaWxkKGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7aS5vZmZzZXRIZWlnaHQsZS5leHRlbmQoaS5zdHlsZSx7bWluSGVpZ2h0OlwiMTAwcHhcIixoZWlnaHQ6XCJhdXRvXCIscGFkZGluZzowLGJvcmRlcldpZHRoOjB9KSxlLnN1cHBvcnQubWluSGVpZ2h0PTEwMD09PWkub2Zmc2V0SGVpZ2h0LGUuc3VwcG9ydC5zZWxlY3RzdGFydD1cIm9uc2VsZWN0c3RhcnRcImluIGksdC5yZW1vdmVDaGlsZChpKS5zdHlsZS5kaXNwbGF5PVwibm9uZVwifSksZShcIjxhPlwiKS5vdXRlcldpZHRoKDEpLmpxdWVyeXx8ZS5lYWNoKFtcIldpZHRoXCIsXCJIZWlnaHRcIl0sZnVuY3Rpb24oaSxzKXtmdW5jdGlvbiBuKHQsaSxzLG4pe3JldHVybiBlLmVhY2goYSxmdW5jdGlvbigpe2ktPXBhcnNlRmxvYXQoZS5jc3ModCxcInBhZGRpbmdcIit0aGlzKSl8fDAscyYmKGktPXBhcnNlRmxvYXQoZS5jc3ModCxcImJvcmRlclwiK3RoaXMrXCJXaWR0aFwiKSl8fDApLG4mJihpLT1wYXJzZUZsb2F0KGUuY3NzKHQsXCJtYXJnaW5cIit0aGlzKSl8fDApfSksaX12YXIgYT1cIldpZHRoXCI9PT1zP1tcIkxlZnRcIixcIlJpZ2h0XCJdOltcIlRvcFwiLFwiQm90dG9tXCJdLG89cy50b0xvd2VyQ2FzZSgpLHI9e2lubmVyV2lkdGg6ZS5mbi5pbm5lcldpZHRoLGlubmVySGVpZ2h0OmUuZm4uaW5uZXJIZWlnaHQsb3V0ZXJXaWR0aDplLmZuLm91dGVyV2lkdGgsb3V0ZXJIZWlnaHQ6ZS5mbi5vdXRlckhlaWdodH07ZS5mbltcImlubmVyXCIrc109ZnVuY3Rpb24oaSl7cmV0dXJuIGk9PT10P3JbXCJpbm5lclwiK3NdLmNhbGwodGhpcyk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7ZSh0aGlzKS5jc3MobyxuKHRoaXMsaSkrXCJweFwiKX0pfSxlLmZuW1wib3V0ZXJcIitzXT1mdW5jdGlvbih0LGkpe3JldHVyblwibnVtYmVyXCIhPXR5cGVvZiB0P3JbXCJvdXRlclwiK3NdLmNhbGwodGhpcyx0KTp0aGlzLmVhY2goZnVuY3Rpb24oKXtlKHRoaXMpLmNzcyhvLG4odGhpcyx0LCEwLGkpK1wicHhcIil9KX19KSxlKFwiPGE+XCIpLmRhdGEoXCJhLWJcIixcImFcIikucmVtb3ZlRGF0YShcImEtYlwiKS5kYXRhKFwiYS1iXCIpJiYoZS5mbi5yZW1vdmVEYXRhPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihpKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD90LmNhbGwodGhpcyxlLmNhbWVsQ2FzZShpKSk6dC5jYWxsKHRoaXMpfX0oZS5mbi5yZW1vdmVEYXRhKSksZnVuY3Rpb24oKXt2YXIgdD0vbXNpZSAoW1xcdy5dKykvLmV4ZWMobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKXx8W107ZS51aS5pZT10Lmxlbmd0aD8hMDohMSxlLnVpLmllNj02PT09cGFyc2VGbG9hdCh0WzFdLDEwKX0oKSxlLmZuLmV4dGVuZCh7ZGlzYWJsZVNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJpbmQoKGUuc3VwcG9ydC5zZWxlY3RzdGFydD9cInNlbGVjdHN0YXJ0XCI6XCJtb3VzZWRvd25cIikrXCIudWktZGlzYWJsZVNlbGVjdGlvblwiLGZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKX0pfSxlbmFibGVTZWxlY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy51bmJpbmQoXCIudWktZGlzYWJsZVNlbGVjdGlvblwiKX19KSxlLmV4dGVuZChlLnVpLHtwbHVnaW46e2FkZDpmdW5jdGlvbih0LGkscyl7dmFyIG4sYT1lLnVpW3RdLnByb3RvdHlwZTtmb3IobiBpbiBzKWEucGx1Z2luc1tuXT1hLnBsdWdpbnNbbl18fFtdLGEucGx1Z2luc1tuXS5wdXNoKFtpLHNbbl1dKX0sY2FsbDpmdW5jdGlvbihlLHQsaSl7dmFyIHMsbj1lLnBsdWdpbnNbdF07aWYobiYmZS5lbGVtZW50WzBdLnBhcmVudE5vZGUmJjExIT09ZS5lbGVtZW50WzBdLnBhcmVudE5vZGUubm9kZVR5cGUpZm9yKHM9MDtuLmxlbmd0aD5zO3MrKyllLm9wdGlvbnNbbltzXVswXV0mJm5bc11bMV0uYXBwbHkoZS5lbGVtZW50LGkpfX0sY29udGFpbnM6ZS5jb250YWlucyxoYXNTY3JvbGw6ZnVuY3Rpb24odCxpKXtpZihcImhpZGRlblwiPT09ZSh0KS5jc3MoXCJvdmVyZmxvd1wiKSlyZXR1cm4hMTt2YXIgcz1pJiZcImxlZnRcIj09PWk/XCJzY3JvbGxMZWZ0XCI6XCJzY3JvbGxUb3BcIixuPSExO3JldHVybiB0W3NdPjA/ITA6KHRbc109MSxuPXRbc10+MCx0W3NdPTAsbil9LGlzT3ZlckF4aXM6ZnVuY3Rpb24oZSx0LGkpe3JldHVybiBlPnQmJnQraT5lfSxpc092ZXI6ZnVuY3Rpb24odCxpLHMsbixhLG8pe3JldHVybiBlLnVpLmlzT3ZlckF4aXModCxzLGEpJiZlLnVpLmlzT3ZlckF4aXMoaSxuLG8pfX0pKX0pKGpRdWVyeSk7KGZ1bmN0aW9uKGUsdCl7dmFyIGk9MCxzPUFycmF5LnByb3RvdHlwZS5zbGljZSxuPWUuY2xlYW5EYXRhO2UuY2xlYW5EYXRhPWZ1bmN0aW9uKHQpe2Zvcih2YXIgaSxzPTA7bnVsbCE9KGk9dFtzXSk7cysrKXRyeXtlKGkpLnRyaWdnZXJIYW5kbGVyKFwicmVtb3ZlXCIpfWNhdGNoKGEpe31uKHQpfSxlLndpZGdldD1mdW5jdGlvbihpLHMsbil7dmFyIGEsbyxyLGgsbD1pLnNwbGl0KFwiLlwiKVswXTtpPWkuc3BsaXQoXCIuXCIpWzFdLGE9bCtcIi1cIitpLG58fChuPXMscz1lLldpZGdldCksZS5leHByW1wiOlwiXVthLnRvTG93ZXJDYXNlKCldPWZ1bmN0aW9uKHQpe3JldHVybiEhZS5kYXRhKHQsYSl9LGVbbF09ZVtsXXx8e30sbz1lW2xdW2ldLHI9ZVtsXVtpXT1mdW5jdGlvbihlLGkpe3JldHVybiB0aGlzLl9jcmVhdGVXaWRnZXQ/KGFyZ3VtZW50cy5sZW5ndGgmJnRoaXMuX2NyZWF0ZVdpZGdldChlLGkpLHQpOm5ldyByKGUsaSl9LGUuZXh0ZW5kKHIsbyx7dmVyc2lvbjpuLnZlcnNpb24sX3Byb3RvOmUuZXh0ZW5kKHt9LG4pLF9jaGlsZENvbnN0cnVjdG9yczpbXX0pLGg9bmV3IHMsaC5vcHRpb25zPWUud2lkZ2V0LmV4dGVuZCh7fSxoLm9wdGlvbnMpLGUuZWFjaChuLGZ1bmN0aW9uKHQsaSl7ZS5pc0Z1bmN0aW9uKGkpJiYoblt0XT1mdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKCl7cmV0dXJuIHMucHJvdG90eXBlW3RdLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sbj1mdW5jdGlvbihlKXtyZXR1cm4gcy5wcm90b3R5cGVbdF0uYXBwbHkodGhpcyxlKX07cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQscz10aGlzLl9zdXBlcixhPXRoaXMuX3N1cGVyQXBwbHk7cmV0dXJuIHRoaXMuX3N1cGVyPWUsdGhpcy5fc3VwZXJBcHBseT1uLHQ9aS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fc3VwZXI9cyx0aGlzLl9zdXBlckFwcGx5PWEsdH19KCkpfSksci5wcm90b3R5cGU9ZS53aWRnZXQuZXh0ZW5kKGgse3dpZGdldEV2ZW50UHJlZml4Om8/aC53aWRnZXRFdmVudFByZWZpeDppfSxuLHtjb25zdHJ1Y3RvcjpyLG5hbWVzcGFjZTpsLHdpZGdldE5hbWU6aSx3aWRnZXRCYXNlQ2xhc3M6YSx3aWRnZXRGdWxsTmFtZTphfSksbz8oZS5lYWNoKG8uX2NoaWxkQ29uc3RydWN0b3JzLGZ1bmN0aW9uKHQsaSl7dmFyIHM9aS5wcm90b3R5cGU7ZS53aWRnZXQocy5uYW1lc3BhY2UrXCIuXCIrcy53aWRnZXROYW1lLHIsaS5fcHJvdG8pfSksZGVsZXRlIG8uX2NoaWxkQ29uc3RydWN0b3JzKTpzLl9jaGlsZENvbnN0cnVjdG9ycy5wdXNoKHIpLGUud2lkZ2V0LmJyaWRnZShpLHIpfSxlLndpZGdldC5leHRlbmQ9ZnVuY3Rpb24oaSl7Zm9yKHZhciBuLGEsbz1zLmNhbGwoYXJndW1lbnRzLDEpLHI9MCxoPW8ubGVuZ3RoO2g+cjtyKyspZm9yKG4gaW4gb1tyXSlhPW9bcl1bbl0sb1tyXS5oYXNPd25Qcm9wZXJ0eShuKSYmYSE9PXQmJihpW25dPWUuaXNQbGFpbk9iamVjdChhKT9lLmlzUGxhaW5PYmplY3QoaVtuXSk/ZS53aWRnZXQuZXh0ZW5kKHt9LGlbbl0sYSk6ZS53aWRnZXQuZXh0ZW5kKHt9LGEpOmEpO3JldHVybiBpfSxlLndpZGdldC5icmlkZ2U9ZnVuY3Rpb24oaSxuKXt2YXIgYT1uLnByb3RvdHlwZS53aWRnZXRGdWxsTmFtZXx8aTtlLmZuW2ldPWZ1bmN0aW9uKG8pe3ZhciByPVwic3RyaW5nXCI9PXR5cGVvZiBvLGg9cy5jYWxsKGFyZ3VtZW50cywxKSxsPXRoaXM7cmV0dXJuIG89IXImJmgubGVuZ3RoP2Uud2lkZ2V0LmV4dGVuZC5hcHBseShudWxsLFtvXS5jb25jYXQoaCkpOm8scj90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgcyxuPWUuZGF0YSh0aGlzLGEpO3JldHVybiBuP2UuaXNGdW5jdGlvbihuW29dKSYmXCJfXCIhPT1vLmNoYXJBdCgwKT8ocz1uW29dLmFwcGx5KG4saCkscyE9PW4mJnMhPT10PyhsPXMmJnMuanF1ZXJ5P2wucHVzaFN0YWNrKHMuZ2V0KCkpOnMsITEpOnQpOmUuZXJyb3IoXCJubyBzdWNoIG1ldGhvZCAnXCIrbytcIicgZm9yIFwiK2krXCIgd2lkZ2V0IGluc3RhbmNlXCIpOmUuZXJyb3IoXCJjYW5ub3QgY2FsbCBtZXRob2RzIG9uIFwiK2krXCIgcHJpb3IgdG8gaW5pdGlhbGl6YXRpb247IFwiK1wiYXR0ZW1wdGVkIHRvIGNhbGwgbWV0aG9kICdcIitvK1wiJ1wiKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PWUuZGF0YSh0aGlzLGEpO3Q/dC5vcHRpb24ob3x8e30pLl9pbml0KCk6ZS5kYXRhKHRoaXMsYSxuZXcgbihvLHRoaXMpKX0pLGx9fSxlLldpZGdldD1mdW5jdGlvbigpe30sZS5XaWRnZXQuX2NoaWxkQ29uc3RydWN0b3JzPVtdLGUuV2lkZ2V0LnByb3RvdHlwZT17d2lkZ2V0TmFtZTpcIndpZGdldFwiLHdpZGdldEV2ZW50UHJlZml4OlwiXCIsZGVmYXVsdEVsZW1lbnQ6XCI8ZGl2PlwiLG9wdGlvbnM6e2Rpc2FibGVkOiExLGNyZWF0ZTpudWxsfSxfY3JlYXRlV2lkZ2V0OmZ1bmN0aW9uKHQscyl7cz1lKHN8fHRoaXMuZGVmYXVsdEVsZW1lbnR8fHRoaXMpWzBdLHRoaXMuZWxlbWVudD1lKHMpLHRoaXMudXVpZD1pKyssdGhpcy5ldmVudE5hbWVzcGFjZT1cIi5cIit0aGlzLndpZGdldE5hbWUrdGhpcy51dWlkLHRoaXMub3B0aW9ucz1lLndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zLHRoaXMuX2dldENyZWF0ZU9wdGlvbnMoKSx0KSx0aGlzLmJpbmRpbmdzPWUoKSx0aGlzLmhvdmVyYWJsZT1lKCksdGhpcy5mb2N1c2FibGU9ZSgpLHMhPT10aGlzJiYoZS5kYXRhKHMsdGhpcy53aWRnZXROYW1lLHRoaXMpLGUuZGF0YShzLHRoaXMud2lkZ2V0RnVsbE5hbWUsdGhpcyksdGhpcy5fb24oITAsdGhpcy5lbGVtZW50LHtyZW1vdmU6ZnVuY3Rpb24oZSl7ZS50YXJnZXQ9PT1zJiZ0aGlzLmRlc3Ryb3koKX19KSx0aGlzLmRvY3VtZW50PWUocy5zdHlsZT9zLm93bmVyRG9jdW1lbnQ6cy5kb2N1bWVudHx8cyksdGhpcy53aW5kb3c9ZSh0aGlzLmRvY3VtZW50WzBdLmRlZmF1bHRWaWV3fHx0aGlzLmRvY3VtZW50WzBdLnBhcmVudFdpbmRvdykpLHRoaXMuX2NyZWF0ZSgpLHRoaXMuX3RyaWdnZXIoXCJjcmVhdGVcIixudWxsLHRoaXMuX2dldENyZWF0ZUV2ZW50RGF0YSgpKSx0aGlzLl9pbml0KCl9LF9nZXRDcmVhdGVPcHRpb25zOmUubm9vcCxfZ2V0Q3JlYXRlRXZlbnREYXRhOmUubm9vcCxfY3JlYXRlOmUubm9vcCxfaW5pdDplLm5vb3AsZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX2Rlc3Ryb3koKSx0aGlzLmVsZW1lbnQudW5iaW5kKHRoaXMuZXZlbnROYW1lc3BhY2UpLnJlbW92ZURhdGEodGhpcy53aWRnZXROYW1lKS5yZW1vdmVEYXRhKHRoaXMud2lkZ2V0RnVsbE5hbWUpLnJlbW92ZURhdGEoZS5jYW1lbENhc2UodGhpcy53aWRnZXRGdWxsTmFtZSkpLHRoaXMud2lkZ2V0KCkudW5iaW5kKHRoaXMuZXZlbnROYW1lc3BhY2UpLnJlbW92ZUF0dHIoXCJhcmlhLWRpc2FibGVkXCIpLnJlbW92ZUNsYXNzKHRoaXMud2lkZ2V0RnVsbE5hbWUrXCItZGlzYWJsZWQgXCIrXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKSx0aGlzLmJpbmRpbmdzLnVuYmluZCh0aGlzLmV2ZW50TmFtZXNwYWNlKSx0aGlzLmhvdmVyYWJsZS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLHRoaXMuZm9jdXNhYmxlLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtZm9jdXNcIil9LF9kZXN0cm95OmUubm9vcCx3aWRnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50fSxvcHRpb246ZnVuY3Rpb24oaSxzKXt2YXIgbixhLG8scj1pO2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBlLndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zKTtpZihcInN0cmluZ1wiPT10eXBlb2YgaSlpZihyPXt9LG49aS5zcGxpdChcIi5cIiksaT1uLnNoaWZ0KCksbi5sZW5ndGgpe2ZvcihhPXJbaV09ZS53aWRnZXQuZXh0ZW5kKHt9LHRoaXMub3B0aW9uc1tpXSksbz0wO24ubGVuZ3RoLTE+bztvKyspYVtuW29dXT1hW25bb11dfHx7fSxhPWFbbltvXV07aWYoaT1uLnBvcCgpLHM9PT10KXJldHVybiBhW2ldPT09dD9udWxsOmFbaV07YVtpXT1zfWVsc2V7aWYocz09PXQpcmV0dXJuIHRoaXMub3B0aW9uc1tpXT09PXQ/bnVsbDp0aGlzLm9wdGlvbnNbaV07cltpXT1zfXJldHVybiB0aGlzLl9zZXRPcHRpb25zKHIpLHRoaXN9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKGUpe3ZhciB0O2Zvcih0IGluIGUpdGhpcy5fc2V0T3B0aW9uKHQsZVt0XSk7cmV0dXJuIHRoaXN9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5vcHRpb25zW2VdPXQsXCJkaXNhYmxlZFwiPT09ZSYmKHRoaXMud2lkZ2V0KCkudG9nZ2xlQ2xhc3ModGhpcy53aWRnZXRGdWxsTmFtZStcIi1kaXNhYmxlZCB1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCkuYXR0cihcImFyaWEtZGlzYWJsZWRcIix0KSx0aGlzLmhvdmVyYWJsZS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLHRoaXMuZm9jdXNhYmxlLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtZm9jdXNcIikpLHRoaXN9LGVuYWJsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLCExKX0sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLCEwKX0sX29uOmZ1bmN0aW9uKGkscyxuKXt2YXIgYSxvPXRoaXM7XCJib29sZWFuXCIhPXR5cGVvZiBpJiYobj1zLHM9aSxpPSExKSxuPyhzPWE9ZShzKSx0aGlzLmJpbmRpbmdzPXRoaXMuYmluZGluZ3MuYWRkKHMpKToobj1zLHM9dGhpcy5lbGVtZW50LGE9dGhpcy53aWRnZXQoKSksZS5lYWNoKG4sZnVuY3Rpb24obixyKXtmdW5jdGlvbiBoKCl7cmV0dXJuIGl8fG8ub3B0aW9ucy5kaXNhYmxlZCE9PSEwJiYhZSh0aGlzKS5oYXNDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpPyhcInN0cmluZ1wiPT10eXBlb2Ygcj9vW3JdOnIpLmFwcGx5KG8sYXJndW1lbnRzKTp0fVwic3RyaW5nXCIhPXR5cGVvZiByJiYoaC5ndWlkPXIuZ3VpZD1yLmd1aWR8fGguZ3VpZHx8ZS5ndWlkKyspO3ZhciBsPW4ubWF0Y2goL14oXFx3KylcXHMqKC4qKSQvKSx1PWxbMV0rby5ldmVudE5hbWVzcGFjZSxkPWxbMl07ZD9hLmRlbGVnYXRlKGQsdSxoKTpzLmJpbmQodSxoKX0pfSxfb2ZmOmZ1bmN0aW9uKGUsdCl7dD0odHx8XCJcIikuc3BsaXQoXCIgXCIpLmpvaW4odGhpcy5ldmVudE5hbWVzcGFjZStcIiBcIikrdGhpcy5ldmVudE5hbWVzcGFjZSxlLnVuYmluZCh0KS51bmRlbGVnYXRlKHQpfSxfZGVsYXk6ZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBpKCl7cmV0dXJuKFwic3RyaW5nXCI9PXR5cGVvZiBlP3NbZV06ZSkuYXBwbHkocyxhcmd1bWVudHMpfXZhciBzPXRoaXM7cmV0dXJuIHNldFRpbWVvdXQoaSx0fHwwKX0sX2hvdmVyYWJsZTpmdW5jdGlvbih0KXt0aGlzLmhvdmVyYWJsZT10aGlzLmhvdmVyYWJsZS5hZGQodCksdGhpcy5fb24odCx7bW91c2VlbnRlcjpmdW5jdGlvbih0KXtlKHQuY3VycmVudFRhcmdldCkuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKX0sbW91c2VsZWF2ZTpmdW5jdGlvbih0KXtlKHQuY3VycmVudFRhcmdldCkucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKX19KX0sX2ZvY3VzYWJsZTpmdW5jdGlvbih0KXt0aGlzLmZvY3VzYWJsZT10aGlzLmZvY3VzYWJsZS5hZGQodCksdGhpcy5fb24odCx7Zm9jdXNpbjpmdW5jdGlvbih0KXtlKHQuY3VycmVudFRhcmdldCkuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1mb2N1c1wiKX0sZm9jdXNvdXQ6ZnVuY3Rpb24odCl7ZSh0LmN1cnJlbnRUYXJnZXQpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtZm9jdXNcIil9fSl9LF90cmlnZ2VyOmZ1bmN0aW9uKHQsaSxzKXt2YXIgbixhLG89dGhpcy5vcHRpb25zW3RdO2lmKHM9c3x8e30saT1lLkV2ZW50KGkpLGkudHlwZT0odD09PXRoaXMud2lkZ2V0RXZlbnRQcmVmaXg/dDp0aGlzLndpZGdldEV2ZW50UHJlZml4K3QpLnRvTG93ZXJDYXNlKCksaS50YXJnZXQ9dGhpcy5lbGVtZW50WzBdLGE9aS5vcmlnaW5hbEV2ZW50KWZvcihuIGluIGEpbiBpbiBpfHwoaVtuXT1hW25dKTtyZXR1cm4gdGhpcy5lbGVtZW50LnRyaWdnZXIoaSxzKSwhKGUuaXNGdW5jdGlvbihvKSYmby5hcHBseSh0aGlzLmVsZW1lbnRbMF0sW2ldLmNvbmNhdChzKSk9PT0hMXx8aS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl9fSxlLmVhY2goe3Nob3c6XCJmYWRlSW5cIixoaWRlOlwiZmFkZU91dFwifSxmdW5jdGlvbih0LGkpe2UuV2lkZ2V0LnByb3RvdHlwZVtcIl9cIit0XT1mdW5jdGlvbihzLG4sYSl7XCJzdHJpbmdcIj09dHlwZW9mIG4mJihuPXtlZmZlY3Q6bn0pO3ZhciBvLHI9bj9uPT09ITB8fFwibnVtYmVyXCI9PXR5cGVvZiBuP2k6bi5lZmZlY3R8fGk6dDtuPW58fHt9LFwibnVtYmVyXCI9PXR5cGVvZiBuJiYobj17ZHVyYXRpb246bn0pLG89IWUuaXNFbXB0eU9iamVjdChuKSxuLmNvbXBsZXRlPWEsbi5kZWxheSYmcy5kZWxheShuLmRlbGF5KSxvJiZlLmVmZmVjdHMmJihlLmVmZmVjdHMuZWZmZWN0W3JdfHxlLnVpQmFja0NvbXBhdCE9PSExJiZlLmVmZmVjdHNbcl0pP3NbdF0obik6ciE9PXQmJnNbcl0/c1tyXShuLmR1cmF0aW9uLG4uZWFzaW5nLGEpOnMucXVldWUoZnVuY3Rpb24oaSl7ZSh0aGlzKVt0XSgpLGEmJmEuY2FsbChzWzBdKSxpKCl9KX19KSxlLnVpQmFja0NvbXBhdCE9PSExJiYoZS5XaWRnZXQucHJvdG90eXBlLl9nZXRDcmVhdGVPcHRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIGUubWV0YWRhdGEmJmUubWV0YWRhdGEuZ2V0KHRoaXMuZWxlbWVudFswXSlbdGhpcy53aWRnZXROYW1lXX0pfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSl7dmFyIHQ9ITE7ZShkb2N1bWVudCkubW91c2V1cChmdW5jdGlvbigpe3Q9ITF9KSxlLndpZGdldChcInVpLm1vdXNlXCIse3ZlcnNpb246XCIxLjkuMlwiLG9wdGlvbnM6e2NhbmNlbDpcImlucHV0LHRleHRhcmVhLGJ1dHRvbixzZWxlY3Qsb3B0aW9uXCIsZGlzdGFuY2U6MSxkZWxheTowfSxfbW91c2VJbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmVsZW1lbnQuYmluZChcIm1vdXNlZG93bi5cIit0aGlzLndpZGdldE5hbWUsZnVuY3Rpb24oZSl7cmV0dXJuIHQuX21vdXNlRG93bihlKX0pLmJpbmQoXCJjbGljay5cIit0aGlzLndpZGdldE5hbWUsZnVuY3Rpb24oaSl7cmV0dXJuITA9PT1lLmRhdGEoaS50YXJnZXQsdC53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpPyhlLnJlbW92ZURhdGEoaS50YXJnZXQsdC53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpLGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksITEpOnVuZGVmaW5lZH0pLHRoaXMuc3RhcnRlZD0hMX0sX21vdXNlRGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC51bmJpbmQoXCIuXCIrdGhpcy53aWRnZXROYW1lKSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSYmZShkb2N1bWVudCkudW5iaW5kKFwibW91c2Vtb3ZlLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSkudW5iaW5kKFwibW91c2V1cC5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VVcERlbGVnYXRlKX0sX21vdXNlRG93bjpmdW5jdGlvbihpKXtpZighdCl7dGhpcy5fbW91c2VTdGFydGVkJiZ0aGlzLl9tb3VzZVVwKGkpLHRoaXMuX21vdXNlRG93bkV2ZW50PWk7dmFyIHM9dGhpcyxuPTE9PT1pLndoaWNoLGE9XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMub3B0aW9ucy5jYW5jZWwmJmkudGFyZ2V0Lm5vZGVOYW1lP2UoaS50YXJnZXQpLmNsb3Nlc3QodGhpcy5vcHRpb25zLmNhbmNlbCkubGVuZ3RoOiExO3JldHVybiBuJiYhYSYmdGhpcy5fbW91c2VDYXB0dXJlKGkpPyh0aGlzLm1vdXNlRGVsYXlNZXQ9IXRoaXMub3B0aW9ucy5kZWxheSx0aGlzLm1vdXNlRGVsYXlNZXR8fCh0aGlzLl9tb3VzZURlbGF5VGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe3MubW91c2VEZWxheU1ldD0hMH0sdGhpcy5vcHRpb25zLmRlbGF5KSksdGhpcy5fbW91c2VEaXN0YW5jZU1ldChpKSYmdGhpcy5fbW91c2VEZWxheU1ldChpKSYmKHRoaXMuX21vdXNlU3RhcnRlZD10aGlzLl9tb3VzZVN0YXJ0KGkpIT09ITEsIXRoaXMuX21vdXNlU3RhcnRlZCk/KGkucHJldmVudERlZmF1bHQoKSwhMCk6KCEwPT09ZS5kYXRhKGkudGFyZ2V0LHRoaXMud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiKSYmZS5yZW1vdmVEYXRhKGkudGFyZ2V0LHRoaXMud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiKSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZT1mdW5jdGlvbihlKXtyZXR1cm4gcy5fbW91c2VNb3ZlKGUpfSx0aGlzLl9tb3VzZVVwRGVsZWdhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHMuX21vdXNlVXAoZSl9LGUoZG9jdW1lbnQpLmJpbmQoXCJtb3VzZW1vdmUuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlKS5iaW5kKFwibW91c2V1cC5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VVcERlbGVnYXRlKSxpLnByZXZlbnREZWZhdWx0KCksdD0hMCwhMCkpOiEwfX0sX21vdXNlTW92ZTpmdW5jdGlvbih0KXtyZXR1cm4hZS51aS5pZXx8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlPj05fHx0LmJ1dHRvbj90aGlzLl9tb3VzZVN0YXJ0ZWQ/KHRoaXMuX21vdXNlRHJhZyh0KSx0LnByZXZlbnREZWZhdWx0KCkpOih0aGlzLl9tb3VzZURpc3RhbmNlTWV0KHQpJiZ0aGlzLl9tb3VzZURlbGF5TWV0KHQpJiYodGhpcy5fbW91c2VTdGFydGVkPXRoaXMuX21vdXNlU3RhcnQodGhpcy5fbW91c2VEb3duRXZlbnQsdCkhPT0hMSx0aGlzLl9tb3VzZVN0YXJ0ZWQ/dGhpcy5fbW91c2VEcmFnKHQpOnRoaXMuX21vdXNlVXAodCkpLCF0aGlzLl9tb3VzZVN0YXJ0ZWQpOnRoaXMuX21vdXNlVXAodCl9LF9tb3VzZVVwOmZ1bmN0aW9uKHQpe3JldHVybiBlKGRvY3VtZW50KS51bmJpbmQoXCJtb3VzZW1vdmUuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlKS51bmJpbmQoXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpLHRoaXMuX21vdXNlU3RhcnRlZCYmKHRoaXMuX21vdXNlU3RhcnRlZD0hMSx0LnRhcmdldD09PXRoaXMuX21vdXNlRG93bkV2ZW50LnRhcmdldCYmZS5kYXRhKHQudGFyZ2V0LHRoaXMud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiLCEwKSx0aGlzLl9tb3VzZVN0b3AodCkpLCExfSxfbW91c2VEaXN0YW5jZU1ldDpmdW5jdGlvbihlKXtyZXR1cm4gTWF0aC5tYXgoTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVgtZS5wYWdlWCksTWF0aC5hYnModGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVktZS5wYWdlWSkpPj10aGlzLm9wdGlvbnMuZGlzdGFuY2V9LF9tb3VzZURlbGF5TWV0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW91c2VEZWxheU1ldH0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oKXt9LF9tb3VzZURyYWc6ZnVuY3Rpb24oKXt9LF9tb3VzZVN0b3A6ZnVuY3Rpb24oKXt9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oKXtyZXR1cm4hMH19KX0pKGpRdWVyeSk7KGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gaShlLHQsaSl7cmV0dXJuW3BhcnNlSW50KGVbMF0sMTApKihjLnRlc3QoZVswXSk/dC8xMDA6MSkscGFyc2VJbnQoZVsxXSwxMCkqKGMudGVzdChlWzFdKT9pLzEwMDoxKV19ZnVuY3Rpb24gcyh0LGkpe3JldHVybiBwYXJzZUludChlLmNzcyh0LGkpLDEwKXx8MH1lLnVpPWUudWl8fHt9O3ZhciBuLGE9TWF0aC5tYXgsbz1NYXRoLmFicyxyPU1hdGgucm91bmQsaD0vbGVmdHxjZW50ZXJ8cmlnaHQvLGw9L3RvcHxjZW50ZXJ8Ym90dG9tLyx1PS9bXFwrXFwtXVxcZCslPy8sZD0vXlxcdysvLGM9LyUkLyxwPWUuZm4ucG9zaXRpb247ZS5wb3NpdGlvbj17c2Nyb2xsYmFyV2lkdGg6ZnVuY3Rpb24oKXtpZihuIT09dClyZXR1cm4gbjt2YXIgaSxzLGE9ZShcIjxkaXYgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpoaWRkZW47Jz48ZGl2IHN0eWxlPSdoZWlnaHQ6MTAwcHg7d2lkdGg6YXV0bzsnPjwvZGl2PjwvZGl2PlwiKSxvPWEuY2hpbGRyZW4oKVswXTtyZXR1cm4gZShcImJvZHlcIikuYXBwZW5kKGEpLGk9by5vZmZzZXRXaWR0aCxhLmNzcyhcIm92ZXJmbG93XCIsXCJzY3JvbGxcIikscz1vLm9mZnNldFdpZHRoLGk9PT1zJiYocz1hWzBdLmNsaWVudFdpZHRoKSxhLnJlbW92ZSgpLG49aS1zfSxnZXRTY3JvbGxJbmZvOmZ1bmN0aW9uKHQpe3ZhciBpPXQuaXNXaW5kb3c/XCJcIjp0LmVsZW1lbnQuY3NzKFwib3ZlcmZsb3cteFwiKSxzPXQuaXNXaW5kb3c/XCJcIjp0LmVsZW1lbnQuY3NzKFwib3ZlcmZsb3cteVwiKSxuPVwic2Nyb2xsXCI9PT1pfHxcImF1dG9cIj09PWkmJnQud2lkdGg8dC5lbGVtZW50WzBdLnNjcm9sbFdpZHRoLGE9XCJzY3JvbGxcIj09PXN8fFwiYXV0b1wiPT09cyYmdC5oZWlnaHQ8dC5lbGVtZW50WzBdLnNjcm9sbEhlaWdodDtyZXR1cm57d2lkdGg6bj9lLnBvc2l0aW9uLnNjcm9sbGJhcldpZHRoKCk6MCxoZWlnaHQ6YT9lLnBvc2l0aW9uLnNjcm9sbGJhcldpZHRoKCk6MH19LGdldFdpdGhpbkluZm86ZnVuY3Rpb24odCl7dmFyIGk9ZSh0fHx3aW5kb3cpLHM9ZS5pc1dpbmRvdyhpWzBdKTtyZXR1cm57ZWxlbWVudDppLGlzV2luZG93OnMsb2Zmc2V0Omkub2Zmc2V0KCl8fHtsZWZ0OjAsdG9wOjB9LHNjcm9sbExlZnQ6aS5zY3JvbGxMZWZ0KCksc2Nyb2xsVG9wOmkuc2Nyb2xsVG9wKCksd2lkdGg6cz9pLndpZHRoKCk6aS5vdXRlcldpZHRoKCksaGVpZ2h0OnM/aS5oZWlnaHQoKTppLm91dGVySGVpZ2h0KCl9fX0sZS5mbi5wb3NpdGlvbj1mdW5jdGlvbih0KXtpZighdHx8IXQub2YpcmV0dXJuIHAuYXBwbHkodGhpcyxhcmd1bWVudHMpO3Q9ZS5leHRlbmQoe30sdCk7dmFyIG4sYyxmLG0sZyx2PWUodC5vZiksXz1lLnBvc2l0aW9uLmdldFdpdGhpbkluZm8odC53aXRoaW4pLGI9ZS5wb3NpdGlvbi5nZXRTY3JvbGxJbmZvKF8pLHk9dlswXSx4PSh0LmNvbGxpc2lvbnx8XCJmbGlwXCIpLnNwbGl0KFwiIFwiKSx3PXt9O3JldHVybiA5PT09eS5ub2RlVHlwZT8oYz12LndpZHRoKCksZj12LmhlaWdodCgpLG09e3RvcDowLGxlZnQ6MH0pOmUuaXNXaW5kb3coeSk/KGM9di53aWR0aCgpLGY9di5oZWlnaHQoKSxtPXt0b3A6di5zY3JvbGxUb3AoKSxsZWZ0OnYuc2Nyb2xsTGVmdCgpfSk6eS5wcmV2ZW50RGVmYXVsdD8odC5hdD1cImxlZnQgdG9wXCIsYz1mPTAsbT17dG9wOnkucGFnZVksbGVmdDp5LnBhZ2VYfSk6KGM9di5vdXRlcldpZHRoKCksZj12Lm91dGVySGVpZ2h0KCksbT12Lm9mZnNldCgpKSxnPWUuZXh0ZW5kKHt9LG0pLGUuZWFjaChbXCJteVwiLFwiYXRcIl0sZnVuY3Rpb24oKXt2YXIgZSxpLHM9KHRbdGhpc118fFwiXCIpLnNwbGl0KFwiIFwiKTsxPT09cy5sZW5ndGgmJihzPWgudGVzdChzWzBdKT9zLmNvbmNhdChbXCJjZW50ZXJcIl0pOmwudGVzdChzWzBdKT9bXCJjZW50ZXJcIl0uY29uY2F0KHMpOltcImNlbnRlclwiLFwiY2VudGVyXCJdKSxzWzBdPWgudGVzdChzWzBdKT9zWzBdOlwiY2VudGVyXCIsc1sxXT1sLnRlc3Qoc1sxXSk/c1sxXTpcImNlbnRlclwiLGU9dS5leGVjKHNbMF0pLGk9dS5leGVjKHNbMV0pLHdbdGhpc109W2U/ZVswXTowLGk/aVswXTowXSx0W3RoaXNdPVtkLmV4ZWMoc1swXSlbMF0sZC5leGVjKHNbMV0pWzBdXX0pLDE9PT14Lmxlbmd0aCYmKHhbMV09eFswXSksXCJyaWdodFwiPT09dC5hdFswXT9nLmxlZnQrPWM6XCJjZW50ZXJcIj09PXQuYXRbMF0mJihnLmxlZnQrPWMvMiksXCJib3R0b21cIj09PXQuYXRbMV0/Zy50b3ArPWY6XCJjZW50ZXJcIj09PXQuYXRbMV0mJihnLnRvcCs9Zi8yKSxuPWkody5hdCxjLGYpLGcubGVmdCs9blswXSxnLnRvcCs9blsxXSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgaCxsLHU9ZSh0aGlzKSxkPXUub3V0ZXJXaWR0aCgpLHA9dS5vdXRlckhlaWdodCgpLHk9cyh0aGlzLFwibWFyZ2luTGVmdFwiKSxrPXModGhpcyxcIm1hcmdpblRvcFwiKSxEPWQreStzKHRoaXMsXCJtYXJnaW5SaWdodFwiKStiLndpZHRoLFQ9cCtrK3ModGhpcyxcIm1hcmdpbkJvdHRvbVwiKStiLmhlaWdodCxTPWUuZXh0ZW5kKHt9LGcpLE49aSh3Lm15LHUub3V0ZXJXaWR0aCgpLHUub3V0ZXJIZWlnaHQoKSk7XCJyaWdodFwiPT09dC5teVswXT9TLmxlZnQtPWQ6XCJjZW50ZXJcIj09PXQubXlbMF0mJihTLmxlZnQtPWQvMiksXCJib3R0b21cIj09PXQubXlbMV0/Uy50b3AtPXA6XCJjZW50ZXJcIj09PXQubXlbMV0mJihTLnRvcC09cC8yKSxTLmxlZnQrPU5bMF0sUy50b3ArPU5bMV0sZS5zdXBwb3J0Lm9mZnNldEZyYWN0aW9uc3x8KFMubGVmdD1yKFMubGVmdCksUy50b3A9cihTLnRvcCkpLGg9e21hcmdpbkxlZnQ6eSxtYXJnaW5Ub3A6a30sZS5lYWNoKFtcImxlZnRcIixcInRvcFwiXSxmdW5jdGlvbihpLHMpe2UudWkucG9zaXRpb25beFtpXV0mJmUudWkucG9zaXRpb25beFtpXV1bc10oUyx7dGFyZ2V0V2lkdGg6Yyx0YXJnZXRIZWlnaHQ6ZixlbGVtV2lkdGg6ZCxlbGVtSGVpZ2h0OnAsY29sbGlzaW9uUG9zaXRpb246aCxjb2xsaXNpb25XaWR0aDpELGNvbGxpc2lvbkhlaWdodDpULG9mZnNldDpbblswXStOWzBdLG5bMV0rTlsxXV0sbXk6dC5teSxhdDp0LmF0LHdpdGhpbjpfLGVsZW06dX0pfSksZS5mbi5iZ2lmcmFtZSYmdS5iZ2lmcmFtZSgpLHQudXNpbmcmJihsPWZ1bmN0aW9uKGUpe3ZhciBpPW0ubGVmdC1TLmxlZnQscz1pK2MtZCxuPW0udG9wLVMudG9wLHI9bitmLXAsaD17dGFyZ2V0OntlbGVtZW50OnYsbGVmdDptLmxlZnQsdG9wOm0udG9wLHdpZHRoOmMsaGVpZ2h0OmZ9LGVsZW1lbnQ6e2VsZW1lbnQ6dSxsZWZ0OlMubGVmdCx0b3A6Uy50b3Asd2lkdGg6ZCxoZWlnaHQ6cH0saG9yaXpvbnRhbDowPnM/XCJsZWZ0XCI6aT4wP1wicmlnaHRcIjpcImNlbnRlclwiLHZlcnRpY2FsOjA+cj9cInRvcFwiOm4+MD9cImJvdHRvbVwiOlwibWlkZGxlXCJ9O2Q+YyYmYz5vKGkrcykmJihoLmhvcml6b250YWw9XCJjZW50ZXJcIikscD5mJiZmPm8obityKSYmKGgudmVydGljYWw9XCJtaWRkbGVcIiksaC5pbXBvcnRhbnQ9YShvKGkpLG8ocykpPmEobyhuKSxvKHIpKT9cImhvcml6b250YWxcIjpcInZlcnRpY2FsXCIsdC51c2luZy5jYWxsKHRoaXMsZSxoKX0pLHUub2Zmc2V0KGUuZXh0ZW5kKFMse3VzaW5nOmx9KSl9KX0sZS51aS5wb3NpdGlvbj17Zml0OntsZWZ0OmZ1bmN0aW9uKGUsdCl7dmFyIGkscz10LndpdGhpbixuPXMuaXNXaW5kb3c/cy5zY3JvbGxMZWZ0OnMub2Zmc2V0LmxlZnQsbz1zLndpZHRoLHI9ZS5sZWZ0LXQuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCxoPW4tcixsPXIrdC5jb2xsaXNpb25XaWR0aC1vLW47dC5jb2xsaXNpb25XaWR0aD5vP2g+MCYmMD49bD8oaT1lLmxlZnQraCt0LmNvbGxpc2lvbldpZHRoLW8tbixlLmxlZnQrPWgtaSk6ZS5sZWZ0PWw+MCYmMD49aD9uOmg+bD9uK28tdC5jb2xsaXNpb25XaWR0aDpuOmg+MD9lLmxlZnQrPWg6bD4wP2UubGVmdC09bDplLmxlZnQ9YShlLmxlZnQtcixlLmxlZnQpfSx0b3A6ZnVuY3Rpb24oZSx0KXt2YXIgaSxzPXQud2l0aGluLG49cy5pc1dpbmRvdz9zLnNjcm9sbFRvcDpzLm9mZnNldC50b3Asbz10LndpdGhpbi5oZWlnaHQscj1lLnRvcC10LmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCxoPW4tcixsPXIrdC5jb2xsaXNpb25IZWlnaHQtby1uO3QuY29sbGlzaW9uSGVpZ2h0Pm8/aD4wJiYwPj1sPyhpPWUudG9wK2grdC5jb2xsaXNpb25IZWlnaHQtby1uLGUudG9wKz1oLWkpOmUudG9wPWw+MCYmMD49aD9uOmg+bD9uK28tdC5jb2xsaXNpb25IZWlnaHQ6bjpoPjA/ZS50b3ArPWg6bD4wP2UudG9wLT1sOmUudG9wPWEoZS50b3AtcixlLnRvcCl9fSxmbGlwOntsZWZ0OmZ1bmN0aW9uKGUsdCl7dmFyIGkscyxuPXQud2l0aGluLGE9bi5vZmZzZXQubGVmdCtuLnNjcm9sbExlZnQscj1uLndpZHRoLGg9bi5pc1dpbmRvdz9uLnNjcm9sbExlZnQ6bi5vZmZzZXQubGVmdCxsPWUubGVmdC10LmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQsdT1sLWgsZD1sK3QuY29sbGlzaW9uV2lkdGgtci1oLGM9XCJsZWZ0XCI9PT10Lm15WzBdPy10LmVsZW1XaWR0aDpcInJpZ2h0XCI9PT10Lm15WzBdP3QuZWxlbVdpZHRoOjAscD1cImxlZnRcIj09PXQuYXRbMF0/dC50YXJnZXRXaWR0aDpcInJpZ2h0XCI9PT10LmF0WzBdPy10LnRhcmdldFdpZHRoOjAsZj0tMip0Lm9mZnNldFswXTswPnU/KGk9ZS5sZWZ0K2MrcCtmK3QuY29sbGlzaW9uV2lkdGgtci1hLCgwPml8fG8odSk+aSkmJihlLmxlZnQrPWMrcCtmKSk6ZD4wJiYocz1lLmxlZnQtdC5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0K2MrcCtmLWgsKHM+MHx8ZD5vKHMpKSYmKGUubGVmdCs9YytwK2YpKX0sdG9wOmZ1bmN0aW9uKGUsdCl7dmFyIGkscyxuPXQud2l0aGluLGE9bi5vZmZzZXQudG9wK24uc2Nyb2xsVG9wLHI9bi5oZWlnaHQsaD1uLmlzV2luZG93P24uc2Nyb2xsVG9wOm4ub2Zmc2V0LnRvcCxsPWUudG9wLXQuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLHU9bC1oLGQ9bCt0LmNvbGxpc2lvbkhlaWdodC1yLWgsYz1cInRvcFwiPT09dC5teVsxXSxwPWM/LXQuZWxlbUhlaWdodDpcImJvdHRvbVwiPT09dC5teVsxXT90LmVsZW1IZWlnaHQ6MCxmPVwidG9wXCI9PT10LmF0WzFdP3QudGFyZ2V0SGVpZ2h0OlwiYm90dG9tXCI9PT10LmF0WzFdPy10LnRhcmdldEhlaWdodDowLG09LTIqdC5vZmZzZXRbMV07MD51PyhzPWUudG9wK3ArZittK3QuY29sbGlzaW9uSGVpZ2h0LXItYSxlLnRvcCtwK2YrbT51JiYoMD5zfHxvKHUpPnMpJiYoZS50b3ArPXArZittKSk6ZD4wJiYoaT1lLnRvcC10LmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCtwK2YrbS1oLGUudG9wK3ArZittPmQmJihpPjB8fGQ+byhpKSkmJihlLnRvcCs9cCtmK20pKX19LGZsaXBmaXQ6e2xlZnQ6ZnVuY3Rpb24oKXtlLnVpLnBvc2l0aW9uLmZsaXAubGVmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyksZS51aS5wb3NpdGlvbi5maXQubGVmdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHRvcDpmdW5jdGlvbigpe2UudWkucG9zaXRpb24uZmxpcC50b3AuYXBwbHkodGhpcyxhcmd1bWVudHMpLGUudWkucG9zaXRpb24uZml0LnRvcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fX0sZnVuY3Rpb24oKXt2YXIgdCxpLHMsbixhLG89ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdLHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobz9cImRpdlwiOlwiYm9keVwiKSxzPXt2aXNpYmlsaXR5OlwiaGlkZGVuXCIsd2lkdGg6MCxoZWlnaHQ6MCxib3JkZXI6MCxtYXJnaW46MCxiYWNrZ3JvdW5kOlwibm9uZVwifSxvJiZlLmV4dGVuZChzLHtwb3NpdGlvbjpcImFic29sdXRlXCIsbGVmdDpcIi0xMDAwcHhcIix0b3A6XCItMTAwMHB4XCJ9KTtmb3IoYSBpbiBzKXQuc3R5bGVbYV09c1thXTt0LmFwcGVuZENoaWxkKHIpLGk9b3x8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGkuaW5zZXJ0QmVmb3JlKHQsaS5maXJzdENoaWxkKSxyLnN0eWxlLmNzc1RleHQ9XCJwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDEwLjc0MzIyMjJweDtcIixuPWUocikub2Zmc2V0KCkubGVmdCxlLnN1cHBvcnQub2Zmc2V0RnJhY3Rpb25zPW4+MTAmJjExPm4sdC5pbm5lckhUTUw9XCJcIixpLnJlbW92ZUNoaWxkKHQpfSgpLGUudWlCYWNrQ29tcGF0IT09ITEmJmZ1bmN0aW9uKGUpe3ZhciBpPWUuZm4ucG9zaXRpb247ZS5mbi5wb3NpdGlvbj1mdW5jdGlvbihzKXtpZighc3x8IXMub2Zmc2V0KXJldHVybiBpLmNhbGwodGhpcyxzKTt2YXIgbj1zLm9mZnNldC5zcGxpdChcIiBcIiksYT1zLmF0LnNwbGl0KFwiIFwiKTtyZXR1cm4gMT09PW4ubGVuZ3RoJiYoblsxXT1uWzBdKSwvXlxcZC8udGVzdChuWzBdKSYmKG5bMF09XCIrXCIrblswXSksL15cXGQvLnRlc3QoblsxXSkmJihuWzFdPVwiK1wiK25bMV0pLDE9PT1hLmxlbmd0aCYmKC9sZWZ0fGNlbnRlcnxyaWdodC8udGVzdChhWzBdKT9hWzFdPVwiY2VudGVyXCI6KGFbMV09YVswXSxhWzBdPVwiY2VudGVyXCIpKSxpLmNhbGwodGhpcyxlLmV4dGVuZChzLHthdDphWzBdK25bMF0rXCIgXCIrYVsxXStuWzFdLG9mZnNldDp0fSkpfX0oalF1ZXJ5KX0pKGpRdWVyeSk7KGZ1bmN0aW9uKGUpe2Uud2lkZ2V0KFwidWkuZHJhZ2dhYmxlXCIsZS51aS5tb3VzZSx7dmVyc2lvbjpcIjEuOS4yXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJkcmFnXCIsb3B0aW9uczp7YWRkQ2xhc3NlczohMCxhcHBlbmRUbzpcInBhcmVudFwiLGF4aXM6ITEsY29ubmVjdFRvU29ydGFibGU6ITEsY29udGFpbm1lbnQ6ITEsY3Vyc29yOlwiYXV0b1wiLGN1cnNvckF0OiExLGdyaWQ6ITEsaGFuZGxlOiExLGhlbHBlcjpcIm9yaWdpbmFsXCIsaWZyYW1lRml4OiExLG9wYWNpdHk6ITEscmVmcmVzaFBvc2l0aW9uczohMSxyZXZlcnQ6ITEscmV2ZXJ0RHVyYXRpb246NTAwLHNjb3BlOlwiZGVmYXVsdFwiLHNjcm9sbDohMCxzY3JvbGxTZW5zaXRpdml0eToyMCxzY3JvbGxTcGVlZDoyMCxzbmFwOiExLHNuYXBNb2RlOlwiYm90aFwiLHNuYXBUb2xlcmFuY2U6MjAsc3RhY2s6ITEsekluZGV4OiExfSxfY3JlYXRlOmZ1bmN0aW9uKCl7XCJvcmlnaW5hbFwiIT10aGlzLm9wdGlvbnMuaGVscGVyfHwvXig/OnJ8YXxmKS8udGVzdCh0aGlzLmVsZW1lbnQuY3NzKFwicG9zaXRpb25cIikpfHwodGhpcy5lbGVtZW50WzBdLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIiksdGhpcy5vcHRpb25zLmFkZENsYXNzZXMmJnRoaXMuZWxlbWVudC5hZGRDbGFzcyhcInVpLWRyYWdnYWJsZVwiKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMuZWxlbWVudC5hZGRDbGFzcyhcInVpLWRyYWdnYWJsZS1kaXNhYmxlZFwiKSx0aGlzLl9tb3VzZUluaXQoKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1kcmFnZ2FibGUgdWktZHJhZ2dhYmxlLWRyYWdnaW5nIHVpLWRyYWdnYWJsZS1kaXNhYmxlZFwiKSx0aGlzLl9tb3VzZURlc3Ryb3koKX0sX21vdXNlQ2FwdHVyZTpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm9wdGlvbnM7cmV0dXJuIHRoaXMuaGVscGVyfHxpLmRpc2FibGVkfHxlKHQudGFyZ2V0KS5pcyhcIi51aS1yZXNpemFibGUtaGFuZGxlXCIpPyExOih0aGlzLmhhbmRsZT10aGlzLl9nZXRIYW5kbGUodCksdGhpcy5oYW5kbGU/KGUoaS5pZnJhbWVGaXg9PT0hMD9cImlmcmFtZVwiOmkuaWZyYW1lRml4KS5lYWNoKGZ1bmN0aW9uKCl7ZSgnPGRpdiBjbGFzcz1cInVpLWRyYWdnYWJsZS1pZnJhbWVGaXhcIiBzdHlsZT1cImJhY2tncm91bmQ6ICNmZmY7XCI+PC9kaXY+JykuY3NzKHt3aWR0aDp0aGlzLm9mZnNldFdpZHRoK1wicHhcIixoZWlnaHQ6dGhpcy5vZmZzZXRIZWlnaHQrXCJweFwiLHBvc2l0aW9uOlwiYWJzb2x1dGVcIixvcGFjaXR5OlwiMC4wMDFcIix6SW5kZXg6MWUzfSkuY3NzKGUodGhpcykub2Zmc2V0KCkpLmFwcGVuZFRvKFwiYm9keVwiKX0pLCEwKTohMSl9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucztyZXR1cm4gdGhpcy5oZWxwZXI9dGhpcy5fY3JlYXRlSGVscGVyKHQpLHRoaXMuaGVscGVyLmFkZENsYXNzKFwidWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpLHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSxlLnVpLmRkbWFuYWdlciYmKGUudWkuZGRtYW5hZ2VyLmN1cnJlbnQ9dGhpcyksdGhpcy5fY2FjaGVNYXJnaW5zKCksdGhpcy5jc3NQb3NpdGlvbj10aGlzLmhlbHBlci5jc3MoXCJwb3NpdGlvblwiKSx0aGlzLnNjcm9sbFBhcmVudD10aGlzLmhlbHBlci5zY3JvbGxQYXJlbnQoKSx0aGlzLm9mZnNldD10aGlzLnBvc2l0aW9uQWJzPXRoaXMuZWxlbWVudC5vZmZzZXQoKSx0aGlzLm9mZnNldD17dG9wOnRoaXMub2Zmc2V0LnRvcC10aGlzLm1hcmdpbnMudG9wLGxlZnQ6dGhpcy5vZmZzZXQubGVmdC10aGlzLm1hcmdpbnMubGVmdH0sZS5leHRlbmQodGhpcy5vZmZzZXQse2NsaWNrOntsZWZ0OnQucGFnZVgtdGhpcy5vZmZzZXQubGVmdCx0b3A6dC5wYWdlWS10aGlzLm9mZnNldC50b3B9LHBhcmVudDp0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSxyZWxhdGl2ZTp0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpfSksdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXRoaXMucG9zaXRpb249dGhpcy5fZ2VuZXJhdGVQb3NpdGlvbih0KSx0aGlzLm9yaWdpbmFsUGFnZVg9dC5wYWdlWCx0aGlzLm9yaWdpbmFsUGFnZVk9dC5wYWdlWSxpLmN1cnNvckF0JiZ0aGlzLl9hZGp1c3RPZmZzZXRGcm9tSGVscGVyKGkuY3Vyc29yQXQpLGkuY29udGFpbm1lbnQmJnRoaXMuX3NldENvbnRhaW5tZW50KCksdGhpcy5fdHJpZ2dlcihcInN0YXJ0XCIsdCk9PT0hMT8odGhpcy5fY2xlYXIoKSwhMSk6KHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSxlLnVpLmRkbWFuYWdlciYmIWkuZHJvcEJlaGF2aW91ciYmZS51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHModGhpcyx0KSx0aGlzLl9tb3VzZURyYWcodCwhMCksZS51aS5kZG1hbmFnZXImJmUudWkuZGRtYW5hZ2VyLmRyYWdTdGFydCh0aGlzLHQpLCEwKX0sX21vdXNlRHJhZzpmdW5jdGlvbih0LGkpe2lmKHRoaXMucG9zaXRpb249dGhpcy5fZ2VuZXJhdGVQb3NpdGlvbih0KSx0aGlzLnBvc2l0aW9uQWJzPXRoaXMuX2NvbnZlcnRQb3NpdGlvblRvKFwiYWJzb2x1dGVcIiksIWkpe3ZhciBzPXRoaXMuX3VpSGFzaCgpO2lmKHRoaXMuX3RyaWdnZXIoXCJkcmFnXCIsdCxzKT09PSExKXJldHVybiB0aGlzLl9tb3VzZVVwKHt9KSwhMTt0aGlzLnBvc2l0aW9uPXMucG9zaXRpb259cmV0dXJuIHRoaXMub3B0aW9ucy5heGlzJiZcInlcIj09dGhpcy5vcHRpb25zLmF4aXN8fCh0aGlzLmhlbHBlclswXS5zdHlsZS5sZWZ0PXRoaXMucG9zaXRpb24ubGVmdCtcInB4XCIpLHRoaXMub3B0aW9ucy5heGlzJiZcInhcIj09dGhpcy5vcHRpb25zLmF4aXN8fCh0aGlzLmhlbHBlclswXS5zdHlsZS50b3A9dGhpcy5wb3NpdGlvbi50b3ArXCJweFwiKSxlLnVpLmRkbWFuYWdlciYmZS51aS5kZG1hbmFnZXIuZHJhZyh0aGlzLHQpLCExfSxfbW91c2VTdG9wOmZ1bmN0aW9uKHQpe3ZhciBpPSExO2UudWkuZGRtYW5hZ2VyJiYhdGhpcy5vcHRpb25zLmRyb3BCZWhhdmlvdXImJihpPWUudWkuZGRtYW5hZ2VyLmRyb3AodGhpcyx0KSksdGhpcy5kcm9wcGVkJiYoaT10aGlzLmRyb3BwZWQsdGhpcy5kcm9wcGVkPSExKTtmb3IodmFyIHM9dGhpcy5lbGVtZW50WzBdLG49ITE7cyYmKHM9cy5wYXJlbnROb2RlKTspcz09ZG9jdW1lbnQmJihuPSEwKTtpZighbiYmXCJvcmlnaW5hbFwiPT09dGhpcy5vcHRpb25zLmhlbHBlcilyZXR1cm4hMTtpZihcImludmFsaWRcIj09dGhpcy5vcHRpb25zLnJldmVydCYmIWl8fFwidmFsaWRcIj09dGhpcy5vcHRpb25zLnJldmVydCYmaXx8dGhpcy5vcHRpb25zLnJldmVydD09PSEwfHxlLmlzRnVuY3Rpb24odGhpcy5vcHRpb25zLnJldmVydCkmJnRoaXMub3B0aW9ucy5yZXZlcnQuY2FsbCh0aGlzLmVsZW1lbnQsaSkpe3ZhciBhPXRoaXM7ZSh0aGlzLmhlbHBlcikuYW5pbWF0ZSh0aGlzLm9yaWdpbmFsUG9zaXRpb24scGFyc2VJbnQodGhpcy5vcHRpb25zLnJldmVydER1cmF0aW9uLDEwKSxmdW5jdGlvbigpe2EuX3RyaWdnZXIoXCJzdG9wXCIsdCkhPT0hMSYmYS5fY2xlYXIoKX0pfWVsc2UgdGhpcy5fdHJpZ2dlcihcInN0b3BcIix0KSE9PSExJiZ0aGlzLl9jbGVhcigpO3JldHVybiExfSxfbW91c2VVcDpmdW5jdGlvbih0KXtyZXR1cm4gZShcImRpdi51aS1kcmFnZ2FibGUtaWZyYW1lRml4XCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcyl9KSxlLnVpLmRkbWFuYWdlciYmZS51aS5kZG1hbmFnZXIuZHJhZ1N0b3AodGhpcyx0KSxlLnVpLm1vdXNlLnByb3RvdHlwZS5fbW91c2VVcC5jYWxsKHRoaXMsdCl9LGNhbmNlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhlbHBlci5pcyhcIi51aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIik/dGhpcy5fbW91c2VVcCh7fSk6dGhpcy5fY2xlYXIoKSx0aGlzfSxfZ2V0SGFuZGxlOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucy5oYW5kbGUmJmUodGhpcy5vcHRpb25zLmhhbmRsZSx0aGlzLmVsZW1lbnQpLmxlbmd0aD8hMTohMDtyZXR1cm4gZSh0aGlzLm9wdGlvbnMuaGFuZGxlLHRoaXMuZWxlbWVudCkuZmluZChcIipcIikuYW5kU2VsZigpLmVhY2goZnVuY3Rpb24oKXt0aGlzPT10LnRhcmdldCYmKGk9ITApfSksaX0sX2NyZWF0ZUhlbHBlcjpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm9wdGlvbnMscz1lLmlzRnVuY3Rpb24oaS5oZWxwZXIpP2UoaS5oZWxwZXIuYXBwbHkodGhpcy5lbGVtZW50WzBdLFt0XSkpOlwiY2xvbmVcIj09aS5oZWxwZXI/dGhpcy5lbGVtZW50LmNsb25lKCkucmVtb3ZlQXR0cihcImlkXCIpOnRoaXMuZWxlbWVudDtyZXR1cm4gcy5wYXJlbnRzKFwiYm9keVwiKS5sZW5ndGh8fHMuYXBwZW5kVG8oXCJwYXJlbnRcIj09aS5hcHBlbmRUbz90aGlzLmVsZW1lbnRbMF0ucGFyZW50Tm9kZTppLmFwcGVuZFRvKSxzWzBdPT10aGlzLmVsZW1lbnRbMF18fC8oZml4ZWR8YWJzb2x1dGUpLy50ZXN0KHMuY3NzKFwicG9zaXRpb25cIikpfHxzLmNzcyhcInBvc2l0aW9uXCIsXCJhYnNvbHV0ZVwiKSxzfSxfYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcjpmdW5jdGlvbih0KXtcInN0cmluZ1wiPT10eXBlb2YgdCYmKHQ9dC5zcGxpdChcIiBcIikpLGUuaXNBcnJheSh0KSYmKHQ9e2xlZnQ6K3RbMF0sdG9wOit0WzFdfHwwfSksXCJsZWZ0XCJpbiB0JiYodGhpcy5vZmZzZXQuY2xpY2subGVmdD10LmxlZnQrdGhpcy5tYXJnaW5zLmxlZnQpLFwicmlnaHRcImluIHQmJih0aGlzLm9mZnNldC5jbGljay5sZWZ0PXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgtdC5yaWdodCt0aGlzLm1hcmdpbnMubGVmdCksXCJ0b3BcImluIHQmJih0aGlzLm9mZnNldC5jbGljay50b3A9dC50b3ArdGhpcy5tYXJnaW5zLnRvcCksXCJib3R0b21cImluIHQmJih0aGlzLm9mZnNldC5jbGljay50b3A9dGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQtdC5ib3R0b20rdGhpcy5tYXJnaW5zLnRvcCl9LF9nZXRQYXJlbnRPZmZzZXQ6ZnVuY3Rpb24oKXt0aGlzLm9mZnNldFBhcmVudD10aGlzLmhlbHBlci5vZmZzZXRQYXJlbnQoKTt2YXIgdD10aGlzLm9mZnNldFBhcmVudC5vZmZzZXQoKTtyZXR1cm5cImFic29sdXRlXCI9PXRoaXMuY3NzUG9zaXRpb24mJnRoaXMuc2Nyb2xsUGFyZW50WzBdIT1kb2N1bWVudCYmZS5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSkmJih0LmxlZnQrPXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSx0LnRvcCs9dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkpLCh0aGlzLm9mZnNldFBhcmVudFswXT09ZG9jdW1lbnQuYm9keXx8dGhpcy5vZmZzZXRQYXJlbnRbMF0udGFnTmFtZSYmXCJodG1sXCI9PXRoaXMub2Zmc2V0UGFyZW50WzBdLnRhZ05hbWUudG9Mb3dlckNhc2UoKSYmZS51aS5pZSkmJih0PXt0b3A6MCxsZWZ0OjB9KSx7dG9wOnQudG9wKyhwYXJzZUludCh0aGlzLm9mZnNldFBhcmVudC5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApLGxlZnQ6dC5sZWZ0KyhwYXJzZUludCh0aGlzLm9mZnNldFBhcmVudC5jc3MoXCJib3JkZXJMZWZ0V2lkdGhcIiksMTApfHwwKX19LF9nZXRSZWxhdGl2ZU9mZnNldDpmdW5jdGlvbigpe2lmKFwicmVsYXRpdmVcIj09dGhpcy5jc3NQb3NpdGlvbil7dmFyIGU9dGhpcy5lbGVtZW50LnBvc2l0aW9uKCk7cmV0dXJue3RvcDplLnRvcC0ocGFyc2VJbnQodGhpcy5oZWxwZXIuY3NzKFwidG9wXCIpLDEwKXx8MCkrdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCksbGVmdDplLmxlZnQtKHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyhcImxlZnRcIiksMTApfHwwKSt0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCl9fXJldHVybnt0b3A6MCxsZWZ0OjB9fSxfY2FjaGVNYXJnaW5zOmZ1bmN0aW9uKCl7dGhpcy5tYXJnaW5zPXtsZWZ0OnBhcnNlSW50KHRoaXMuZWxlbWVudC5jc3MoXCJtYXJnaW5MZWZ0XCIpLDEwKXx8MCx0b3A6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpblRvcFwiKSwxMCl8fDAscmlnaHQ6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpblJpZ2h0XCIpLDEwKXx8MCxib3R0b206cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpbkJvdHRvbVwiKSwxMCl8fDB9fSxfY2FjaGVIZWxwZXJQcm9wb3J0aW9uczpmdW5jdGlvbigpe3RoaXMuaGVscGVyUHJvcG9ydGlvbnM9e3dpZHRoOnRoaXMuaGVscGVyLm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKX19LF9zZXRDb250YWlubWVudDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucztpZihcInBhcmVudFwiPT10LmNvbnRhaW5tZW50JiYodC5jb250YWlubWVudD10aGlzLmhlbHBlclswXS5wYXJlbnROb2RlKSwoXCJkb2N1bWVudFwiPT10LmNvbnRhaW5tZW50fHxcIndpbmRvd1wiPT10LmNvbnRhaW5tZW50KSYmKHRoaXMuY29udGFpbm1lbnQ9W1wiZG9jdW1lbnRcIj09dC5jb250YWlubWVudD8wOmUod2luZG93KS5zY3JvbGxMZWZ0KCktdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdCxcImRvY3VtZW50XCI9PXQuY29udGFpbm1lbnQ/MDplKHdpbmRvdykuc2Nyb2xsVG9wKCktdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wLXRoaXMub2Zmc2V0LnBhcmVudC50b3AsKFwiZG9jdW1lbnRcIj09dC5jb250YWlubWVudD8wOmUod2luZG93KS5zY3JvbGxMZWZ0KCkpK2UoXCJkb2N1bWVudFwiPT10LmNvbnRhaW5tZW50P2RvY3VtZW50OndpbmRvdykud2lkdGgoKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LChcImRvY3VtZW50XCI9PXQuY29udGFpbm1lbnQ/MDplKHdpbmRvdykuc2Nyb2xsVG9wKCkpKyhlKFwiZG9jdW1lbnRcIj09dC5jb250YWlubWVudD9kb2N1bWVudDp3aW5kb3cpLmhlaWdodCgpfHxkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0KS10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10aGlzLm1hcmdpbnMudG9wXSksL14oZG9jdW1lbnR8d2luZG93fHBhcmVudCkkLy50ZXN0KHQuY29udGFpbm1lbnQpfHx0LmNvbnRhaW5tZW50LmNvbnN0cnVjdG9yPT1BcnJheSl0LmNvbnRhaW5tZW50LmNvbnN0cnVjdG9yPT1BcnJheSYmKHRoaXMuY29udGFpbm1lbnQ9dC5jb250YWlubWVudCk7ZWxzZXt2YXIgaT1lKHQuY29udGFpbm1lbnQpLHM9aVswXTtpZighcylyZXR1cm47aS5vZmZzZXQoKTt2YXIgbj1cImhpZGRlblwiIT1lKHMpLmNzcyhcIm92ZXJmbG93XCIpO3RoaXMuY29udGFpbm1lbnQ9WyhwYXJzZUludChlKHMpLmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludChlKHMpLmNzcyhcInBhZGRpbmdMZWZ0XCIpLDEwKXx8MCksKHBhcnNlSW50KGUocykuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKSsocGFyc2VJbnQoZShzKS5jc3MoXCJwYWRkaW5nVG9wXCIpLDEwKXx8MCksKG4/TWF0aC5tYXgocy5zY3JvbGxXaWR0aCxzLm9mZnNldFdpZHRoKTpzLm9mZnNldFdpZHRoKS0ocGFyc2VJbnQoZShzKS5jc3MoXCJib3JkZXJMZWZ0V2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQoZShzKS5jc3MoXCJwYWRkaW5nUmlnaHRcIiksMTApfHwwKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LXRoaXMubWFyZ2lucy5yaWdodCwobj9NYXRoLm1heChzLnNjcm9sbEhlaWdodCxzLm9mZnNldEhlaWdodCk6cy5vZmZzZXRIZWlnaHQpLShwYXJzZUludChlKHMpLmNzcyhcImJvcmRlclRvcFdpZHRoXCIpLDEwKXx8MCktKHBhcnNlSW50KGUocykuY3NzKFwicGFkZGluZ0JvdHRvbVwiKSwxMCl8fDApLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3AtdGhpcy5tYXJnaW5zLmJvdHRvbV0sdGhpcy5yZWxhdGl2ZV9jb250YWluZXI9aX19LF9jb252ZXJ0UG9zaXRpb25UbzpmdW5jdGlvbih0LGkpe2l8fChpPXRoaXMucG9zaXRpb24pO3ZhciBzPVwiYWJzb2x1dGVcIj09dD8xOi0xLG49KHRoaXMub3B0aW9ucyxcImFic29sdXRlXCIhPXRoaXMuY3NzUG9zaXRpb258fHRoaXMuc2Nyb2xsUGFyZW50WzBdIT1kb2N1bWVudCYmZS5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSk/dGhpcy5zY3JvbGxQYXJlbnQ6dGhpcy5vZmZzZXRQYXJlbnQpLGE9LyhodG1sfGJvZHkpL2kudGVzdChuWzBdLnRhZ05hbWUpO3JldHVybnt0b3A6aS50b3ArdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wKnMrdGhpcy5vZmZzZXQucGFyZW50LnRvcCpzLShcImZpeGVkXCI9PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOmE/MDpuLnNjcm9sbFRvcCgpKSpzLGxlZnQ6aS5sZWZ0K3RoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQqcyt0aGlzLm9mZnNldC5wYXJlbnQubGVmdCpzLShcImZpeGVkXCI9PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTphPzA6bi5zY3JvbGxMZWZ0KCkpKnN9fSxfZ2VuZXJhdGVQb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm9wdGlvbnMscz1cImFic29sdXRlXCIhPXRoaXMuY3NzUG9zaXRpb258fHRoaXMuc2Nyb2xsUGFyZW50WzBdIT1kb2N1bWVudCYmZS5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSk/dGhpcy5zY3JvbGxQYXJlbnQ6dGhpcy5vZmZzZXRQYXJlbnQsbj0vKGh0bWx8Ym9keSkvaS50ZXN0KHNbMF0udGFnTmFtZSksYT10LnBhZ2VYLG89dC5wYWdlWTtpZih0aGlzLm9yaWdpbmFsUG9zaXRpb24pe3ZhciByO2lmKHRoaXMuY29udGFpbm1lbnQpe2lmKHRoaXMucmVsYXRpdmVfY29udGFpbmVyKXt2YXIgaD10aGlzLnJlbGF0aXZlX2NvbnRhaW5lci5vZmZzZXQoKTtyPVt0aGlzLmNvbnRhaW5tZW50WzBdK2gubGVmdCx0aGlzLmNvbnRhaW5tZW50WzFdK2gudG9wLHRoaXMuY29udGFpbm1lbnRbMl0raC5sZWZ0LHRoaXMuY29udGFpbm1lbnRbM10raC50b3BdfWVsc2Ugcj10aGlzLmNvbnRhaW5tZW50O3QucGFnZVgtdGhpcy5vZmZzZXQuY2xpY2subGVmdDxyWzBdJiYoYT1yWzBdK3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQpLHQucGFnZVktdGhpcy5vZmZzZXQuY2xpY2sudG9wPHJbMV0mJihvPXJbMV0rdGhpcy5vZmZzZXQuY2xpY2sudG9wKSx0LnBhZ2VYLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+clsyXSYmKGE9clsyXSt0aGlzLm9mZnNldC5jbGljay5sZWZ0KSx0LnBhZ2VZLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD5yWzNdJiYobz1yWzNdK3RoaXMub2Zmc2V0LmNsaWNrLnRvcCl9aWYoaS5ncmlkKXt2YXIgbD1pLmdyaWRbMV0/dGhpcy5vcmlnaW5hbFBhZ2VZK01hdGgucm91bmQoKG8tdGhpcy5vcmlnaW5hbFBhZ2VZKS9pLmdyaWRbMV0pKmkuZ3JpZFsxXTp0aGlzLm9yaWdpbmFsUGFnZVk7bz1yP2wtdGhpcy5vZmZzZXQuY2xpY2sudG9wPHJbMV18fGwtdGhpcy5vZmZzZXQuY2xpY2sudG9wPnJbM10/bC10aGlzLm9mZnNldC5jbGljay50b3A8clsxXT9sK2kuZ3JpZFsxXTpsLWkuZ3JpZFsxXTpsOmw7dmFyIHU9aS5ncmlkWzBdP3RoaXMub3JpZ2luYWxQYWdlWCtNYXRoLnJvdW5kKChhLXRoaXMub3JpZ2luYWxQYWdlWCkvaS5ncmlkWzBdKSppLmdyaWRbMF06dGhpcy5vcmlnaW5hbFBhZ2VYO2E9cj91LXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ8clswXXx8dS10aGlzLm9mZnNldC5jbGljay5sZWZ0PnJbMl0/dS10aGlzLm9mZnNldC5jbGljay5sZWZ0PHJbMF0/dStpLmdyaWRbMF06dS1pLmdyaWRbMF06dTp1fX1yZXR1cm57dG9wOm8tdGhpcy5vZmZzZXQuY2xpY2sudG9wLXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wKyhcImZpeGVkXCI9PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOm4/MDpzLnNjcm9sbFRvcCgpKSxsZWZ0OmEtdGhpcy5vZmZzZXQuY2xpY2subGVmdC10aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0KyhcImZpeGVkXCI9PXRoaXMuY3NzUG9zaXRpb24/LXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTpuPzA6cy5zY3JvbGxMZWZ0KCkpfX0sX2NsZWFyOmZ1bmN0aW9uKCl7dGhpcy5oZWxwZXIucmVtb3ZlQ2xhc3MoXCJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIiksdGhpcy5oZWxwZXJbMF09PXRoaXMuZWxlbWVudFswXXx8dGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsfHx0aGlzLmhlbHBlci5yZW1vdmUoKSx0aGlzLmhlbHBlcj1udWxsLHRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbD0hMX0sX3RyaWdnZXI6ZnVuY3Rpb24odCxpLHMpe3JldHVybiBzPXN8fHRoaXMuX3VpSGFzaCgpLGUudWkucGx1Z2luLmNhbGwodGhpcyx0LFtpLHNdKSxcImRyYWdcIj09dCYmKHRoaXMucG9zaXRpb25BYnM9dGhpcy5fY29udmVydFBvc2l0aW9uVG8oXCJhYnNvbHV0ZVwiKSksZS5XaWRnZXQucHJvdG90eXBlLl90cmlnZ2VyLmNhbGwodGhpcyx0LGkscyl9LHBsdWdpbnM6e30sX3VpSGFzaDpmdW5jdGlvbigpe3JldHVybntoZWxwZXI6dGhpcy5oZWxwZXIscG9zaXRpb246dGhpcy5wb3NpdGlvbixvcmlnaW5hbFBvc2l0aW9uOnRoaXMub3JpZ2luYWxQb3NpdGlvbixvZmZzZXQ6dGhpcy5wb3NpdGlvbkFic319fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJjb25uZWN0VG9Tb3J0YWJsZVwiLHtzdGFydDpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKSxuPXMub3B0aW9ucyxhPWUuZXh0ZW5kKHt9LGkse2l0ZW06cy5lbGVtZW50fSk7cy5zb3J0YWJsZXM9W10sZShuLmNvbm5lY3RUb1NvcnRhYmxlKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9ZS5kYXRhKHRoaXMsXCJzb3J0YWJsZVwiKTtpJiYhaS5vcHRpb25zLmRpc2FibGVkJiYocy5zb3J0YWJsZXMucHVzaCh7aW5zdGFuY2U6aSxzaG91bGRSZXZlcnQ6aS5vcHRpb25zLnJldmVydH0pLGkucmVmcmVzaFBvc2l0aW9ucygpLGkuX3RyaWdnZXIoXCJhY3RpdmF0ZVwiLHQsYSkpfSl9LHN0b3A6ZnVuY3Rpb24odCxpKXt2YXIgcz1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIiksbj1lLmV4dGVuZCh7fSxpLHtpdGVtOnMuZWxlbWVudH0pO2UuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3RoaXMuaW5zdGFuY2UuaXNPdmVyPyh0aGlzLmluc3RhbmNlLmlzT3Zlcj0wLHMuY2FuY2VsSGVscGVyUmVtb3ZhbD0hMCx0aGlzLmluc3RhbmNlLmNhbmNlbEhlbHBlclJlbW92YWw9ITEsdGhpcy5zaG91bGRSZXZlcnQmJih0aGlzLmluc3RhbmNlLm9wdGlvbnMucmV2ZXJ0PSEwKSx0aGlzLmluc3RhbmNlLl9tb3VzZVN0b3AodCksdGhpcy5pbnN0YW5jZS5vcHRpb25zLmhlbHBlcj10aGlzLmluc3RhbmNlLm9wdGlvbnMuX2hlbHBlcixcIm9yaWdpbmFsXCI9PXMub3B0aW9ucy5oZWxwZXImJnRoaXMuaW5zdGFuY2UuY3VycmVudEl0ZW0uY3NzKHt0b3A6XCJhdXRvXCIsbGVmdDpcImF1dG9cIn0pKToodGhpcy5pbnN0YW5jZS5jYW5jZWxIZWxwZXJSZW1vdmFsPSExLHRoaXMuaW5zdGFuY2UuX3RyaWdnZXIoXCJkZWFjdGl2YXRlXCIsdCxuKSl9KX0sZHJhZzpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKSxuPXRoaXM7ZS5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7dmFyIGE9ITEsbz10aGlzO3RoaXMuaW5zdGFuY2UucG9zaXRpb25BYnM9cy5wb3NpdGlvbkFicyx0aGlzLmluc3RhbmNlLmhlbHBlclByb3BvcnRpb25zPXMuaGVscGVyUHJvcG9ydGlvbnMsdGhpcy5pbnN0YW5jZS5vZmZzZXQuY2xpY2s9cy5vZmZzZXQuY2xpY2ssdGhpcy5pbnN0YW5jZS5faW50ZXJzZWN0c1dpdGgodGhpcy5pbnN0YW5jZS5jb250YWluZXJDYWNoZSkmJihhPSEwLGUuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3JldHVybiB0aGlzLmluc3RhbmNlLnBvc2l0aW9uQWJzPXMucG9zaXRpb25BYnMsdGhpcy5pbnN0YW5jZS5oZWxwZXJQcm9wb3J0aW9ucz1zLmhlbHBlclByb3BvcnRpb25zLHRoaXMuaW5zdGFuY2Uub2Zmc2V0LmNsaWNrPXMub2Zmc2V0LmNsaWNrLHRoaXMhPW8mJnRoaXMuaW5zdGFuY2UuX2ludGVyc2VjdHNXaXRoKHRoaXMuaW5zdGFuY2UuY29udGFpbmVyQ2FjaGUpJiZlLnVpLmNvbnRhaW5zKG8uaW5zdGFuY2UuZWxlbWVudFswXSx0aGlzLmluc3RhbmNlLmVsZW1lbnRbMF0pJiYoYT0hMSksYX0pKSxhPyh0aGlzLmluc3RhbmNlLmlzT3Zlcnx8KHRoaXMuaW5zdGFuY2UuaXNPdmVyPTEsdGhpcy5pbnN0YW5jZS5jdXJyZW50SXRlbT1lKG4pLmNsb25lKCkucmVtb3ZlQXR0cihcImlkXCIpLmFwcGVuZFRvKHRoaXMuaW5zdGFuY2UuZWxlbWVudCkuZGF0YShcInNvcnRhYmxlLWl0ZW1cIiwhMCksdGhpcy5pbnN0YW5jZS5vcHRpb25zLl9oZWxwZXI9dGhpcy5pbnN0YW5jZS5vcHRpb25zLmhlbHBlcix0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGVscGVyPWZ1bmN0aW9uKCl7cmV0dXJuIGkuaGVscGVyWzBdfSx0LnRhcmdldD10aGlzLmluc3RhbmNlLmN1cnJlbnRJdGVtWzBdLHRoaXMuaW5zdGFuY2UuX21vdXNlQ2FwdHVyZSh0LCEwKSx0aGlzLmluc3RhbmNlLl9tb3VzZVN0YXJ0KHQsITAsITApLHRoaXMuaW5zdGFuY2Uub2Zmc2V0LmNsaWNrLnRvcD1zLm9mZnNldC5jbGljay50b3AsdGhpcy5pbnN0YW5jZS5vZmZzZXQuY2xpY2subGVmdD1zLm9mZnNldC5jbGljay5sZWZ0LHRoaXMuaW5zdGFuY2Uub2Zmc2V0LnBhcmVudC5sZWZ0LT1zLm9mZnNldC5wYXJlbnQubGVmdC10aGlzLmluc3RhbmNlLm9mZnNldC5wYXJlbnQubGVmdCx0aGlzLmluc3RhbmNlLm9mZnNldC5wYXJlbnQudG9wLT1zLm9mZnNldC5wYXJlbnQudG9wLXRoaXMuaW5zdGFuY2Uub2Zmc2V0LnBhcmVudC50b3Ascy5fdHJpZ2dlcihcInRvU29ydGFibGVcIix0KSxzLmRyb3BwZWQ9dGhpcy5pbnN0YW5jZS5lbGVtZW50LHMuY3VycmVudEl0ZW09cy5lbGVtZW50LHRoaXMuaW5zdGFuY2UuZnJvbU91dHNpZGU9cyksdGhpcy5pbnN0YW5jZS5jdXJyZW50SXRlbSYmdGhpcy5pbnN0YW5jZS5fbW91c2VEcmFnKHQpKTp0aGlzLmluc3RhbmNlLmlzT3ZlciYmKHRoaXMuaW5zdGFuY2UuaXNPdmVyPTAsdGhpcy5pbnN0YW5jZS5jYW5jZWxIZWxwZXJSZW1vdmFsPSEwLHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5yZXZlcnQ9ITEsdGhpcy5pbnN0YW5jZS5fdHJpZ2dlcihcIm91dFwiLHQsdGhpcy5pbnN0YW5jZS5fdWlIYXNoKHRoaXMuaW5zdGFuY2UpKSx0aGlzLmluc3RhbmNlLl9tb3VzZVN0b3AodCwhMCksdGhpcy5pbnN0YW5jZS5vcHRpb25zLmhlbHBlcj10aGlzLmluc3RhbmNlLm9wdGlvbnMuX2hlbHBlcix0aGlzLmluc3RhbmNlLmN1cnJlbnRJdGVtLnJlbW92ZSgpLHRoaXMuaW5zdGFuY2UucGxhY2Vob2xkZXImJnRoaXMuaW5zdGFuY2UucGxhY2Vob2xkZXIucmVtb3ZlKCkscy5fdHJpZ2dlcihcImZyb21Tb3J0YWJsZVwiLHQpLHMuZHJvcHBlZD0hMSl9KX19KSxlLnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcImN1cnNvclwiLHtzdGFydDpmdW5jdGlvbigpe3ZhciB0PWUoXCJib2R5XCIpLGk9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLm9wdGlvbnM7dC5jc3MoXCJjdXJzb3JcIikmJihpLl9jdXJzb3I9dC5jc3MoXCJjdXJzb3JcIikpLHQuY3NzKFwiY3Vyc29yXCIsaS5jdXJzb3IpfSxzdG9wOmZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLm9wdGlvbnM7dC5fY3Vyc29yJiZlKFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIix0Ll9jdXJzb3IpfX0pLGUudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwib3BhY2l0eVwiLHtzdGFydDpmdW5jdGlvbih0LGkpe3ZhciBzPWUoaS5oZWxwZXIpLG49ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLm9wdGlvbnM7cy5jc3MoXCJvcGFjaXR5XCIpJiYobi5fb3BhY2l0eT1zLmNzcyhcIm9wYWNpdHlcIikpLHMuY3NzKFwib3BhY2l0eVwiLG4ub3BhY2l0eSl9LHN0b3A6ZnVuY3Rpb24odCxpKXt2YXIgcz1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9ucztzLl9vcGFjaXR5JiZlKGkuaGVscGVyKS5jc3MoXCJvcGFjaXR5XCIscy5fb3BhY2l0eSl9fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJzY3JvbGxcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIik7dC5zY3JvbGxQYXJlbnRbMF0hPWRvY3VtZW50JiZcIkhUTUxcIiE9dC5zY3JvbGxQYXJlbnRbMF0udGFnTmFtZSYmKHQub3ZlcmZsb3dPZmZzZXQ9dC5zY3JvbGxQYXJlbnQub2Zmc2V0KCkpfSxkcmFnOmZ1bmN0aW9uKHQpe3ZhciBpPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKSxzPWkub3B0aW9ucyxuPSExO2kuc2Nyb2xsUGFyZW50WzBdIT1kb2N1bWVudCYmXCJIVE1MXCIhPWkuc2Nyb2xsUGFyZW50WzBdLnRhZ05hbWU/KHMuYXhpcyYmXCJ4XCI9PXMuYXhpc3x8KGkub3ZlcmZsb3dPZmZzZXQudG9wK2kuc2Nyb2xsUGFyZW50WzBdLm9mZnNldEhlaWdodC10LnBhZ2VZPHMuc2Nyb2xsU2Vuc2l0aXZpdHk/aS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wPW49aS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wK3Muc2Nyb2xsU3BlZWQ6dC5wYWdlWS1pLm92ZXJmbG93T2Zmc2V0LnRvcDxzLnNjcm9sbFNlbnNpdGl2aXR5JiYoaS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wPW49aS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsVG9wLXMuc2Nyb2xsU3BlZWQpKSxzLmF4aXMmJlwieVwiPT1zLmF4aXN8fChpLm92ZXJmbG93T2Zmc2V0LmxlZnQraS5zY3JvbGxQYXJlbnRbMF0ub2Zmc2V0V2lkdGgtdC5wYWdlWDxzLnNjcm9sbFNlbnNpdGl2aXR5P2kuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQ9bj1pLnNjcm9sbFBhcmVudFswXS5zY3JvbGxMZWZ0K3Muc2Nyb2xsU3BlZWQ6dC5wYWdlWC1pLm92ZXJmbG93T2Zmc2V0LmxlZnQ8cy5zY3JvbGxTZW5zaXRpdml0eSYmKGkuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQ9bj1pLnNjcm9sbFBhcmVudFswXS5zY3JvbGxMZWZ0LXMuc2Nyb2xsU3BlZWQpKSk6KHMuYXhpcyYmXCJ4XCI9PXMuYXhpc3x8KHQucGFnZVktZShkb2N1bWVudCkuc2Nyb2xsVG9wKCk8cy5zY3JvbGxTZW5zaXRpdml0eT9uPWUoZG9jdW1lbnQpLnNjcm9sbFRvcChlKGRvY3VtZW50KS5zY3JvbGxUb3AoKS1zLnNjcm9sbFNwZWVkKTplKHdpbmRvdykuaGVpZ2h0KCktKHQucGFnZVktZShkb2N1bWVudCkuc2Nyb2xsVG9wKCkpPHMuc2Nyb2xsU2Vuc2l0aXZpdHkmJihuPWUoZG9jdW1lbnQpLnNjcm9sbFRvcChlKGRvY3VtZW50KS5zY3JvbGxUb3AoKStzLnNjcm9sbFNwZWVkKSkpLHMuYXhpcyYmXCJ5XCI9PXMuYXhpc3x8KHQucGFnZVgtZShkb2N1bWVudCkuc2Nyb2xsTGVmdCgpPHMuc2Nyb2xsU2Vuc2l0aXZpdHk/bj1lKGRvY3VtZW50KS5zY3JvbGxMZWZ0KGUoZG9jdW1lbnQpLnNjcm9sbExlZnQoKS1zLnNjcm9sbFNwZWVkKTplKHdpbmRvdykud2lkdGgoKS0odC5wYWdlWC1lKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkpPHMuc2Nyb2xsU2Vuc2l0aXZpdHkmJihuPWUoZG9jdW1lbnQpLnNjcm9sbExlZnQoZShkb2N1bWVudCkuc2Nyb2xsTGVmdCgpK3Muc2Nyb2xsU3BlZWQpKSkpLG4hPT0hMSYmZS51aS5kZG1hbmFnZXImJiFzLmRyb3BCZWhhdmlvdXImJmUudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKGksdCl9fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJzbmFwXCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLGk9dC5vcHRpb25zO3Quc25hcEVsZW1lbnRzPVtdLGUoaS5zbmFwLmNvbnN0cnVjdG9yIT1TdHJpbmc/aS5zbmFwLml0ZW1zfHxcIjpkYXRhKGRyYWdnYWJsZSlcIjppLnNuYXApLmVhY2goZnVuY3Rpb24oKXt2YXIgaT1lKHRoaXMpLHM9aS5vZmZzZXQoKTt0aGlzIT10LmVsZW1lbnRbMF0mJnQuc25hcEVsZW1lbnRzLnB1c2goe2l0ZW06dGhpcyx3aWR0aDppLm91dGVyV2lkdGgoKSxoZWlnaHQ6aS5vdXRlckhlaWdodCgpLHRvcDpzLnRvcCxsZWZ0OnMubGVmdH0pfSl9LGRyYWc6ZnVuY3Rpb24odCxpKXtmb3IodmFyIHM9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLG49cy5vcHRpb25zLGE9bi5zbmFwVG9sZXJhbmNlLG89aS5vZmZzZXQubGVmdCxyPW8rcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCxoPWkub2Zmc2V0LnRvcCxsPWgrcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsdT1zLnNuYXBFbGVtZW50cy5sZW5ndGgtMTt1Pj0wO3UtLSl7dmFyIGQ9cy5zbmFwRWxlbWVudHNbdV0ubGVmdCxjPWQrcy5zbmFwRWxlbWVudHNbdV0ud2lkdGgscD1zLnNuYXBFbGVtZW50c1t1XS50b3AsZj1wK3Muc25hcEVsZW1lbnRzW3VdLmhlaWdodDtpZihvPmQtYSYmYythPm8mJmg+cC1hJiZmK2E+aHx8bz5kLWEmJmMrYT5vJiZsPnAtYSYmZithPmx8fHI+ZC1hJiZjK2E+ciYmaD5wLWEmJmYrYT5ofHxyPmQtYSYmYythPnImJmw+cC1hJiZmK2E+bCl7aWYoXCJpbm5lclwiIT1uLnNuYXBNb2RlKXt2YXIgbT1hPj1NYXRoLmFicyhwLWwpLGc9YT49TWF0aC5hYnMoZi1oKSx2PWE+PU1hdGguYWJzKGQtciksXz1hPj1NYXRoLmFicyhjLW8pO20mJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDpwLXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LGxlZnQ6MH0pLnRvcC1zLm1hcmdpbnMudG9wKSxnJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6ZixsZWZ0OjB9KS50b3Atcy5tYXJnaW5zLnRvcCksdiYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6ZC1zLmhlbHBlclByb3BvcnRpb25zLndpZHRofSkubGVmdC1zLm1hcmdpbnMubGVmdCksXyYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6Y30pLmxlZnQtcy5tYXJnaW5zLmxlZnQpfXZhciBiPW18fGd8fHZ8fF87aWYoXCJvdXRlclwiIT1uLnNuYXBNb2RlKXt2YXIgbT1hPj1NYXRoLmFicyhwLWgpLGc9YT49TWF0aC5hYnMoZi1sKSx2PWE+PU1hdGguYWJzKGQtbyksXz1hPj1NYXRoLmFicyhjLXIpO20mJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDpwLGxlZnQ6MH0pLnRvcC1zLm1hcmdpbnMudG9wKSxnJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6Zi1zLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCxsZWZ0OjB9KS50b3Atcy5tYXJnaW5zLnRvcCksdiYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6ZH0pLmxlZnQtcy5tYXJnaW5zLmxlZnQpLF8mJihpLnBvc2l0aW9uLmxlZnQ9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6MCxsZWZ0OmMtcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aH0pLmxlZnQtcy5tYXJnaW5zLmxlZnQpfSFzLnNuYXBFbGVtZW50c1t1XS5zbmFwcGluZyYmKG18fGd8fHZ8fF98fGIpJiZzLm9wdGlvbnMuc25hcC5zbmFwJiZzLm9wdGlvbnMuc25hcC5zbmFwLmNhbGwocy5lbGVtZW50LHQsZS5leHRlbmQocy5fdWlIYXNoKCkse3NuYXBJdGVtOnMuc25hcEVsZW1lbnRzW3VdLml0ZW19KSkscy5zbmFwRWxlbWVudHNbdV0uc25hcHBpbmc9bXx8Z3x8dnx8X3x8Yn1lbHNlIHMuc25hcEVsZW1lbnRzW3VdLnNuYXBwaW5nJiZzLm9wdGlvbnMuc25hcC5yZWxlYXNlJiZzLm9wdGlvbnMuc25hcC5yZWxlYXNlLmNhbGwocy5lbGVtZW50LHQsZS5leHRlbmQocy5fdWlIYXNoKCkse3NuYXBJdGVtOnMuc25hcEVsZW1lbnRzW3VdLml0ZW19KSkscy5zbmFwRWxlbWVudHNbdV0uc25hcHBpbmc9ITF9fX0pLGUudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwic3RhY2tcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9ucyxpPWUubWFrZUFycmF5KGUodC5zdGFjaykpLnNvcnQoZnVuY3Rpb24odCxpKXtyZXR1cm4ocGFyc2VJbnQoZSh0KS5jc3MoXCJ6SW5kZXhcIiksMTApfHwwKS0ocGFyc2VJbnQoZShpKS5jc3MoXCJ6SW5kZXhcIiksMTApfHwwKX0pO2lmKGkubGVuZ3RoKXt2YXIgcz1wYXJzZUludChpWzBdLnN0eWxlLnpJbmRleCl8fDA7ZShpKS5lYWNoKGZ1bmN0aW9uKGUpe3RoaXMuc3R5bGUuekluZGV4PXMrZX0pLHRoaXNbMF0uc3R5bGUuekluZGV4PXMraS5sZW5ndGh9fX0pLGUudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwiekluZGV4XCIse3N0YXJ0OmZ1bmN0aW9uKHQsaSl7dmFyIHM9ZShpLmhlbHBlciksbj1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9ucztzLmNzcyhcInpJbmRleFwiKSYmKG4uX3pJbmRleD1zLmNzcyhcInpJbmRleFwiKSkscy5jc3MoXCJ6SW5kZXhcIixuLnpJbmRleCl9LHN0b3A6ZnVuY3Rpb24odCxpKXt2YXIgcz1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9ucztzLl96SW5kZXgmJmUoaS5oZWxwZXIpLmNzcyhcInpJbmRleFwiLHMuX3pJbmRleCl9fSl9KShqUXVlcnkpOyhmdW5jdGlvbihlKXtlLndpZGdldChcInVpLnJlc2l6YWJsZVwiLGUudWkubW91c2Use3ZlcnNpb246XCIxLjkuMlwiLHdpZGdldEV2ZW50UHJlZml4OlwicmVzaXplXCIsb3B0aW9uczp7YWxzb1Jlc2l6ZTohMSxhbmltYXRlOiExLGFuaW1hdGVEdXJhdGlvbjpcInNsb3dcIixhbmltYXRlRWFzaW5nOlwic3dpbmdcIixhc3BlY3RSYXRpbzohMSxhdXRvSGlkZTohMSxjb250YWlubWVudDohMSxnaG9zdDohMSxncmlkOiExLGhhbmRsZXM6XCJlLHMsc2VcIixoZWxwZXI6ITEsbWF4SGVpZ2h0Om51bGwsbWF4V2lkdGg6bnVsbCxtaW5IZWlnaHQ6MTAsbWluV2lkdGg6MTAsekluZGV4OjFlM30sX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsaT10aGlzLm9wdGlvbnM7aWYodGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktcmVzaXphYmxlXCIpLGUuZXh0ZW5kKHRoaXMse19hc3BlY3RSYXRpbzohIWkuYXNwZWN0UmF0aW8sYXNwZWN0UmF0aW86aS5hc3BlY3RSYXRpbyxvcmlnaW5hbEVsZW1lbnQ6dGhpcy5lbGVtZW50LF9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzOltdLF9oZWxwZXI6aS5oZWxwZXJ8fGkuZ2hvc3R8fGkuYW5pbWF0ZT9pLmhlbHBlcnx8XCJ1aS1yZXNpemFibGUtaGVscGVyXCI6bnVsbH0pLHRoaXMuZWxlbWVudFswXS5ub2RlTmFtZS5tYXRjaCgvY2FudmFzfHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b258aW1nL2kpJiYodGhpcy5lbGVtZW50LndyYXAoZSgnPGRpdiBjbGFzcz1cInVpLXdyYXBwZXJcIiBzdHlsZT1cIm92ZXJmbG93OiBoaWRkZW47XCI+PC9kaXY+JykuY3NzKHtwb3NpdGlvbjp0aGlzLmVsZW1lbnQuY3NzKFwicG9zaXRpb25cIiksd2lkdGg6dGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCksdG9wOnRoaXMuZWxlbWVudC5jc3MoXCJ0b3BcIiksbGVmdDp0aGlzLmVsZW1lbnQuY3NzKFwibGVmdFwiKX0pKSx0aGlzLmVsZW1lbnQ9dGhpcy5lbGVtZW50LnBhcmVudCgpLmRhdGEoXCJyZXNpemFibGVcIix0aGlzLmVsZW1lbnQuZGF0YShcInJlc2l6YWJsZVwiKSksdGhpcy5lbGVtZW50SXNXcmFwcGVyPSEwLHRoaXMuZWxlbWVudC5jc3Moe21hcmdpbkxlZnQ6dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luTGVmdFwiKSxtYXJnaW5Ub3A6dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luVG9wXCIpLG1hcmdpblJpZ2h0OnRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcIm1hcmdpblJpZ2h0XCIpLG1hcmdpbkJvdHRvbTp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5Cb3R0b21cIil9KSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3Moe21hcmdpbkxlZnQ6MCxtYXJnaW5Ub3A6MCxtYXJnaW5SaWdodDowLG1hcmdpbkJvdHRvbTowfSksdGhpcy5vcmlnaW5hbFJlc2l6ZVN0eWxlPXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcInJlc2l6ZVwiKSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJyZXNpemVcIixcIm5vbmVcIiksdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5wdXNoKHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyh7cG9zaXRpb246XCJzdGF0aWNcIix6b29tOjEsZGlzcGxheTpcImJsb2NrXCJ9KSksdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHttYXJnaW46dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luXCIpfSksdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKSksdGhpcy5oYW5kbGVzPWkuaGFuZGxlc3x8KGUoXCIudWktcmVzaXphYmxlLWhhbmRsZVwiLHRoaXMuZWxlbWVudCkubGVuZ3RoP3tuOlwiLnVpLXJlc2l6YWJsZS1uXCIsZTpcIi51aS1yZXNpemFibGUtZVwiLHM6XCIudWktcmVzaXphYmxlLXNcIix3OlwiLnVpLXJlc2l6YWJsZS13XCIsc2U6XCIudWktcmVzaXphYmxlLXNlXCIsc3c6XCIudWktcmVzaXphYmxlLXN3XCIsbmU6XCIudWktcmVzaXphYmxlLW5lXCIsbnc6XCIudWktcmVzaXphYmxlLW53XCJ9OlwiZSxzLHNlXCIpLHRoaXMuaGFuZGxlcy5jb25zdHJ1Y3Rvcj09U3RyaW5nKXtcImFsbFwiPT10aGlzLmhhbmRsZXMmJih0aGlzLmhhbmRsZXM9XCJuLGUscyx3LHNlLHN3LG5lLG53XCIpO3ZhciBzPXRoaXMuaGFuZGxlcy5zcGxpdChcIixcIik7dGhpcy5oYW5kbGVzPXt9O2Zvcih2YXIgbj0wO3MubGVuZ3RoPm47bisrKXt2YXIgYT1lLnRyaW0oc1tuXSksbz1cInVpLXJlc2l6YWJsZS1cIithLHI9ZSgnPGRpdiBjbGFzcz1cInVpLXJlc2l6YWJsZS1oYW5kbGUgJytvKydcIj48L2Rpdj4nKTtyLmNzcyh7ekluZGV4OmkuekluZGV4fSksXCJzZVwiPT1hJiZyLmFkZENsYXNzKFwidWktaWNvbiB1aS1pY29uLWdyaXBzbWFsbC1kaWFnb25hbC1zZVwiKSx0aGlzLmhhbmRsZXNbYV09XCIudWktcmVzaXphYmxlLVwiK2EsdGhpcy5lbGVtZW50LmFwcGVuZChyKX19dGhpcy5fcmVuZGVyQXhpcz1mdW5jdGlvbih0KXt0PXR8fHRoaXMuZWxlbWVudDtmb3IodmFyIGkgaW4gdGhpcy5oYW5kbGVzKXtpZih0aGlzLmhhbmRsZXNbaV0uY29uc3RydWN0b3I9PVN0cmluZyYmKHRoaXMuaGFuZGxlc1tpXT1lKHRoaXMuaGFuZGxlc1tpXSx0aGlzLmVsZW1lbnQpLnNob3coKSksdGhpcy5lbGVtZW50SXNXcmFwcGVyJiZ0aGlzLm9yaWdpbmFsRWxlbWVudFswXS5ub2RlTmFtZS5tYXRjaCgvdGV4dGFyZWF8aW5wdXR8c2VsZWN0fGJ1dHRvbi9pKSl7dmFyIHM9ZSh0aGlzLmhhbmRsZXNbaV0sdGhpcy5lbGVtZW50KSxuPTA7bj0vc3d8bmV8bnd8c2V8bnxzLy50ZXN0KGkpP3Mub3V0ZXJIZWlnaHQoKTpzLm91dGVyV2lkdGgoKTt2YXIgYT1bXCJwYWRkaW5nXCIsL25lfG53fG4vLnRlc3QoaSk/XCJUb3BcIjovc2V8c3d8cy8udGVzdChpKT9cIkJvdHRvbVwiOi9eZSQvLnRlc3QoaSk/XCJSaWdodFwiOlwiTGVmdFwiXS5qb2luKFwiXCIpO3QuY3NzKGEsbiksdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKX1lKHRoaXMuaGFuZGxlc1tpXSkubGVuZ3RofX0sdGhpcy5fcmVuZGVyQXhpcyh0aGlzLmVsZW1lbnQpLHRoaXMuX2hhbmRsZXM9ZShcIi51aS1yZXNpemFibGUtaGFuZGxlXCIsdGhpcy5lbGVtZW50KS5kaXNhYmxlU2VsZWN0aW9uKCksdGhpcy5faGFuZGxlcy5tb3VzZW92ZXIoZnVuY3Rpb24oKXtpZighdC5yZXNpemluZyl7aWYodGhpcy5jbGFzc05hbWUpdmFyIGU9dGhpcy5jbGFzc05hbWUubWF0Y2goL3VpLXJlc2l6YWJsZS0oc2V8c3d8bmV8bnd8bnxlfHN8dykvaSk7dC5heGlzPWUmJmVbMV0/ZVsxXTpcInNlXCJ9fSksaS5hdXRvSGlkZSYmKHRoaXMuX2hhbmRsZXMuaGlkZSgpLGUodGhpcy5lbGVtZW50KS5hZGRDbGFzcyhcInVpLXJlc2l6YWJsZS1hdXRvaGlkZVwiKS5tb3VzZWVudGVyKGZ1bmN0aW9uKCl7aS5kaXNhYmxlZHx8KGUodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1yZXNpemFibGUtYXV0b2hpZGVcIiksdC5faGFuZGxlcy5zaG93KCkpfSkubW91c2VsZWF2ZShmdW5jdGlvbigpe2kuZGlzYWJsZWR8fHQucmVzaXppbmd8fChlKHRoaXMpLmFkZENsYXNzKFwidWktcmVzaXphYmxlLWF1dG9oaWRlXCIpLHQuX2hhbmRsZXMuaGlkZSgpKX0pKSx0aGlzLl9tb3VzZUluaXQoKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLl9tb3VzZURlc3Ryb3koKTt2YXIgdD1mdW5jdGlvbih0KXtlKHQpLnJlbW92ZUNsYXNzKFwidWktcmVzaXphYmxlIHVpLXJlc2l6YWJsZS1kaXNhYmxlZCB1aS1yZXNpemFibGUtcmVzaXppbmdcIikucmVtb3ZlRGF0YShcInJlc2l6YWJsZVwiKS5yZW1vdmVEYXRhKFwidWktcmVzaXphYmxlXCIpLnVuYmluZChcIi5yZXNpemFibGVcIikuZmluZChcIi51aS1yZXNpemFibGUtaGFuZGxlXCIpLnJlbW92ZSgpfTtpZih0aGlzLmVsZW1lbnRJc1dyYXBwZXIpe3QodGhpcy5lbGVtZW50KTt2YXIgaT10aGlzLmVsZW1lbnQ7dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHtwb3NpdGlvbjppLmNzcyhcInBvc2l0aW9uXCIpLHdpZHRoOmkub3V0ZXJXaWR0aCgpLGhlaWdodDppLm91dGVySGVpZ2h0KCksdG9wOmkuY3NzKFwidG9wXCIpLGxlZnQ6aS5jc3MoXCJsZWZ0XCIpfSkuaW5zZXJ0QWZ0ZXIoaSksaS5yZW1vdmUoKX1yZXR1cm4gdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwicmVzaXplXCIsdGhpcy5vcmlnaW5hbFJlc2l6ZVN0eWxlKSx0KHRoaXMub3JpZ2luYWxFbGVtZW50KSx0aGlzfSxfbW91c2VDYXB0dXJlOmZ1bmN0aW9uKHQpe3ZhciBpPSExO2Zvcih2YXIgcyBpbiB0aGlzLmhhbmRsZXMpZSh0aGlzLmhhbmRsZXNbc10pWzBdPT10LnRhcmdldCYmKGk9ITApO3JldHVybiF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJml9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKGkpe3ZhciBzPXRoaXMub3B0aW9ucyxuPXRoaXMuZWxlbWVudC5wb3NpdGlvbigpLGE9dGhpcy5lbGVtZW50O3RoaXMucmVzaXppbmc9ITAsdGhpcy5kb2N1bWVudFNjcm9sbD17dG9wOmUoZG9jdW1lbnQpLnNjcm9sbFRvcCgpLGxlZnQ6ZShkb2N1bWVudCkuc2Nyb2xsTGVmdCgpfSwoYS5pcyhcIi51aS1kcmFnZ2FibGVcIil8fC9hYnNvbHV0ZS8udGVzdChhLmNzcyhcInBvc2l0aW9uXCIpKSkmJmEuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOm4udG9wLGxlZnQ6bi5sZWZ0fSksdGhpcy5fcmVuZGVyUHJveHkoKTt2YXIgbz10KHRoaXMuaGVscGVyLmNzcyhcImxlZnRcIikpLHI9dCh0aGlzLmhlbHBlci5jc3MoXCJ0b3BcIikpO3MuY29udGFpbm1lbnQmJihvKz1lKHMuY29udGFpbm1lbnQpLnNjcm9sbExlZnQoKXx8MCxyKz1lKHMuY29udGFpbm1lbnQpLnNjcm9sbFRvcCgpfHwwKSx0aGlzLm9mZnNldD10aGlzLmhlbHBlci5vZmZzZXQoKSx0aGlzLnBvc2l0aW9uPXtsZWZ0Om8sdG9wOnJ9LHRoaXMuc2l6ZT10aGlzLl9oZWxwZXI/e3dpZHRoOmEub3V0ZXJXaWR0aCgpLGhlaWdodDphLm91dGVySGVpZ2h0KCl9Ont3aWR0aDphLndpZHRoKCksaGVpZ2h0OmEuaGVpZ2h0KCl9LHRoaXMub3JpZ2luYWxTaXplPXRoaXMuX2hlbHBlcj97d2lkdGg6YS5vdXRlcldpZHRoKCksaGVpZ2h0OmEub3V0ZXJIZWlnaHQoKX06e3dpZHRoOmEud2lkdGgoKSxoZWlnaHQ6YS5oZWlnaHQoKX0sdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXtsZWZ0Om8sdG9wOnJ9LHRoaXMuc2l6ZURpZmY9e3dpZHRoOmEub3V0ZXJXaWR0aCgpLWEud2lkdGgoKSxoZWlnaHQ6YS5vdXRlckhlaWdodCgpLWEuaGVpZ2h0KCl9LHRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uPXtsZWZ0OmkucGFnZVgsdG9wOmkucGFnZVl9LHRoaXMuYXNwZWN0UmF0aW89XCJudW1iZXJcIj09dHlwZW9mIHMuYXNwZWN0UmF0aW8/cy5hc3BlY3RSYXRpbzp0aGlzLm9yaWdpbmFsU2l6ZS53aWR0aC90aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHR8fDE7dmFyIGg9ZShcIi51aS1yZXNpemFibGUtXCIrdGhpcy5heGlzKS5jc3MoXCJjdXJzb3JcIik7cmV0dXJuIGUoXCJib2R5XCIpLmNzcyhcImN1cnNvclwiLFwiYXV0b1wiPT1oP3RoaXMuYXhpcytcIi1yZXNpemVcIjpoKSxhLmFkZENsYXNzKFwidWktcmVzaXphYmxlLXJlc2l6aW5nXCIpLHRoaXMuX3Byb3BhZ2F0ZShcInN0YXJ0XCIsaSksITB9LF9tb3VzZURyYWc6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5oZWxwZXIsaT0odGhpcy5vcHRpb25zLHRoaXMub3JpZ2luYWxNb3VzZVBvc2l0aW9uKSxzPXRoaXMuYXhpcyxuPWUucGFnZVgtaS5sZWZ0fHwwLGE9ZS5wYWdlWS1pLnRvcHx8MCxvPXRoaXMuX2NoYW5nZVtzXTtpZighbylyZXR1cm4hMTt2YXIgcj1vLmFwcGx5KHRoaXMsW2UsbixhXSk7cmV0dXJuIHRoaXMuX3VwZGF0ZVZpcnR1YWxCb3VuZGFyaWVzKGUuc2hpZnRLZXkpLCh0aGlzLl9hc3BlY3RSYXRpb3x8ZS5zaGlmdEtleSkmJihyPXRoaXMuX3VwZGF0ZVJhdGlvKHIsZSkpLHI9dGhpcy5fcmVzcGVjdFNpemUocixlKSx0aGlzLl9wcm9wYWdhdGUoXCJyZXNpemVcIixlKSx0LmNzcyh7dG9wOnRoaXMucG9zaXRpb24udG9wK1wicHhcIixsZWZ0OnRoaXMucG9zaXRpb24ubGVmdCtcInB4XCIsd2lkdGg6dGhpcy5zaXplLndpZHRoK1wicHhcIixoZWlnaHQ6dGhpcy5zaXplLmhlaWdodCtcInB4XCJ9KSwhdGhpcy5faGVscGVyJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aCYmdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKSx0aGlzLl91cGRhdGVDYWNoZShyKSx0aGlzLl90cmlnZ2VyKFwicmVzaXplXCIsZSx0aGlzLnVpKCkpLCExfSxfbW91c2VTdG9wOmZ1bmN0aW9uKHQpe3RoaXMucmVzaXppbmc9ITE7dmFyIGk9dGhpcy5vcHRpb25zLHM9dGhpcztpZih0aGlzLl9oZWxwZXIpe3ZhciBuPXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMsYT1uLmxlbmd0aCYmL3RleHRhcmVhL2kudGVzdChuWzBdLm5vZGVOYW1lKSxvPWEmJmUudWkuaGFzU2Nyb2xsKG5bMF0sXCJsZWZ0XCIpPzA6cy5zaXplRGlmZi5oZWlnaHQscj1hPzA6cy5zaXplRGlmZi53aWR0aCxoPXt3aWR0aDpzLmhlbHBlci53aWR0aCgpLXIsaGVpZ2h0OnMuaGVscGVyLmhlaWdodCgpLW99LGw9cGFyc2VJbnQocy5lbGVtZW50LmNzcyhcImxlZnRcIiksMTApKyhzLnBvc2l0aW9uLmxlZnQtcy5vcmlnaW5hbFBvc2l0aW9uLmxlZnQpfHxudWxsLHU9cGFyc2VJbnQocy5lbGVtZW50LmNzcyhcInRvcFwiKSwxMCkrKHMucG9zaXRpb24udG9wLXMub3JpZ2luYWxQb3NpdGlvbi50b3ApfHxudWxsO2kuYW5pbWF0ZXx8dGhpcy5lbGVtZW50LmNzcyhlLmV4dGVuZChoLHt0b3A6dSxsZWZ0Omx9KSkscy5oZWxwZXIuaGVpZ2h0KHMuc2l6ZS5oZWlnaHQpLHMuaGVscGVyLndpZHRoKHMuc2l6ZS53aWR0aCksdGhpcy5faGVscGVyJiYhaS5hbmltYXRlJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpfXJldHVybiBlKFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIixcImF1dG9cIiksdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKFwidWktcmVzaXphYmxlLXJlc2l6aW5nXCIpLHRoaXMuX3Byb3BhZ2F0ZShcInN0b3BcIix0KSx0aGlzLl9oZWxwZXImJnRoaXMuaGVscGVyLnJlbW92ZSgpLCExfSxfdXBkYXRlVmlydHVhbEJvdW5kYXJpZXM6ZnVuY3Rpb24oZSl7dmFyIHQscyxuLGEsbyxyPXRoaXMub3B0aW9ucztvPXttaW5XaWR0aDppKHIubWluV2lkdGgpP3IubWluV2lkdGg6MCxtYXhXaWR0aDppKHIubWF4V2lkdGgpP3IubWF4V2lkdGg6MS8wLG1pbkhlaWdodDppKHIubWluSGVpZ2h0KT9yLm1pbkhlaWdodDowLG1heEhlaWdodDppKHIubWF4SGVpZ2h0KT9yLm1heEhlaWdodDoxLzB9LCh0aGlzLl9hc3BlY3RSYXRpb3x8ZSkmJih0PW8ubWluSGVpZ2h0KnRoaXMuYXNwZWN0UmF0aW8sbj1vLm1pbldpZHRoL3RoaXMuYXNwZWN0UmF0aW8scz1vLm1heEhlaWdodCp0aGlzLmFzcGVjdFJhdGlvLGE9by5tYXhXaWR0aC90aGlzLmFzcGVjdFJhdGlvLHQ+by5taW5XaWR0aCYmKG8ubWluV2lkdGg9dCksbj5vLm1pbkhlaWdodCYmKG8ubWluSGVpZ2h0PW4pLG8ubWF4V2lkdGg+cyYmKG8ubWF4V2lkdGg9cyksby5tYXhIZWlnaHQ+YSYmKG8ubWF4SGVpZ2h0PWEpKSx0aGlzLl92Qm91bmRhcmllcz1vfSxfdXBkYXRlQ2FjaGU6ZnVuY3Rpb24oZSl7dGhpcy5vcHRpb25zLHRoaXMub2Zmc2V0PXRoaXMuaGVscGVyLm9mZnNldCgpLGkoZS5sZWZ0KSYmKHRoaXMucG9zaXRpb24ubGVmdD1lLmxlZnQpLGkoZS50b3ApJiYodGhpcy5wb3NpdGlvbi50b3A9ZS50b3ApLGkoZS5oZWlnaHQpJiYodGhpcy5zaXplLmhlaWdodD1lLmhlaWdodCksaShlLndpZHRoKSYmKHRoaXMuc2l6ZS53aWR0aD1lLndpZHRoKX0sX3VwZGF0ZVJhdGlvOmZ1bmN0aW9uKGUpe3ZhciB0PSh0aGlzLm9wdGlvbnMsdGhpcy5wb3NpdGlvbikscz10aGlzLnNpemUsbj10aGlzLmF4aXM7cmV0dXJuIGkoZS5oZWlnaHQpP2Uud2lkdGg9ZS5oZWlnaHQqdGhpcy5hc3BlY3RSYXRpbzppKGUud2lkdGgpJiYoZS5oZWlnaHQ9ZS53aWR0aC90aGlzLmFzcGVjdFJhdGlvKSxcInN3XCI9PW4mJihlLmxlZnQ9dC5sZWZ0KyhzLndpZHRoLWUud2lkdGgpLGUudG9wPW51bGwpLFwibndcIj09biYmKGUudG9wPXQudG9wKyhzLmhlaWdodC1lLmhlaWdodCksZS5sZWZ0PXQubGVmdCsocy53aWR0aC1lLndpZHRoKSksZX0sX3Jlc3BlY3RTaXplOmZ1bmN0aW9uKGUsdCl7dmFyIHM9KHRoaXMuaGVscGVyLHRoaXMuX3ZCb3VuZGFyaWVzKSxuPSh0aGlzLl9hc3BlY3RSYXRpb3x8dC5zaGlmdEtleSx0aGlzLmF4aXMpLGE9aShlLndpZHRoKSYmcy5tYXhXaWR0aCYmcy5tYXhXaWR0aDxlLndpZHRoLG89aShlLmhlaWdodCkmJnMubWF4SGVpZ2h0JiZzLm1heEhlaWdodDxlLmhlaWdodCxyPWkoZS53aWR0aCkmJnMubWluV2lkdGgmJnMubWluV2lkdGg+ZS53aWR0aCxoPWkoZS5oZWlnaHQpJiZzLm1pbkhlaWdodCYmcy5taW5IZWlnaHQ+ZS5oZWlnaHQ7ciYmKGUud2lkdGg9cy5taW5XaWR0aCksaCYmKGUuaGVpZ2h0PXMubWluSGVpZ2h0KSxhJiYoZS53aWR0aD1zLm1heFdpZHRoKSxvJiYoZS5oZWlnaHQ9cy5tYXhIZWlnaHQpO3ZhciBsPXRoaXMub3JpZ2luYWxQb3NpdGlvbi5sZWZ0K3RoaXMub3JpZ2luYWxTaXplLndpZHRoLHU9dGhpcy5wb3NpdGlvbi50b3ArdGhpcy5zaXplLmhlaWdodCxkPS9zd3xud3x3Ly50ZXN0KG4pLGM9L253fG5lfG4vLnRlc3Qobik7ciYmZCYmKGUubGVmdD1sLXMubWluV2lkdGgpLGEmJmQmJihlLmxlZnQ9bC1zLm1heFdpZHRoKSxoJiZjJiYoZS50b3A9dS1zLm1pbkhlaWdodCksbyYmYyYmKGUudG9wPXUtcy5tYXhIZWlnaHQpO3ZhciBwPSFlLndpZHRoJiYhZS5oZWlnaHQ7cmV0dXJuIHAmJiFlLmxlZnQmJmUudG9wP2UudG9wPW51bGw6cCYmIWUudG9wJiZlLmxlZnQmJihlLmxlZnQ9bnVsbCksZX0sX3Byb3BvcnRpb25hbGx5UmVzaXplOmZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoKWZvcih2YXIgdD10aGlzLmhlbHBlcnx8dGhpcy5lbGVtZW50LGk9MDt0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aD5pO2krKyl7dmFyIHM9dGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50c1tpXTtpZighdGhpcy5ib3JkZXJEaWYpe3ZhciBuPVtzLmNzcyhcImJvcmRlclRvcFdpZHRoXCIpLHMuY3NzKFwiYm9yZGVyUmlnaHRXaWR0aFwiKSxzLmNzcyhcImJvcmRlckJvdHRvbVdpZHRoXCIpLHMuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpXSxhPVtzLmNzcyhcInBhZGRpbmdUb3BcIikscy5jc3MoXCJwYWRkaW5nUmlnaHRcIikscy5jc3MoXCJwYWRkaW5nQm90dG9tXCIpLHMuY3NzKFwicGFkZGluZ0xlZnRcIildO3RoaXMuYm9yZGVyRGlmPWUubWFwKG4sZnVuY3Rpb24oZSx0KXt2YXIgaT1wYXJzZUludChlLDEwKXx8MCxzPXBhcnNlSW50KGFbdF0sMTApfHwwO3JldHVybiBpK3N9KX1zLmNzcyh7aGVpZ2h0OnQuaGVpZ2h0KCktdGhpcy5ib3JkZXJEaWZbMF0tdGhpcy5ib3JkZXJEaWZbMl18fDAsd2lkdGg6dC53aWR0aCgpLXRoaXMuYm9yZGVyRGlmWzFdLXRoaXMuYm9yZGVyRGlmWzNdfHwwfSl9fSxfcmVuZGVyUHJveHk6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnQsaT10aGlzLm9wdGlvbnM7aWYodGhpcy5lbGVtZW50T2Zmc2V0PXQub2Zmc2V0KCksdGhpcy5faGVscGVyKXt0aGlzLmhlbHBlcj10aGlzLmhlbHBlcnx8ZSgnPGRpdiBzdHlsZT1cIm92ZXJmbG93OmhpZGRlbjtcIj48L2Rpdj4nKTt2YXIgcz1lLnVpLmllNj8xOjAsbj1lLnVpLmllNj8yOi0xO3RoaXMuaGVscGVyLmFkZENsYXNzKHRoaXMuX2hlbHBlcikuY3NzKHt3aWR0aDp0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpK24saGVpZ2h0OnRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpK24scG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6dGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQtcytcInB4XCIsdG9wOnRoaXMuZWxlbWVudE9mZnNldC50b3AtcytcInB4XCIsekluZGV4OisraS56SW5kZXh9KSx0aGlzLmhlbHBlci5hcHBlbmRUbyhcImJvZHlcIikuZGlzYWJsZVNlbGVjdGlvbigpfWVsc2UgdGhpcy5oZWxwZXI9dGhpcy5lbGVtZW50fSxfY2hhbmdlOntlOmZ1bmN0aW9uKGUsdCl7cmV0dXJue3dpZHRoOnRoaXMub3JpZ2luYWxTaXplLndpZHRoK3R9fSx3OmZ1bmN0aW9uKGUsdCl7dmFyIGk9KHRoaXMub3B0aW9ucyx0aGlzLm9yaWdpbmFsU2l6ZSkscz10aGlzLm9yaWdpbmFsUG9zaXRpb247cmV0dXJue2xlZnQ6cy5sZWZ0K3Qsd2lkdGg6aS53aWR0aC10fX0sbjpmdW5jdGlvbihlLHQsaSl7dmFyIHM9KHRoaXMub3B0aW9ucyx0aGlzLm9yaWdpbmFsU2l6ZSksbj10aGlzLm9yaWdpbmFsUG9zaXRpb247cmV0dXJue3RvcDpuLnRvcCtpLGhlaWdodDpzLmhlaWdodC1pfX0sczpmdW5jdGlvbihlLHQsaSl7cmV0dXJue2hlaWdodDp0aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHQraX19LHNlOmZ1bmN0aW9uKHQsaSxzKXtyZXR1cm4gZS5leHRlbmQodGhpcy5fY2hhbmdlLnMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS5lLmFwcGx5KHRoaXMsW3QsaSxzXSkpfSxzdzpmdW5jdGlvbih0LGkscyl7cmV0dXJuIGUuZXh0ZW5kKHRoaXMuX2NoYW5nZS5zLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9jaGFuZ2Uudy5hcHBseSh0aGlzLFt0LGksc10pKX0sbmU6ZnVuY3Rpb24odCxpLHMpe3JldHVybiBlLmV4dGVuZCh0aGlzLl9jaGFuZ2Uubi5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLmUuYXBwbHkodGhpcyxbdCxpLHNdKSl9LG53OmZ1bmN0aW9uKHQsaSxzKXtyZXR1cm4gZS5leHRlbmQodGhpcy5fY2hhbmdlLm4uYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS53LmFwcGx5KHRoaXMsW3QsaSxzXSkpfX0sX3Byb3BhZ2F0ZTpmdW5jdGlvbih0LGkpe2UudWkucGx1Z2luLmNhbGwodGhpcyx0LFtpLHRoaXMudWkoKV0pLFwicmVzaXplXCIhPXQmJnRoaXMuX3RyaWdnZXIodCxpLHRoaXMudWkoKSl9LHBsdWdpbnM6e30sdWk6ZnVuY3Rpb24oKXtyZXR1cm57b3JpZ2luYWxFbGVtZW50OnRoaXMub3JpZ2luYWxFbGVtZW50LGVsZW1lbnQ6dGhpcy5lbGVtZW50LGhlbHBlcjp0aGlzLmhlbHBlcixwb3NpdGlvbjp0aGlzLnBvc2l0aW9uLHNpemU6dGhpcy5zaXplLG9yaWdpbmFsU2l6ZTp0aGlzLm9yaWdpbmFsU2l6ZSxvcmlnaW5hbFBvc2l0aW9uOnRoaXMub3JpZ2luYWxQb3NpdGlvbn19fSksZS51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJhbHNvUmVzaXplXCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLGk9dC5vcHRpb25zLHM9ZnVuY3Rpb24odCl7ZSh0KS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKTt0LmRhdGEoXCJyZXNpemFibGUtYWxzb3Jlc2l6ZVwiLHt3aWR0aDpwYXJzZUludCh0LndpZHRoKCksMTApLGhlaWdodDpwYXJzZUludCh0LmhlaWdodCgpLDEwKSxsZWZ0OnBhcnNlSW50KHQuY3NzKFwibGVmdFwiKSwxMCksdG9wOnBhcnNlSW50KHQuY3NzKFwidG9wXCIpLDEwKX0pfSl9O1wib2JqZWN0XCIhPXR5cGVvZiBpLmFsc29SZXNpemV8fGkuYWxzb1Jlc2l6ZS5wYXJlbnROb2RlP3MoaS5hbHNvUmVzaXplKTppLmFsc29SZXNpemUubGVuZ3RoPyhpLmFsc29SZXNpemU9aS5hbHNvUmVzaXplWzBdLHMoaS5hbHNvUmVzaXplKSk6ZS5lYWNoKGkuYWxzb1Jlc2l6ZSxmdW5jdGlvbihlKXtzKGUpfSl9LHJlc2l6ZTpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKSxuPXMub3B0aW9ucyxhPXMub3JpZ2luYWxTaXplLG89cy5vcmlnaW5hbFBvc2l0aW9uLHI9e2hlaWdodDpzLnNpemUuaGVpZ2h0LWEuaGVpZ2h0fHwwLHdpZHRoOnMuc2l6ZS53aWR0aC1hLndpZHRofHwwLHRvcDpzLnBvc2l0aW9uLnRvcC1vLnRvcHx8MCxsZWZ0OnMucG9zaXRpb24ubGVmdC1vLmxlZnR8fDB9LGg9ZnVuY3Rpb24odCxzKXtlKHQpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLG49ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlLWFsc29yZXNpemVcIiksYT17fSxvPXMmJnMubGVuZ3RoP3M6dC5wYXJlbnRzKGkub3JpZ2luYWxFbGVtZW50WzBdKS5sZW5ndGg/W1wid2lkdGhcIixcImhlaWdodFwiXTpbXCJ3aWR0aFwiLFwiaGVpZ2h0XCIsXCJ0b3BcIixcImxlZnRcIl07ZS5lYWNoKG8sZnVuY3Rpb24oZSx0KXt2YXIgaT0oblt0XXx8MCkrKHJbdF18fDApO2kmJmk+PTAmJihhW3RdPWl8fG51bGwpfSksdC5jc3MoYSl9KX07XCJvYmplY3RcIiE9dHlwZW9mIG4uYWxzb1Jlc2l6ZXx8bi5hbHNvUmVzaXplLm5vZGVUeXBlP2gobi5hbHNvUmVzaXplKTplLmVhY2gobi5hbHNvUmVzaXplLGZ1bmN0aW9uKGUsdCl7aChlLHQpfSl9LHN0b3A6ZnVuY3Rpb24oKXtlKHRoaXMpLnJlbW92ZURhdGEoXCJyZXNpemFibGUtYWxzb3Jlc2l6ZVwiKX19KSxlLnVpLnBsdWdpbi5hZGQoXCJyZXNpemFibGVcIixcImFuaW1hdGVcIix7c3RvcDpmdW5jdGlvbih0KXt2YXIgaT1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIikscz1pLm9wdGlvbnMsbj1pLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLGE9bi5sZW5ndGgmJi90ZXh0YXJlYS9pLnRlc3QoblswXS5ub2RlTmFtZSksbz1hJiZlLnVpLmhhc1Njcm9sbChuWzBdLFwibGVmdFwiKT8wOmkuc2l6ZURpZmYuaGVpZ2h0LHI9YT8wOmkuc2l6ZURpZmYud2lkdGgsaD17d2lkdGg6aS5zaXplLndpZHRoLXIsaGVpZ2h0Omkuc2l6ZS5oZWlnaHQtb30sbD1wYXJzZUludChpLmVsZW1lbnQuY3NzKFwibGVmdFwiKSwxMCkrKGkucG9zaXRpb24ubGVmdC1pLm9yaWdpbmFsUG9zaXRpb24ubGVmdCl8fG51bGwsdT1wYXJzZUludChpLmVsZW1lbnQuY3NzKFwidG9wXCIpLDEwKSsoaS5wb3NpdGlvbi50b3AtaS5vcmlnaW5hbFBvc2l0aW9uLnRvcCl8fG51bGw7aS5lbGVtZW50LmFuaW1hdGUoZS5leHRlbmQoaCx1JiZsP3t0b3A6dSxsZWZ0Omx9Ont9KSx7ZHVyYXRpb246cy5hbmltYXRlRHVyYXRpb24sZWFzaW5nOnMuYW5pbWF0ZUVhc2luZyxzdGVwOmZ1bmN0aW9uKCl7dmFyIHM9e3dpZHRoOnBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJ3aWR0aFwiKSwxMCksaGVpZ2h0OnBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJoZWlnaHRcIiksMTApLHRvcDpwYXJzZUludChpLmVsZW1lbnQuY3NzKFwidG9wXCIpLDEwKSxsZWZ0OnBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJsZWZ0XCIpLDEwKX07biYmbi5sZW5ndGgmJmUoblswXSkuY3NzKHt3aWR0aDpzLndpZHRoLGhlaWdodDpzLmhlaWdodH0pLGkuX3VwZGF0ZUNhY2hlKHMpLGkuX3Byb3BhZ2F0ZShcInJlc2l6ZVwiLHQpfX0pfX0pLGUudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiY29udGFpbm1lbnRcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgaT1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIikscz1pLm9wdGlvbnMsbj1pLmVsZW1lbnQsYT1zLmNvbnRhaW5tZW50LG89YSBpbnN0YW5jZW9mIGU/YS5nZXQoMCk6L3BhcmVudC8udGVzdChhKT9uLnBhcmVudCgpLmdldCgwKTphO2lmKG8paWYoaS5jb250YWluZXJFbGVtZW50PWUobyksL2RvY3VtZW50Ly50ZXN0KGEpfHxhPT1kb2N1bWVudClpLmNvbnRhaW5lck9mZnNldD17bGVmdDowLHRvcDowfSxpLmNvbnRhaW5lclBvc2l0aW9uPXtsZWZ0OjAsdG9wOjB9LGkucGFyZW50RGF0YT17ZWxlbWVudDplKGRvY3VtZW50KSxsZWZ0OjAsdG9wOjAsd2lkdGg6ZShkb2N1bWVudCkud2lkdGgoKSxoZWlnaHQ6ZShkb2N1bWVudCkuaGVpZ2h0KCl8fGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHR9O2Vsc2V7dmFyIHI9ZShvKSxoPVtdO2UoW1wiVG9wXCIsXCJSaWdodFwiLFwiTGVmdFwiLFwiQm90dG9tXCJdKS5lYWNoKGZ1bmN0aW9uKGUsaSl7aFtlXT10KHIuY3NzKFwicGFkZGluZ1wiK2kpKX0pLGkuY29udGFpbmVyT2Zmc2V0PXIub2Zmc2V0KCksaS5jb250YWluZXJQb3NpdGlvbj1yLnBvc2l0aW9uKCksaS5jb250YWluZXJTaXplPXtoZWlnaHQ6ci5pbm5lckhlaWdodCgpLWhbM10sd2lkdGg6ci5pbm5lcldpZHRoKCktaFsxXX07dmFyIGw9aS5jb250YWluZXJPZmZzZXQsdT1pLmNvbnRhaW5lclNpemUuaGVpZ2h0LGQ9aS5jb250YWluZXJTaXplLndpZHRoLGM9ZS51aS5oYXNTY3JvbGwobyxcImxlZnRcIik/by5zY3JvbGxXaWR0aDpkLHA9ZS51aS5oYXNTY3JvbGwobyk/by5zY3JvbGxIZWlnaHQ6dTtpLnBhcmVudERhdGE9e2VsZW1lbnQ6byxsZWZ0OmwubGVmdCx0b3A6bC50b3Asd2lkdGg6YyxoZWlnaHQ6cH19fSxyZXNpemU6ZnVuY3Rpb24odCl7dmFyIGk9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLHM9aS5vcHRpb25zLG49KGkuY29udGFpbmVyU2l6ZSxpLmNvbnRhaW5lck9mZnNldCksYT0oaS5zaXplLGkucG9zaXRpb24pLG89aS5fYXNwZWN0UmF0aW98fHQuc2hpZnRLZXkscj17dG9wOjAsbGVmdDowfSxoPWkuY29udGFpbmVyRWxlbWVudDtoWzBdIT1kb2N1bWVudCYmL3N0YXRpYy8udGVzdChoLmNzcyhcInBvc2l0aW9uXCIpKSYmKHI9biksYS5sZWZ0PChpLl9oZWxwZXI/bi5sZWZ0OjApJiYoaS5zaXplLndpZHRoPWkuc2l6ZS53aWR0aCsoaS5faGVscGVyP2kucG9zaXRpb24ubGVmdC1uLmxlZnQ6aS5wb3NpdGlvbi5sZWZ0LXIubGVmdCksbyYmKGkuc2l6ZS5oZWlnaHQ9aS5zaXplLndpZHRoL2kuYXNwZWN0UmF0aW8pLGkucG9zaXRpb24ubGVmdD1zLmhlbHBlcj9uLmxlZnQ6MCksYS50b3A8KGkuX2hlbHBlcj9uLnRvcDowKSYmKGkuc2l6ZS5oZWlnaHQ9aS5zaXplLmhlaWdodCsoaS5faGVscGVyP2kucG9zaXRpb24udG9wLW4udG9wOmkucG9zaXRpb24udG9wKSxvJiYoaS5zaXplLndpZHRoPWkuc2l6ZS5oZWlnaHQqaS5hc3BlY3RSYXRpbyksaS5wb3NpdGlvbi50b3A9aS5faGVscGVyP24udG9wOjApLGkub2Zmc2V0LmxlZnQ9aS5wYXJlbnREYXRhLmxlZnQraS5wb3NpdGlvbi5sZWZ0LGkub2Zmc2V0LnRvcD1pLnBhcmVudERhdGEudG9wK2kucG9zaXRpb24udG9wO3ZhciBsPU1hdGguYWJzKChpLl9oZWxwZXI/aS5vZmZzZXQubGVmdC1yLmxlZnQ6aS5vZmZzZXQubGVmdC1yLmxlZnQpK2kuc2l6ZURpZmYud2lkdGgpLHU9TWF0aC5hYnMoKGkuX2hlbHBlcj9pLm9mZnNldC50b3Atci50b3A6aS5vZmZzZXQudG9wLW4udG9wKStpLnNpemVEaWZmLmhlaWdodCksZD1pLmNvbnRhaW5lckVsZW1lbnQuZ2V0KDApPT1pLmVsZW1lbnQucGFyZW50KCkuZ2V0KDApLGM9L3JlbGF0aXZlfGFic29sdXRlLy50ZXN0KGkuY29udGFpbmVyRWxlbWVudC5jc3MoXCJwb3NpdGlvblwiKSk7ZCYmYyYmKGwtPWkucGFyZW50RGF0YS5sZWZ0KSxsK2kuc2l6ZS53aWR0aD49aS5wYXJlbnREYXRhLndpZHRoJiYoaS5zaXplLndpZHRoPWkucGFyZW50RGF0YS53aWR0aC1sLG8mJihpLnNpemUuaGVpZ2h0PWkuc2l6ZS53aWR0aC9pLmFzcGVjdFJhdGlvKSksdStpLnNpemUuaGVpZ2h0Pj1pLnBhcmVudERhdGEuaGVpZ2h0JiYoaS5zaXplLmhlaWdodD1pLnBhcmVudERhdGEuaGVpZ2h0LXUsbyYmKGkuc2l6ZS53aWR0aD1pLnNpemUuaGVpZ2h0KmkuYXNwZWN0UmF0aW8pKX0sc3RvcDpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKSxpPXQub3B0aW9ucyxzPSh0LnBvc2l0aW9uLHQuY29udGFpbmVyT2Zmc2V0KSxuPXQuY29udGFpbmVyUG9zaXRpb24sYT10LmNvbnRhaW5lckVsZW1lbnQsbz1lKHQuaGVscGVyKSxyPW8ub2Zmc2V0KCksaD1vLm91dGVyV2lkdGgoKS10LnNpemVEaWZmLndpZHRoLGw9by5vdXRlckhlaWdodCgpLXQuc2l6ZURpZmYuaGVpZ2h0O3QuX2hlbHBlciYmIWkuYW5pbWF0ZSYmL3JlbGF0aXZlLy50ZXN0KGEuY3NzKFwicG9zaXRpb25cIikpJiZlKHRoaXMpLmNzcyh7bGVmdDpyLmxlZnQtbi5sZWZ0LXMubGVmdCx3aWR0aDpoLGhlaWdodDpsfSksdC5faGVscGVyJiYhaS5hbmltYXRlJiYvc3RhdGljLy50ZXN0KGEuY3NzKFwicG9zaXRpb25cIikpJiZlKHRoaXMpLmNzcyh7bGVmdDpyLmxlZnQtbi5sZWZ0LXMubGVmdCx3aWR0aDpoLGhlaWdodDpsfSl9fSksZS51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJnaG9zdFwiLHtzdGFydDpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKSxpPXQub3B0aW9ucyxzPXQuc2l6ZTt0Lmdob3N0PXQub3JpZ2luYWxFbGVtZW50LmNsb25lKCksdC5naG9zdC5jc3Moe29wYWNpdHk6LjI1LGRpc3BsYXk6XCJibG9ja1wiLHBvc2l0aW9uOlwicmVsYXRpdmVcIixoZWlnaHQ6cy5oZWlnaHQsd2lkdGg6cy53aWR0aCxtYXJnaW46MCxsZWZ0OjAsdG9wOjB9KS5hZGRDbGFzcyhcInVpLXJlc2l6YWJsZS1naG9zdFwiKS5hZGRDbGFzcyhcInN0cmluZ1wiPT10eXBlb2YgaS5naG9zdD9pLmdob3N0OlwiXCIpLHQuZ2hvc3QuYXBwZW5kVG8odC5oZWxwZXIpfSxyZXNpemU6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIik7dC5vcHRpb25zLHQuZ2hvc3QmJnQuZ2hvc3QuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIsaGVpZ2h0OnQuc2l6ZS5oZWlnaHQsd2lkdGg6dC5zaXplLndpZHRofSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIik7dC5vcHRpb25zLHQuZ2hvc3QmJnQuaGVscGVyJiZ0LmhlbHBlci5nZXQoMCkucmVtb3ZlQ2hpbGQodC5naG9zdC5nZXQoMCkpfX0pLGUudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiZ3JpZFwiLHtyZXNpemU6ZnVuY3Rpb24odCl7dmFyIGk9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLHM9aS5vcHRpb25zLG49aS5zaXplLGE9aS5vcmlnaW5hbFNpemUsbz1pLm9yaWdpbmFsUG9zaXRpb24scj1pLmF4aXM7cy5fYXNwZWN0UmF0aW98fHQuc2hpZnRLZXkscy5ncmlkPVwibnVtYmVyXCI9PXR5cGVvZiBzLmdyaWQ/W3MuZ3JpZCxzLmdyaWRdOnMuZ3JpZDt2YXIgaD1NYXRoLnJvdW5kKChuLndpZHRoLWEud2lkdGgpLyhzLmdyaWRbMF18fDEpKSoocy5ncmlkWzBdfHwxKSxsPU1hdGgucm91bmQoKG4uaGVpZ2h0LWEuaGVpZ2h0KS8ocy5ncmlkWzFdfHwxKSkqKHMuZ3JpZFsxXXx8MSk7L14oc2V8c3xlKSQvLnRlc3Qocik/KGkuc2l6ZS53aWR0aD1hLndpZHRoK2gsaS5zaXplLmhlaWdodD1hLmhlaWdodCtsKTovXihuZSkkLy50ZXN0KHIpPyhpLnNpemUud2lkdGg9YS53aWR0aCtoLGkuc2l6ZS5oZWlnaHQ9YS5oZWlnaHQrbCxpLnBvc2l0aW9uLnRvcD1vLnRvcC1sKTovXihzdykkLy50ZXN0KHIpPyhpLnNpemUud2lkdGg9YS53aWR0aCtoLGkuc2l6ZS5oZWlnaHQ9YS5oZWlnaHQrbCxpLnBvc2l0aW9uLmxlZnQ9by5sZWZ0LWgpOihpLnNpemUud2lkdGg9YS53aWR0aCtoLGkuc2l6ZS5oZWlnaHQ9YS5oZWlnaHQrbCxpLnBvc2l0aW9uLnRvcD1vLnRvcC1sLGkucG9zaXRpb24ubGVmdD1vLmxlZnQtaCl9fSk7dmFyIHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHBhcnNlSW50KGUsMTApfHwwfSxpPWZ1bmN0aW9uKGUpe3JldHVybiFpc05hTihwYXJzZUludChlLDEwKSl9fSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSl7dmFyIHQ9MCxpPXt9LHM9e307aS5oZWlnaHQ9aS5wYWRkaW5nVG9wPWkucGFkZGluZ0JvdHRvbT1pLmJvcmRlclRvcFdpZHRoPWkuYm9yZGVyQm90dG9tV2lkdGg9XCJoaWRlXCIscy5oZWlnaHQ9cy5wYWRkaW5nVG9wPXMucGFkZGluZ0JvdHRvbT1zLmJvcmRlclRvcFdpZHRoPXMuYm9yZGVyQm90dG9tV2lkdGg9XCJzaG93XCIsZS53aWRnZXQoXCJ1aS5hY2NvcmRpb25cIix7dmVyc2lvbjpcIjEuOS4yXCIsb3B0aW9uczp7YWN0aXZlOjAsYW5pbWF0ZTp7fSxjb2xsYXBzaWJsZTohMSxldmVudDpcImNsaWNrXCIsaGVhZGVyOlwiPiBsaSA+IDpmaXJzdC1jaGlsZCw+IDpub3QobGkpOmV2ZW5cIixoZWlnaHRTdHlsZTpcImF1dG9cIixpY29uczp7YWN0aXZlSGVhZGVyOlwidWktaWNvbi10cmlhbmdsZS0xLXNcIixoZWFkZXI6XCJ1aS1pY29uLXRyaWFuZ2xlLTEtZVwifSxhY3RpdmF0ZTpudWxsLGJlZm9yZUFjdGl2YXRlOm51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgaT10aGlzLmFjY29yZGlvbklkPVwidWktYWNjb3JkaW9uLVwiKyh0aGlzLmVsZW1lbnQuYXR0cihcImlkXCIpfHwrK3QpLHM9dGhpcy5vcHRpb25zO3RoaXMucHJldlNob3c9dGhpcy5wcmV2SGlkZT1lKCksdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktYWNjb3JkaW9uIHVpLXdpZGdldCB1aS1oZWxwZXItcmVzZXRcIiksdGhpcy5oZWFkZXJzPXRoaXMuZWxlbWVudC5maW5kKHMuaGVhZGVyKS5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXIgdWktaGVscGVyLXJlc2V0IHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLWFsbFwiKSx0aGlzLl9ob3ZlcmFibGUodGhpcy5oZWFkZXJzKSx0aGlzLl9mb2N1c2FibGUodGhpcy5oZWFkZXJzKSx0aGlzLmhlYWRlcnMubmV4dCgpLmFkZENsYXNzKFwidWktYWNjb3JkaW9uLWNvbnRlbnQgdWktaGVscGVyLXJlc2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1ib3R0b21cIikuaGlkZSgpLHMuY29sbGFwc2libGV8fHMuYWN0aXZlIT09ITEmJm51bGwhPXMuYWN0aXZlfHwocy5hY3RpdmU9MCksMD5zLmFjdGl2ZSYmKHMuYWN0aXZlKz10aGlzLmhlYWRlcnMubGVuZ3RoKSx0aGlzLmFjdGl2ZT10aGlzLl9maW5kQWN0aXZlKHMuYWN0aXZlKS5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZVwiKS50b2dnbGVDbGFzcyhcInVpLWNvcm5lci1hbGwgdWktY29ybmVyLXRvcFwiKSx0aGlzLmFjdGl2ZS5uZXh0KCkuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmVcIikuc2hvdygpLHRoaXMuX2NyZWF0ZUljb25zKCksdGhpcy5yZWZyZXNoKCksdGhpcy5lbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJ0YWJsaXN0XCIpLHRoaXMuaGVhZGVycy5hdHRyKFwicm9sZVwiLFwidGFiXCIpLmVhY2goZnVuY3Rpb24odCl7dmFyIHM9ZSh0aGlzKSxuPXMuYXR0cihcImlkXCIpLGE9cy5uZXh0KCksbz1hLmF0dHIoXCJpZFwiKTtufHwobj1pK1wiLWhlYWRlci1cIit0LHMuYXR0cihcImlkXCIsbikpLG98fChvPWkrXCItcGFuZWwtXCIrdCxhLmF0dHIoXCJpZFwiLG8pKSxzLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIsbyksYS5hdHRyKFwiYXJpYS1sYWJlbGxlZGJ5XCIsbil9KS5uZXh0KCkuYXR0cihcInJvbGVcIixcInRhYnBhbmVsXCIpLHRoaXMuaGVhZGVycy5ub3QodGhpcy5hY3RpdmUpLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwiZmFsc2VcIix0YWJJbmRleDotMX0pLm5leHQoKS5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjpcImZhbHNlXCIsXCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwifSkuaGlkZSgpLHRoaXMuYWN0aXZlLmxlbmd0aD90aGlzLmFjdGl2ZS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIix0YWJJbmRleDowfSkubmV4dCgpLmF0dHIoe1wiYXJpYS1leHBhbmRlZFwiOlwidHJ1ZVwiLFwiYXJpYS1oaWRkZW5cIjpcImZhbHNlXCJ9KTp0aGlzLmhlYWRlcnMuZXEoMCkuYXR0cihcInRhYkluZGV4XCIsMCksdGhpcy5fb24odGhpcy5oZWFkZXJzLHtrZXlkb3duOlwiX2tleWRvd25cIn0pLHRoaXMuX29uKHRoaXMuaGVhZGVycy5uZXh0KCkse2tleWRvd246XCJfcGFuZWxLZXlEb3duXCJ9KSx0aGlzLl9zZXR1cEV2ZW50cyhzLmV2ZW50KX0sX2dldENyZWF0ZUV2ZW50RGF0YTpmdW5jdGlvbigpe3JldHVybntoZWFkZXI6dGhpcy5hY3RpdmUsY29udGVudDp0aGlzLmFjdGl2ZS5sZW5ndGg/dGhpcy5hY3RpdmUubmV4dCgpOmUoKX19LF9jcmVhdGVJY29uczpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy5pY29uczt0JiYoZShcIjxzcGFuPlwiKS5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiB1aS1pY29uIFwiK3QuaGVhZGVyKS5wcmVwZW5kVG8odGhpcy5oZWFkZXJzKSx0aGlzLmFjdGl2ZS5jaGlsZHJlbihcIi51aS1hY2NvcmRpb24taGVhZGVyLWljb25cIikucmVtb3ZlQ2xhc3ModC5oZWFkZXIpLmFkZENsYXNzKHQuYWN0aXZlSGVhZGVyKSx0aGlzLmhlYWRlcnMuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24taWNvbnNcIikpfSxfZGVzdHJveUljb25zOmZ1bmN0aW9uKCl7dGhpcy5oZWFkZXJzLnJlbW92ZUNsYXNzKFwidWktYWNjb3JkaW9uLWljb25zXCIpLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKS5yZW1vdmUoKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgZTt0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1hY2NvcmRpb24gdWktd2lkZ2V0IHVpLWhlbHBlci1yZXNldFwiKS5yZW1vdmVBdHRyKFwicm9sZVwiKSx0aGlzLmhlYWRlcnMucmVtb3ZlQ2xhc3MoXCJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLWhlbHBlci1yZXNldCB1aS1zdGF0ZS1kZWZhdWx0IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtYWN0aXZlIHVpLXN0YXRlLWRpc2FibGVkIHVpLWNvcm5lci10b3BcIikucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtc2VsZWN0ZWRcIikucmVtb3ZlQXR0cihcImFyaWEtY29udHJvbHNcIikucmVtb3ZlQXR0cihcInRhYkluZGV4XCIpLmVhY2goZnVuY3Rpb24oKXsvXnVpLWFjY29yZGlvbi8udGVzdCh0aGlzLmlkKSYmdGhpcy5yZW1vdmVBdHRyaWJ1dGUoXCJpZFwiKX0pLHRoaXMuX2Rlc3Ryb3lJY29ucygpLGU9dGhpcy5oZWFkZXJzLm5leHQoKS5jc3MoXCJkaXNwbGF5XCIsXCJcIikucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtZXhwYW5kZWRcIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIikucmVtb3ZlQ2xhc3MoXCJ1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWJvdHRvbSB1aS1hY2NvcmRpb24tY29udGVudCB1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUgdWktc3RhdGUtZGlzYWJsZWRcIikuZWFjaChmdW5jdGlvbigpey9edWktYWNjb3JkaW9uLy50ZXN0KHRoaXMuaWQpJiZ0aGlzLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpfSksXCJjb250ZW50XCIhPT10aGlzLm9wdGlvbnMuaGVpZ2h0U3R5bGUmJmUuY3NzKFwiaGVpZ2h0XCIsXCJcIil9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSx0KXtyZXR1cm5cImFjdGl2ZVwiPT09ZT8odGhpcy5fYWN0aXZhdGUodCksdW5kZWZpbmVkKTooXCJldmVudFwiPT09ZSYmKHRoaXMub3B0aW9ucy5ldmVudCYmdGhpcy5fb2ZmKHRoaXMuaGVhZGVycyx0aGlzLm9wdGlvbnMuZXZlbnQpLHRoaXMuX3NldHVwRXZlbnRzKHQpKSx0aGlzLl9zdXBlcihlLHQpLFwiY29sbGFwc2libGVcIiE9PWV8fHR8fHRoaXMub3B0aW9ucy5hY3RpdmUhPT0hMXx8dGhpcy5fYWN0aXZhdGUoMCksXCJpY29uc1wiPT09ZSYmKHRoaXMuX2Rlc3Ryb3lJY29ucygpLHQmJnRoaXMuX2NyZWF0ZUljb25zKCkpLFwiZGlzYWJsZWRcIj09PWUmJnRoaXMuaGVhZGVycy5hZGQodGhpcy5oZWFkZXJzLm5leHQoKSkudG9nZ2xlQ2xhc3MoXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCksdW5kZWZpbmVkKX0sX2tleWRvd246ZnVuY3Rpb24odCl7aWYoIXQuYWx0S2V5JiYhdC5jdHJsS2V5KXt2YXIgaT1lLnVpLmtleUNvZGUscz10aGlzLmhlYWRlcnMubGVuZ3RoLG49dGhpcy5oZWFkZXJzLmluZGV4KHQudGFyZ2V0KSxhPSExO3N3aXRjaCh0LmtleUNvZGUpe2Nhc2UgaS5SSUdIVDpjYXNlIGkuRE9XTjphPXRoaXMuaGVhZGVyc1sobisxKSVzXTticmVhaztjYXNlIGkuTEVGVDpjYXNlIGkuVVA6YT10aGlzLmhlYWRlcnNbKG4tMStzKSVzXTticmVhaztjYXNlIGkuU1BBQ0U6Y2FzZSBpLkVOVEVSOnRoaXMuX2V2ZW50SGFuZGxlcih0KTticmVhaztjYXNlIGkuSE9NRTphPXRoaXMuaGVhZGVyc1swXTticmVhaztjYXNlIGkuRU5EOmE9dGhpcy5oZWFkZXJzW3MtMV19YSYmKGUodC50YXJnZXQpLmF0dHIoXCJ0YWJJbmRleFwiLC0xKSxlKGEpLmF0dHIoXCJ0YWJJbmRleFwiLDApLGEuZm9jdXMoKSx0LnByZXZlbnREZWZhdWx0KCkpfX0sX3BhbmVsS2V5RG93bjpmdW5jdGlvbih0KXt0LmtleUNvZGU9PT1lLnVpLmtleUNvZGUuVVAmJnQuY3RybEtleSYmZSh0LmN1cnJlbnRUYXJnZXQpLnByZXYoKS5mb2N1cygpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQsaSxzPXRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSxuPXRoaXMuZWxlbWVudC5wYXJlbnQoKTtcImZpbGxcIj09PXM/KGUuc3VwcG9ydC5taW5IZWlnaHR8fChpPW4uY3NzKFwib3ZlcmZsb3dcIiksbi5jc3MoXCJvdmVyZmxvd1wiLFwiaGlkZGVuXCIpKSx0PW4uaGVpZ2h0KCksdGhpcy5lbGVtZW50LnNpYmxpbmdzKFwiOnZpc2libGVcIikuZWFjaChmdW5jdGlvbigpe3ZhciBpPWUodGhpcykscz1pLmNzcyhcInBvc2l0aW9uXCIpO1wiYWJzb2x1dGVcIiE9PXMmJlwiZml4ZWRcIiE9PXMmJih0LT1pLm91dGVySGVpZ2h0KCEwKSl9KSxpJiZuLmNzcyhcIm92ZXJmbG93XCIsaSksdGhpcy5oZWFkZXJzLmVhY2goZnVuY3Rpb24oKXt0LT1lKHRoaXMpLm91dGVySGVpZ2h0KCEwKX0pLHRoaXMuaGVhZGVycy5uZXh0KCkuZWFjaChmdW5jdGlvbigpe2UodGhpcykuaGVpZ2h0KE1hdGgubWF4KDAsdC1lKHRoaXMpLmlubmVySGVpZ2h0KCkrZSh0aGlzKS5oZWlnaHQoKSkpfSkuY3NzKFwib3ZlcmZsb3dcIixcImF1dG9cIikpOlwiYXV0b1wiPT09cyYmKHQ9MCx0aGlzLmhlYWRlcnMubmV4dCgpLmVhY2goZnVuY3Rpb24oKXt0PU1hdGgubWF4KHQsZSh0aGlzKS5jc3MoXCJoZWlnaHRcIixcIlwiKS5oZWlnaHQoKSl9KS5oZWlnaHQodCkpfSxfYWN0aXZhdGU6ZnVuY3Rpb24odCl7dmFyIGk9dGhpcy5fZmluZEFjdGl2ZSh0KVswXTtpIT09dGhpcy5hY3RpdmVbMF0mJihpPWl8fHRoaXMuYWN0aXZlWzBdLHRoaXMuX2V2ZW50SGFuZGxlcih7dGFyZ2V0OmksY3VycmVudFRhcmdldDppLHByZXZlbnREZWZhdWx0OmUubm9vcH0pKX0sX2ZpbmRBY3RpdmU6ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQ/dGhpcy5oZWFkZXJzLmVxKHQpOmUoKX0sX3NldHVwRXZlbnRzOmZ1bmN0aW9uKHQpe3ZhciBpPXt9O3QmJihlLmVhY2godC5zcGxpdChcIiBcIiksZnVuY3Rpb24oZSx0KXtpW3RdPVwiX2V2ZW50SGFuZGxlclwifSksdGhpcy5fb24odGhpcy5oZWFkZXJzLGkpKX0sX2V2ZW50SGFuZGxlcjpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm9wdGlvbnMscz10aGlzLmFjdGl2ZSxuPWUodC5jdXJyZW50VGFyZ2V0KSxhPW5bMF09PT1zWzBdLG89YSYmaS5jb2xsYXBzaWJsZSxyPW8/ZSgpOm4ubmV4dCgpLGg9cy5uZXh0KCksbD17b2xkSGVhZGVyOnMsb2xkUGFuZWw6aCxuZXdIZWFkZXI6bz9lKCk6bixuZXdQYW5lbDpyfTt0LnByZXZlbnREZWZhdWx0KCksYSYmIWkuY29sbGFwc2libGV8fHRoaXMuX3RyaWdnZXIoXCJiZWZvcmVBY3RpdmF0ZVwiLHQsbCk9PT0hMXx8KGkuYWN0aXZlPW8/ITE6dGhpcy5oZWFkZXJzLmluZGV4KG4pLHRoaXMuYWN0aXZlPWE/ZSgpOm4sdGhpcy5fdG9nZ2xlKGwpLHMucmVtb3ZlQ2xhc3MoXCJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZSB1aS1zdGF0ZS1hY3RpdmVcIiksaS5pY29ucyYmcy5jaGlsZHJlbihcIi51aS1hY2NvcmRpb24taGVhZGVyLWljb25cIikucmVtb3ZlQ2xhc3MoaS5pY29ucy5hY3RpdmVIZWFkZXIpLmFkZENsYXNzKGkuaWNvbnMuaGVhZGVyKSxhfHwobi5yZW1vdmVDbGFzcyhcInVpLWNvcm5lci1hbGxcIikuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZSB1aS1zdGF0ZS1hY3RpdmUgdWktY29ybmVyLXRvcFwiKSxpLmljb25zJiZuLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKS5yZW1vdmVDbGFzcyhpLmljb25zLmhlYWRlcikuYWRkQ2xhc3MoaS5pY29ucy5hY3RpdmVIZWFkZXIpLG4ubmV4dCgpLmFkZENsYXNzKFwidWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlXCIpKSl9LF90b2dnbGU6ZnVuY3Rpb24odCl7dmFyIGk9dC5uZXdQYW5lbCxzPXRoaXMucHJldlNob3cubGVuZ3RoP3RoaXMucHJldlNob3c6dC5vbGRQYW5lbDt0aGlzLnByZXZTaG93LmFkZCh0aGlzLnByZXZIaWRlKS5zdG9wKCEwLCEwKSx0aGlzLnByZXZTaG93PWksdGhpcy5wcmV2SGlkZT1zLHRoaXMub3B0aW9ucy5hbmltYXRlP3RoaXMuX2FuaW1hdGUoaSxzLHQpOihzLmhpZGUoKSxpLnNob3coKSx0aGlzLl90b2dnbGVDb21wbGV0ZSh0KSkscy5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjpcImZhbHNlXCIsXCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwifSkscy5wcmV2KCkuYXR0cihcImFyaWEtc2VsZWN0ZWRcIixcImZhbHNlXCIpLGkubGVuZ3RoJiZzLmxlbmd0aD9zLnByZXYoKS5hdHRyKFwidGFiSW5kZXhcIiwtMSk6aS5sZW5ndGgmJnRoaXMuaGVhZGVycy5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gMD09PWUodGhpcykuYXR0cihcInRhYkluZGV4XCIpfSkuYXR0cihcInRhYkluZGV4XCIsLTEpLGkuYXR0cih7XCJhcmlhLWV4cGFuZGVkXCI6XCJ0cnVlXCIsXCJhcmlhLWhpZGRlblwiOlwiZmFsc2VcIn0pLnByZXYoKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIix0YWJJbmRleDowfSl9LF9hbmltYXRlOmZ1bmN0aW9uKGUsdCxuKXt2YXIgYSxvLHIsaD10aGlzLGw9MCx1PWUubGVuZ3RoJiYoIXQubGVuZ3RofHxlLmluZGV4KCk8dC5pbmRleCgpKSxkPXRoaXMub3B0aW9ucy5hbmltYXRlfHx7fSxjPXUmJmQuZG93bnx8ZCxwPWZ1bmN0aW9uKCl7aC5fdG9nZ2xlQ29tcGxldGUobil9O3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBjJiYocj1jKSxcInN0cmluZ1wiPT10eXBlb2YgYyYmKG89Yyksbz1vfHxjLmVhc2luZ3x8ZC5lYXNpbmcscj1yfHxjLmR1cmF0aW9ufHxkLmR1cmF0aW9uLHQubGVuZ3RoP2UubGVuZ3RoPyhhPWUuc2hvdygpLm91dGVySGVpZ2h0KCksdC5hbmltYXRlKGkse2R1cmF0aW9uOnIsZWFzaW5nOm8sc3RlcDpmdW5jdGlvbihlLHQpe3Qubm93PU1hdGgucm91bmQoZSl9fSksZS5oaWRlKCkuYW5pbWF0ZShzLHtkdXJhdGlvbjpyLGVhc2luZzpvLGNvbXBsZXRlOnAsc3RlcDpmdW5jdGlvbihlLGkpe2kubm93PU1hdGgucm91bmQoZSksXCJoZWlnaHRcIiE9PWkucHJvcD9sKz1pLm5vdzpcImNvbnRlbnRcIiE9PWgub3B0aW9ucy5oZWlnaHRTdHlsZSYmKGkubm93PU1hdGgucm91bmQoYS10Lm91dGVySGVpZ2h0KCktbCksbD0wKX19KSx1bmRlZmluZWQpOnQuYW5pbWF0ZShpLHIsbyxwKTplLmFuaW1hdGUocyxyLG8scCl9LF90b2dnbGVDb21wbGV0ZTpmdW5jdGlvbihlKXt2YXIgdD1lLm9sZFBhbmVsO3QucmVtb3ZlQ2xhc3MoXCJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmVcIikucHJldigpLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLXRvcFwiKS5hZGRDbGFzcyhcInVpLWNvcm5lci1hbGxcIiksdC5sZW5ndGgmJih0LnBhcmVudCgpWzBdLmNsYXNzTmFtZT10LnBhcmVudCgpWzBdLmNsYXNzTmFtZSksdGhpcy5fdHJpZ2dlcihcImFjdGl2YXRlXCIsbnVsbCxlKX19KSxlLnVpQmFja0NvbXBhdCE9PSExJiYoZnVuY3Rpb24oZSx0KXtlLmV4dGVuZCh0Lm9wdGlvbnMse25hdmlnYXRpb246ITEsbmF2aWdhdGlvbkZpbHRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhyZWYudG9Mb3dlckNhc2UoKT09PWxvY2F0aW9uLmhyZWYudG9Mb3dlckNhc2UoKX19KTt2YXIgaT10Ll9jcmVhdGU7dC5fY3JlYXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLm5hdmlnYXRpb24pe3ZhciB0PXRoaXMscz10aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaGVhZGVyKSxuPXMubmV4dCgpLGE9cy5hZGQobikuZmluZChcImFcIikuZmlsdGVyKHRoaXMub3B0aW9ucy5uYXZpZ2F0aW9uRmlsdGVyKVswXTthJiZzLmFkZChuKS5lYWNoKGZ1bmN0aW9uKGkpe3JldHVybiBlLmNvbnRhaW5zKHRoaXMsYSk/KHQub3B0aW9ucy5hY3RpdmU9TWF0aC5mbG9vcihpLzIpLCExKTp1bmRlZmluZWR9KX1pLmNhbGwodGhpcyl9fShqUXVlcnksalF1ZXJ5LnVpLmFjY29yZGlvbi5wcm90b3R5cGUpLGZ1bmN0aW9uKGUsdCl7ZS5leHRlbmQodC5vcHRpb25zLHtoZWlnaHRTdHlsZTpudWxsLGF1dG9IZWlnaHQ6ITAsY2xlYXJTdHlsZTohMSxmaWxsU3BhY2U6ITF9KTt2YXIgaT10Ll9jcmVhdGUscz10Ll9zZXRPcHRpb247ZS5leHRlbmQodCx7X2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5oZWlnaHRTdHlsZT10aGlzLm9wdGlvbnMuaGVpZ2h0U3R5bGV8fHRoaXMuX21lcmdlSGVpZ2h0U3R5bGUoKSxpLmNhbGwodGhpcyl9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSl7KFwiYXV0b0hlaWdodFwiPT09ZXx8XCJjbGVhclN0eWxlXCI9PT1lfHxcImZpbGxTcGFjZVwiPT09ZSkmJih0aGlzLm9wdGlvbnMuaGVpZ2h0U3R5bGU9dGhpcy5fbWVyZ2VIZWlnaHRTdHlsZSgpKSxzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sX21lcmdlSGVpZ2h0U3R5bGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnM7cmV0dXJuIGUuZmlsbFNwYWNlP1wiZmlsbFwiOmUuY2xlYXJTdHlsZT9cImNvbnRlbnRcIjplLmF1dG9IZWlnaHQ/XCJhdXRvXCI6dW5kZWZpbmVkfX0pfShqUXVlcnksalF1ZXJ5LnVpLmFjY29yZGlvbi5wcm90b3R5cGUpLGZ1bmN0aW9uKGUsdCl7ZS5leHRlbmQodC5vcHRpb25zLmljb25zLHthY3RpdmVIZWFkZXI6bnVsbCxoZWFkZXJTZWxlY3RlZDpcInVpLWljb24tdHJpYW5nbGUtMS1zXCJ9KTt2YXIgaT10Ll9jcmVhdGVJY29uczt0Ll9jcmVhdGVJY29ucz1mdW5jdGlvbigpe3RoaXMub3B0aW9ucy5pY29ucyYmKHRoaXMub3B0aW9ucy5pY29ucy5hY3RpdmVIZWFkZXI9dGhpcy5vcHRpb25zLmljb25zLmFjdGl2ZUhlYWRlcnx8dGhpcy5vcHRpb25zLmljb25zLmhlYWRlclNlbGVjdGVkKSxpLmNhbGwodGhpcyl9fShqUXVlcnksalF1ZXJ5LnVpLmFjY29yZGlvbi5wcm90b3R5cGUpLGZ1bmN0aW9uKGUsdCl7dC5hY3RpdmF0ZT10Ll9hY3RpdmF0ZTt2YXIgaT10Ll9maW5kQWN0aXZlO3QuX2ZpbmRBY3RpdmU9ZnVuY3Rpb24oZSl7cmV0dXJuLTE9PT1lJiYoZT0hMSksZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUmJihlPXRoaXMuaGVhZGVycy5pbmRleCh0aGlzLmhlYWRlcnMuZmlsdGVyKGUpKSwtMT09PWUmJihlPSExKSksaS5jYWxsKHRoaXMsZSl9fShqUXVlcnksalF1ZXJ5LnVpLmFjY29yZGlvbi5wcm90b3R5cGUpLGpRdWVyeS51aS5hY2NvcmRpb24ucHJvdG90eXBlLnJlc2l6ZT1qUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZS5yZWZyZXNoLGZ1bmN0aW9uKGUsdCl7ZS5leHRlbmQodC5vcHRpb25zLHtjaGFuZ2U6bnVsbCxjaGFuZ2VzdGFydDpudWxsfSk7dmFyIGk9dC5fdHJpZ2dlcjt0Ll90cmlnZ2VyPWZ1bmN0aW9uKGUsdCxzKXt2YXIgbj1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbj8oXCJiZWZvcmVBY3RpdmF0ZVwiPT09ZT9uPWkuY2FsbCh0aGlzLFwiY2hhbmdlc3RhcnRcIix0LHtvbGRIZWFkZXI6cy5vbGRIZWFkZXIsb2xkQ29udGVudDpzLm9sZFBhbmVsLG5ld0hlYWRlcjpzLm5ld0hlYWRlcixuZXdDb250ZW50OnMubmV3UGFuZWx9KTpcImFjdGl2YXRlXCI9PT1lJiYobj1pLmNhbGwodGhpcyxcImNoYW5nZVwiLHQse29sZEhlYWRlcjpzLm9sZEhlYWRlcixvbGRDb250ZW50OnMub2xkUGFuZWwsbmV3SGVhZGVyOnMubmV3SGVhZGVyLG5ld0NvbnRlbnQ6cy5uZXdQYW5lbH0pKSxuKTohMX19KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSksZnVuY3Rpb24oZSx0KXtlLmV4dGVuZCh0Lm9wdGlvbnMse2FuaW1hdGU6bnVsbCxhbmltYXRlZDpcInNsaWRlXCJ9KTt2YXIgaT10Ll9jcmVhdGU7dC5fY3JlYXRlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zO251bGw9PT1lLmFuaW1hdGUmJihlLmFuaW1hdGU9ZS5hbmltYXRlZD9cInNsaWRlXCI9PT1lLmFuaW1hdGVkPzMwMDpcImJvdW5jZXNsaWRlXCI9PT1lLmFuaW1hdGVkP3tkdXJhdGlvbjoyMDAsZG93bjp7ZWFzaW5nOlwiZWFzZU91dEJvdW5jZVwiLGR1cmF0aW9uOjFlM319OmUuYW5pbWF0ZWQ6ITEpLGkuY2FsbCh0aGlzKX19KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSkpfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSl7dmFyIHQ9MDtlLndpZGdldChcInVpLmF1dG9jb21wbGV0ZVwiLHt2ZXJzaW9uOlwiMS45LjJcIixkZWZhdWx0RWxlbWVudDpcIjxpbnB1dD5cIixvcHRpb25zOnthcHBlbmRUbzpcImJvZHlcIixhdXRvRm9jdXM6ITEsZGVsYXk6MzAwLG1pbkxlbmd0aDoxLHBvc2l0aW9uOntteTpcImxlZnQgdG9wXCIsYXQ6XCJsZWZ0IGJvdHRvbVwiLGNvbGxpc2lvbjpcIm5vbmVcIn0sc291cmNlOm51bGwsY2hhbmdlOm51bGwsY2xvc2U6bnVsbCxmb2N1czpudWxsLG9wZW46bnVsbCxyZXNwb25zZTpudWxsLHNlYXJjaDpudWxsLHNlbGVjdDpudWxsfSxwZW5kaW5nOjAsX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciB0LGksczt0aGlzLmlzTXVsdGlMaW5lPXRoaXMuX2lzTXVsdGlMaW5lKCksdGhpcy52YWx1ZU1ldGhvZD10aGlzLmVsZW1lbnRbdGhpcy5lbGVtZW50LmlzKFwiaW5wdXQsdGV4dGFyZWFcIik/XCJ2YWxcIjpcInRleHRcIl0sdGhpcy5pc05ld01lbnU9ITAsdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktYXV0b2NvbXBsZXRlLWlucHV0XCIpLmF0dHIoXCJhdXRvY29tcGxldGVcIixcIm9mZlwiKSx0aGlzLl9vbih0aGlzLmVsZW1lbnQse2tleWRvd246ZnVuY3Rpb24obil7aWYodGhpcy5lbGVtZW50LnByb3AoXCJyZWFkT25seVwiKSlyZXR1cm4gdD0hMCxzPSEwLGk9ITAsdW5kZWZpbmVkO3Q9ITEscz0hMSxpPSExO3ZhciBhPWUudWkua2V5Q29kZTtzd2l0Y2gobi5rZXlDb2RlKXtjYXNlIGEuUEFHRV9VUDp0PSEwLHRoaXMuX21vdmUoXCJwcmV2aW91c1BhZ2VcIixuKTticmVhaztjYXNlIGEuUEFHRV9ET1dOOnQ9ITAsdGhpcy5fbW92ZShcIm5leHRQYWdlXCIsbik7YnJlYWs7Y2FzZSBhLlVQOnQ9ITAsdGhpcy5fa2V5RXZlbnQoXCJwcmV2aW91c1wiLG4pO2JyZWFrO2Nhc2UgYS5ET1dOOnQ9ITAsdGhpcy5fa2V5RXZlbnQoXCJuZXh0XCIsbik7YnJlYWs7Y2FzZSBhLkVOVEVSOmNhc2UgYS5OVU1QQURfRU5URVI6dGhpcy5tZW51LmFjdGl2ZSYmKHQ9ITAsbi5wcmV2ZW50RGVmYXVsdCgpLHRoaXMubWVudS5zZWxlY3QobikpO2JyZWFrO2Nhc2UgYS5UQUI6dGhpcy5tZW51LmFjdGl2ZSYmdGhpcy5tZW51LnNlbGVjdChuKTticmVhaztjYXNlIGEuRVNDQVBFOnRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikmJih0aGlzLl92YWx1ZSh0aGlzLnRlcm0pLHRoaXMuY2xvc2Uobiksbi5wcmV2ZW50RGVmYXVsdCgpKTticmVhaztkZWZhdWx0Omk9ITAsdGhpcy5fc2VhcmNoVGltZW91dChuKX19LGtleXByZXNzOmZ1bmN0aW9uKHMpe2lmKHQpcmV0dXJuIHQ9ITEscy5wcmV2ZW50RGVmYXVsdCgpLHVuZGVmaW5lZDtpZighaSl7dmFyIG49ZS51aS5rZXlDb2RlO3N3aXRjaChzLmtleUNvZGUpe2Nhc2Ugbi5QQUdFX1VQOnRoaXMuX21vdmUoXCJwcmV2aW91c1BhZ2VcIixzKTticmVhaztjYXNlIG4uUEFHRV9ET1dOOnRoaXMuX21vdmUoXCJuZXh0UGFnZVwiLHMpO2JyZWFrO2Nhc2Ugbi5VUDp0aGlzLl9rZXlFdmVudChcInByZXZpb3VzXCIscyk7YnJlYWs7Y2FzZSBuLkRPV046dGhpcy5fa2V5RXZlbnQoXCJuZXh0XCIscyl9fX0saW5wdXQ6ZnVuY3Rpb24oZSl7cmV0dXJuIHM/KHM9ITEsZS5wcmV2ZW50RGVmYXVsdCgpLHVuZGVmaW5lZCk6KHRoaXMuX3NlYXJjaFRpbWVvdXQoZSksdW5kZWZpbmVkKX0sZm9jdXM6ZnVuY3Rpb24oKXt0aGlzLnNlbGVjdGVkSXRlbT1udWxsLHRoaXMucHJldmlvdXM9dGhpcy5fdmFsdWUoKX0sYmx1cjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jYW5jZWxCbHVyPyhkZWxldGUgdGhpcy5jYW5jZWxCbHVyLHVuZGVmaW5lZCk6KGNsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5jbG9zZShlKSx0aGlzLl9jaGFuZ2UoZSksdW5kZWZpbmVkKX19KSx0aGlzLl9pbml0U291cmNlKCksdGhpcy5tZW51PWUoXCI8dWw+XCIpLmFkZENsYXNzKFwidWktYXV0b2NvbXBsZXRlXCIpLmFwcGVuZFRvKHRoaXMuZG9jdW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuYXBwZW5kVG98fFwiYm9keVwiKVswXSkubWVudSh7aW5wdXQ6ZSgpLHJvbGU6bnVsbH0pLnpJbmRleCh0aGlzLmVsZW1lbnQuekluZGV4KCkrMSkuaGlkZSgpLmRhdGEoXCJtZW51XCIpLHRoaXMuX29uKHRoaXMubWVudS5lbGVtZW50LHttb3VzZWRvd246ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuY2FuY2VsQmx1cj0hMCx0aGlzLl9kZWxheShmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLmNhbmNlbEJsdXJ9KTt2YXIgaT10aGlzLm1lbnUuZWxlbWVudFswXTtlKHQudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiKS5sZW5ndGh8fHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmRvY3VtZW50Lm9uZShcIm1vdXNlZG93blwiLGZ1bmN0aW9uKHMpe3MudGFyZ2V0PT09dC5lbGVtZW50WzBdfHxzLnRhcmdldD09PWl8fGUuY29udGFpbnMoaSxzLnRhcmdldCl8fHQuY2xvc2UoKX0pfSl9LG1lbnVmb2N1czpmdW5jdGlvbih0LGkpe2lmKHRoaXMuaXNOZXdNZW51JiYodGhpcy5pc05ld01lbnU9ITEsdC5vcmlnaW5hbEV2ZW50JiYvXm1vdXNlLy50ZXN0KHQub3JpZ2luYWxFdmVudC50eXBlKSkpcmV0dXJuIHRoaXMubWVudS5ibHVyKCksdGhpcy5kb2N1bWVudC5vbmUoXCJtb3VzZW1vdmVcIixmdW5jdGlvbigpe2UodC50YXJnZXQpLnRyaWdnZXIodC5vcmlnaW5hbEV2ZW50KX0pLHVuZGVmaW5lZDt2YXIgcz1pLml0ZW0uZGF0YShcInVpLWF1dG9jb21wbGV0ZS1pdGVtXCIpfHxpLml0ZW0uZGF0YShcIml0ZW0uYXV0b2NvbXBsZXRlXCIpOyExIT09dGhpcy5fdHJpZ2dlcihcImZvY3VzXCIsdCx7aXRlbTpzfSk/dC5vcmlnaW5hbEV2ZW50JiYvXmtleS8udGVzdCh0Lm9yaWdpbmFsRXZlbnQudHlwZSkmJnRoaXMuX3ZhbHVlKHMudmFsdWUpOnRoaXMubGl2ZVJlZ2lvbi50ZXh0KHMudmFsdWUpfSxtZW51c2VsZWN0OmZ1bmN0aW9uKGUsdCl7dmFyIGk9dC5pdGVtLmRhdGEoXCJ1aS1hdXRvY29tcGxldGUtaXRlbVwiKXx8dC5pdGVtLmRhdGEoXCJpdGVtLmF1dG9jb21wbGV0ZVwiKSxzPXRoaXMucHJldmlvdXM7dGhpcy5lbGVtZW50WzBdIT09dGhpcy5kb2N1bWVudFswXS5hY3RpdmVFbGVtZW50JiYodGhpcy5lbGVtZW50LmZvY3VzKCksdGhpcy5wcmV2aW91cz1zLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5wcmV2aW91cz1zLHRoaXMuc2VsZWN0ZWRJdGVtPWl9KSksITEhPT10aGlzLl90cmlnZ2VyKFwic2VsZWN0XCIsZSx7aXRlbTppfSkmJnRoaXMuX3ZhbHVlKGkudmFsdWUpLHRoaXMudGVybT10aGlzLl92YWx1ZSgpLHRoaXMuY2xvc2UoZSksdGhpcy5zZWxlY3RlZEl0ZW09aX19KSx0aGlzLmxpdmVSZWdpb249ZShcIjxzcGFuPlwiLHtyb2xlOlwic3RhdHVzXCIsXCJhcmlhLWxpdmVcIjpcInBvbGl0ZVwifSkuYWRkQ2xhc3MoXCJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGVcIikuaW5zZXJ0QWZ0ZXIodGhpcy5lbGVtZW50KSxlLmZuLmJnaWZyYW1lJiZ0aGlzLm1lbnUuZWxlbWVudC5iZ2lmcmFtZSgpLHRoaXMuX29uKHRoaXMud2luZG93LHtiZWZvcmV1bmxvYWQ6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcImF1dG9jb21wbGV0ZVwiKX19KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodGhpcy5zZWFyY2hpbmcpLHRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyhcInVpLWF1dG9jb21wbGV0ZS1pbnB1dFwiKS5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlXCIpLHRoaXMubWVudS5lbGVtZW50LnJlbW92ZSgpLHRoaXMubGl2ZVJlZ2lvbi5yZW1vdmUoKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLHQpe3RoaXMuX3N1cGVyKGUsdCksXCJzb3VyY2VcIj09PWUmJnRoaXMuX2luaXRTb3VyY2UoKSxcImFwcGVuZFRvXCI9PT1lJiZ0aGlzLm1lbnUuZWxlbWVudC5hcHBlbmRUbyh0aGlzLmRvY3VtZW50LmZpbmQodHx8XCJib2R5XCIpWzBdKSxcImRpc2FibGVkXCI9PT1lJiZ0JiZ0aGlzLnhociYmdGhpcy54aHIuYWJvcnQoKX0sX2lzTXVsdGlMaW5lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5pcyhcInRleHRhcmVhXCIpPyEwOnRoaXMuZWxlbWVudC5pcyhcImlucHV0XCIpPyExOnRoaXMuZWxlbWVudC5wcm9wKFwiaXNDb250ZW50RWRpdGFibGVcIil9LF9pbml0U291cmNlOmZ1bmN0aW9uKCl7dmFyIHQsaSxzPXRoaXM7ZS5pc0FycmF5KHRoaXMub3B0aW9ucy5zb3VyY2UpPyh0PXRoaXMub3B0aW9ucy5zb3VyY2UsdGhpcy5zb3VyY2U9ZnVuY3Rpb24oaSxzKXtzKGUudWkuYXV0b2NvbXBsZXRlLmZpbHRlcih0LGkudGVybSkpfSk6XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMub3B0aW9ucy5zb3VyY2U/KGk9dGhpcy5vcHRpb25zLnNvdXJjZSx0aGlzLnNvdXJjZT1mdW5jdGlvbih0LG4pe3MueGhyJiZzLnhoci5hYm9ydCgpLHMueGhyPWUuYWpheCh7dXJsOmksZGF0YTp0LGRhdGFUeXBlOlwianNvblwiLHN1Y2Nlc3M6ZnVuY3Rpb24oZSl7bihlKX0sZXJyb3I6ZnVuY3Rpb24oKXtuKFtdKX19KX0pOnRoaXMuc291cmNlPXRoaXMub3B0aW9ucy5zb3VyY2V9LF9zZWFyY2hUaW1lb3V0OmZ1bmN0aW9uKGUpe2NsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5zZWFyY2hpbmc9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLnRlcm0hPT10aGlzLl92YWx1ZSgpJiYodGhpcy5zZWxlY3RlZEl0ZW09bnVsbCx0aGlzLnNlYXJjaChudWxsLGUpKX0sdGhpcy5vcHRpb25zLmRlbGF5KX0sc2VhcmNoOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9bnVsbCE9ZT9lOnRoaXMuX3ZhbHVlKCksdGhpcy50ZXJtPXRoaXMuX3ZhbHVlKCksZS5sZW5ndGg8dGhpcy5vcHRpb25zLm1pbkxlbmd0aD90aGlzLmNsb3NlKHQpOnRoaXMuX3RyaWdnZXIoXCJzZWFyY2hcIix0KSE9PSExP3RoaXMuX3NlYXJjaChlKTp1bmRlZmluZWR9LF9zZWFyY2g6ZnVuY3Rpb24oZSl7dGhpcy5wZW5kaW5nKyssdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktYXV0b2NvbXBsZXRlLWxvYWRpbmdcIiksdGhpcy5jYW5jZWxTZWFyY2g9ITEsdGhpcy5zb3VyY2Uoe3Rlcm06ZX0sdGhpcy5fcmVzcG9uc2UoKSl9LF9yZXNwb25zZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsaT0rK3Q7cmV0dXJuIGZ1bmN0aW9uKHMpe2k9PT10JiZlLl9fcmVzcG9uc2UocyksZS5wZW5kaW5nLS0sZS5wZW5kaW5nfHxlLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1hdXRvY29tcGxldGUtbG9hZGluZ1wiKX19LF9fcmVzcG9uc2U6ZnVuY3Rpb24oZSl7ZSYmKGU9dGhpcy5fbm9ybWFsaXplKGUpKSx0aGlzLl90cmlnZ2VyKFwicmVzcG9uc2VcIixudWxsLHtjb250ZW50OmV9KSwhdGhpcy5vcHRpb25zLmRpc2FibGVkJiZlJiZlLmxlbmd0aCYmIXRoaXMuY2FuY2VsU2VhcmNoPyh0aGlzLl9zdWdnZXN0KGUpLHRoaXMuX3RyaWdnZXIoXCJvcGVuXCIpKTp0aGlzLl9jbG9zZSgpfSxjbG9zZTpmdW5jdGlvbihlKXt0aGlzLmNhbmNlbFNlYXJjaD0hMCx0aGlzLl9jbG9zZShlKX0sX2Nsb3NlOmZ1bmN0aW9uKGUpe3RoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikmJih0aGlzLm1lbnUuZWxlbWVudC5oaWRlKCksdGhpcy5tZW51LmJsdXIoKSx0aGlzLmlzTmV3TWVudT0hMCx0aGlzLl90cmlnZ2VyKFwiY2xvc2VcIixlKSl9LF9jaGFuZ2U6ZnVuY3Rpb24oZSl7dGhpcy5wcmV2aW91cyE9PXRoaXMuX3ZhbHVlKCkmJnRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIixlLHtpdGVtOnRoaXMuc2VsZWN0ZWRJdGVtfSl9LF9ub3JtYWxpemU6ZnVuY3Rpb24odCl7cmV0dXJuIHQubGVuZ3RoJiZ0WzBdLmxhYmVsJiZ0WzBdLnZhbHVlP3Q6ZS5tYXAodCxmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdD97bGFiZWw6dCx2YWx1ZTp0fTplLmV4dGVuZCh7bGFiZWw6dC5sYWJlbHx8dC52YWx1ZSx2YWx1ZTp0LnZhbHVlfHx0LmxhYmVsfSx0KX0pfSxfc3VnZ2VzdDpmdW5jdGlvbih0KXt2YXIgaT10aGlzLm1lbnUuZWxlbWVudC5lbXB0eSgpLnpJbmRleCh0aGlzLmVsZW1lbnQuekluZGV4KCkrMSk7dGhpcy5fcmVuZGVyTWVudShpLHQpLHRoaXMubWVudS5yZWZyZXNoKCksaS5zaG93KCksdGhpcy5fcmVzaXplTWVudSgpLGkucG9zaXRpb24oZS5leHRlbmQoe29mOnRoaXMuZWxlbWVudH0sdGhpcy5vcHRpb25zLnBvc2l0aW9uKSksdGhpcy5vcHRpb25zLmF1dG9Gb2N1cyYmdGhpcy5tZW51Lm5leHQoKX0sX3Jlc2l6ZU1lbnU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm1lbnUuZWxlbWVudDtlLm91dGVyV2lkdGgoTWF0aC5tYXgoZS53aWR0aChcIlwiKS5vdXRlcldpZHRoKCkrMSx0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpKSl9LF9yZW5kZXJNZW51OmZ1bmN0aW9uKHQsaSl7dmFyIHM9dGhpcztlLmVhY2goaSxmdW5jdGlvbihlLGkpe3MuX3JlbmRlckl0ZW1EYXRhKHQsaSl9KX0sX3JlbmRlckl0ZW1EYXRhOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX3JlbmRlckl0ZW0oZSx0KS5kYXRhKFwidWktYXV0b2NvbXBsZXRlLWl0ZW1cIix0KX0sX3JlbmRlckl0ZW06ZnVuY3Rpb24odCxpKXtyZXR1cm4gZShcIjxsaT5cIikuYXBwZW5kKGUoXCI8YT5cIikudGV4dChpLmxhYmVsKSkuYXBwZW5kVG8odCl9LF9tb3ZlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIik/dGhpcy5tZW51LmlzRmlyc3RJdGVtKCkmJi9ecHJldmlvdXMvLnRlc3QoZSl8fHRoaXMubWVudS5pc0xhc3RJdGVtKCkmJi9ebmV4dC8udGVzdChlKT8odGhpcy5fdmFsdWUodGhpcy50ZXJtKSx0aGlzLm1lbnUuYmx1cigpLHVuZGVmaW5lZCk6KHRoaXMubWVudVtlXSh0KSx1bmRlZmluZWQpOih0aGlzLnNlYXJjaChudWxsLHQpLHVuZGVmaW5lZCl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbnUuZWxlbWVudH0sX3ZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVNZXRob2QuYXBwbHkodGhpcy5lbGVtZW50LGFyZ3VtZW50cyl9LF9rZXlFdmVudDpmdW5jdGlvbihlLHQpeyghdGhpcy5pc011bHRpTGluZXx8dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSkmJih0aGlzLl9tb3ZlKGUsdCksdC5wcmV2ZW50RGVmYXVsdCgpKX19KSxlLmV4dGVuZChlLnVpLmF1dG9jb21wbGV0ZSx7ZXNjYXBlUmVnZXg6ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvW1xcLVxcW1xcXXt9KCkqKz8uLFxcXFxcXF4kfCNcXHNdL2csXCJcXFxcJCZcIil9LGZpbHRlcjpmdW5jdGlvbih0LGkpe3ZhciBzPVJlZ0V4cChlLnVpLmF1dG9jb21wbGV0ZS5lc2NhcGVSZWdleChpKSxcImlcIik7cmV0dXJuIGUuZ3JlcCh0LGZ1bmN0aW9uKGUpe3JldHVybiBzLnRlc3QoZS5sYWJlbHx8ZS52YWx1ZXx8ZSl9KX19KSxlLndpZGdldChcInVpLmF1dG9jb21wbGV0ZVwiLGUudWkuYXV0b2NvbXBsZXRlLHtvcHRpb25zOnttZXNzYWdlczp7bm9SZXN1bHRzOlwiTm8gc2VhcmNoIHJlc3VsdHMuXCIscmVzdWx0czpmdW5jdGlvbihlKXtyZXR1cm4gZSsoZT4xP1wiIHJlc3VsdHMgYXJlXCI6XCIgcmVzdWx0IGlzXCIpK1wiIGF2YWlsYWJsZSwgdXNlIHVwIGFuZCBkb3duIGFycm93IGtleXMgdG8gbmF2aWdhdGUuXCJ9fX0sX19yZXNwb25zZTpmdW5jdGlvbihlKXt2YXIgdDt0aGlzLl9zdXBlckFwcGx5KGFyZ3VtZW50cyksdGhpcy5vcHRpb25zLmRpc2FibGVkfHx0aGlzLmNhbmNlbFNlYXJjaHx8KHQ9ZSYmZS5sZW5ndGg/dGhpcy5vcHRpb25zLm1lc3NhZ2VzLnJlc3VsdHMoZS5sZW5ndGgpOnRoaXMub3B0aW9ucy5tZXNzYWdlcy5ub1Jlc3VsdHMsdGhpcy5saXZlUmVnaW9uLnRleHQodCkpfX0pfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSl7dmFyIHQsaSxzLG4sYT1cInVpLWJ1dHRvbiB1aS13aWRnZXQgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsXCIsbz1cInVpLXN0YXRlLWhvdmVyIHVpLXN0YXRlLWFjdGl2ZSBcIixyPVwidWktYnV0dG9uLWljb25zLW9ubHkgdWktYnV0dG9uLWljb24tb25seSB1aS1idXR0b24tdGV4dC1pY29ucyB1aS1idXR0b24tdGV4dC1pY29uLXByaW1hcnkgdWktYnV0dG9uLXRleHQtaWNvbi1zZWNvbmRhcnkgdWktYnV0dG9uLXRleHQtb25seVwiLGg9ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmZpbmQoXCI6dWktYnV0dG9uXCIpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0LmJ1dHRvbihcInJlZnJlc2hcIil9LDEpfSxsPWZ1bmN0aW9uKHQpe3ZhciBpPXQubmFtZSxzPXQuZm9ybSxuPWUoW10pO3JldHVybiBpJiYobj1zP2UocykuZmluZChcIltuYW1lPSdcIitpK1wiJ11cIik6ZShcIltuYW1lPSdcIitpK1wiJ11cIix0Lm93bmVyRG9jdW1lbnQpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiF0aGlzLmZvcm19KSksbn07ZS53aWRnZXQoXCJ1aS5idXR0b25cIix7dmVyc2lvbjpcIjEuOS4yXCIsZGVmYXVsdEVsZW1lbnQ6XCI8YnV0dG9uPlwiLG9wdGlvbnM6e2Rpc2FibGVkOm51bGwsdGV4dDohMCxsYWJlbDpudWxsLGljb25zOntwcmltYXJ5Om51bGwsc2Vjb25kYXJ5Om51bGx9fSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LmNsb3Nlc3QoXCJmb3JtXCIpLnVuYmluZChcInJlc2V0XCIrdGhpcy5ldmVudE5hbWVzcGFjZSkuYmluZChcInJlc2V0XCIrdGhpcy5ldmVudE5hbWVzcGFjZSxoKSxcImJvb2xlYW5cIiE9dHlwZW9mIHRoaXMub3B0aW9ucy5kaXNhYmxlZD90aGlzLm9wdGlvbnMuZGlzYWJsZWQ9ISF0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIpOnRoaXMuZWxlbWVudC5wcm9wKFwiZGlzYWJsZWRcIix0aGlzLm9wdGlvbnMuZGlzYWJsZWQpLHRoaXMuX2RldGVybWluZUJ1dHRvblR5cGUoKSx0aGlzLmhhc1RpdGxlPSEhdGhpcy5idXR0b25FbGVtZW50LmF0dHIoXCJ0aXRsZVwiKTt2YXIgbz10aGlzLHI9dGhpcy5vcHRpb25zLHU9XCJjaGVja2JveFwiPT09dGhpcy50eXBlfHxcInJhZGlvXCI9PT10aGlzLnR5cGUsZD11P1wiXCI6XCJ1aS1zdGF0ZS1hY3RpdmVcIixjPVwidWktc3RhdGUtZm9jdXNcIjtudWxsPT09ci5sYWJlbCYmKHIubGFiZWw9XCJpbnB1dFwiPT09dGhpcy50eXBlP3RoaXMuYnV0dG9uRWxlbWVudC52YWwoKTp0aGlzLmJ1dHRvbkVsZW1lbnQuaHRtbCgpKSx0aGlzLl9ob3ZlcmFibGUodGhpcy5idXR0b25FbGVtZW50KSx0aGlzLmJ1dHRvbkVsZW1lbnQuYWRkQ2xhc3MoYSkuYXR0cihcInJvbGVcIixcImJ1dHRvblwiKS5iaW5kKFwibW91c2VlbnRlclwiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oKXtyLmRpc2FibGVkfHx0aGlzPT09dCYmZSh0aGlzKS5hZGRDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKX0pLmJpbmQoXCJtb3VzZWxlYXZlXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe3IuZGlzYWJsZWR8fGUodGhpcykucmVtb3ZlQ2xhc3MoZCl9KS5iaW5kKFwiY2xpY2tcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKGUpe3IuZGlzYWJsZWQmJihlLnByZXZlbnREZWZhdWx0KCksZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSl9KSx0aGlzLmVsZW1lbnQuYmluZChcImZvY3VzXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe28uYnV0dG9uRWxlbWVudC5hZGRDbGFzcyhjKX0pLmJpbmQoXCJibHVyXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe28uYnV0dG9uRWxlbWVudC5yZW1vdmVDbGFzcyhjKX0pLHUmJih0aGlzLmVsZW1lbnQuYmluZChcImNoYW5nZVwiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oKXtufHxvLnJlZnJlc2goKX0pLHRoaXMuYnV0dG9uRWxlbWVudC5iaW5kKFwibW91c2Vkb3duXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbihlKXtyLmRpc2FibGVkfHwobj0hMSxpPWUucGFnZVgscz1lLnBhZ2VZKX0pLmJpbmQoXCJtb3VzZXVwXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbihlKXtyLmRpc2FibGVkfHwoaSE9PWUucGFnZVh8fHMhPT1lLnBhZ2VZKSYmKG49ITApfSkpLFwiY2hlY2tib3hcIj09PXRoaXMudHlwZT90aGlzLmJ1dHRvbkVsZW1lbnQuYmluZChcImNsaWNrXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe3JldHVybiByLmRpc2FibGVkfHxuPyExOihlKHRoaXMpLnRvZ2dsZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLG8uYnV0dG9uRWxlbWVudC5hdHRyKFwiYXJpYS1wcmVzc2VkXCIsby5lbGVtZW50WzBdLmNoZWNrZWQpLHVuZGVmaW5lZCl9KTpcInJhZGlvXCI9PT10aGlzLnR5cGU/dGhpcy5idXR0b25FbGVtZW50LmJpbmQoXCJjbGlja1wiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oKXtpZihyLmRpc2FibGVkfHxuKXJldHVybiExO2UodGhpcykuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIiksby5idXR0b25FbGVtZW50LmF0dHIoXCJhcmlhLXByZXNzZWRcIixcInRydWVcIik7dmFyIHQ9by5lbGVtZW50WzBdO2wodCkubm90KHQpLm1hcChmdW5jdGlvbigpe3JldHVybiBlKHRoaXMpLmJ1dHRvbihcIndpZGdldFwiKVswXX0pLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLXByZXNzZWRcIixcImZhbHNlXCIpfSk6KHRoaXMuYnV0dG9uRWxlbWVudC5iaW5kKFwibW91c2Vkb3duXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe3JldHVybiByLmRpc2FibGVkPyExOihlKHRoaXMpLmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLHQ9dGhpcyxvLmRvY3VtZW50Lm9uZShcIm1vdXNldXBcIixmdW5jdGlvbigpe3Q9bnVsbH0pLHVuZGVmaW5lZCl9KS5iaW5kKFwibW91c2V1cFwiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oKXtyZXR1cm4gci5kaXNhYmxlZD8hMTooZSh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKSx1bmRlZmluZWQpfSkuYmluZChcImtleWRvd25cIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKHQpe3JldHVybiByLmRpc2FibGVkPyExOigodC5rZXlDb2RlPT09ZS51aS5rZXlDb2RlLlNQQUNFfHx0LmtleUNvZGU9PT1lLnVpLmtleUNvZGUuRU5URVIpJiZlKHRoaXMpLmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLHVuZGVmaW5lZCl9KS5iaW5kKFwia2V5dXBcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7ZSh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKX0pLHRoaXMuYnV0dG9uRWxlbWVudC5pcyhcImFcIikmJnRoaXMuYnV0dG9uRWxlbWVudC5rZXl1cChmdW5jdGlvbih0KXt0LmtleUNvZGU9PT1lLnVpLmtleUNvZGUuU1BBQ0UmJmUodGhpcykuY2xpY2soKX0pKSx0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLHIuZGlzYWJsZWQpLHRoaXMuX3Jlc2V0QnV0dG9uKCl9LF9kZXRlcm1pbmVCdXR0b25UeXBlOmZ1bmN0aW9uKCl7dmFyIGUsdCxpO3RoaXMudHlwZT10aGlzLmVsZW1lbnQuaXMoXCJbdHlwZT1jaGVja2JveF1cIik/XCJjaGVja2JveFwiOnRoaXMuZWxlbWVudC5pcyhcIlt0eXBlPXJhZGlvXVwiKT9cInJhZGlvXCI6dGhpcy5lbGVtZW50LmlzKFwiaW5wdXRcIik/XCJpbnB1dFwiOlwiYnV0dG9uXCIsXCJjaGVja2JveFwiPT09dGhpcy50eXBlfHxcInJhZGlvXCI9PT10aGlzLnR5cGU/KGU9dGhpcy5lbGVtZW50LnBhcmVudHMoKS5sYXN0KCksdD1cImxhYmVsW2Zvcj0nXCIrdGhpcy5lbGVtZW50LmF0dHIoXCJpZFwiKStcIiddXCIsdGhpcy5idXR0b25FbGVtZW50PWUuZmluZCh0KSx0aGlzLmJ1dHRvbkVsZW1lbnQubGVuZ3RofHwoZT1lLmxlbmd0aD9lLnNpYmxpbmdzKCk6dGhpcy5lbGVtZW50LnNpYmxpbmdzKCksdGhpcy5idXR0b25FbGVtZW50PWUuZmlsdGVyKHQpLHRoaXMuYnV0dG9uRWxlbWVudC5sZW5ndGh8fCh0aGlzLmJ1dHRvbkVsZW1lbnQ9ZS5maW5kKHQpKSksdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlXCIpLGk9dGhpcy5lbGVtZW50LmlzKFwiOmNoZWNrZWRcIiksaSYmdGhpcy5idXR0b25FbGVtZW50LmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuYnV0dG9uRWxlbWVudC5wcm9wKFwiYXJpYS1wcmVzc2VkXCIsaSkpOnRoaXMuYnV0dG9uRWxlbWVudD10aGlzLmVsZW1lbnR9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJ1dHRvbkVsZW1lbnR9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKFwidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlXCIpLHRoaXMuYnV0dG9uRWxlbWVudC5yZW1vdmVDbGFzcyhhK1wiIFwiK28rXCIgXCIrcikucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtcHJlc3NlZFwiKS5odG1sKHRoaXMuYnV0dG9uRWxlbWVudC5maW5kKFwiLnVpLWJ1dHRvbi10ZXh0XCIpLmh0bWwoKSksdGhpcy5oYXNUaXRsZXx8dGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUF0dHIoXCJ0aXRsZVwiKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9zdXBlcihlLHQpLFwiZGlzYWJsZWRcIj09PWU/KHQ/dGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLCEwKTp0aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIsITEpLHVuZGVmaW5lZCk6KHRoaXMuX3Jlc2V0QnV0dG9uKCksdW5kZWZpbmVkKX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudC5pcyhcImlucHV0LCBidXR0b25cIik/dGhpcy5lbGVtZW50LmlzKFwiOmRpc2FibGVkXCIpOnRoaXMuZWxlbWVudC5oYXNDbGFzcyhcInVpLWJ1dHRvbi1kaXNhYmxlZFwiKTt0IT09dGhpcy5vcHRpb25zLmRpc2FibGVkJiZ0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLHQpLFwicmFkaW9cIj09PXRoaXMudHlwZT9sKHRoaXMuZWxlbWVudFswXSkuZWFjaChmdW5jdGlvbigpe2UodGhpcykuaXMoXCI6Y2hlY2tlZFwiKT9lKHRoaXMpLmJ1dHRvbihcIndpZGdldFwiKS5hZGRDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1wcmVzc2VkXCIsXCJ0cnVlXCIpOmUodGhpcykuYnV0dG9uKFwid2lkZ2V0XCIpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLXByZXNzZWRcIixcImZhbHNlXCIpfSk6XCJjaGVja2JveFwiPT09dGhpcy50eXBlJiYodGhpcy5lbGVtZW50LmlzKFwiOmNoZWNrZWRcIik/dGhpcy5idXR0b25FbGVtZW50LmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLXByZXNzZWRcIixcInRydWVcIik6dGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLXByZXNzZWRcIixcImZhbHNlXCIpKX0sX3Jlc2V0QnV0dG9uOmZ1bmN0aW9uKCl7aWYoXCJpbnB1dFwiPT09dGhpcy50eXBlKXJldHVybiB0aGlzLm9wdGlvbnMubGFiZWwmJnRoaXMuZWxlbWVudC52YWwodGhpcy5vcHRpb25zLmxhYmVsKSx1bmRlZmluZWQ7dmFyIHQ9dGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUNsYXNzKHIpLGk9ZShcIjxzcGFuPjwvc3Bhbj5cIix0aGlzLmRvY3VtZW50WzBdKS5hZGRDbGFzcyhcInVpLWJ1dHRvbi10ZXh0XCIpLmh0bWwodGhpcy5vcHRpb25zLmxhYmVsKS5hcHBlbmRUbyh0LmVtcHR5KCkpLnRleHQoKSxzPXRoaXMub3B0aW9ucy5pY29ucyxuPXMucHJpbWFyeSYmcy5zZWNvbmRhcnksYT1bXTtzLnByaW1hcnl8fHMuc2Vjb25kYXJ5Pyh0aGlzLm9wdGlvbnMudGV4dCYmYS5wdXNoKFwidWktYnV0dG9uLXRleHQtaWNvblwiKyhuP1wic1wiOnMucHJpbWFyeT9cIi1wcmltYXJ5XCI6XCItc2Vjb25kYXJ5XCIpKSxzLnByaW1hcnkmJnQucHJlcGVuZChcIjxzcGFuIGNsYXNzPSd1aS1idXR0b24taWNvbi1wcmltYXJ5IHVpLWljb24gXCIrcy5wcmltYXJ5K1wiJz48L3NwYW4+XCIpLHMuc2Vjb25kYXJ5JiZ0LmFwcGVuZChcIjxzcGFuIGNsYXNzPSd1aS1idXR0b24taWNvbi1zZWNvbmRhcnkgdWktaWNvbiBcIitzLnNlY29uZGFyeStcIic+PC9zcGFuPlwiKSx0aGlzLm9wdGlvbnMudGV4dHx8KGEucHVzaChuP1widWktYnV0dG9uLWljb25zLW9ubHlcIjpcInVpLWJ1dHRvbi1pY29uLW9ubHlcIiksdGhpcy5oYXNUaXRsZXx8dC5hdHRyKFwidGl0bGVcIixlLnRyaW0oaSkpKSk6YS5wdXNoKFwidWktYnV0dG9uLXRleHQtb25seVwiKSx0LmFkZENsYXNzKGEuam9pbihcIiBcIikpfX0pLGUud2lkZ2V0KFwidWkuYnV0dG9uc2V0XCIse3ZlcnNpb246XCIxLjkuMlwiLG9wdGlvbnM6e2l0ZW1zOlwiYnV0dG9uLCBpbnB1dFt0eXBlPWJ1dHRvbl0sIGlucHV0W3R5cGU9c3VibWl0XSwgaW5wdXRbdHlwZT1yZXNldF0sIGlucHV0W3R5cGU9Y2hlY2tib3hdLCBpbnB1dFt0eXBlPXJhZGlvXSwgYSwgOmRhdGEoYnV0dG9uKVwifSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktYnV0dG9uc2V0XCIpfSxfaW5pdDpmdW5jdGlvbigpe3RoaXMucmVmcmVzaCgpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsdCl7XCJkaXNhYmxlZFwiPT09ZSYmdGhpcy5idXR0b25zLmJ1dHRvbihcIm9wdGlvblwiLGUsdCksdGhpcy5fc3VwZXIoZSx0KX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PVwicnRsXCI9PT10aGlzLmVsZW1lbnQuY3NzKFwiZGlyZWN0aW9uXCIpO3RoaXMuYnV0dG9ucz10aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLmZpbHRlcihcIjp1aS1idXR0b25cIikuYnV0dG9uKFwicmVmcmVzaFwiKS5lbmQoKS5ub3QoXCI6dWktYnV0dG9uXCIpLmJ1dHRvbigpLmVuZCgpLm1hcChmdW5jdGlvbigpe3JldHVybiBlKHRoaXMpLmJ1dHRvbihcIndpZGdldFwiKVswXX0pLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLWFsbCB1aS1jb3JuZXItbGVmdCB1aS1jb3JuZXItcmlnaHRcIikuZmlsdGVyKFwiOmZpcnN0XCIpLmFkZENsYXNzKHQ/XCJ1aS1jb3JuZXItcmlnaHRcIjpcInVpLWNvcm5lci1sZWZ0XCIpLmVuZCgpLmZpbHRlcihcIjpsYXN0XCIpLmFkZENsYXNzKHQ/XCJ1aS1jb3JuZXItbGVmdFwiOlwidWktY29ybmVyLXJpZ2h0XCIpLmVuZCgpLmVuZCgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyhcInVpLWJ1dHRvbnNldFwiKSx0aGlzLmJ1dHRvbnMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcykuYnV0dG9uKFwid2lkZ2V0XCIpWzBdfSkucmVtb3ZlQ2xhc3MoXCJ1aS1jb3JuZXItbGVmdCB1aS1jb3JuZXItcmlnaHRcIikuZW5kKCkuYnV0dG9uKFwiZGVzdHJveVwiKX19KX0pKGpRdWVyeSk7KGZ1bmN0aW9uKCQsdW5kZWZpbmVkKXtmdW5jdGlvbiBEYXRlcGlja2VyKCl7dGhpcy5kZWJ1Zz0hMSx0aGlzLl9jdXJJbnN0PW51bGwsdGhpcy5fa2V5RXZlbnQ9ITEsdGhpcy5fZGlzYWJsZWRJbnB1dHM9W10sdGhpcy5fZGF0ZXBpY2tlclNob3dpbmc9ITEsdGhpcy5faW5EaWFsb2c9ITEsdGhpcy5fbWFpbkRpdklkPVwidWktZGF0ZXBpY2tlci1kaXZcIix0aGlzLl9pbmxpbmVDbGFzcz1cInVpLWRhdGVwaWNrZXItaW5saW5lXCIsdGhpcy5fYXBwZW5kQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWFwcGVuZFwiLHRoaXMuX3RyaWdnZXJDbGFzcz1cInVpLWRhdGVwaWNrZXItdHJpZ2dlclwiLHRoaXMuX2RpYWxvZ0NsYXNzPVwidWktZGF0ZXBpY2tlci1kaWFsb2dcIix0aGlzLl9kaXNhYmxlQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWRpc2FibGVkXCIsdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLXVuc2VsZWN0YWJsZVwiLHRoaXMuX2N1cnJlbnRDbGFzcz1cInVpLWRhdGVwaWNrZXItY3VycmVudC1kYXlcIix0aGlzLl9kYXlPdmVyQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWRheXMtY2VsbC1vdmVyXCIsdGhpcy5yZWdpb25hbD1bXSx0aGlzLnJlZ2lvbmFsW1wiXCJdPXtjbG9zZVRleHQ6XCJEb25lXCIscHJldlRleHQ6XCJQcmV2XCIsbmV4dFRleHQ6XCJOZXh0XCIsY3VycmVudFRleHQ6XCJUb2RheVwiLG1vbnRoTmFtZXM6W1wiSmFudWFyeVwiLFwiRmVicnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdLG1vbnRoTmFtZXNTaG9ydDpbXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuXCIsXCJKdWxcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCJdLGRheU5hbWVzOltcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCJdLGRheU5hbWVzU2hvcnQ6W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdLGRheU5hbWVzTWluOltcIlN1XCIsXCJNb1wiLFwiVHVcIixcIldlXCIsXCJUaFwiLFwiRnJcIixcIlNhXCJdLHdlZWtIZWFkZXI6XCJXa1wiLGRhdGVGb3JtYXQ6XCJtbS9kZC95eVwiLGZpcnN0RGF5OjAsaXNSVEw6ITEsc2hvd01vbnRoQWZ0ZXJZZWFyOiExLHllYXJTdWZmaXg6XCJcIn0sdGhpcy5fZGVmYXVsdHM9e3Nob3dPbjpcImZvY3VzXCIsc2hvd0FuaW06XCJmYWRlSW5cIixzaG93T3B0aW9uczp7fSxkZWZhdWx0RGF0ZTpudWxsLGFwcGVuZFRleHQ6XCJcIixidXR0b25UZXh0OlwiLi4uXCIsYnV0dG9uSW1hZ2U6XCJcIixidXR0b25JbWFnZU9ubHk6ITEsaGlkZUlmTm9QcmV2TmV4dDohMSxuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0OiExLGdvdG9DdXJyZW50OiExLGNoYW5nZU1vbnRoOiExLGNoYW5nZVllYXI6ITEseWVhclJhbmdlOlwiYy0xMDpjKzEwXCIsc2hvd090aGVyTW9udGhzOiExLHNlbGVjdE90aGVyTW9udGhzOiExLHNob3dXZWVrOiExLGNhbGN1bGF0ZVdlZWs6dGhpcy5pc284NjAxV2VlayxzaG9ydFllYXJDdXRvZmY6XCIrMTBcIixtaW5EYXRlOm51bGwsbWF4RGF0ZTpudWxsLGR1cmF0aW9uOlwiZmFzdFwiLGJlZm9yZVNob3dEYXk6bnVsbCxiZWZvcmVTaG93Om51bGwsb25TZWxlY3Q6bnVsbCxvbkNoYW5nZU1vbnRoWWVhcjpudWxsLG9uQ2xvc2U6bnVsbCxudW1iZXJPZk1vbnRoczoxLHNob3dDdXJyZW50QXRQb3M6MCxzdGVwTW9udGhzOjEsc3RlcEJpZ01vbnRoczoxMixhbHRGaWVsZDpcIlwiLGFsdEZvcm1hdDpcIlwiLGNvbnN0cmFpbklucHV0OiEwLHNob3dCdXR0b25QYW5lbDohMSxhdXRvU2l6ZTohMSxkaXNhYmxlZDohMX0sJC5leHRlbmQodGhpcy5fZGVmYXVsdHMsdGhpcy5yZWdpb25hbFtcIlwiXSksdGhpcy5kcERpdj1iaW5kSG92ZXIoJCgnPGRpdiBpZD1cIicrdGhpcy5fbWFpbkRpdklkKydcIiBjbGFzcz1cInVpLWRhdGVwaWNrZXIgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeCB1aS1jb3JuZXItYWxsXCI+PC9kaXY+JykpfWZ1bmN0aW9uIGJpbmRIb3ZlcihlKXt2YXIgdD1cImJ1dHRvbiwgLnVpLWRhdGVwaWNrZXItcHJldiwgLnVpLWRhdGVwaWNrZXItbmV4dCwgLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIgdGQgYVwiO3JldHVybiBlLmRlbGVnYXRlKHQsXCJtb3VzZW91dFwiLGZ1bmN0aW9uKCl7JCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLC0xIT10aGlzLmNsYXNzTmFtZS5pbmRleE9mKFwidWktZGF0ZXBpY2tlci1wcmV2XCIpJiYkKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyXCIpLC0xIT10aGlzLmNsYXNzTmFtZS5pbmRleE9mKFwidWktZGF0ZXBpY2tlci1uZXh0XCIpJiYkKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktZGF0ZXBpY2tlci1uZXh0LWhvdmVyXCIpfSkuZGVsZWdhdGUodCxcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKCl7JC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihpbnN0QWN0aXZlLmlubGluZT9lLnBhcmVudCgpWzBdOmluc3RBY3RpdmUuaW5wdXRbMF0pfHwoJCh0aGlzKS5wYXJlbnRzKFwiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXJcIikuZmluZChcImFcIikucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKSwkKHRoaXMpLmFkZENsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksLTEhPXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLXByZXZcIikmJiQodGhpcykuYWRkQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXJcIiksLTEhPXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLW5leHRcIikmJiQodGhpcykuYWRkQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXJcIikpfSl9ZnVuY3Rpb24gZXh0ZW5kUmVtb3ZlKGUsdCl7JC5leHRlbmQoZSx0KTtmb3IodmFyIGkgaW4gdCkobnVsbD09dFtpXXx8dFtpXT09dW5kZWZpbmVkKSYmKGVbaV09dFtpXSk7cmV0dXJuIGV9JC5leHRlbmQoJC51aSx7ZGF0ZXBpY2tlcjp7dmVyc2lvbjpcIjEuOS4yXCJ9fSk7dmFyIFBST1BfTkFNRT1cImRhdGVwaWNrZXJcIixkcHV1aWQ9KG5ldyBEYXRlKS5nZXRUaW1lKCksaW5zdEFjdGl2ZTskLmV4dGVuZChEYXRlcGlja2VyLnByb3RvdHlwZSx7bWFya2VyQ2xhc3NOYW1lOlwiaGFzRGF0ZXBpY2tlclwiLG1heFJvd3M6NCxsb2c6ZnVuY3Rpb24oKXt0aGlzLmRlYnVnJiZjb25zb2xlLmxvZy5hcHBseShcIlwiLGFyZ3VtZW50cyl9LF93aWRnZXREYXRlcGlja2VyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZHBEaXZ9LHNldERlZmF1bHRzOmZ1bmN0aW9uKGUpe3JldHVybiBleHRlbmRSZW1vdmUodGhpcy5fZGVmYXVsdHMsZXx8e30pLHRoaXN9LF9hdHRhY2hEYXRlcGlja2VyOmZ1bmN0aW9uKHRhcmdldCxzZXR0aW5ncyl7dmFyIGlubGluZVNldHRpbmdzPW51bGw7Zm9yKHZhciBhdHRyTmFtZSBpbiB0aGlzLl9kZWZhdWx0cyl7dmFyIGF0dHJWYWx1ZT10YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0ZTpcIithdHRyTmFtZSk7aWYoYXR0clZhbHVlKXtpbmxpbmVTZXR0aW5ncz1pbmxpbmVTZXR0aW5nc3x8e307dHJ5e2lubGluZVNldHRpbmdzW2F0dHJOYW1lXT1ldmFsKGF0dHJWYWx1ZSl9Y2F0Y2goZXJyKXtpbmxpbmVTZXR0aW5nc1thdHRyTmFtZV09YXR0clZhbHVlfX19dmFyIG5vZGVOYW1lPXRhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLGlubGluZT1cImRpdlwiPT1ub2RlTmFtZXx8XCJzcGFuXCI9PW5vZGVOYW1lO3RhcmdldC5pZHx8KHRoaXMudXVpZCs9MSx0YXJnZXQuaWQ9XCJkcFwiK3RoaXMudXVpZCk7dmFyIGluc3Q9dGhpcy5fbmV3SW5zdCgkKHRhcmdldCksaW5saW5lKTtpbnN0LnNldHRpbmdzPSQuZXh0ZW5kKHt9LHNldHRpbmdzfHx7fSxpbmxpbmVTZXR0aW5nc3x8e30pLFwiaW5wdXRcIj09bm9kZU5hbWU/dGhpcy5fY29ubmVjdERhdGVwaWNrZXIodGFyZ2V0LGluc3QpOmlubGluZSYmdGhpcy5faW5saW5lRGF0ZXBpY2tlcih0YXJnZXQsaW5zdCl9LF9uZXdJbnN0OmZ1bmN0aW9uKGUsdCl7dmFyIGk9ZVswXS5pZC5yZXBsYWNlKC8oW15BLVphLXowLTlfLV0pL2csXCJcXFxcXFxcXCQxXCIpO3JldHVybntpZDppLGlucHV0OmUsc2VsZWN0ZWREYXk6MCxzZWxlY3RlZE1vbnRoOjAsc2VsZWN0ZWRZZWFyOjAsZHJhd01vbnRoOjAsZHJhd1llYXI6MCxpbmxpbmU6dCxkcERpdjp0P2JpbmRIb3ZlcigkKCc8ZGl2IGNsYXNzPVwiJyt0aGlzLl9pbmxpbmVDbGFzcysnIHVpLWRhdGVwaWNrZXIgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeCB1aS1jb3JuZXItYWxsXCI+PC9kaXY+JykpOnRoaXMuZHBEaXZ9fSxfY29ubmVjdERhdGVwaWNrZXI6ZnVuY3Rpb24oZSx0KXt2YXIgaT0kKGUpO3QuYXBwZW5kPSQoW10pLHQudHJpZ2dlcj0kKFtdKSxpLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKXx8KHRoaXMuX2F0dGFjaG1lbnRzKGksdCksaS5hZGRDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkua2V5ZG93bih0aGlzLl9kb0tleURvd24pLmtleXByZXNzKHRoaXMuX2RvS2V5UHJlc3MpLmtleXVwKHRoaXMuX2RvS2V5VXApLmJpbmQoXCJzZXREYXRhLmRhdGVwaWNrZXJcIixmdW5jdGlvbihlLGkscyl7dC5zZXR0aW5nc1tpXT1zfSkuYmluZChcImdldERhdGEuZGF0ZXBpY2tlclwiLGZ1bmN0aW9uKGUsaSl7cmV0dXJuIHRoaXMuX2dldCh0LGkpfSksdGhpcy5fYXV0b1NpemUodCksJC5kYXRhKGUsUFJPUF9OQU1FLHQpLHQuc2V0dGluZ3MuZGlzYWJsZWQmJnRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKGUpKX0sX2F0dGFjaG1lbnRzOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fZ2V0KHQsXCJhcHBlbmRUZXh0XCIpLHM9dGhpcy5fZ2V0KHQsXCJpc1JUTFwiKTt0LmFwcGVuZCYmdC5hcHBlbmQucmVtb3ZlKCksaSYmKHQuYXBwZW5kPSQoJzxzcGFuIGNsYXNzPVwiJyt0aGlzLl9hcHBlbmRDbGFzcysnXCI+JytpK1wiPC9zcGFuPlwiKSxlW3M/XCJiZWZvcmVcIjpcImFmdGVyXCJdKHQuYXBwZW5kKSksZS51bmJpbmQoXCJmb2N1c1wiLHRoaXMuX3Nob3dEYXRlcGlja2VyKSx0LnRyaWdnZXImJnQudHJpZ2dlci5yZW1vdmUoKTt2YXIgbj10aGlzLl9nZXQodCxcInNob3dPblwiKTtpZigoXCJmb2N1c1wiPT1ufHxcImJvdGhcIj09bikmJmUuZm9jdXModGhpcy5fc2hvd0RhdGVwaWNrZXIpLFwiYnV0dG9uXCI9PW58fFwiYm90aFwiPT1uKXt2YXIgYT10aGlzLl9nZXQodCxcImJ1dHRvblRleHRcIiksbz10aGlzLl9nZXQodCxcImJ1dHRvbkltYWdlXCIpO3QudHJpZ2dlcj0kKHRoaXMuX2dldCh0LFwiYnV0dG9uSW1hZ2VPbmx5XCIpPyQoXCI8aW1nLz5cIikuYWRkQ2xhc3ModGhpcy5fdHJpZ2dlckNsYXNzKS5hdHRyKHtzcmM6byxhbHQ6YSx0aXRsZTphfSk6JCgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCI+PC9idXR0b24+JykuYWRkQ2xhc3ModGhpcy5fdHJpZ2dlckNsYXNzKS5odG1sKFwiXCI9PW8/YTokKFwiPGltZy8+XCIpLmF0dHIoe3NyYzpvLGFsdDphLHRpdGxlOmF9KSkpLGVbcz9cImJlZm9yZVwiOlwiYWZ0ZXJcIl0odC50cmlnZ2VyKSx0LnRyaWdnZXIuY2xpY2soZnVuY3Rpb24oKXtyZXR1cm4gJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQ9PWVbMF0/JC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOiQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJiQuZGF0ZXBpY2tlci5fbGFzdElucHV0IT1lWzBdPygkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCksJC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihlWzBdKSk6JC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihlWzBdKSwhMX0pfX0sX2F1dG9TaXplOmZ1bmN0aW9uKGUpe2lmKHRoaXMuX2dldChlLFwiYXV0b1NpemVcIikmJiFlLmlubGluZSl7dmFyIHQ9bmV3IERhdGUoMjAwOSwxMSwyMCksaT10aGlzLl9nZXQoZSxcImRhdGVGb3JtYXRcIik7aWYoaS5tYXRjaCgvW0RNXS8pKXt2YXIgcz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MCxpPTAscz0wO2UubGVuZ3RoPnM7cysrKWVbc10ubGVuZ3RoPnQmJih0PWVbc10ubGVuZ3RoLGk9cyk7cmV0dXJuIGl9O3Quc2V0TW9udGgocyh0aGlzLl9nZXQoZSxpLm1hdGNoKC9NTS8pP1wibW9udGhOYW1lc1wiOlwibW9udGhOYW1lc1Nob3J0XCIpKSksdC5zZXREYXRlKHModGhpcy5fZ2V0KGUsaS5tYXRjaCgvREQvKT9cImRheU5hbWVzXCI6XCJkYXlOYW1lc1Nob3J0XCIpKSsyMC10LmdldERheSgpKX1lLmlucHV0LmF0dHIoXCJzaXplXCIsdGhpcy5fZm9ybWF0RGF0ZShlLHQpLmxlbmd0aCl9fSxfaW5saW5lRGF0ZXBpY2tlcjpmdW5jdGlvbihlLHQpe3ZhciBpPSQoZSk7aS5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSl8fChpLmFkZENsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS5hcHBlbmQodC5kcERpdikuYmluZChcInNldERhdGEuZGF0ZXBpY2tlclwiLGZ1bmN0aW9uKGUsaSxzKXt0LnNldHRpbmdzW2ldPXN9KS5iaW5kKFwiZ2V0RGF0YS5kYXRlcGlja2VyXCIsZnVuY3Rpb24oZSxpKXtyZXR1cm4gdGhpcy5fZ2V0KHQsaSl9KSwkLmRhdGEoZSxQUk9QX05BTUUsdCksdGhpcy5fc2V0RGF0ZSh0LHRoaXMuX2dldERlZmF1bHREYXRlKHQpLCEwKSx0aGlzLl91cGRhdGVEYXRlcGlja2VyKHQpLHRoaXMuX3VwZGF0ZUFsdGVybmF0ZSh0KSx0LnNldHRpbmdzLmRpc2FibGVkJiZ0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlcihlKSx0LmRwRGl2LmNzcyhcImRpc3BsYXlcIixcImJsb2NrXCIpKX0sX2RpYWxvZ0RhdGVwaWNrZXI6ZnVuY3Rpb24oZSx0LGkscyxuKXt2YXIgYT10aGlzLl9kaWFsb2dJbnN0O2lmKCFhKXt0aGlzLnV1aWQrPTE7dmFyIG89XCJkcFwiK3RoaXMudXVpZDt0aGlzLl9kaWFsb2dJbnB1dD0kKCc8aW5wdXQgdHlwZT1cInRleHRcIiBpZD1cIicrbysnXCIgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4O1wiLz4nKSx0aGlzLl9kaWFsb2dJbnB1dC5rZXlkb3duKHRoaXMuX2RvS2V5RG93biksJChcImJvZHlcIikuYXBwZW5kKHRoaXMuX2RpYWxvZ0lucHV0KSxhPXRoaXMuX2RpYWxvZ0luc3Q9dGhpcy5fbmV3SW5zdCh0aGlzLl9kaWFsb2dJbnB1dCwhMSksYS5zZXR0aW5ncz17fSwkLmRhdGEodGhpcy5fZGlhbG9nSW5wdXRbMF0sUFJPUF9OQU1FLGEpfWlmKGV4dGVuZFJlbW92ZShhLnNldHRpbmdzLHN8fHt9KSx0PXQmJnQuY29uc3RydWN0b3I9PURhdGU/dGhpcy5fZm9ybWF0RGF0ZShhLHQpOnQsdGhpcy5fZGlhbG9nSW5wdXQudmFsKHQpLHRoaXMuX3Bvcz1uP24ubGVuZ3RoP246W24ucGFnZVgsbi5wYWdlWV06bnVsbCwhdGhpcy5fcG9zKXt2YXIgcj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsaD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LGw9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnR8fGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCx1PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3B8fGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wO3RoaXMuX3Bvcz1bci8yLTEwMCtsLGgvMi0xNTArdV19cmV0dXJuIHRoaXMuX2RpYWxvZ0lucHV0LmNzcyhcImxlZnRcIix0aGlzLl9wb3NbMF0rMjArXCJweFwiKS5jc3MoXCJ0b3BcIix0aGlzLl9wb3NbMV0rXCJweFwiKSxhLnNldHRpbmdzLm9uU2VsZWN0PWksdGhpcy5faW5EaWFsb2c9ITAsdGhpcy5kcERpdi5hZGRDbGFzcyh0aGlzLl9kaWFsb2dDbGFzcyksdGhpcy5fc2hvd0RhdGVwaWNrZXIodGhpcy5fZGlhbG9nSW5wdXRbMF0pLCQuYmxvY2tVSSYmJC5ibG9ja1VJKHRoaXMuZHBEaXYpLCQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSxQUk9QX05BTUUsYSksdGhpc30sX2Rlc3Ryb3lEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciB0PSQoZSksaT0kLmRhdGEoZSxQUk9QX05BTUUpO2lmKHQuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpKXt2YXIgcz1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7JC5yZW1vdmVEYXRhKGUsUFJPUF9OQU1FKSxcImlucHV0XCI9PXM/KGkuYXBwZW5kLnJlbW92ZSgpLGkudHJpZ2dlci5yZW1vdmUoKSx0LnJlbW92ZUNsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS51bmJpbmQoXCJmb2N1c1wiLHRoaXMuX3Nob3dEYXRlcGlja2VyKS51bmJpbmQoXCJrZXlkb3duXCIsdGhpcy5fZG9LZXlEb3duKS51bmJpbmQoXCJrZXlwcmVzc1wiLHRoaXMuX2RvS2V5UHJlc3MpLnVuYmluZChcImtleXVwXCIsdGhpcy5fZG9LZXlVcCkpOihcImRpdlwiPT1zfHxcInNwYW5cIj09cykmJnQucmVtb3ZlQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmVtcHR5KCl9fSxfZW5hYmxlRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt2YXIgdD0kKGUpLGk9JC5kYXRhKGUsUFJPUF9OQU1FKTtpZih0Lmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSl7dmFyIHM9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwiaW5wdXRcIj09cyllLmRpc2FibGVkPSExLGkudHJpZ2dlci5maWx0ZXIoXCJidXR0b25cIikuZWFjaChmdW5jdGlvbigpe3RoaXMuZGlzYWJsZWQ9ITF9KS5lbmQoKS5maWx0ZXIoXCJpbWdcIikuY3NzKHtvcGFjaXR5OlwiMS4wXCIsY3Vyc29yOlwiXCJ9KTtlbHNlIGlmKFwiZGl2XCI9PXN8fFwic3BhblwiPT1zKXt2YXIgbj10LmNoaWxkcmVuKFwiLlwiK3RoaXMuX2lubGluZUNsYXNzKTtuLmNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKSxuLmZpbmQoXCJzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgc2VsZWN0LnVpLWRhdGVwaWNrZXIteWVhclwiKS5wcm9wKFwiZGlzYWJsZWRcIiwhMSl9dGhpcy5fZGlzYWJsZWRJbnB1dHM9JC5tYXAodGhpcy5fZGlzYWJsZWRJbnB1dHMsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PWU/bnVsbDp0fSl9fSxfZGlzYWJsZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9JChlKSxpPSQuZGF0YShlLFBST1BfTkFNRSk7aWYodC5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkpe3ZhciBzPWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcImlucHV0XCI9PXMpZS5kaXNhYmxlZD0hMCxpLnRyaWdnZXIuZmlsdGVyKFwiYnV0dG9uXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLmRpc2FibGVkPSEwfSkuZW5kKCkuZmlsdGVyKFwiaW1nXCIpLmNzcyh7b3BhY2l0eTpcIjAuNVwiLGN1cnNvcjpcImRlZmF1bHRcIn0pO2Vsc2UgaWYoXCJkaXZcIj09c3x8XCJzcGFuXCI9PXMpe3ZhciBuPXQuY2hpbGRyZW4oXCIuXCIrdGhpcy5faW5saW5lQ2xhc3MpO24uY2hpbGRyZW4oKS5hZGRDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpLG4uZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLW1vbnRoLCBzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyXCIpLnByb3AoXCJkaXNhYmxlZFwiLCEwKX10aGlzLl9kaXNhYmxlZElucHV0cz0kLm1hcCh0aGlzLl9kaXNhYmxlZElucHV0cyxmdW5jdGlvbih0KXtyZXR1cm4gdD09ZT9udWxsOnR9KSx0aGlzLl9kaXNhYmxlZElucHV0c1t0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGhdPWV9fSxfaXNEaXNhYmxlZERhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7aWYoIWUpcmV0dXJuITE7Zm9yKHZhciB0PTA7dGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoPnQ7dCsrKWlmKHRoaXMuX2Rpc2FibGVkSW5wdXRzW3RdPT1lKXJldHVybiEwO3JldHVybiExfSxfZ2V0SW5zdDpmdW5jdGlvbihlKXt0cnl7cmV0dXJuICQuZGF0YShlLFBST1BfTkFNRSl9Y2F0Y2godCl7dGhyb3dcIk1pc3NpbmcgaW5zdGFuY2UgZGF0YSBmb3IgdGhpcyBkYXRlcGlja2VyXCJ9fSxfb3B0aW9uRGF0ZXBpY2tlcjpmdW5jdGlvbihlLHQsaSl7dmFyIHM9dGhpcy5fZ2V0SW5zdChlKTtpZigyPT1hcmd1bWVudHMubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm5cImRlZmF1bHRzXCI9PXQ/JC5leHRlbmQoe30sJC5kYXRlcGlja2VyLl9kZWZhdWx0cyk6cz9cImFsbFwiPT10PyQuZXh0ZW5kKHt9LHMuc2V0dGluZ3MpOnRoaXMuX2dldChzLHQpOm51bGw7dmFyIG49dHx8e307aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQmJihuPXt9LG5bdF09aSkscyl7dGhpcy5fY3VySW5zdD09cyYmdGhpcy5faGlkZURhdGVwaWNrZXIoKTt2YXIgYT10aGlzLl9nZXREYXRlRGF0ZXBpY2tlcihlLCEwKSxvPXRoaXMuX2dldE1pbk1heERhdGUocyxcIm1pblwiKSxyPXRoaXMuX2dldE1pbk1heERhdGUocyxcIm1heFwiKTtleHRlbmRSZW1vdmUocy5zZXR0aW5ncyxuKSxudWxsIT09byYmbi5kYXRlRm9ybWF0IT09dW5kZWZpbmVkJiZuLm1pbkRhdGU9PT11bmRlZmluZWQmJihzLnNldHRpbmdzLm1pbkRhdGU9dGhpcy5fZm9ybWF0RGF0ZShzLG8pKSxudWxsIT09ciYmbi5kYXRlRm9ybWF0IT09dW5kZWZpbmVkJiZuLm1heERhdGU9PT11bmRlZmluZWQmJihzLnNldHRpbmdzLm1heERhdGU9dGhpcy5fZm9ybWF0RGF0ZShzLHIpKSx0aGlzLl9hdHRhY2htZW50cygkKGUpLHMpLHRoaXMuX2F1dG9TaXplKHMpLHRoaXMuX3NldERhdGUocyxhKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUocyksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihzKX19LF9jaGFuZ2VEYXRlcGlja2VyOmZ1bmN0aW9uKGUsdCxpKXt0aGlzLl9vcHRpb25EYXRlcGlja2VyKGUsdCxpKX0sX3JlZnJlc2hEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldEluc3QoZSk7dCYmdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcih0KX0sX3NldERhdGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fZ2V0SW5zdChlKTtpJiYodGhpcy5fc2V0RGF0ZShpLHQpLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaSksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGkpKX0sX2dldERhdGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fZ2V0SW5zdChlKTtyZXR1cm4gaSYmIWkuaW5saW5lJiZ0aGlzLl9zZXREYXRlRnJvbUZpZWxkKGksdCksaT90aGlzLl9nZXREYXRlKGkpOm51bGx9LF9kb0tleURvd246ZnVuY3Rpb24oZSl7dmFyIHQ9JC5kYXRlcGlja2VyLl9nZXRJbnN0KGUudGFyZ2V0KSxpPSEwLHM9dC5kcERpdi5pcyhcIi51aS1kYXRlcGlja2VyLXJ0bFwiKTtpZih0Ll9rZXlFdmVudD0hMCwkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nKXN3aXRjaChlLmtleUNvZGUpe2Nhc2UgOTokLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCksaT0hMTticmVhaztjYXNlIDEzOnZhciBuPSQoXCJ0ZC5cIiskLmRhdGVwaWNrZXIuX2RheU92ZXJDbGFzcytcIjpub3QoLlwiKyQuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzK1wiKVwiLHQuZHBEaXYpO25bMF0mJiQuZGF0ZXBpY2tlci5fc2VsZWN0RGF5KGUudGFyZ2V0LHQuc2VsZWN0ZWRNb250aCx0LnNlbGVjdGVkWWVhcixuWzBdKTt2YXIgYT0kLmRhdGVwaWNrZXIuX2dldCh0LFwib25TZWxlY3RcIik7aWYoYSl7dmFyIG89JC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKHQpO2EuYXBwbHkodC5pbnB1dD90LmlucHV0WzBdOm51bGwsW28sdF0pfWVsc2UgJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpO3JldHVybiExO2Nhc2UgMjc6JC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpO2JyZWFrO2Nhc2UgMzM6JC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LGUuY3RybEtleT8tJC5kYXRlcGlja2VyLl9nZXQodCxcInN0ZXBCaWdNb250aHNcIik6LSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzdGVwTW9udGhzXCIpLFwiTVwiKTticmVhaztjYXNlIDM0OiQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/KyQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzdGVwQmlnTW9udGhzXCIpOiskLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSAzNTooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYkLmRhdGVwaWNrZXIuX2NsZWFyRGF0ZShlLnRhcmdldCksaT1lLmN0cmxLZXl8fGUubWV0YUtleTticmVhaztjYXNlIDM2OihlLmN0cmxLZXl8fGUubWV0YUtleSkmJiQuZGF0ZXBpY2tlci5fZ290b1RvZGF5KGUudGFyZ2V0KSxpPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzc6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LHM/MTotMSxcIkRcIiksaT1lLmN0cmxLZXl8fGUubWV0YUtleSxlLm9yaWdpbmFsRXZlbnQuYWx0S2V5JiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5Py0kLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcEJpZ01vbnRoc1wiKTotJC5kYXRlcGlja2VyLl9nZXQodCxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgMzg6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LC03LFwiRFwiKSxpPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzk6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LHM/LTE6MSxcIkRcIiksaT1lLmN0cmxLZXl8fGUubWV0YUtleSxlLm9yaWdpbmFsRXZlbnQuYWx0S2V5JiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5PyskLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcEJpZ01vbnRoc1wiKTorJC5kYXRlcGlja2VyLl9nZXQodCxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgNDA6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LDcsXCJEXCIpLGk9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7ZGVmYXVsdDppPSExfWVsc2UgMzY9PWUua2V5Q29kZSYmZS5jdHJsS2V5PyQuZGF0ZXBpY2tlci5fc2hvd0RhdGVwaWNrZXIodGhpcyk6aT0hMTtpJiYoZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCkpfSxfZG9LZXlQcmVzczpmdW5jdGlvbihlKXt2YXIgdD0kLmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpO2lmKCQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJjb25zdHJhaW5JbnB1dFwiKSl7dmFyIGk9JC5kYXRlcGlja2VyLl9wb3NzaWJsZUNoYXJzKCQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJkYXRlRm9ybWF0XCIpKSxzPVN0cmluZy5mcm9tQ2hhckNvZGUoZS5jaGFyQ29kZT09dW5kZWZpbmVkP2Uua2V5Q29kZTplLmNoYXJDb2RlKTtyZXR1cm4gZS5jdHJsS2V5fHxlLm1ldGFLZXl8fFwiIFwiPnN8fCFpfHxpLmluZGV4T2Yocyk+LTF9fSxfZG9LZXlVcDpmdW5jdGlvbihlKXt2YXIgdD0kLmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpO2lmKHQuaW5wdXQudmFsKCkhPXQubGFzdFZhbCl0cnl7dmFyIGk9JC5kYXRlcGlja2VyLnBhcnNlRGF0ZSgkLmRhdGVwaWNrZXIuX2dldCh0LFwiZGF0ZUZvcm1hdFwiKSx0LmlucHV0P3QuaW5wdXQudmFsKCk6bnVsbCwkLmRhdGVwaWNrZXIuX2dldEZvcm1hdENvbmZpZyh0KSk7aSYmKCQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCh0KSwkLmRhdGVwaWNrZXIuX3VwZGF0ZUFsdGVybmF0ZSh0KSwkLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIodCkpfWNhdGNoKHMpeyQuZGF0ZXBpY2tlci5sb2cocyl9cmV0dXJuITB9LF9zaG93RGF0ZXBpY2tlcjpmdW5jdGlvbihlKXtpZihlPWUudGFyZ2V0fHxlLFwiaW5wdXRcIiE9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpJiYoZT0kKFwiaW5wdXRcIixlLnBhcmVudE5vZGUpWzBdKSwhJC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihlKSYmJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQhPWUpe3ZhciB0PSQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlKTskLmRhdGVwaWNrZXIuX2N1ckluc3QmJiQuZGF0ZXBpY2tlci5fY3VySW5zdCE9dCYmKCQuZGF0ZXBpY2tlci5fY3VySW5zdC5kcERpdi5zdG9wKCEwLCEwKSx0JiYkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiYkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCQuZGF0ZXBpY2tlci5fY3VySW5zdC5pbnB1dFswXSkpO3ZhciBpPSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJiZWZvcmVTaG93XCIpLHM9aT9pLmFwcGx5KGUsW2UsdF0pOnt9O2lmKHMhPT0hMSl7ZXh0ZW5kUmVtb3ZlKHQuc2V0dGluZ3MscyksdC5sYXN0VmFsPW51bGwsJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQ9ZSwkLmRhdGVwaWNrZXIuX3NldERhdGVGcm9tRmllbGQodCksJC5kYXRlcGlja2VyLl9pbkRpYWxvZyYmKGUudmFsdWU9XCJcIiksJC5kYXRlcGlja2VyLl9wb3N8fCgkLmRhdGVwaWNrZXIuX3Bvcz0kLmRhdGVwaWNrZXIuX2ZpbmRQb3MoZSksJC5kYXRlcGlja2VyLl9wb3NbMV0rPWUub2Zmc2V0SGVpZ2h0KTt2YXIgbj0hMTskKGUpLnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIG58PVwiZml4ZWRcIj09JCh0aGlzKS5jc3MoXCJwb3NpdGlvblwiKSwhbn0pO3ZhciBhPXtsZWZ0OiQuZGF0ZXBpY2tlci5fcG9zWzBdLHRvcDokLmRhdGVwaWNrZXIuX3Bvc1sxXX07aWYoJC5kYXRlcGlja2VyLl9wb3M9bnVsbCx0LmRwRGl2LmVtcHR5KCksdC5kcERpdi5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixkaXNwbGF5OlwiYmxvY2tcIix0b3A6XCItMTAwMHB4XCJ9KSwkLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIodCksYT0kLmRhdGVwaWNrZXIuX2NoZWNrT2Zmc2V0KHQsYSxuKSx0LmRwRGl2LmNzcyh7cG9zaXRpb246JC5kYXRlcGlja2VyLl9pbkRpYWxvZyYmJC5ibG9ja1VJP1wic3RhdGljXCI6bj9cImZpeGVkXCI6XCJhYnNvbHV0ZVwiLGRpc3BsYXk6XCJub25lXCIsbGVmdDphLmxlZnQrXCJweFwiLHRvcDphLnRvcCtcInB4XCJ9KSwhdC5pbmxpbmUpe3ZhciBvPSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzaG93QW5pbVwiKSxyPSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJkdXJhdGlvblwiKSxoPWZ1bmN0aW9uKCl7dmFyIGU9dC5kcERpdi5maW5kKFwiaWZyYW1lLnVpLWRhdGVwaWNrZXItY292ZXJcIik7aWYoZS5sZW5ndGgpe3ZhciBpPSQuZGF0ZXBpY2tlci5fZ2V0Qm9yZGVycyh0LmRwRGl2KTtlLmNzcyh7bGVmdDotaVswXSx0b3A6LWlbMV0sd2lkdGg6dC5kcERpdi5vdXRlcldpZHRoKCksaGVpZ2h0OnQuZHBEaXYub3V0ZXJIZWlnaHQoKX0pfX07dC5kcERpdi56SW5kZXgoJChlKS56SW5kZXgoKSsxKSwkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nPSEwLCQuZWZmZWN0cyYmKCQuZWZmZWN0cy5lZmZlY3Rbb118fCQuZWZmZWN0c1tvXSk/dC5kcERpdi5zaG93KG8sJC5kYXRlcGlja2VyLl9nZXQodCxcInNob3dPcHRpb25zXCIpLHIsaCk6dC5kcERpdltvfHxcInNob3dcIl0obz9yOm51bGwsaCksbyYmcnx8aCgpLHQuaW5wdXQuaXMoXCI6dmlzaWJsZVwiKSYmIXQuaW5wdXQuaXMoXCI6ZGlzYWJsZWRcIikmJnQuaW5wdXQuZm9jdXMoKSwkLmRhdGVwaWNrZXIuX2N1ckluc3Q9dH19fX0sX3VwZGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dGhpcy5tYXhSb3dzPTQ7dmFyIHQ9JC5kYXRlcGlja2VyLl9nZXRCb3JkZXJzKGUuZHBEaXYpO2luc3RBY3RpdmU9ZSxlLmRwRGl2LmVtcHR5KCkuYXBwZW5kKHRoaXMuX2dlbmVyYXRlSFRNTChlKSksdGhpcy5fYXR0YWNoSGFuZGxlcnMoZSk7dmFyIGk9ZS5kcERpdi5maW5kKFwiaWZyYW1lLnVpLWRhdGVwaWNrZXItY292ZXJcIik7aS5sZW5ndGgmJmkuY3NzKHtsZWZ0Oi10WzBdLHRvcDotdFsxXSx3aWR0aDplLmRwRGl2Lm91dGVyV2lkdGgoKSxoZWlnaHQ6ZS5kcERpdi5vdXRlckhlaWdodCgpfSksZS5kcERpdi5maW5kKFwiLlwiK3RoaXMuX2RheU92ZXJDbGFzcytcIiBhXCIpLm1vdXNlb3ZlcigpO3ZhciBzPXRoaXMuX2dldE51bWJlck9mTW9udGhzKGUpLG49c1sxXSxhPTE3O2lmKGUuZHBEaXYucmVtb3ZlQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW11bHRpLTIgdWktZGF0ZXBpY2tlci1tdWx0aS0zIHVpLWRhdGVwaWNrZXItbXVsdGktNFwiKS53aWR0aChcIlwiKSxuPjEmJmUuZHBEaXYuYWRkQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW11bHRpLVwiK24pLmNzcyhcIndpZHRoXCIsYSpuK1wiZW1cIiksZS5kcERpdlsoMSE9c1swXXx8MSE9c1sxXT9cImFkZFwiOlwicmVtb3ZlXCIpK1wiQ2xhc3NcIl0oXCJ1aS1kYXRlcGlja2VyLW11bHRpXCIpLGUuZHBEaXZbKHRoaXMuX2dldChlLFwiaXNSVExcIik/XCJhZGRcIjpcInJlbW92ZVwiKStcIkNsYXNzXCJdKFwidWktZGF0ZXBpY2tlci1ydGxcIiksZT09JC5kYXRlcGlja2VyLl9jdXJJbnN0JiYkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiZlLmlucHV0JiZlLmlucHV0LmlzKFwiOnZpc2libGVcIikmJiFlLmlucHV0LmlzKFwiOmRpc2FibGVkXCIpJiZlLmlucHV0WzBdIT1kb2N1bWVudC5hY3RpdmVFbGVtZW50JiZlLmlucHV0LmZvY3VzKCksZS55ZWFyc2h0bWwpe3ZhciBvPWUueWVhcnNodG1sO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtvPT09ZS55ZWFyc2h0bWwmJmUueWVhcnNodG1sJiZlLmRwRGl2LmZpbmQoXCJzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyOmZpcnN0XCIpLnJlcGxhY2VXaXRoKGUueWVhcnNodG1sKSxvPWUueWVhcnNodG1sPW51bGx9LDApfX0sX2dldEJvcmRlcnM6ZnVuY3Rpb24oZSl7dmFyIHQ9ZnVuY3Rpb24oZSl7cmV0dXJue3RoaW46MSxtZWRpdW06Mix0aGljazozfVtlXXx8ZX07cmV0dXJuW3BhcnNlRmxvYXQodChlLmNzcyhcImJvcmRlci1sZWZ0LXdpZHRoXCIpKSkscGFyc2VGbG9hdCh0KGUuY3NzKFwiYm9yZGVyLXRvcC13aWR0aFwiKSkpXX0sX2NoZWNrT2Zmc2V0OmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz1lLmRwRGl2Lm91dGVyV2lkdGgoKSxuPWUuZHBEaXYub3V0ZXJIZWlnaHQoKSxhPWUuaW5wdXQ/ZS5pbnB1dC5vdXRlcldpZHRoKCk6MCxvPWUuaW5wdXQ/ZS5pbnB1dC5vdXRlckhlaWdodCgpOjAscj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgrKGk/MDokKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkpLGg9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCsoaT8wOiQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpKTtyZXR1cm4gdC5sZWZ0LT10aGlzLl9nZXQoZSxcImlzUlRMXCIpP3MtYTowLHQubGVmdC09aSYmdC5sZWZ0PT1lLmlucHV0Lm9mZnNldCgpLmxlZnQ/JChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpOjAsdC50b3AtPWkmJnQudG9wPT1lLmlucHV0Lm9mZnNldCgpLnRvcCtvPyQoZG9jdW1lbnQpLnNjcm9sbFRvcCgpOjAsdC5sZWZ0LT1NYXRoLm1pbih0LmxlZnQsdC5sZWZ0K3M+ciYmcj5zP01hdGguYWJzKHQubGVmdCtzLXIpOjApLHQudG9wLT1NYXRoLm1pbih0LnRvcCx0LnRvcCtuPmgmJmg+bj9NYXRoLmFicyhuK28pOjApLHR9LF9maW5kUG9zOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLl9nZXRJbnN0KGUpLGk9dGhpcy5fZ2V0KHQsXCJpc1JUTFwiKTtlJiYoXCJoaWRkZW5cIj09ZS50eXBlfHwxIT1lLm5vZGVUeXBlfHwkLmV4cHIuZmlsdGVycy5oaWRkZW4oZSkpOyllPWVbaT9cInByZXZpb3VzU2libGluZ1wiOlwibmV4dFNpYmxpbmdcIl07dmFyIHM9JChlKS5vZmZzZXQoKTtyZXR1cm5bcy5sZWZ0LHMudG9wXX0sX2hpZGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2N1ckluc3Q7aWYodCYmKCFlfHx0PT0kLmRhdGEoZSxQUk9QX05BTUUpKSYmdGhpcy5fZGF0ZXBpY2tlclNob3dpbmcpe3ZhciBpPXRoaXMuX2dldCh0LFwic2hvd0FuaW1cIikscz10aGlzLl9nZXQodCxcImR1cmF0aW9uXCIpLG49ZnVuY3Rpb24oKXskLmRhdGVwaWNrZXIuX3RpZHlEaWFsb2codCl9OyQuZWZmZWN0cyYmKCQuZWZmZWN0cy5lZmZlY3RbaV18fCQuZWZmZWN0c1tpXSk/dC5kcERpdi5oaWRlKGksJC5kYXRlcGlja2VyLl9nZXQodCxcInNob3dPcHRpb25zXCIpLHMsbik6dC5kcERpdltcInNsaWRlRG93blwiPT1pP1wic2xpZGVVcFwiOlwiZmFkZUluXCI9PWk/XCJmYWRlT3V0XCI6XCJoaWRlXCJdKGk/czpudWxsLG4pLGl8fG4oKSx0aGlzLl9kYXRlcGlja2VyU2hvd2luZz0hMTt2YXIgYT10aGlzLl9nZXQodCxcIm9uQ2xvc2VcIik7YSYmYS5hcHBseSh0LmlucHV0P3QuaW5wdXRbMF06bnVsbCxbdC5pbnB1dD90LmlucHV0LnZhbCgpOlwiXCIsdF0pLHRoaXMuX2xhc3RJbnB1dD1udWxsLHRoaXMuX2luRGlhbG9nJiYodGhpcy5fZGlhbG9nSW5wdXQuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsbGVmdDpcIjBcIix0b3A6XCItMTAwcHhcIn0pLCQuYmxvY2tVSSYmKCQudW5ibG9ja1VJKCksJChcImJvZHlcIikuYXBwZW5kKHRoaXMuZHBEaXYpKSksdGhpcy5faW5EaWFsb2c9ITF9fSxfdGlkeURpYWxvZzpmdW5jdGlvbihlKXtlLmRwRGl2LnJlbW92ZUNsYXNzKHRoaXMuX2RpYWxvZ0NsYXNzKS51bmJpbmQoXCIudWktZGF0ZXBpY2tlci1jYWxlbmRhclwiKX0sX2NoZWNrRXh0ZXJuYWxDbGljazpmdW5jdGlvbihlKXtpZigkLmRhdGVwaWNrZXIuX2N1ckluc3Qpe3ZhciB0PSQoZS50YXJnZXQpLGk9JC5kYXRlcGlja2VyLl9nZXRJbnN0KHRbMF0pOyh0WzBdLmlkIT0kLmRhdGVwaWNrZXIuX21haW5EaXZJZCYmMD09dC5wYXJlbnRzKFwiI1wiKyQuZGF0ZXBpY2tlci5fbWFpbkRpdklkKS5sZW5ndGgmJiF0Lmhhc0NsYXNzKCQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUpJiYhdC5jbG9zZXN0KFwiLlwiKyQuZGF0ZXBpY2tlci5fdHJpZ2dlckNsYXNzKS5sZW5ndGgmJiQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJighJC5kYXRlcGlja2VyLl9pbkRpYWxvZ3x8ISQuYmxvY2tVSSl8fHQuaGFzQ2xhc3MoJC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSkmJiQuZGF0ZXBpY2tlci5fY3VySW5zdCE9aSkmJiQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKX19LF9hZGp1c3REYXRlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz0kKGUpLG49dGhpcy5fZ2V0SW5zdChzWzBdKTt0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihzWzBdKXx8KHRoaXMuX2FkanVzdEluc3REYXRlKG4sdCsoXCJNXCI9PWk/dGhpcy5fZ2V0KG4sXCJzaG93Q3VycmVudEF0UG9zXCIpOjApLGkpLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIobikpfSxfZ290b1RvZGF5OmZ1bmN0aW9uKGUpe3ZhciB0PSQoZSksaT10aGlzLl9nZXRJbnN0KHRbMF0pO2lmKHRoaXMuX2dldChpLFwiZ290b0N1cnJlbnRcIikmJmkuY3VycmVudERheSlpLnNlbGVjdGVkRGF5PWkuY3VycmVudERheSxpLmRyYXdNb250aD1pLnNlbGVjdGVkTW9udGg9aS5jdXJyZW50TW9udGgsaS5kcmF3WWVhcj1pLnNlbGVjdGVkWWVhcj1pLmN1cnJlbnRZZWFyO2Vsc2V7dmFyIHM9bmV3IERhdGU7aS5zZWxlY3RlZERheT1zLmdldERhdGUoKSxpLmRyYXdNb250aD1pLnNlbGVjdGVkTW9udGg9cy5nZXRNb250aCgpLGkuZHJhd1llYXI9aS5zZWxlY3RlZFllYXI9cy5nZXRGdWxsWWVhcigpfXRoaXMuX25vdGlmeUNoYW5nZShpKSx0aGlzLl9hZGp1c3REYXRlKHQpfSxfc2VsZWN0TW9udGhZZWFyOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz0kKGUpLG49dGhpcy5fZ2V0SW5zdChzWzBdKTtuW1wic2VsZWN0ZWRcIisoXCJNXCI9PWk/XCJNb250aFwiOlwiWWVhclwiKV09bltcImRyYXdcIisoXCJNXCI9PWk/XCJNb250aFwiOlwiWWVhclwiKV09cGFyc2VJbnQodC5vcHRpb25zW3Quc2VsZWN0ZWRJbmRleF0udmFsdWUsMTApLHRoaXMuX25vdGlmeUNoYW5nZShuKSx0aGlzLl9hZGp1c3REYXRlKHMpfSxfc2VsZWN0RGF5OmZ1bmN0aW9uKGUsdCxpLHMpe3ZhciBuPSQoZSk7aWYoISQocykuaGFzQ2xhc3ModGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MpJiYhdGhpcy5faXNEaXNhYmxlZERhdGVwaWNrZXIoblswXSkpe3ZhciBhPXRoaXMuX2dldEluc3QoblswXSk7YS5zZWxlY3RlZERheT1hLmN1cnJlbnREYXk9JChcImFcIixzKS5odG1sKCksYS5zZWxlY3RlZE1vbnRoPWEuY3VycmVudE1vbnRoPXQsYS5zZWxlY3RlZFllYXI9YS5jdXJyZW50WWVhcj1pLHRoaXMuX3NlbGVjdERhdGUoZSx0aGlzLl9mb3JtYXREYXRlKGEsYS5jdXJyZW50RGF5LGEuY3VycmVudE1vbnRoLGEuY3VycmVudFllYXIpKX19LF9jbGVhckRhdGU6ZnVuY3Rpb24oZSl7dmFyIHQ9JChlKTt0aGlzLl9nZXRJbnN0KHRbMF0pLHRoaXMuX3NlbGVjdERhdGUodCxcIlwiKX0sX3NlbGVjdERhdGU6ZnVuY3Rpb24oZSx0KXt2YXIgaT0kKGUpLHM9dGhpcy5fZ2V0SW5zdChpWzBdKTt0PW51bGwhPXQ/dDp0aGlzLl9mb3JtYXREYXRlKHMpLHMuaW5wdXQmJnMuaW5wdXQudmFsKHQpLHRoaXMuX3VwZGF0ZUFsdGVybmF0ZShzKTt2YXIgbj10aGlzLl9nZXQocyxcIm9uU2VsZWN0XCIpO24/bi5hcHBseShzLmlucHV0P3MuaW5wdXRbMF06bnVsbCxbdCxzXSk6cy5pbnB1dCYmcy5pbnB1dC50cmlnZ2VyKFwiY2hhbmdlXCIpLHMuaW5saW5lP3RoaXMuX3VwZGF0ZURhdGVwaWNrZXIocyk6KHRoaXMuX2hpZGVEYXRlcGlja2VyKCksdGhpcy5fbGFzdElucHV0PXMuaW5wdXRbMF0sXCJvYmplY3RcIiE9dHlwZW9mIHMuaW5wdXRbMF0mJnMuaW5wdXQuZm9jdXMoKSx0aGlzLl9sYXN0SW5wdXQ9bnVsbCl9LF91cGRhdGVBbHRlcm5hdGU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2V0KGUsXCJhbHRGaWVsZFwiKTtpZih0KXt2YXIgaT10aGlzLl9nZXQoZSxcImFsdEZvcm1hdFwiKXx8dGhpcy5fZ2V0KGUsXCJkYXRlRm9ybWF0XCIpLHM9dGhpcy5fZ2V0RGF0ZShlKSxuPXRoaXMuZm9ybWF0RGF0ZShpLHMsdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGUpKTskKHQpLmVhY2goZnVuY3Rpb24oKXskKHRoaXMpLnZhbChuKX0pfX0sbm9XZWVrZW5kczpmdW5jdGlvbihlKXt2YXIgdD1lLmdldERheSgpO3JldHVyblt0PjAmJjY+dCxcIlwiXX0saXNvODYwMVdlZWs6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IERhdGUoZS5nZXRUaW1lKCkpO3Quc2V0RGF0ZSh0LmdldERhdGUoKSs0LSh0LmdldERheSgpfHw3KSk7dmFyIGk9dC5nZXRUaW1lKCk7cmV0dXJuIHQuc2V0TW9udGgoMCksdC5zZXREYXRlKDEpLE1hdGguZmxvb3IoTWF0aC5yb3VuZCgoaS10KS84NjRlNSkvNykrMX0scGFyc2VEYXRlOmZ1bmN0aW9uKGUsdCxpKXtpZihudWxsPT1lfHxudWxsPT10KXRocm93XCJJbnZhbGlkIGFyZ3VtZW50c1wiO2lmKHQ9XCJvYmplY3RcIj09dHlwZW9mIHQ/XCJcIit0OnQrXCJcIixcIlwiPT10KXJldHVybiBudWxsO3ZhciBzPShpP2kuc2hvcnRZZWFyQ3V0b2ZmOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5zaG9ydFllYXJDdXRvZmY7cz1cInN0cmluZ1wiIT10eXBlb2Ygcz9zOihuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSUxMDArcGFyc2VJbnQocywxMCk7Zm9yKHZhciBuPShpP2kuZGF5TmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXNTaG9ydCxhPShpP2kuZGF5TmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLG89KGk/aS5tb250aE5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCxyPShpP2kubW9udGhOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lcyxoPS0xLGw9LTEsdT0tMSxkPS0xLGM9ITEscD1mdW5jdGlvbih0KXt2YXIgaT1lLmxlbmd0aD5fKzEmJmUuY2hhckF0KF8rMSk9PXQ7cmV0dXJuIGkmJl8rKyxpfSxmPWZ1bmN0aW9uKGUpe3ZhciBpPXAoZSkscz1cIkBcIj09ZT8xNDpcIiFcIj09ZT8yMDpcInlcIj09ZSYmaT80Olwib1wiPT1lPzM6MixuPVJlZ0V4cChcIl5cXFxcZHsxLFwiK3MrXCJ9XCIpLGE9dC5zdWJzdHJpbmcodikubWF0Y2gobik7aWYoIWEpdGhyb3dcIk1pc3NpbmcgbnVtYmVyIGF0IHBvc2l0aW9uIFwiK3Y7cmV0dXJuIHYrPWFbMF0ubGVuZ3RoLHBhcnNlSW50KGFbMF0sMTApfSxtPWZ1bmN0aW9uKGUsaSxzKXt2YXIgbj0kLm1hcChwKGUpP3M6aSxmdW5jdGlvbihlLHQpe3JldHVybltbdCxlXV19KS5zb3J0KGZ1bmN0aW9uKGUsdCl7cmV0dXJuLShlWzFdLmxlbmd0aC10WzFdLmxlbmd0aCl9KSxhPS0xO2lmKCQuZWFjaChuLGZ1bmN0aW9uKGUsaSl7dmFyIHM9aVsxXTtyZXR1cm4gdC5zdWJzdHIodixzLmxlbmd0aCkudG9Mb3dlckNhc2UoKT09cy50b0xvd2VyQ2FzZSgpPyhhPWlbMF0sdis9cy5sZW5ndGgsITEpOnVuZGVmaW5lZH0pLC0xIT1hKXJldHVybiBhKzE7dGhyb3dcIlVua25vd24gbmFtZSBhdCBwb3NpdGlvbiBcIit2fSxnPWZ1bmN0aW9uKCl7aWYodC5jaGFyQXQodikhPWUuY2hhckF0KF8pKXRocm93XCJVbmV4cGVjdGVkIGxpdGVyYWwgYXQgcG9zaXRpb24gXCIrdjt2Kyt9LHY9MCxfPTA7ZS5sZW5ndGg+XztfKyspaWYoYylcIidcIiE9ZS5jaGFyQXQoXyl8fHAoXCInXCIpP2coKTpjPSExO2Vsc2Ugc3dpdGNoKGUuY2hhckF0KF8pKXtjYXNlXCJkXCI6dT1mKFwiZFwiKTticmVhaztjYXNlXCJEXCI6bShcIkRcIixuLGEpO2JyZWFrO2Nhc2VcIm9cIjpkPWYoXCJvXCIpO2JyZWFrO2Nhc2VcIm1cIjpsPWYoXCJtXCIpO2JyZWFrO2Nhc2VcIk1cIjpsPW0oXCJNXCIsbyxyKTticmVhaztjYXNlXCJ5XCI6aD1mKFwieVwiKTticmVhaztjYXNlXCJAXCI6dmFyIHk9bmV3IERhdGUoZihcIkBcIikpO2g9eS5nZXRGdWxsWWVhcigpLGw9eS5nZXRNb250aCgpKzEsdT15LmdldERhdGUoKTticmVhaztjYXNlXCIhXCI6dmFyIHk9bmV3IERhdGUoKGYoXCIhXCIpLXRoaXMuX3RpY2tzVG8xOTcwKS8xZTQpO2g9eS5nZXRGdWxsWWVhcigpLGw9eS5nZXRNb250aCgpKzEsdT15LmdldERhdGUoKTticmVhaztjYXNlXCInXCI6cChcIidcIik/ZygpOmM9ITA7YnJlYWs7ZGVmYXVsdDpnKCl9aWYodC5sZW5ndGg+dil7dmFyIGI9dC5zdWJzdHIodik7aWYoIS9eXFxzKy8udGVzdChiKSl0aHJvd1wiRXh0cmEvdW5wYXJzZWQgY2hhcmFjdGVycyBmb3VuZCBpbiBkYXRlOiBcIitifWlmKC0xPT1oP2g9KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpOjEwMD5oJiYoaCs9KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSUxMDArKHM+PWg/MDotMTAwKSksZD4tMSlmb3IobD0xLHU9ZDs7KXt2YXIgeD10aGlzLl9nZXREYXlzSW5Nb250aChoLGwtMSk7aWYoeD49dSlicmVhaztsKyssdS09eH12YXIgeT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShoLGwtMSx1KSk7aWYoeS5nZXRGdWxsWWVhcigpIT1ofHx5LmdldE1vbnRoKCkrMSE9bHx8eS5nZXREYXRlKCkhPXUpdGhyb3dcIkludmFsaWQgZGF0ZVwiO3JldHVybiB5fSxBVE9NOlwieXktbW0tZGRcIixDT09LSUU6XCJELCBkZCBNIHl5XCIsSVNPXzg2MDE6XCJ5eS1tbS1kZFwiLFJGQ184MjI6XCJELCBkIE0geVwiLFJGQ184NTA6XCJERCwgZGQtTS15XCIsUkZDXzEwMzY6XCJELCBkIE0geVwiLFJGQ18xMTIzOlwiRCwgZCBNIHl5XCIsUkZDXzI4MjI6XCJELCBkIE0geXlcIixSU1M6XCJELCBkIE0geVwiLFRJQ0tTOlwiIVwiLFRJTUVTVEFNUDpcIkBcIixXM0M6XCJ5eS1tbS1kZFwiLF90aWNrc1RvMTk3MDoxZTcqNjAqNjAqMjQqKDcxODY4NStNYXRoLmZsb29yKDQ5Mi41KS1NYXRoLmZsb29yKDE5LjcpK01hdGguZmxvb3IoNC45MjUpKSxmb3JtYXREYXRlOmZ1bmN0aW9uKGUsdCxpKXtpZighdClyZXR1cm5cIlwiO3ZhciBzPShpP2kuZGF5TmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXNTaG9ydCxuPShpP2kuZGF5TmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLGE9KGk/aS5tb250aE5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCxvPShpP2kubW9udGhOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lcyxyPWZ1bmN0aW9uKHQpe3ZhciBpPWUubGVuZ3RoPmMrMSYmZS5jaGFyQXQoYysxKT09dDtyZXR1cm4gaSYmYysrLGl9LGg9ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPVwiXCIrdDtpZihyKGUpKWZvcig7aT5zLmxlbmd0aDspcz1cIjBcIitzO3JldHVybiBzfSxsPWZ1bmN0aW9uKGUsdCxpLHMpe3JldHVybiByKGUpP3NbdF06aVt0XX0sdT1cIlwiLGQ9ITE7aWYodClmb3IodmFyIGM9MDtlLmxlbmd0aD5jO2MrKylpZihkKVwiJ1wiIT1lLmNoYXJBdChjKXx8cihcIidcIik/dSs9ZS5jaGFyQXQoYyk6ZD0hMTtlbHNlIHN3aXRjaChlLmNoYXJBdChjKSl7Y2FzZVwiZFwiOnUrPWgoXCJkXCIsdC5nZXREYXRlKCksMik7YnJlYWs7Y2FzZVwiRFwiOnUrPWwoXCJEXCIsdC5nZXREYXkoKSxzLG4pO2JyZWFrO2Nhc2VcIm9cIjp1Kz1oKFwib1wiLE1hdGgucm91bmQoKG5ldyBEYXRlKHQuZ2V0RnVsbFllYXIoKSx0LmdldE1vbnRoKCksdC5nZXREYXRlKCkpLmdldFRpbWUoKS1uZXcgRGF0ZSh0LmdldEZ1bGxZZWFyKCksMCwwKS5nZXRUaW1lKCkpLzg2NGU1KSwzKTticmVhaztjYXNlXCJtXCI6dSs9aChcIm1cIix0LmdldE1vbnRoKCkrMSwyKTticmVhaztjYXNlXCJNXCI6dSs9bChcIk1cIix0LmdldE1vbnRoKCksYSxvKTticmVhaztjYXNlXCJ5XCI6dSs9cihcInlcIik/dC5nZXRGdWxsWWVhcigpOigxMD50LmdldFllYXIoKSUxMDA/XCIwXCI6XCJcIikrdC5nZXRZZWFyKCklMTAwO2JyZWFrO2Nhc2VcIkBcIjp1Kz10LmdldFRpbWUoKTticmVhaztjYXNlXCIhXCI6dSs9MWU0KnQuZ2V0VGltZSgpK3RoaXMuX3RpY2tzVG8xOTcwO2JyZWFrO2Nhc2VcIidcIjpyKFwiJ1wiKT91Kz1cIidcIjpkPSEwO2JyZWFrO2RlZmF1bHQ6dSs9ZS5jaGFyQXQoYyl9cmV0dXJuIHV9LF9wb3NzaWJsZUNoYXJzOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1cIlwiLGk9ITEscz1mdW5jdGlvbih0KXt2YXIgaT1lLmxlbmd0aD5uKzEmJmUuY2hhckF0KG4rMSk9PXQ7cmV0dXJuIGkmJm4rKyxpfSxuPTA7ZS5sZW5ndGg+bjtuKyspaWYoaSlcIidcIiE9ZS5jaGFyQXQobil8fHMoXCInXCIpP3QrPWUuY2hhckF0KG4pOmk9ITE7ZWxzZSBzd2l0Y2goZS5jaGFyQXQobikpe2Nhc2VcImRcIjpjYXNlXCJtXCI6Y2FzZVwieVwiOmNhc2VcIkBcIjp0Kz1cIjAxMjM0NTY3ODlcIjticmVhaztjYXNlXCJEXCI6Y2FzZVwiTVwiOnJldHVybiBudWxsO2Nhc2VcIidcIjpzKFwiJ1wiKT90Kz1cIidcIjppPSEwO2JyZWFrO2RlZmF1bHQ6dCs9ZS5jaGFyQXQobil9cmV0dXJuIHR9LF9nZXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5zZXR0aW5nc1t0XSE9PXVuZGVmaW5lZD9lLnNldHRpbmdzW3RdOnRoaXMuX2RlZmF1bHRzW3RdfSxfc2V0RGF0ZUZyb21GaWVsZDpmdW5jdGlvbihlLHQpe2lmKGUuaW5wdXQudmFsKCkhPWUubGFzdFZhbCl7dmFyIGkscyxuPXRoaXMuX2dldChlLFwiZGF0ZUZvcm1hdFwiKSxhPWUubGFzdFZhbD1lLmlucHV0P2UuaW5wdXQudmFsKCk6bnVsbDtpPXM9dGhpcy5fZ2V0RGVmYXVsdERhdGUoZSk7dmFyIG89dGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGUpO3RyeXtpPXRoaXMucGFyc2VEYXRlKG4sYSxvKXx8c31jYXRjaChyKXt0aGlzLmxvZyhyKSxhPXQ/XCJcIjphfWUuc2VsZWN0ZWREYXk9aS5nZXREYXRlKCksZS5kcmF3TW9udGg9ZS5zZWxlY3RlZE1vbnRoPWkuZ2V0TW9udGgoKSxlLmRyYXdZZWFyPWUuc2VsZWN0ZWRZZWFyPWkuZ2V0RnVsbFllYXIoKSxlLmN1cnJlbnREYXk9YT9pLmdldERhdGUoKTowLGUuY3VycmVudE1vbnRoPWE/aS5nZXRNb250aCgpOjAsZS5jdXJyZW50WWVhcj1hP2kuZ2V0RnVsbFllYXIoKTowLHRoaXMuX2FkanVzdEluc3REYXRlKGUpfX0sX2dldERlZmF1bHREYXRlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9yZXN0cmljdE1pbk1heChlLHRoaXMuX2RldGVybWluZURhdGUoZSx0aGlzLl9nZXQoZSxcImRlZmF1bHREYXRlXCIpLG5ldyBEYXRlKSl9LF9kZXRlcm1pbmVEYXRlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz1mdW5jdGlvbihlKXt2YXIgdD1uZXcgRGF0ZTtyZXR1cm4gdC5zZXREYXRlKHQuZ2V0RGF0ZSgpK2UpLHR9LG49ZnVuY3Rpb24odCl7dHJ5e3JldHVybiAkLmRhdGVwaWNrZXIucGFyc2VEYXRlKCQuZGF0ZXBpY2tlci5fZ2V0KGUsXCJkYXRlRm9ybWF0XCIpLHQsJC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoZSkpfWNhdGNoKGkpe31mb3IodmFyIHM9KHQudG9Mb3dlckNhc2UoKS5tYXRjaCgvXmMvKT8kLmRhdGVwaWNrZXIuX2dldERhdGUoZSk6bnVsbCl8fG5ldyBEYXRlLG49cy5nZXRGdWxsWWVhcigpLGE9cy5nZXRNb250aCgpLG89cy5nZXREYXRlKCkscj0vKFsrLV0/WzAtOV0rKVxccyooZHxEfHd8V3xtfE18eXxZKT8vZyxoPXIuZXhlYyh0KTtoOyl7c3dpdGNoKGhbMl18fFwiZFwiKXtjYXNlXCJkXCI6Y2FzZVwiRFwiOm8rPXBhcnNlSW50KGhbMV0sMTApO2JyZWFrO2Nhc2VcIndcIjpjYXNlXCJXXCI6bys9NypwYXJzZUludChoWzFdLDEwKTticmVhaztjYXNlXCJtXCI6Y2FzZVwiTVwiOmErPXBhcnNlSW50KGhbMV0sMTApLG89TWF0aC5taW4obywkLmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKG4sYSkpO2JyZWFrO2Nhc2VcInlcIjpjYXNlXCJZXCI6bis9cGFyc2VJbnQoaFsxXSwxMCksbz1NYXRoLm1pbihvLCQuZGF0ZXBpY2tlci5fZ2V0RGF5c0luTW9udGgobixhKSl9aD1yLmV4ZWModCl9cmV0dXJuIG5ldyBEYXRlKG4sYSxvKX0sYT1udWxsPT10fHxcIlwiPT09dD9pOlwic3RyaW5nXCI9PXR5cGVvZiB0P24odCk6XCJudW1iZXJcIj09dHlwZW9mIHQ/aXNOYU4odCk/aTpzKHQpOm5ldyBEYXRlKHQuZ2V0VGltZSgpKTtyZXR1cm4gYT1hJiZcIkludmFsaWQgRGF0ZVwiPT1cIlwiK2E/aTphLGEmJihhLnNldEhvdXJzKDApLGEuc2V0TWludXRlcygwKSxhLnNldFNlY29uZHMoMCksYS5zZXRNaWxsaXNlY29uZHMoMCkpLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KGEpfSxfZGF5bGlnaHRTYXZpbmdBZGp1c3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGU/KGUuc2V0SG91cnMoZS5nZXRIb3VycygpPjEyP2UuZ2V0SG91cnMoKSsyOjApLGUpOm51bGx9LF9zZXREYXRlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz0hdCxuPWUuc2VsZWN0ZWRNb250aCxhPWUuc2VsZWN0ZWRZZWFyLG89dGhpcy5fcmVzdHJpY3RNaW5NYXgoZSx0aGlzLl9kZXRlcm1pbmVEYXRlKGUsdCxuZXcgRGF0ZSkpO2Uuc2VsZWN0ZWREYXk9ZS5jdXJyZW50RGF5PW8uZ2V0RGF0ZSgpLGUuZHJhd01vbnRoPWUuc2VsZWN0ZWRNb250aD1lLmN1cnJlbnRNb250aD1vLmdldE1vbnRoKCksZS5kcmF3WWVhcj1lLnNlbGVjdGVkWWVhcj1lLmN1cnJlbnRZZWFyPW8uZ2V0RnVsbFllYXIoKSxuPT1lLnNlbGVjdGVkTW9udGgmJmE9PWUuc2VsZWN0ZWRZZWFyfHxpfHx0aGlzLl9ub3RpZnlDaGFuZ2UoZSksdGhpcy5fYWRqdXN0SW5zdERhdGUoZSksZS5pbnB1dCYmZS5pbnB1dC52YWwocz9cIlwiOnRoaXMuX2Zvcm1hdERhdGUoZSkpfSxfZ2V0RGF0ZTpmdW5jdGlvbihlKXt2YXIgdD0hZS5jdXJyZW50WWVhcnx8ZS5pbnB1dCYmXCJcIj09ZS5pbnB1dC52YWwoKT9udWxsOnRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGUuY3VycmVudFllYXIsZS5jdXJyZW50TW9udGgsZS5jdXJyZW50RGF5KSk7cmV0dXJuIHR9LF9hdHRhY2hIYW5kbGVyczpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9nZXQoZSxcInN0ZXBNb250aHNcIiksaT1cIiNcIitlLmlkLnJlcGxhY2UoL1xcXFxcXFxcL2csXCJcXFxcXCIpO2UuZHBEaXYuZmluZChcIltkYXRhLWhhbmRsZXJdXCIpLm1hcChmdW5jdGlvbigpe3ZhciBlPXtwcmV2OmZ1bmN0aW9uKCl7d2luZG93W1wiRFBfalF1ZXJ5X1wiK2RwdXVpZF0uZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShpLC10LFwiTVwiKX0sbmV4dDpmdW5jdGlvbigpe3dpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoaSwrdCxcIk1cIil9LGhpZGU6ZnVuY3Rpb24oKXt3aW5kb3dbXCJEUF9qUXVlcnlfXCIrZHB1dWlkXS5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfSx0b2RheTpmdW5jdGlvbigpe3dpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX2dvdG9Ub2RheShpKX0sc2VsZWN0RGF5OmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX3NlbGVjdERheShpLCt0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtbW9udGhcIiksK3RoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS15ZWFyXCIpLHRoaXMpLCExfSxzZWxlY3RNb250aDpmdW5jdGlvbigpe3JldHVybiB3aW5kb3dbXCJEUF9qUXVlcnlfXCIrZHB1dWlkXS5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIoaSx0aGlzLFwiTVwiKSwhMX0sc2VsZWN0WWVhcjpmdW5jdGlvbigpe3JldHVybiB3aW5kb3dbXCJEUF9qUXVlcnlfXCIrZHB1dWlkXS5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIoaSx0aGlzLFwiWVwiKSwhMX19OyQodGhpcykuYmluZCh0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtZXZlbnRcIiksZVt0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtaGFuZGxlclwiKV0pfSl9LF9nZW5lcmF0ZUhUTUw6ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IERhdGU7dD10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh0LmdldEZ1bGxZZWFyKCksdC5nZXRNb250aCgpLHQuZ2V0RGF0ZSgpKSk7dmFyIGk9dGhpcy5fZ2V0KGUsXCJpc1JUTFwiKSxzPXRoaXMuX2dldChlLFwic2hvd0J1dHRvblBhbmVsXCIpLG49dGhpcy5fZ2V0KGUsXCJoaWRlSWZOb1ByZXZOZXh0XCIpLGE9dGhpcy5fZ2V0KGUsXCJuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0XCIpLG89dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoZSkscj10aGlzLl9nZXQoZSxcInNob3dDdXJyZW50QXRQb3NcIiksaD10aGlzLl9nZXQoZSxcInN0ZXBNb250aHNcIiksbD0xIT1vWzBdfHwxIT1vWzFdLHU9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoZS5jdXJyZW50RGF5P25ldyBEYXRlKGUuY3VycmVudFllYXIsZS5jdXJyZW50TW9udGgsZS5jdXJyZW50RGF5KTpuZXcgRGF0ZSg5OTk5LDksOSkpLGQ9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWluXCIpLGM9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWF4XCIpLHA9ZS5kcmF3TW9udGgtcixmPWUuZHJhd1llYXI7aWYoMD5wJiYocCs9MTIsZi0tKSxjKXt2YXIgbT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShjLmdldEZ1bGxZZWFyKCksYy5nZXRNb250aCgpLW9bMF0qb1sxXSsxLGMuZ2V0RGF0ZSgpKSk7Zm9yKG09ZCYmZD5tP2Q6bTt0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShmLHAsMSkpPm07KXAtLSwwPnAmJihwPTExLGYtLSl9ZS5kcmF3TW9udGg9cCxlLmRyYXdZZWFyPWY7dmFyIGc9dGhpcy5fZ2V0KGUsXCJwcmV2VGV4dFwiKTtnPWE/dGhpcy5mb3JtYXREYXRlKGcsdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZixwLWgsMSkpLHRoaXMuX2dldEZvcm1hdENvbmZpZyhlKSk6Zzt2YXIgdj10aGlzLl9jYW5BZGp1c3RNb250aChlLC0xLGYscCk/JzxhIGNsYXNzPVwidWktZGF0ZXBpY2tlci1wcmV2IHVpLWNvcm5lci1hbGxcIiBkYXRhLWhhbmRsZXI9XCJwcmV2XCIgZGF0YS1ldmVudD1cImNsaWNrXCIgdGl0bGU9XCInK2crJ1wiPjxzcGFuIGNsYXNzPVwidWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0nKyhpP1wiZVwiOlwid1wiKSsnXCI+JytnK1wiPC9zcGFuPjwvYT5cIjpuP1wiXCI6JzxhIGNsYXNzPVwidWktZGF0ZXBpY2tlci1wcmV2IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWRcIiB0aXRsZT1cIicrZysnXCI+PHNwYW4gY2xhc3M9XCJ1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLScrKGk/XCJlXCI6XCJ3XCIpKydcIj4nK2crXCI8L3NwYW4+PC9hPlwiLF89dGhpcy5fZ2V0KGUsXCJuZXh0VGV4dFwiKTtfPWE/dGhpcy5mb3JtYXREYXRlKF8sdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZixwK2gsMSkpLHRoaXMuX2dldEZvcm1hdENvbmZpZyhlKSk6Xzt2YXIgeT10aGlzLl9jYW5BZGp1c3RNb250aChlLDEsZixwKT8nPGEgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbFwiIGRhdGEtaGFuZGxlcj1cIm5leHRcIiBkYXRhLWV2ZW50PVwiY2xpY2tcIiB0aXRsZT1cIicrXysnXCI+PHNwYW4gY2xhc3M9XCJ1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLScrKGk/XCJ3XCI6XCJlXCIpKydcIj4nK18rXCI8L3NwYW4+PC9hPlwiOm4/XCJcIjonPGEgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZFwiIHRpdGxlPVwiJytfKydcIj48c3BhbiBjbGFzcz1cInVpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtJysoaT9cIndcIjpcImVcIikrJ1wiPicrXytcIjwvc3Bhbj48L2E+XCIsYj10aGlzLl9nZXQoZSxcImN1cnJlbnRUZXh0XCIpLHg9dGhpcy5fZ2V0KGUsXCJnb3RvQ3VycmVudFwiKSYmZS5jdXJyZW50RGF5P3U6dDtiPWE/dGhpcy5mb3JtYXREYXRlKGIseCx0aGlzLl9nZXRGb3JtYXRDb25maWcoZSkpOmI7dmFyIHc9ZS5pbmxpbmU/XCJcIjonPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLWNsb3NlIHVpLXN0YXRlLWRlZmF1bHQgdWktcHJpb3JpdHktcHJpbWFyeSB1aS1jb3JuZXItYWxsXCIgZGF0YS1oYW5kbGVyPVwiaGlkZVwiIGRhdGEtZXZlbnQ9XCJjbGlja1wiPicrdGhpcy5fZ2V0KGUsXCJjbG9zZVRleHRcIikrXCI8L2J1dHRvbj5cIixrPXM/JzxkaXYgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgdWktd2lkZ2V0LWNvbnRlbnRcIj4nKyhpP3c6XCJcIikrKHRoaXMuX2lzSW5SYW5nZShlLHgpPyc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInVpLWRhdGVwaWNrZXItY3VycmVudCB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXNlY29uZGFyeSB1aS1jb3JuZXItYWxsXCIgZGF0YS1oYW5kbGVyPVwidG9kYXlcIiBkYXRhLWV2ZW50PVwiY2xpY2tcIj4nK2IrXCI8L2J1dHRvbj5cIjpcIlwiKSsoaT9cIlwiOncpK1wiPC9kaXY+XCI6XCJcIixEPXBhcnNlSW50KHRoaXMuX2dldChlLFwiZmlyc3REYXlcIiksMTApO0Q9aXNOYU4oRCk/MDpEO3ZhciBUPXRoaXMuX2dldChlLFwic2hvd1dlZWtcIiksUz10aGlzLl9nZXQoZSxcImRheU5hbWVzXCIpO3RoaXMuX2dldChlLFwiZGF5TmFtZXNTaG9ydFwiKTt2YXIgTT10aGlzLl9nZXQoZSxcImRheU5hbWVzTWluXCIpLE49dGhpcy5fZ2V0KGUsXCJtb250aE5hbWVzXCIpLEM9dGhpcy5fZ2V0KGUsXCJtb250aE5hbWVzU2hvcnRcIiksUD10aGlzLl9nZXQoZSxcImJlZm9yZVNob3dEYXlcIiksQT10aGlzLl9nZXQoZSxcInNob3dPdGhlck1vbnRoc1wiKSxJPXRoaXMuX2dldChlLFwic2VsZWN0T3RoZXJNb250aHNcIik7dGhpcy5fZ2V0KGUsXCJjYWxjdWxhdGVXZWVrXCIpfHx0aGlzLmlzbzg2MDFXZWVrO2Zvcih2YXIgSD10aGlzLl9nZXREZWZhdWx0RGF0ZShlKSx6PVwiXCIsRj0wO29bMF0+RjtGKyspe3ZhciBFPVwiXCI7dGhpcy5tYXhSb3dzPTQ7Zm9yKHZhciBPPTA7b1sxXT5PO08rKyl7dmFyIFc9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZixwLGUuc2VsZWN0ZWREYXkpKSxqPVwiIHVpLWNvcm5lci1hbGxcIixMPVwiXCI7aWYobCl7aWYoTCs9JzxkaXYgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLWdyb3VwJyxvWzFdPjEpc3dpdGNoKE8pe2Nhc2UgMDpMKz1cIiB1aS1kYXRlcGlja2VyLWdyb3VwLWZpcnN0XCIsaj1cIiB1aS1jb3JuZXItXCIrKGk/XCJyaWdodFwiOlwibGVmdFwiKTticmVhaztjYXNlIG9bMV0tMTpMKz1cIiB1aS1kYXRlcGlja2VyLWdyb3VwLWxhc3RcIixqPVwiIHVpLWNvcm5lci1cIisoaT9cImxlZnRcIjpcInJpZ2h0XCIpO2JyZWFrO2RlZmF1bHQ6TCs9XCIgdWktZGF0ZXBpY2tlci1ncm91cC1taWRkbGVcIixqPVwiXCJ9TCs9J1wiPid9TCs9JzxkaXYgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLWhlYWRlciB1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeCcraisnXCI+JysoL2FsbHxsZWZ0Ly50ZXN0KGopJiYwPT1GP2k/eTp2OlwiXCIpKygvYWxsfHJpZ2h0Ly50ZXN0KGopJiYwPT1GP2k/djp5OlwiXCIpK3RoaXMuX2dlbmVyYXRlTW9udGhZZWFySGVhZGVyKGUscCxmLGQsYyxGPjB8fE8+MCxOLEMpKyc8L2Rpdj48dGFibGUgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLWNhbGVuZGFyXCI+PHRoZWFkPicrXCI8dHI+XCI7Zm9yKHZhciBSPVQ/Jzx0aCBjbGFzcz1cInVpLWRhdGVwaWNrZXItd2Vlay1jb2xcIj4nK3RoaXMuX2dldChlLFwid2Vla0hlYWRlclwiKStcIjwvdGg+XCI6XCJcIixZPTA7Nz5ZO1krKyl7dmFyIEI9KFkrRCklNztSKz1cIjx0aFwiKygoWStEKzYpJTc+PTU/JyBjbGFzcz1cInVpLWRhdGVwaWNrZXItd2Vlay1lbmRcIic6XCJcIikrXCI+XCIrJzxzcGFuIHRpdGxlPVwiJytTW0JdKydcIj4nK01bQl0rXCI8L3NwYW4+PC90aD5cIn1MKz1SK1wiPC90cj48L3RoZWFkPjx0Ym9keT5cIjt2YXIgSj10aGlzLl9nZXREYXlzSW5Nb250aChmLHApO2Y9PWUuc2VsZWN0ZWRZZWFyJiZwPT1lLnNlbGVjdGVkTW9udGgmJihlLnNlbGVjdGVkRGF5PU1hdGgubWluKGUuc2VsZWN0ZWREYXksSikpO3ZhciBLPSh0aGlzLl9nZXRGaXJzdERheU9mTW9udGgoZixwKS1EKzcpJTcsVj1NYXRoLmNlaWwoKEsrSikvNyksVT1sP3RoaXMubWF4Um93cz5WP3RoaXMubWF4Um93czpWOlY7dGhpcy5tYXhSb3dzPVU7Zm9yKHZhciBxPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGYscCwxLUspKSxRPTA7VT5RO1ErKyl7TCs9XCI8dHI+XCI7Zm9yKHZhciBHPVQ/Jzx0ZCBjbGFzcz1cInVpLWRhdGVwaWNrZXItd2Vlay1jb2xcIj4nK3RoaXMuX2dldChlLFwiY2FsY3VsYXRlV2Vla1wiKShxKStcIjwvdGQ+XCI6XCJcIixZPTA7Nz5ZO1krKyl7dmFyIFg9UD9QLmFwcGx5KGUuaW5wdXQ/ZS5pbnB1dFswXTpudWxsLFtxXSk6WyEwLFwiXCJdLFo9cS5nZXRNb250aCgpIT1wLGV0PVomJiFJfHwhWFswXXx8ZCYmZD5xfHxjJiZxPmM7Rys9Jzx0ZCBjbGFzcz1cIicrKChZK0QrNiklNz49NT9cIiB1aS1kYXRlcGlja2VyLXdlZWstZW5kXCI6XCJcIikrKFo/XCIgdWktZGF0ZXBpY2tlci1vdGhlci1tb250aFwiOlwiXCIpKyhxLmdldFRpbWUoKT09Vy5nZXRUaW1lKCkmJnA9PWUuc2VsZWN0ZWRNb250aCYmZS5fa2V5RXZlbnR8fEguZ2V0VGltZSgpPT1xLmdldFRpbWUoKSYmSC5nZXRUaW1lKCk9PVcuZ2V0VGltZSgpP1wiIFwiK3RoaXMuX2RheU92ZXJDbGFzczpcIlwiKSsoZXQ/XCIgXCIrdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MrXCIgdWktc3RhdGUtZGlzYWJsZWRcIjpcIlwiKSsoWiYmIUE/XCJcIjpcIiBcIitYWzFdKyhxLmdldFRpbWUoKT09dS5nZXRUaW1lKCk/XCIgXCIrdGhpcy5fY3VycmVudENsYXNzOlwiXCIpKyhxLmdldFRpbWUoKT09dC5nZXRUaW1lKCk/XCIgdWktZGF0ZXBpY2tlci10b2RheVwiOlwiXCIpKSsnXCInKyhaJiYhQXx8IVhbMl0/XCJcIjonIHRpdGxlPVwiJytYWzJdKydcIicpKyhldD9cIlwiOicgZGF0YS1oYW5kbGVyPVwic2VsZWN0RGF5XCIgZGF0YS1ldmVudD1cImNsaWNrXCIgZGF0YS1tb250aD1cIicrcS5nZXRNb250aCgpKydcIiBkYXRhLXllYXI9XCInK3EuZ2V0RnVsbFllYXIoKSsnXCInKStcIj5cIisoWiYmIUE/XCImI3hhMDtcIjpldD8nPHNwYW4gY2xhc3M9XCJ1aS1zdGF0ZS1kZWZhdWx0XCI+JytxLmdldERhdGUoKStcIjwvc3Bhbj5cIjonPGEgY2xhc3M9XCJ1aS1zdGF0ZS1kZWZhdWx0JysocS5nZXRUaW1lKCk9PXQuZ2V0VGltZSgpP1wiIHVpLXN0YXRlLWhpZ2hsaWdodFwiOlwiXCIpKyhxLmdldFRpbWUoKT09dS5nZXRUaW1lKCk/XCIgdWktc3RhdGUtYWN0aXZlXCI6XCJcIikrKFo/XCIgdWktcHJpb3JpdHktc2Vjb25kYXJ5XCI6XCJcIikrJ1wiIGhyZWY9XCIjXCI+JytxLmdldERhdGUoKStcIjwvYT5cIikrXCI8L3RkPlwiLHEuc2V0RGF0ZShxLmdldERhdGUoKSsxKSxxPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KHEpXG59TCs9RytcIjwvdHI+XCJ9cCsrLHA+MTEmJihwPTAsZisrKSxMKz1cIjwvdGJvZHk+PC90YWJsZT5cIisobD9cIjwvZGl2PlwiKyhvWzBdPjAmJk89PW9bMV0tMT8nPGRpdiBjbGFzcz1cInVpLWRhdGVwaWNrZXItcm93LWJyZWFrXCI+PC9kaXY+JzpcIlwiKTpcIlwiKSxFKz1MfXorPUV9cmV0dXJuIHorPWsrKCQudWkuaWU2JiYhZS5pbmxpbmU/JzxpZnJhbWUgc3JjPVwiamF2YXNjcmlwdDpmYWxzZTtcIiBjbGFzcz1cInVpLWRhdGVwaWNrZXItY292ZXJcIiBmcmFtZWJvcmRlcj1cIjBcIj48L2lmcmFtZT4nOlwiXCIpLGUuX2tleUV2ZW50PSExLHp9LF9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlcjpmdW5jdGlvbihlLHQsaSxzLG4sYSxvLHIpe3ZhciBoPXRoaXMuX2dldChlLFwiY2hhbmdlTW9udGhcIiksbD10aGlzLl9nZXQoZSxcImNoYW5nZVllYXJcIiksdT10aGlzLl9nZXQoZSxcInNob3dNb250aEFmdGVyWWVhclwiKSxkPSc8ZGl2IGNsYXNzPVwidWktZGF0ZXBpY2tlci10aXRsZVwiPicsYz1cIlwiO2lmKGF8fCFoKWMrPSc8c3BhbiBjbGFzcz1cInVpLWRhdGVwaWNrZXItbW9udGhcIj4nK29bdF0rXCI8L3NwYW4+XCI7ZWxzZXt2YXIgcD1zJiZzLmdldEZ1bGxZZWFyKCk9PWksZj1uJiZuLmdldEZ1bGxZZWFyKCk9PWk7Yys9JzxzZWxlY3QgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLW1vbnRoXCIgZGF0YS1oYW5kbGVyPVwic2VsZWN0TW9udGhcIiBkYXRhLWV2ZW50PVwiY2hhbmdlXCI+Jztmb3IodmFyIG09MDsxMj5tO20rKykoIXB8fG0+PXMuZ2V0TW9udGgoKSkmJighZnx8bi5nZXRNb250aCgpPj1tKSYmKGMrPSc8b3B0aW9uIHZhbHVlPVwiJyttKydcIicrKG09PXQ/JyBzZWxlY3RlZD1cInNlbGVjdGVkXCInOlwiXCIpK1wiPlwiK3JbbV0rXCI8L29wdGlvbj5cIik7Yys9XCI8L3NlbGVjdD5cIn1pZih1fHwoZCs9YysoIWEmJmgmJmw/XCJcIjpcIiYjeGEwO1wiKSksIWUueWVhcnNodG1sKWlmKGUueWVhcnNodG1sPVwiXCIsYXx8IWwpZCs9JzxzcGFuIGNsYXNzPVwidWktZGF0ZXBpY2tlci15ZWFyXCI+JytpK1wiPC9zcGFuPlwiO2Vsc2V7dmFyIGc9dGhpcy5fZ2V0KGUsXCJ5ZWFyUmFuZ2VcIikuc3BsaXQoXCI6XCIpLHY9KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpLF89ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5tYXRjaCgvY1srLV0uKi8pP2krcGFyc2VJbnQoZS5zdWJzdHJpbmcoMSksMTApOmUubWF0Y2goL1srLV0uKi8pP3YrcGFyc2VJbnQoZSwxMCk6cGFyc2VJbnQoZSwxMCk7cmV0dXJuIGlzTmFOKHQpP3Y6dH0seT1fKGdbMF0pLGI9TWF0aC5tYXgoeSxfKGdbMV18fFwiXCIpKTtmb3IoeT1zP01hdGgubWF4KHkscy5nZXRGdWxsWWVhcigpKTp5LGI9bj9NYXRoLm1pbihiLG4uZ2V0RnVsbFllYXIoKSk6YixlLnllYXJzaHRtbCs9JzxzZWxlY3QgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLXllYXJcIiBkYXRhLWhhbmRsZXI9XCJzZWxlY3RZZWFyXCIgZGF0YS1ldmVudD1cImNoYW5nZVwiPic7Yj49eTt5KyspZS55ZWFyc2h0bWwrPSc8b3B0aW9uIHZhbHVlPVwiJyt5KydcIicrKHk9PWk/JyBzZWxlY3RlZD1cInNlbGVjdGVkXCInOlwiXCIpK1wiPlwiK3krXCI8L29wdGlvbj5cIjtlLnllYXJzaHRtbCs9XCI8L3NlbGVjdD5cIixkKz1lLnllYXJzaHRtbCxlLnllYXJzaHRtbD1udWxsfXJldHVybiBkKz10aGlzLl9nZXQoZSxcInllYXJTdWZmaXhcIiksdSYmKGQrPSghYSYmaCYmbD9cIlwiOlwiJiN4YTA7XCIpK2MpLGQrPVwiPC9kaXY+XCJ9LF9hZGp1c3RJbnN0RGF0ZTpmdW5jdGlvbihlLHQsaSl7dmFyIHM9ZS5kcmF3WWVhcisoXCJZXCI9PWk/dDowKSxuPWUuZHJhd01vbnRoKyhcIk1cIj09aT90OjApLGE9TWF0aC5taW4oZS5zZWxlY3RlZERheSx0aGlzLl9nZXREYXlzSW5Nb250aChzLG4pKSsoXCJEXCI9PWk/dDowKSxvPXRoaXMuX3Jlc3RyaWN0TWluTWF4KGUsdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUocyxuLGEpKSk7ZS5zZWxlY3RlZERheT1vLmdldERhdGUoKSxlLmRyYXdNb250aD1lLnNlbGVjdGVkTW9udGg9by5nZXRNb250aCgpLGUuZHJhd1llYXI9ZS5zZWxlY3RlZFllYXI9by5nZXRGdWxsWWVhcigpLChcIk1cIj09aXx8XCJZXCI9PWkpJiZ0aGlzLl9ub3RpZnlDaGFuZ2UoZSl9LF9yZXN0cmljdE1pbk1heDpmdW5jdGlvbihlLHQpe3ZhciBpPXRoaXMuX2dldE1pbk1heERhdGUoZSxcIm1pblwiKSxzPXRoaXMuX2dldE1pbk1heERhdGUoZSxcIm1heFwiKSxuPWkmJmk+dD9pOnQ7cmV0dXJuIG49cyYmbj5zP3M6bn0sX25vdGlmeUNoYW5nZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9nZXQoZSxcIm9uQ2hhbmdlTW9udGhZZWFyXCIpO3QmJnQuYXBwbHkoZS5pbnB1dD9lLmlucHV0WzBdOm51bGwsW2Uuc2VsZWN0ZWRZZWFyLGUuc2VsZWN0ZWRNb250aCsxLGVdKX0sX2dldE51bWJlck9mTW9udGhzOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldChlLFwibnVtYmVyT2ZNb250aHNcIik7cmV0dXJuIG51bGw9PXQ/WzEsMV06XCJudW1iZXJcIj09dHlwZW9mIHQ/WzEsdF06dH0sX2dldE1pbk1heERhdGU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fZGV0ZXJtaW5lRGF0ZShlLHRoaXMuX2dldChlLHQrXCJEYXRlXCIpLG51bGwpfSxfZ2V0RGF5c0luTW9udGg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gMzItdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZSx0LDMyKSkuZ2V0RGF0ZSgpfSxfZ2V0Rmlyc3REYXlPZk1vbnRoOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5ldyBEYXRlKGUsdCwxKS5nZXREYXkoKX0sX2NhbkFkanVzdE1vbnRoOmZ1bmN0aW9uKGUsdCxpLHMpe3ZhciBuPXRoaXMuX2dldE51bWJlck9mTW9udGhzKGUpLGE9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoaSxzKygwPnQ/dDpuWzBdKm5bMV0pLDEpKTtyZXR1cm4gMD50JiZhLnNldERhdGUodGhpcy5fZ2V0RGF5c0luTW9udGgoYS5nZXRGdWxsWWVhcigpLGEuZ2V0TW9udGgoKSkpLHRoaXMuX2lzSW5SYW5nZShlLGEpfSxfaXNJblJhbmdlOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWluXCIpLHM9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWF4XCIpO3JldHVybighaXx8dC5nZXRUaW1lKCk+PWkuZ2V0VGltZSgpKSYmKCFzfHx0LmdldFRpbWUoKTw9cy5nZXRUaW1lKCkpfSxfZ2V0Rm9ybWF0Q29uZmlnOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldChlLFwic2hvcnRZZWFyQ3V0b2ZmXCIpO3JldHVybiB0PVwic3RyaW5nXCIhPXR5cGVvZiB0P3Q6KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCtwYXJzZUludCh0LDEwKSx7c2hvcnRZZWFyQ3V0b2ZmOnQsZGF5TmFtZXNTaG9ydDp0aGlzLl9nZXQoZSxcImRheU5hbWVzU2hvcnRcIiksZGF5TmFtZXM6dGhpcy5fZ2V0KGUsXCJkYXlOYW1lc1wiKSxtb250aE5hbWVzU2hvcnQ6dGhpcy5fZ2V0KGUsXCJtb250aE5hbWVzU2hvcnRcIiksbW9udGhOYW1lczp0aGlzLl9nZXQoZSxcIm1vbnRoTmFtZXNcIil9fSxfZm9ybWF0RGF0ZTpmdW5jdGlvbihlLHQsaSxzKXt0fHwoZS5jdXJyZW50RGF5PWUuc2VsZWN0ZWREYXksZS5jdXJyZW50TW9udGg9ZS5zZWxlY3RlZE1vbnRoLGUuY3VycmVudFllYXI9ZS5zZWxlY3RlZFllYXIpO3ZhciBuPXQ/XCJvYmplY3RcIj09dHlwZW9mIHQ/dDp0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShzLGksdCkpOnRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGUuY3VycmVudFllYXIsZS5jdXJyZW50TW9udGgsZS5jdXJyZW50RGF5KSk7cmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLl9nZXQoZSxcImRhdGVGb3JtYXRcIiksbix0aGlzLl9nZXRGb3JtYXRDb25maWcoZSkpfX0pLCQuZm4uZGF0ZXBpY2tlcj1mdW5jdGlvbihlKXtpZighdGhpcy5sZW5ndGgpcmV0dXJuIHRoaXM7JC5kYXRlcGlja2VyLmluaXRpYWxpemVkfHwoJChkb2N1bWVudCkubW91c2Vkb3duKCQuZGF0ZXBpY2tlci5fY2hlY2tFeHRlcm5hbENsaWNrKS5maW5kKGRvY3VtZW50LmJvZHkpLmFwcGVuZCgkLmRhdGVwaWNrZXIuZHBEaXYpLCQuZGF0ZXBpY2tlci5pbml0aWFsaXplZD0hMCk7dmFyIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBlfHxcImlzRGlzYWJsZWRcIiE9ZSYmXCJnZXREYXRlXCIhPWUmJlwid2lkZ2V0XCIhPWU/XCJvcHRpb25cIj09ZSYmMj09YXJndW1lbnRzLmxlbmd0aCYmXCJzdHJpbmdcIj09dHlwZW9mIGFyZ3VtZW50c1sxXT8kLmRhdGVwaWNrZXJbXCJfXCIrZStcIkRhdGVwaWNrZXJcIl0uYXBwbHkoJC5kYXRlcGlja2VyLFt0aGlzWzBdXS5jb25jYXQodCkpOnRoaXMuZWFjaChmdW5jdGlvbigpe1wic3RyaW5nXCI9PXR5cGVvZiBlPyQuZGF0ZXBpY2tlcltcIl9cIitlK1wiRGF0ZXBpY2tlclwiXS5hcHBseSgkLmRhdGVwaWNrZXIsW3RoaXNdLmNvbmNhdCh0KSk6JC5kYXRlcGlja2VyLl9hdHRhY2hEYXRlcGlja2VyKHRoaXMsZSl9KTokLmRhdGVwaWNrZXJbXCJfXCIrZStcIkRhdGVwaWNrZXJcIl0uYXBwbHkoJC5kYXRlcGlja2VyLFt0aGlzWzBdXS5jb25jYXQodCkpfSwkLmRhdGVwaWNrZXI9bmV3IERhdGVwaWNrZXIsJC5kYXRlcGlja2VyLmluaXRpYWxpemVkPSExLCQuZGF0ZXBpY2tlci51dWlkPShuZXcgRGF0ZSkuZ2V0VGltZSgpLCQuZGF0ZXBpY2tlci52ZXJzaW9uPVwiMS45LjJcIix3aW5kb3dbXCJEUF9qUXVlcnlfXCIrZHB1dWlkXT0kfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSx0KXt2YXIgaT1cInVpLWRpYWxvZyB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbCBcIixzPXtidXR0b25zOiEwLGhlaWdodDohMCxtYXhIZWlnaHQ6ITAsbWF4V2lkdGg6ITAsbWluSGVpZ2h0OiEwLG1pbldpZHRoOiEwLHdpZHRoOiEwfSxuPXttYXhIZWlnaHQ6ITAsbWF4V2lkdGg6ITAsbWluSGVpZ2h0OiEwLG1pbldpZHRoOiEwfTtlLndpZGdldChcInVpLmRpYWxvZ1wiLHt2ZXJzaW9uOlwiMS45LjJcIixvcHRpb25zOnthdXRvT3BlbjohMCxidXR0b25zOnt9LGNsb3NlT25Fc2NhcGU6ITAsY2xvc2VUZXh0OlwiY2xvc2VcIixkaWFsb2dDbGFzczpcIlwiLGRyYWdnYWJsZTohMCxoaWRlOm51bGwsaGVpZ2h0OlwiYXV0b1wiLG1heEhlaWdodDohMSxtYXhXaWR0aDohMSxtaW5IZWlnaHQ6MTUwLG1pbldpZHRoOjE1MCxtb2RhbDohMSxwb3NpdGlvbjp7bXk6XCJjZW50ZXJcIixhdDpcImNlbnRlclwiLG9mOndpbmRvdyxjb2xsaXNpb246XCJmaXRcIix1c2luZzpmdW5jdGlvbih0KXt2YXIgaT1lKHRoaXMpLmNzcyh0KS5vZmZzZXQoKS50b3A7MD5pJiZlKHRoaXMpLmNzcyhcInRvcFwiLHQudG9wLWkpfX0scmVzaXphYmxlOiEwLHNob3c6bnVsbCxzdGFjazohMCx0aXRsZTpcIlwiLHdpZHRoOjMwMCx6SW5kZXg6MWUzfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5vcmlnaW5hbFRpdGxlPXRoaXMuZWxlbWVudC5hdHRyKFwidGl0bGVcIiksXCJzdHJpbmdcIiE9dHlwZW9mIHRoaXMub3JpZ2luYWxUaXRsZSYmKHRoaXMub3JpZ2luYWxUaXRsZT1cIlwiKSx0aGlzLm9sZFBvc2l0aW9uPXtwYXJlbnQ6dGhpcy5lbGVtZW50LnBhcmVudCgpLGluZGV4OnRoaXMuZWxlbWVudC5wYXJlbnQoKS5jaGlsZHJlbigpLmluZGV4KHRoaXMuZWxlbWVudCl9LHRoaXMub3B0aW9ucy50aXRsZT10aGlzLm9wdGlvbnMudGl0bGV8fHRoaXMub3JpZ2luYWxUaXRsZTt2YXIgcyxuLGEsbyxyLGg9dGhpcyxsPXRoaXMub3B0aW9ucyx1PWwudGl0bGV8fFwiJiMxNjA7XCI7cz0odGhpcy51aURpYWxvZz1lKFwiPGRpdj5cIikpLmFkZENsYXNzKGkrbC5kaWFsb2dDbGFzcykuY3NzKHtkaXNwbGF5Olwibm9uZVwiLG91dGxpbmU6MCx6SW5kZXg6bC56SW5kZXh9KS5hdHRyKFwidGFiSW5kZXhcIiwtMSkua2V5ZG93bihmdW5jdGlvbih0KXtsLmNsb3NlT25Fc2NhcGUmJiF0LmlzRGVmYXVsdFByZXZlbnRlZCgpJiZ0LmtleUNvZGUmJnQua2V5Q29kZT09PWUudWkua2V5Q29kZS5FU0NBUEUmJihoLmNsb3NlKHQpLHQucHJldmVudERlZmF1bHQoKSl9KS5tb3VzZWRvd24oZnVuY3Rpb24oZSl7aC5tb3ZlVG9Ub3AoITEsZSl9KS5hcHBlbmRUbyhcImJvZHlcIiksdGhpcy5lbGVtZW50LnNob3coKS5yZW1vdmVBdHRyKFwidGl0bGVcIikuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctY29udGVudCB1aS13aWRnZXQtY29udGVudFwiKS5hcHBlbmRUbyhzKSxuPSh0aGlzLnVpRGlhbG9nVGl0bGViYXI9ZShcIjxkaXY+XCIpKS5hZGRDbGFzcyhcInVpLWRpYWxvZy10aXRsZWJhciAgdWktd2lkZ2V0LWhlYWRlciAgdWktY29ybmVyLWFsbCAgdWktaGVscGVyLWNsZWFyZml4XCIpLmJpbmQoXCJtb3VzZWRvd25cIixmdW5jdGlvbigpe3MuZm9jdXMoKX0pLnByZXBlbmRUbyhzKSxhPWUoXCI8YSBocmVmPScjJz48L2E+XCIpLmFkZENsYXNzKFwidWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlICB1aS1jb3JuZXItYWxsXCIpLmF0dHIoXCJyb2xlXCIsXCJidXR0b25cIikuY2xpY2soZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLGguY2xvc2UoZSl9KS5hcHBlbmRUbyhuKSwodGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2VUZXh0PWUoXCI8c3Bhbj5cIikpLmFkZENsYXNzKFwidWktaWNvbiB1aS1pY29uLWNsb3NldGhpY2tcIikudGV4dChsLmNsb3NlVGV4dCkuYXBwZW5kVG8oYSksbz1lKFwiPHNwYW4+XCIpLnVuaXF1ZUlkKCkuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctdGl0bGVcIikuaHRtbCh1KS5wcmVwZW5kVG8obikscj0odGhpcy51aURpYWxvZ0J1dHRvblBhbmU9ZShcIjxkaXY+XCIpKS5hZGRDbGFzcyhcInVpLWRpYWxvZy1idXR0b25wYW5lIHVpLXdpZGdldC1jb250ZW50IHVpLWhlbHBlci1jbGVhcmZpeFwiKSwodGhpcy51aUJ1dHRvblNldD1lKFwiPGRpdj5cIikpLmFkZENsYXNzKFwidWktZGlhbG9nLWJ1dHRvbnNldFwiKS5hcHBlbmRUbyhyKSxzLmF0dHIoe3JvbGU6XCJkaWFsb2dcIixcImFyaWEtbGFiZWxsZWRieVwiOm8uYXR0cihcImlkXCIpfSksbi5maW5kKFwiKlwiKS5hZGQobikuZGlzYWJsZVNlbGVjdGlvbigpLHRoaXMuX2hvdmVyYWJsZShhKSx0aGlzLl9mb2N1c2FibGUoYSksbC5kcmFnZ2FibGUmJmUuZm4uZHJhZ2dhYmxlJiZ0aGlzLl9tYWtlRHJhZ2dhYmxlKCksbC5yZXNpemFibGUmJmUuZm4ucmVzaXphYmxlJiZ0aGlzLl9tYWtlUmVzaXphYmxlKCksdGhpcy5fY3JlYXRlQnV0dG9ucyhsLmJ1dHRvbnMpLHRoaXMuX2lzT3Blbj0hMSxlLmZuLmJnaWZyYW1lJiZzLmJnaWZyYW1lKCksdGhpcy5fb24ocyx7a2V5ZG93bjpmdW5jdGlvbihpKXtpZihsLm1vZGFsJiZpLmtleUNvZGU9PT1lLnVpLmtleUNvZGUuVEFCKXt2YXIgbj1lKFwiOnRhYmJhYmxlXCIscyksYT1uLmZpbHRlcihcIjpmaXJzdFwiKSxvPW4uZmlsdGVyKFwiOmxhc3RcIik7cmV0dXJuIGkudGFyZ2V0IT09b1swXXx8aS5zaGlmdEtleT9pLnRhcmdldD09PWFbMF0mJmkuc2hpZnRLZXk/KG8uZm9jdXMoMSksITEpOnQ6KGEuZm9jdXMoMSksITEpfX19KX0sX2luaXQ6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMuYXV0b09wZW4mJnRoaXMub3BlbigpfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlLHQ9dGhpcy5vbGRQb3NpdGlvbjt0aGlzLm92ZXJsYXkmJnRoaXMub3ZlcmxheS5kZXN0cm95KCksdGhpcy51aURpYWxvZy5oaWRlKCksdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKFwidWktZGlhbG9nLWNvbnRlbnQgdWktd2lkZ2V0LWNvbnRlbnRcIikuaGlkZSgpLmFwcGVuZFRvKFwiYm9keVwiKSx0aGlzLnVpRGlhbG9nLnJlbW92ZSgpLHRoaXMub3JpZ2luYWxUaXRsZSYmdGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiLHRoaXMub3JpZ2luYWxUaXRsZSksZT10LnBhcmVudC5jaGlsZHJlbigpLmVxKHQuaW5kZXgpLGUubGVuZ3RoJiZlWzBdIT09dGhpcy5lbGVtZW50WzBdP2UuYmVmb3JlKHRoaXMuZWxlbWVudCk6dC5wYXJlbnQuYXBwZW5kKHRoaXMuZWxlbWVudCl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnVpRGlhbG9nfSxjbG9zZTpmdW5jdGlvbih0KXt2YXIgaSxzLG49dGhpcztpZih0aGlzLl9pc09wZW4mJiExIT09dGhpcy5fdHJpZ2dlcihcImJlZm9yZUNsb3NlXCIsdCkpcmV0dXJuIHRoaXMuX2lzT3Blbj0hMSx0aGlzLm92ZXJsYXkmJnRoaXMub3ZlcmxheS5kZXN0cm95KCksdGhpcy5vcHRpb25zLmhpZGU/dGhpcy5faGlkZSh0aGlzLnVpRGlhbG9nLHRoaXMub3B0aW9ucy5oaWRlLGZ1bmN0aW9uKCl7bi5fdHJpZ2dlcihcImNsb3NlXCIsdCl9KToodGhpcy51aURpYWxvZy5oaWRlKCksdGhpcy5fdHJpZ2dlcihcImNsb3NlXCIsdCkpLGUudWkuZGlhbG9nLm92ZXJsYXkucmVzaXplKCksdGhpcy5vcHRpb25zLm1vZGFsJiYoaT0wLGUoXCIudWktZGlhbG9nXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzIT09bi51aURpYWxvZ1swXSYmKHM9ZSh0aGlzKS5jc3MoXCJ6LWluZGV4XCIpLGlzTmFOKHMpfHwoaT1NYXRoLm1heChpLHMpKSl9KSxlLnVpLmRpYWxvZy5tYXhaPWkpLHRoaXN9LGlzT3BlbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9pc09wZW59LG1vdmVUb1RvcDpmdW5jdGlvbih0LGkpe3ZhciBzLG49dGhpcy5vcHRpb25zO3JldHVybiBuLm1vZGFsJiYhdHx8IW4uc3RhY2smJiFuLm1vZGFsP3RoaXMuX3RyaWdnZXIoXCJmb2N1c1wiLGkpOihuLnpJbmRleD5lLnVpLmRpYWxvZy5tYXhaJiYoZS51aS5kaWFsb2cubWF4Wj1uLnpJbmRleCksdGhpcy5vdmVybGF5JiYoZS51aS5kaWFsb2cubWF4Wis9MSxlLnVpLmRpYWxvZy5vdmVybGF5Lm1heFo9ZS51aS5kaWFsb2cubWF4Wix0aGlzLm92ZXJsYXkuJGVsLmNzcyhcInotaW5kZXhcIixlLnVpLmRpYWxvZy5vdmVybGF5Lm1heFopKSxzPXtzY3JvbGxUb3A6dGhpcy5lbGVtZW50LnNjcm9sbFRvcCgpLHNjcm9sbExlZnQ6dGhpcy5lbGVtZW50LnNjcm9sbExlZnQoKX0sZS51aS5kaWFsb2cubWF4Wis9MSx0aGlzLnVpRGlhbG9nLmNzcyhcInotaW5kZXhcIixlLnVpLmRpYWxvZy5tYXhaKSx0aGlzLmVsZW1lbnQuYXR0cihzKSx0aGlzLl90cmlnZ2VyKFwiZm9jdXNcIixpKSx0aGlzKX0sb3BlbjpmdW5jdGlvbigpe2lmKCF0aGlzLl9pc09wZW4pe3ZhciB0LGk9dGhpcy5vcHRpb25zLHM9dGhpcy51aURpYWxvZztyZXR1cm4gdGhpcy5fc2l6ZSgpLHRoaXMuX3Bvc2l0aW9uKGkucG9zaXRpb24pLHMuc2hvdyhpLnNob3cpLHRoaXMub3ZlcmxheT1pLm1vZGFsP25ldyBlLnVpLmRpYWxvZy5vdmVybGF5KHRoaXMpOm51bGwsdGhpcy5tb3ZlVG9Ub3AoITApLHQ9dGhpcy5lbGVtZW50LmZpbmQoXCI6dGFiYmFibGVcIiksdC5sZW5ndGh8fCh0PXRoaXMudWlEaWFsb2dCdXR0b25QYW5lLmZpbmQoXCI6dGFiYmFibGVcIiksdC5sZW5ndGh8fCh0PXMpKSx0LmVxKDApLmZvY3VzKCksdGhpcy5faXNPcGVuPSEwLHRoaXMuX3RyaWdnZXIoXCJvcGVuXCIpLHRoaXN9fSxfY3JlYXRlQnV0dG9uczpmdW5jdGlvbih0KXt2YXIgaT10aGlzLHM9ITE7dGhpcy51aURpYWxvZ0J1dHRvblBhbmUucmVtb3ZlKCksdGhpcy51aUJ1dHRvblNldC5lbXB0eSgpLFwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT09dCYmZS5lYWNoKHQsZnVuY3Rpb24oKXtyZXR1cm4hKHM9ITApfSkscz8oZS5lYWNoKHQsZnVuY3Rpb24odCxzKXt2YXIgbixhO3M9ZS5pc0Z1bmN0aW9uKHMpP3tjbGljazpzLHRleHQ6dH06cyxzPWUuZXh0ZW5kKHt0eXBlOlwiYnV0dG9uXCJ9LHMpLGE9cy5jbGljayxzLmNsaWNrPWZ1bmN0aW9uKCl7YS5hcHBseShpLmVsZW1lbnRbMF0sYXJndW1lbnRzKX0sbj1lKFwiPGJ1dHRvbj48L2J1dHRvbj5cIixzKS5hcHBlbmRUbyhpLnVpQnV0dG9uU2V0KSxlLmZuLmJ1dHRvbiYmbi5idXR0b24oKX0pLHRoaXMudWlEaWFsb2cuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctYnV0dG9uc1wiKSx0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZS5hcHBlbmRUbyh0aGlzLnVpRGlhbG9nKSk6dGhpcy51aURpYWxvZy5yZW1vdmVDbGFzcyhcInVpLWRpYWxvZy1idXR0b25zXCIpfSxfbWFrZURyYWdnYWJsZTpmdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7cmV0dXJue3Bvc2l0aW9uOmUucG9zaXRpb24sb2Zmc2V0OmUub2Zmc2V0fX12YXIgaT10aGlzLHM9dGhpcy5vcHRpb25zO3RoaXMudWlEaWFsb2cuZHJhZ2dhYmxlKHtjYW5jZWw6XCIudWktZGlhbG9nLWNvbnRlbnQsIC51aS1kaWFsb2ctdGl0bGViYXItY2xvc2VcIixoYW5kbGU6XCIudWktZGlhbG9nLXRpdGxlYmFyXCIsY29udGFpbm1lbnQ6XCJkb2N1bWVudFwiLHN0YXJ0OmZ1bmN0aW9uKHMsbil7ZSh0aGlzKS5hZGRDbGFzcyhcInVpLWRpYWxvZy1kcmFnZ2luZ1wiKSxpLl90cmlnZ2VyKFwiZHJhZ1N0YXJ0XCIscyx0KG4pKX0sZHJhZzpmdW5jdGlvbihlLHMpe2kuX3RyaWdnZXIoXCJkcmFnXCIsZSx0KHMpKX0sc3RvcDpmdW5jdGlvbihuLGEpe3MucG9zaXRpb249W2EucG9zaXRpb24ubGVmdC1pLmRvY3VtZW50LnNjcm9sbExlZnQoKSxhLnBvc2l0aW9uLnRvcC1pLmRvY3VtZW50LnNjcm9sbFRvcCgpXSxlKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktZGlhbG9nLWRyYWdnaW5nXCIpLGkuX3RyaWdnZXIoXCJkcmFnU3RvcFwiLG4sdChhKSksZS51aS5kaWFsb2cub3ZlcmxheS5yZXNpemUoKX19KX0sX21ha2VSZXNpemFibGU6ZnVuY3Rpb24oaSl7ZnVuY3Rpb24gcyhlKXtyZXR1cm57b3JpZ2luYWxQb3NpdGlvbjplLm9yaWdpbmFsUG9zaXRpb24sb3JpZ2luYWxTaXplOmUub3JpZ2luYWxTaXplLHBvc2l0aW9uOmUucG9zaXRpb24sc2l6ZTplLnNpemV9fWk9aT09PXQ/dGhpcy5vcHRpb25zLnJlc2l6YWJsZTppO3ZhciBuPXRoaXMsYT10aGlzLm9wdGlvbnMsbz10aGlzLnVpRGlhbG9nLmNzcyhcInBvc2l0aW9uXCIpLHI9XCJzdHJpbmdcIj09dHlwZW9mIGk/aTpcIm4sZSxzLHcsc2Usc3csbmUsbndcIjt0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSh7Y2FuY2VsOlwiLnVpLWRpYWxvZy1jb250ZW50XCIsY29udGFpbm1lbnQ6XCJkb2N1bWVudFwiLGFsc29SZXNpemU6dGhpcy5lbGVtZW50LG1heFdpZHRoOmEubWF4V2lkdGgsbWF4SGVpZ2h0OmEubWF4SGVpZ2h0LG1pbldpZHRoOmEubWluV2lkdGgsbWluSGVpZ2h0OnRoaXMuX21pbkhlaWdodCgpLGhhbmRsZXM6cixzdGFydDpmdW5jdGlvbih0LGkpe2UodGhpcykuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctcmVzaXppbmdcIiksbi5fdHJpZ2dlcihcInJlc2l6ZVN0YXJ0XCIsdCxzKGkpKX0scmVzaXplOmZ1bmN0aW9uKGUsdCl7bi5fdHJpZ2dlcihcInJlc2l6ZVwiLGUscyh0KSl9LHN0b3A6ZnVuY3Rpb24odCxpKXtlKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktZGlhbG9nLXJlc2l6aW5nXCIpLGEuaGVpZ2h0PWUodGhpcykuaGVpZ2h0KCksYS53aWR0aD1lKHRoaXMpLndpZHRoKCksbi5fdHJpZ2dlcihcInJlc2l6ZVN0b3BcIix0LHMoaSkpLGUudWkuZGlhbG9nLm92ZXJsYXkucmVzaXplKCl9fSkuY3NzKFwicG9zaXRpb25cIixvKS5maW5kKFwiLnVpLXJlc2l6YWJsZS1zZVwiKS5hZGRDbGFzcyhcInVpLWljb24gdWktaWNvbi1ncmlwLWRpYWdvbmFsLXNlXCIpfSxfbWluSGVpZ2h0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zO3JldHVyblwiYXV0b1wiPT09ZS5oZWlnaHQ/ZS5taW5IZWlnaHQ6TWF0aC5taW4oZS5taW5IZWlnaHQsZS5oZWlnaHQpfSxfcG9zaXRpb246ZnVuY3Rpb24odCl7dmFyIGkscz1bXSxuPVswLDBdO3Q/KChcInN0cmluZ1wiPT10eXBlb2YgdHx8XCJvYmplY3RcIj09dHlwZW9mIHQmJlwiMFwiaW4gdCkmJihzPXQuc3BsaXQ/dC5zcGxpdChcIiBcIik6W3RbMF0sdFsxXV0sMT09PXMubGVuZ3RoJiYoc1sxXT1zWzBdKSxlLmVhY2goW1wibGVmdFwiLFwidG9wXCJdLGZ1bmN0aW9uKGUsdCl7K3NbZV09PT1zW2VdJiYobltlXT1zW2VdLHNbZV09dCl9KSx0PXtteTpzWzBdKygwPm5bMF0/blswXTpcIitcIituWzBdKStcIiBcIitzWzFdKygwPm5bMV0/blsxXTpcIitcIituWzFdKSxhdDpzLmpvaW4oXCIgXCIpfSksdD1lLmV4dGVuZCh7fSxlLnVpLmRpYWxvZy5wcm90b3R5cGUub3B0aW9ucy5wb3NpdGlvbix0KSk6dD1lLnVpLmRpYWxvZy5wcm90b3R5cGUub3B0aW9ucy5wb3NpdGlvbixpPXRoaXMudWlEaWFsb2cuaXMoXCI6dmlzaWJsZVwiKSxpfHx0aGlzLnVpRGlhbG9nLnNob3coKSx0aGlzLnVpRGlhbG9nLnBvc2l0aW9uKHQpLGl8fHRoaXMudWlEaWFsb2cuaGlkZSgpfSxfc2V0T3B0aW9uczpmdW5jdGlvbih0KXt2YXIgaT10aGlzLGE9e30sbz0hMTtlLmVhY2godCxmdW5jdGlvbihlLHQpe2kuX3NldE9wdGlvbihlLHQpLGUgaW4gcyYmKG89ITApLGUgaW4gbiYmKGFbZV09dCl9KSxvJiZ0aGlzLl9zaXplKCksdGhpcy51aURpYWxvZy5pcyhcIjpkYXRhKHJlc2l6YWJsZSlcIikmJnRoaXMudWlEaWFsb2cucmVzaXphYmxlKFwib3B0aW9uXCIsYSl9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxzKXt2YXIgbixhLG89dGhpcy51aURpYWxvZztzd2l0Y2godCl7Y2FzZVwiYnV0dG9uc1wiOnRoaXMuX2NyZWF0ZUJ1dHRvbnMocyk7YnJlYWs7Y2FzZVwiY2xvc2VUZXh0XCI6dGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2VUZXh0LnRleHQoXCJcIitzKTticmVhaztjYXNlXCJkaWFsb2dDbGFzc1wiOm8ucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmRpYWxvZ0NsYXNzKS5hZGRDbGFzcyhpK3MpO2JyZWFrO2Nhc2VcImRpc2FibGVkXCI6cz9vLmFkZENsYXNzKFwidWktZGlhbG9nLWRpc2FibGVkXCIpOm8ucmVtb3ZlQ2xhc3MoXCJ1aS1kaWFsb2ctZGlzYWJsZWRcIik7YnJlYWs7Y2FzZVwiZHJhZ2dhYmxlXCI6bj1vLmlzKFwiOmRhdGEoZHJhZ2dhYmxlKVwiKSxuJiYhcyYmby5kcmFnZ2FibGUoXCJkZXN0cm95XCIpLCFuJiZzJiZ0aGlzLl9tYWtlRHJhZ2dhYmxlKCk7YnJlYWs7Y2FzZVwicG9zaXRpb25cIjp0aGlzLl9wb3NpdGlvbihzKTticmVhaztjYXNlXCJyZXNpemFibGVcIjphPW8uaXMoXCI6ZGF0YShyZXNpemFibGUpXCIpLGEmJiFzJiZvLnJlc2l6YWJsZShcImRlc3Ryb3lcIiksYSYmXCJzdHJpbmdcIj09dHlwZW9mIHMmJm8ucmVzaXphYmxlKFwib3B0aW9uXCIsXCJoYW5kbGVzXCIscyksYXx8cz09PSExfHx0aGlzLl9tYWtlUmVzaXphYmxlKHMpO2JyZWFrO2Nhc2VcInRpdGxlXCI6ZShcIi51aS1kaWFsb2ctdGl0bGVcIix0aGlzLnVpRGlhbG9nVGl0bGViYXIpLmh0bWwoXCJcIisoc3x8XCImIzE2MDtcIikpfXRoaXMuX3N1cGVyKHQscyl9LF9zaXplOmZ1bmN0aW9uKCl7dmFyIHQsaSxzLG49dGhpcy5vcHRpb25zLGE9dGhpcy51aURpYWxvZy5pcyhcIjp2aXNpYmxlXCIpO3RoaXMuZWxlbWVudC5zaG93KCkuY3NzKHt3aWR0aDpcImF1dG9cIixtaW5IZWlnaHQ6MCxoZWlnaHQ6MH0pLG4ubWluV2lkdGg+bi53aWR0aCYmKG4ud2lkdGg9bi5taW5XaWR0aCksdD10aGlzLnVpRGlhbG9nLmNzcyh7aGVpZ2h0OlwiYXV0b1wiLHdpZHRoOm4ud2lkdGh9KS5vdXRlckhlaWdodCgpLGk9TWF0aC5tYXgoMCxuLm1pbkhlaWdodC10KSxcImF1dG9cIj09PW4uaGVpZ2h0P2Uuc3VwcG9ydC5taW5IZWlnaHQ/dGhpcy5lbGVtZW50LmNzcyh7bWluSGVpZ2h0OmksaGVpZ2h0OlwiYXV0b1wifSk6KHRoaXMudWlEaWFsb2cuc2hvdygpLHM9dGhpcy5lbGVtZW50LmNzcyhcImhlaWdodFwiLFwiYXV0b1wiKS5oZWlnaHQoKSxhfHx0aGlzLnVpRGlhbG9nLmhpZGUoKSx0aGlzLmVsZW1lbnQuaGVpZ2h0KE1hdGgubWF4KHMsaSkpKTp0aGlzLmVsZW1lbnQuaGVpZ2h0KE1hdGgubWF4KG4uaGVpZ2h0LXQsMCkpLHRoaXMudWlEaWFsb2cuaXMoXCI6ZGF0YShyZXNpemFibGUpXCIpJiZ0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZShcIm9wdGlvblwiLFwibWluSGVpZ2h0XCIsdGhpcy5fbWluSGVpZ2h0KCkpfX0pLGUuZXh0ZW5kKGUudWkuZGlhbG9nLHt1dWlkOjAsbWF4WjowLGdldFRpdGxlSWQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5hdHRyKFwiaWRcIik7cmV0dXJuIHR8fCh0aGlzLnV1aWQrPTEsdD10aGlzLnV1aWQpLFwidWktZGlhbG9nLXRpdGxlLVwiK3R9LG92ZXJsYXk6ZnVuY3Rpb24odCl7dGhpcy4kZWw9ZS51aS5kaWFsb2cub3ZlcmxheS5jcmVhdGUodCl9fSksZS5leHRlbmQoZS51aS5kaWFsb2cub3ZlcmxheSx7aW5zdGFuY2VzOltdLG9sZEluc3RhbmNlczpbXSxtYXhaOjAsZXZlbnRzOmUubWFwKFwiZm9jdXMsbW91c2Vkb3duLG1vdXNldXAsa2V5ZG93bixrZXlwcmVzcyxjbGlja1wiLnNwbGl0KFwiLFwiKSxmdW5jdGlvbihlKXtyZXR1cm4gZStcIi5kaWFsb2ctb3ZlcmxheVwifSkuam9pbihcIiBcIiksY3JlYXRlOmZ1bmN0aW9uKGkpezA9PT10aGlzLmluc3RhbmNlcy5sZW5ndGgmJihzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS51aS5kaWFsb2cub3ZlcmxheS5pbnN0YW5jZXMubGVuZ3RoJiZlKGRvY3VtZW50KS5iaW5kKGUudWkuZGlhbG9nLm92ZXJsYXkuZXZlbnRzLGZ1bmN0aW9uKGkpe3JldHVybiBlKGkudGFyZ2V0KS56SW5kZXgoKTxlLnVpLmRpYWxvZy5vdmVybGF5Lm1heFo/ITE6dH0pfSwxKSxlKHdpbmRvdykuYmluZChcInJlc2l6ZS5kaWFsb2ctb3ZlcmxheVwiLGUudWkuZGlhbG9nLm92ZXJsYXkucmVzaXplKSk7dmFyIHM9dGhpcy5vbGRJbnN0YW5jZXMucG9wKCl8fGUoXCI8ZGl2PlwiKS5hZGRDbGFzcyhcInVpLXdpZGdldC1vdmVybGF5XCIpO3JldHVybiBlKGRvY3VtZW50KS5iaW5kKFwia2V5ZG93bi5kaWFsb2ctb3ZlcmxheVwiLGZ1bmN0aW9uKHQpe3ZhciBuPWUudWkuZGlhbG9nLm92ZXJsYXkuaW5zdGFuY2VzOzAhPT1uLmxlbmd0aCYmbltuLmxlbmd0aC0xXT09PXMmJmkub3B0aW9ucy5jbG9zZU9uRXNjYXBlJiYhdC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmdC5rZXlDb2RlJiZ0LmtleUNvZGU9PT1lLnVpLmtleUNvZGUuRVNDQVBFJiYoaS5jbG9zZSh0KSx0LnByZXZlbnREZWZhdWx0KCkpfSkscy5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KS5jc3Moe3dpZHRoOnRoaXMud2lkdGgoKSxoZWlnaHQ6dGhpcy5oZWlnaHQoKX0pLGUuZm4uYmdpZnJhbWUmJnMuYmdpZnJhbWUoKSx0aGlzLmluc3RhbmNlcy5wdXNoKHMpLHN9LGRlc3Ryb3k6ZnVuY3Rpb24odCl7dmFyIGk9ZS5pbkFycmF5KHQsdGhpcy5pbnN0YW5jZXMpLHM9MDstMSE9PWkmJnRoaXMub2xkSW5zdGFuY2VzLnB1c2godGhpcy5pbnN0YW5jZXMuc3BsaWNlKGksMSlbMF0pLDA9PT10aGlzLmluc3RhbmNlcy5sZW5ndGgmJmUoW2RvY3VtZW50LHdpbmRvd10pLnVuYmluZChcIi5kaWFsb2ctb3ZlcmxheVwiKSx0LmhlaWdodCgwKS53aWR0aCgwKS5yZW1vdmUoKSxlLmVhY2godGhpcy5pbnN0YW5jZXMsZnVuY3Rpb24oKXtzPU1hdGgubWF4KHMsdGhpcy5jc3MoXCJ6LWluZGV4XCIpKX0pLHRoaXMubWF4Wj1zfSxoZWlnaHQ6ZnVuY3Rpb24oKXt2YXIgdCxpO3JldHVybiBlLnVpLmllPyh0PU1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQsZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQpLGk9TWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldEhlaWdodCxkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCksaT50P2Uod2luZG93KS5oZWlnaHQoKStcInB4XCI6dCtcInB4XCIpOmUoZG9jdW1lbnQpLmhlaWdodCgpK1wicHhcIn0sd2lkdGg6ZnVuY3Rpb24oKXt2YXIgdCxpO3JldHVybiBlLnVpLmllPyh0PU1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxXaWR0aCxkb2N1bWVudC5ib2R5LnNjcm9sbFdpZHRoKSxpPU1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRXaWR0aCxkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoKSxpPnQ/ZSh3aW5kb3cpLndpZHRoKCkrXCJweFwiOnQrXCJweFwiKTplKGRvY3VtZW50KS53aWR0aCgpK1wicHhcIn0scmVzaXplOmZ1bmN0aW9uKCl7dmFyIHQ9ZShbXSk7ZS5lYWNoKGUudWkuZGlhbG9nLm92ZXJsYXkuaW5zdGFuY2VzLGZ1bmN0aW9uKCl7dD10LmFkZCh0aGlzKX0pLHQuY3NzKHt3aWR0aDowLGhlaWdodDowfSkuY3NzKHt3aWR0aDplLnVpLmRpYWxvZy5vdmVybGF5LndpZHRoKCksaGVpZ2h0OmUudWkuZGlhbG9nLm92ZXJsYXkuaGVpZ2h0KCl9KX19KSxlLmV4dGVuZChlLnVpLmRpYWxvZy5vdmVybGF5LnByb3RvdHlwZSx7ZGVzdHJveTpmdW5jdGlvbigpe2UudWkuZGlhbG9nLm92ZXJsYXkuZGVzdHJveSh0aGlzLiRlbCl9fSl9KShqUXVlcnkpOyhmdW5jdGlvbihlKXt2YXIgdD0hMTtlLndpZGdldChcInVpLm1lbnVcIix7dmVyc2lvbjpcIjEuOS4yXCIsZGVmYXVsdEVsZW1lbnQ6XCI8dWw+XCIsZGVsYXk6MzAwLG9wdGlvbnM6e2ljb25zOntzdWJtZW51OlwidWktaWNvbi1jYXJhdC0xLWVcIn0sbWVudXM6XCJ1bFwiLHBvc2l0aW9uOntteTpcImxlZnQgdG9wXCIsYXQ6XCJyaWdodCB0b3BcIn0scm9sZTpcIm1lbnVcIixibHVyOm51bGwsZm9jdXM6bnVsbCxzZWxlY3Q6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMuYWN0aXZlTWVudT10aGlzLmVsZW1lbnQsdGhpcy5lbGVtZW50LnVuaXF1ZUlkKCkuYWRkQ2xhc3MoXCJ1aS1tZW51IHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYWxsXCIpLnRvZ2dsZUNsYXNzKFwidWktbWVudS1pY29uc1wiLCEhdGhpcy5lbGVtZW50LmZpbmQoXCIudWktaWNvblwiKS5sZW5ndGgpLmF0dHIoe3JvbGU6dGhpcy5vcHRpb25zLnJvbGUsdGFiSW5kZXg6MH0pLmJpbmQoXCJjbGlja1wiK3RoaXMuZXZlbnROYW1lc3BhY2UsZS5wcm94eShmdW5jdGlvbihlKXt0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJmUucHJldmVudERlZmF1bHQoKX0sdGhpcykpLHRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcInRydWVcIiksdGhpcy5fb24oe1wibW91c2Vkb3duIC51aS1tZW51LWl0ZW0gPiBhXCI6ZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpfSxcImNsaWNrIC51aS1zdGF0ZS1kaXNhYmxlZCA+IGFcIjpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCl9LFwiY2xpY2sgLnVpLW1lbnUtaXRlbTpoYXMoYSlcIjpmdW5jdGlvbihpKXt2YXIgcz1lKGkudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiKTshdCYmcy5ub3QoXCIudWktc3RhdGUtZGlzYWJsZWRcIikubGVuZ3RoJiYodD0hMCx0aGlzLnNlbGVjdChpKSxzLmhhcyhcIi51aS1tZW51XCIpLmxlbmd0aD90aGlzLmV4cGFuZChpKTp0aGlzLmVsZW1lbnQuaXMoXCI6Zm9jdXNcIil8fCh0aGlzLmVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIsWyEwXSksdGhpcy5hY3RpdmUmJjE9PT10aGlzLmFjdGl2ZS5wYXJlbnRzKFwiLnVpLW1lbnVcIikubGVuZ3RoJiZjbGVhclRpbWVvdXQodGhpcy50aW1lcikpKX0sXCJtb3VzZWVudGVyIC51aS1tZW51LWl0ZW1cIjpmdW5jdGlvbih0KXt2YXIgaT1lKHQuY3VycmVudFRhcmdldCk7aS5zaWJsaW5ncygpLmNoaWxkcmVuKFwiLnVpLXN0YXRlLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLmZvY3VzKHQsaSl9LG1vdXNlbGVhdmU6XCJjb2xsYXBzZUFsbFwiLFwibW91c2VsZWF2ZSAudWktbWVudVwiOlwiY29sbGFwc2VBbGxcIixmb2N1czpmdW5jdGlvbihlLHQpe3ZhciBpPXRoaXMuYWN0aXZlfHx0aGlzLmVsZW1lbnQuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtXCIpLmVxKDApO3R8fHRoaXMuZm9jdXMoZSxpKX0sYmx1cjpmdW5jdGlvbih0KXt0aGlzLl9kZWxheShmdW5jdGlvbigpe2UuY29udGFpbnModGhpcy5lbGVtZW50WzBdLHRoaXMuZG9jdW1lbnRbMF0uYWN0aXZlRWxlbWVudCl8fHRoaXMuY29sbGFwc2VBbGwodCl9KX0sa2V5ZG93bjpcIl9rZXlkb3duXCJ9KSx0aGlzLnJlZnJlc2goKSx0aGlzLl9vbih0aGlzLmRvY3VtZW50LHtjbGljazpmdW5jdGlvbihpKXtlKGkudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLW1lbnVcIikubGVuZ3RofHx0aGlzLmNvbGxhcHNlQWxsKGkpLHQ9ITF9fSl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIikuZmluZChcIi51aS1tZW51XCIpLmFuZFNlbGYoKS5yZW1vdmVDbGFzcyhcInVpLW1lbnUgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGwgdWktbWVudS1pY29uc1wiKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwidGFiSW5kZXhcIikucmVtb3ZlQXR0cihcImFyaWEtbGFiZWxsZWRieVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1leHBhbmRlZFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtZGlzYWJsZWRcIikucmVtb3ZlVW5pcXVlSWQoKS5zaG93KCksdGhpcy5lbGVtZW50LmZpbmQoXCIudWktbWVudS1pdGVtXCIpLnJlbW92ZUNsYXNzKFwidWktbWVudS1pdGVtXCIpLnJlbW92ZUF0dHIoXCJyb2xlXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWRpc2FibGVkXCIpLmNoaWxkcmVuKFwiYVwiKS5yZW1vdmVVbmlxdWVJZCgpLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLWFsbCB1aS1zdGF0ZS1ob3ZlclwiKS5yZW1vdmVBdHRyKFwidGFiSW5kZXhcIikucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtaGFzcG9wdXBcIikuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKTt0LmRhdGEoXCJ1aS1tZW51LXN1Ym1lbnUtY2FyYXRcIikmJnQucmVtb3ZlKCl9KSx0aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51LWRpdmlkZXJcIikucmVtb3ZlQ2xhc3MoXCJ1aS1tZW51LWRpdmlkZXIgdWktd2lkZ2V0LWNvbnRlbnRcIil9LF9rZXlkb3duOmZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGkoZSl7cmV0dXJuIGUucmVwbGFjZSgvW1xcLVxcW1xcXXt9KCkqKz8uLFxcXFxcXF4kfCNcXHNdL2csXCJcXFxcJCZcIil9dmFyIHMsbixhLG8scixoPSEwO3N3aXRjaCh0LmtleUNvZGUpe2Nhc2UgZS51aS5rZXlDb2RlLlBBR0VfVVA6dGhpcy5wcmV2aW91c1BhZ2UodCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuUEFHRV9ET1dOOnRoaXMubmV4dFBhZ2UodCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuSE9NRTp0aGlzLl9tb3ZlKFwiZmlyc3RcIixcImZpcnN0XCIsdCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuRU5EOnRoaXMuX21vdmUoXCJsYXN0XCIsXCJsYXN0XCIsdCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuVVA6dGhpcy5wcmV2aW91cyh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5ET1dOOnRoaXMubmV4dCh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5MRUZUOnRoaXMuY29sbGFwc2UodCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuUklHSFQ6dGhpcy5hY3RpdmUmJiF0aGlzLmFjdGl2ZS5pcyhcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKSYmdGhpcy5leHBhbmQodCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuRU5URVI6Y2FzZSBlLnVpLmtleUNvZGUuU1BBQ0U6dGhpcy5fYWN0aXZhdGUodCk7YnJlYWs7Y2FzZSBlLnVpLmtleUNvZGUuRVNDQVBFOnRoaXMuY29sbGFwc2UodCk7YnJlYWs7ZGVmYXVsdDpoPSExLG49dGhpcy5wcmV2aW91c0ZpbHRlcnx8XCJcIixhPVN0cmluZy5mcm9tQ2hhckNvZGUodC5rZXlDb2RlKSxvPSExLGNsZWFyVGltZW91dCh0aGlzLmZpbHRlclRpbWVyKSxhPT09bj9vPSEwOmE9bithLHI9UmVnRXhwKFwiXlwiK2koYSksXCJpXCIpLHM9dGhpcy5hY3RpdmVNZW51LmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gci50ZXN0KGUodGhpcykuY2hpbGRyZW4oXCJhXCIpLnRleHQoKSl9KSxzPW8mJi0xIT09cy5pbmRleCh0aGlzLmFjdGl2ZS5uZXh0KCkpP3RoaXMuYWN0aXZlLm5leHRBbGwoXCIudWktbWVudS1pdGVtXCIpOnMscy5sZW5ndGh8fChhPVN0cmluZy5mcm9tQ2hhckNvZGUodC5rZXlDb2RlKSxyPVJlZ0V4cChcIl5cIitpKGEpLFwiaVwiKSxzPXRoaXMuYWN0aXZlTWVudS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW1cIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHIudGVzdChlKHRoaXMpLmNoaWxkcmVuKFwiYVwiKS50ZXh0KCkpfSkpLHMubGVuZ3RoPyh0aGlzLmZvY3VzKHQscykscy5sZW5ndGg+MT8odGhpcy5wcmV2aW91c0ZpbHRlcj1hLHRoaXMuZmlsdGVyVGltZXI9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5wcmV2aW91c0ZpbHRlcn0sMWUzKSk6ZGVsZXRlIHRoaXMucHJldmlvdXNGaWx0ZXIpOmRlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyfWgmJnQucHJldmVudERlZmF1bHQoKX0sX2FjdGl2YXRlOmZ1bmN0aW9uKGUpe3RoaXMuYWN0aXZlLmlzKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpfHwodGhpcy5hY3RpdmUuY2hpbGRyZW4oXCJhW2FyaWEtaGFzcG9wdXA9J3RydWUnXVwiKS5sZW5ndGg/dGhpcy5leHBhbmQoZSk6dGhpcy5zZWxlY3QoZSkpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQsaT10aGlzLm9wdGlvbnMuaWNvbnMuc3VibWVudSxzPXRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5tZW51cyk7cy5maWx0ZXIoXCI6bm90KC51aS1tZW51KVwiKS5hZGRDbGFzcyhcInVpLW1lbnUgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGxcIikuaGlkZSgpLmF0dHIoe3JvbGU6dGhpcy5vcHRpb25zLnJvbGUsXCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIn0pLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLHM9dC5wcmV2KFwiYVwiKSxuPWUoXCI8c3Bhbj5cIikuYWRkQ2xhc3MoXCJ1aS1tZW51LWljb24gdWktaWNvbiBcIitpKS5kYXRhKFwidWktbWVudS1zdWJtZW51LWNhcmF0XCIsITApO3MuYXR0cihcImFyaWEtaGFzcG9wdXBcIixcInRydWVcIikucHJlcGVuZChuKSx0LmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIixzLmF0dHIoXCJpZFwiKSl9KSx0PXMuYWRkKHRoaXMuZWxlbWVudCksdC5jaGlsZHJlbihcIjpub3QoLnVpLW1lbnUtaXRlbSk6aGFzKGEpXCIpLmFkZENsYXNzKFwidWktbWVudS1pdGVtXCIpLmF0dHIoXCJyb2xlXCIsXCJwcmVzZW50YXRpb25cIikuY2hpbGRyZW4oXCJhXCIpLnVuaXF1ZUlkKCkuYWRkQ2xhc3MoXCJ1aS1jb3JuZXItYWxsXCIpLmF0dHIoe3RhYkluZGV4Oi0xLHJvbGU6dGhpcy5faXRlbVJvbGUoKX0pLHQuY2hpbGRyZW4oXCI6bm90KC51aS1tZW51LWl0ZW0pXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpOy9bXlxcLeKAlOKAk1xcc10vLnRlc3QodC50ZXh0KCkpfHx0LmFkZENsYXNzKFwidWktd2lkZ2V0LWNvbnRlbnQgdWktbWVudS1kaXZpZGVyXCIpfSksdC5jaGlsZHJlbihcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSx0aGlzLmFjdGl2ZSYmIWUuY29udGFpbnModGhpcy5lbGVtZW50WzBdLHRoaXMuYWN0aXZlWzBdKSYmdGhpcy5ibHVyKCl9LF9pdGVtUm9sZTpmdW5jdGlvbigpe3JldHVybnttZW51OlwibWVudWl0ZW1cIixsaXN0Ym94Olwib3B0aW9uXCJ9W3RoaXMub3B0aW9ucy5yb2xlXX0sZm9jdXM6ZnVuY3Rpb24oZSx0KXt2YXIgaSxzO3RoaXMuYmx1cihlLGUmJlwiZm9jdXNcIj09PWUudHlwZSksdGhpcy5fc2Nyb2xsSW50b1ZpZXcodCksdGhpcy5hY3RpdmU9dC5maXJzdCgpLHM9dGhpcy5hY3RpdmUuY2hpbGRyZW4oXCJhXCIpLmFkZENsYXNzKFwidWktc3RhdGUtZm9jdXNcIiksdGhpcy5vcHRpb25zLnJvbGUmJnRoaXMuZWxlbWVudC5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIscy5hdHRyKFwiaWRcIikpLHRoaXMuYWN0aXZlLnBhcmVudCgpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIpLmNoaWxkcmVuKFwiYTpmaXJzdFwiKS5hZGRDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKSxlJiZcImtleWRvd25cIj09PWUudHlwZT90aGlzLl9jbG9zZSgpOnRoaXMudGltZXI9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLl9jbG9zZSgpfSx0aGlzLmRlbGF5KSxpPXQuY2hpbGRyZW4oXCIudWktbWVudVwiKSxpLmxlbmd0aCYmL15tb3VzZS8udGVzdChlLnR5cGUpJiZ0aGlzLl9zdGFydE9wZW5pbmcoaSksdGhpcy5hY3RpdmVNZW51PXQucGFyZW50KCksdGhpcy5fdHJpZ2dlcihcImZvY3VzXCIsZSx7aXRlbTp0fSl9LF9zY3JvbGxJbnRvVmlldzpmdW5jdGlvbih0KXt2YXIgaSxzLG4sYSxvLHI7dGhpcy5faGFzU2Nyb2xsKCkmJihpPXBhcnNlRmxvYXQoZS5jc3ModGhpcy5hY3RpdmVNZW51WzBdLFwiYm9yZGVyVG9wV2lkdGhcIikpfHwwLHM9cGFyc2VGbG9hdChlLmNzcyh0aGlzLmFjdGl2ZU1lbnVbMF0sXCJwYWRkaW5nVG9wXCIpKXx8MCxuPXQub2Zmc2V0KCkudG9wLXRoaXMuYWN0aXZlTWVudS5vZmZzZXQoKS50b3AtaS1zLGE9dGhpcy5hY3RpdmVNZW51LnNjcm9sbFRvcCgpLG89dGhpcy5hY3RpdmVNZW51LmhlaWdodCgpLHI9dC5oZWlnaHQoKSwwPm4/dGhpcy5hY3RpdmVNZW51LnNjcm9sbFRvcChhK24pOm4rcj5vJiZ0aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKGErbi1vK3IpKX0sYmx1cjpmdW5jdGlvbihlLHQpe3R8fGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKSx0aGlzLmFjdGl2ZSYmKHRoaXMuYWN0aXZlLmNoaWxkcmVuKFwiYVwiKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWZvY3VzXCIpLHRoaXMuYWN0aXZlPW51bGwsdGhpcy5fdHJpZ2dlcihcImJsdXJcIixlLHtpdGVtOnRoaXMuYWN0aXZlfSkpfSxfc3RhcnRPcGVuaW5nOmZ1bmN0aW9uKGUpe2NsZWFyVGltZW91dCh0aGlzLnRpbWVyKSxcInRydWVcIj09PWUuYXR0cihcImFyaWEtaGlkZGVuXCIpJiYodGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuX2Nsb3NlKCksdGhpcy5fb3BlbihlKX0sdGhpcy5kZWxheSkpfSxfb3BlbjpmdW5jdGlvbih0KXt2YXIgaT1lLmV4dGVuZCh7b2Y6dGhpcy5hY3RpdmV9LHRoaXMub3B0aW9ucy5wb3NpdGlvbik7Y2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLHRoaXMuZWxlbWVudC5maW5kKFwiLnVpLW1lbnVcIikubm90KHQucGFyZW50cyhcIi51aS1tZW51XCIpKS5oaWRlKCkuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLHQuc2hvdygpLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlblwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwidHJ1ZVwiKS5wb3NpdGlvbihpKX0sY29sbGFwc2VBbGw6ZnVuY3Rpb24odCxpKXtjbGVhclRpbWVvdXQodGhpcy50aW1lciksdGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3ZhciBzPWk/dGhpcy5lbGVtZW50OmUodCYmdC50YXJnZXQpLmNsb3Nlc3QodGhpcy5lbGVtZW50LmZpbmQoXCIudWktbWVudVwiKSk7cy5sZW5ndGh8fChzPXRoaXMuZWxlbWVudCksdGhpcy5fY2xvc2UocyksdGhpcy5ibHVyKHQpLHRoaXMuYWN0aXZlTWVudT1zfSx0aGlzLmRlbGF5KX0sX2Nsb3NlOmZ1bmN0aW9uKGUpe2V8fChlPXRoaXMuYWN0aXZlP3RoaXMuYWN0aXZlLnBhcmVudCgpOnRoaXMuZWxlbWVudCksZS5maW5kKFwiLnVpLW1lbnVcIikuaGlkZSgpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwiZmFsc2VcIikuZW5kKCkuZmluZChcImEudWktc3RhdGUtYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpfSxjb2xsYXBzZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmFjdGl2ZSYmdGhpcy5hY3RpdmUucGFyZW50KCkuY2xvc2VzdChcIi51aS1tZW51LWl0ZW1cIix0aGlzLmVsZW1lbnQpO3QmJnQubGVuZ3RoJiYodGhpcy5fY2xvc2UoKSx0aGlzLmZvY3VzKGUsdCkpfSxleHBhbmQ6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5hY3RpdmUmJnRoaXMuYWN0aXZlLmNoaWxkcmVuKFwiLnVpLW1lbnUgXCIpLmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKS5maXJzdCgpO3QmJnQubGVuZ3RoJiYodGhpcy5fb3Blbih0LnBhcmVudCgpKSx0aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuZm9jdXMoZSx0KX0pKX0sbmV4dDpmdW5jdGlvbihlKXt0aGlzLl9tb3ZlKFwibmV4dFwiLFwiZmlyc3RcIixlKX0scHJldmlvdXM6ZnVuY3Rpb24oZSl7dGhpcy5fbW92ZShcInByZXZcIixcImxhc3RcIixlKX0saXNGaXJzdEl0ZW06ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hY3RpdmUmJiF0aGlzLmFjdGl2ZS5wcmV2QWxsKFwiLnVpLW1lbnUtaXRlbVwiKS5sZW5ndGh9LGlzTGFzdEl0ZW06ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hY3RpdmUmJiF0aGlzLmFjdGl2ZS5uZXh0QWxsKFwiLnVpLW1lbnUtaXRlbVwiKS5sZW5ndGh9LF9tb3ZlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgczt0aGlzLmFjdGl2ZSYmKHM9XCJmaXJzdFwiPT09ZXx8XCJsYXN0XCI9PT1lP3RoaXMuYWN0aXZlW1wiZmlyc3RcIj09PWU/XCJwcmV2QWxsXCI6XCJuZXh0QWxsXCJdKFwiLnVpLW1lbnUtaXRlbVwiKS5lcSgtMSk6dGhpcy5hY3RpdmVbZStcIkFsbFwiXShcIi51aS1tZW51LWl0ZW1cIikuZXEoMCkpLHMmJnMubGVuZ3RoJiZ0aGlzLmFjdGl2ZXx8KHM9dGhpcy5hY3RpdmVNZW51LmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKVt0XSgpKSx0aGlzLmZvY3VzKGkscyl9LG5leHRQYWdlOmZ1bmN0aW9uKHQpe3ZhciBpLHMsbjtyZXR1cm4gdGhpcy5hY3RpdmU/KHRoaXMuaXNMYXN0SXRlbSgpfHwodGhpcy5faGFzU2Nyb2xsKCk/KHM9dGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wLG49dGhpcy5lbGVtZW50LmhlaWdodCgpLHRoaXMuYWN0aXZlLm5leHRBbGwoXCIudWktbWVudS1pdGVtXCIpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gaT1lKHRoaXMpLDA+aS5vZmZzZXQoKS50b3Atcy1ufSksdGhpcy5mb2N1cyh0LGkpKTp0aGlzLmZvY3VzKHQsdGhpcy5hY3RpdmVNZW51LmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKVt0aGlzLmFjdGl2ZT9cImxhc3RcIjpcImZpcnN0XCJdKCkpKSx1bmRlZmluZWQpOih0aGlzLm5leHQodCksdW5kZWZpbmVkKX0scHJldmlvdXNQYWdlOmZ1bmN0aW9uKHQpe3ZhciBpLHMsbjtyZXR1cm4gdGhpcy5hY3RpdmU/KHRoaXMuaXNGaXJzdEl0ZW0oKXx8KHRoaXMuX2hhc1Njcm9sbCgpPyhzPXRoaXMuYWN0aXZlLm9mZnNldCgpLnRvcCxuPXRoaXMuZWxlbWVudC5oZWlnaHQoKSx0aGlzLmFjdGl2ZS5wcmV2QWxsKFwiLnVpLW1lbnUtaXRlbVwiKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIGk9ZSh0aGlzKSxpLm9mZnNldCgpLnRvcC1zK24+MH0pLHRoaXMuZm9jdXModCxpKSk6dGhpcy5mb2N1cyh0LHRoaXMuYWN0aXZlTWVudS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW1cIikuZmlyc3QoKSkpLHVuZGVmaW5lZCk6KHRoaXMubmV4dCh0KSx1bmRlZmluZWQpfSxfaGFzU2Nyb2xsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpPHRoaXMuZWxlbWVudC5wcm9wKFwic2Nyb2xsSGVpZ2h0XCIpfSxzZWxlY3Q6ZnVuY3Rpb24odCl7dGhpcy5hY3RpdmU9dGhpcy5hY3RpdmV8fGUodC50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIpO3ZhciBpPXtpdGVtOnRoaXMuYWN0aXZlfTt0aGlzLmFjdGl2ZS5oYXMoXCIudWktbWVudVwiKS5sZW5ndGh8fHRoaXMuY29sbGFwc2VBbGwodCwhMCksdGhpcy5fdHJpZ2dlcihcInNlbGVjdFwiLHQsaSl9fSl9KShqUXVlcnkpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnktdWkubWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKlxuICogalF1ZXJ5IEJCUTogQmFjayBCdXR0b24gJiBRdWVyeSBMaWJyYXJ5IC0gdjEuMi4xIC0gMi8xNy8yMDEwXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1iYnEtcGx1Z2luL1xuICogXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAgXCJDb3dib3lcIiBCZW4gQWxtYW5cbiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLlxuICogaHR0cDovL2JlbmFsbWFuLmNvbS9hYm91dC9saWNlbnNlL1xuICovXG4oZnVuY3Rpb24gKCQsIHApIHtcbiAgICB2YXIgaSwgbSA9IEFycmF5LnByb3RvdHlwZS5zbGljZSwgciA9IGRlY29kZVVSSUNvbXBvbmVudCwgYSA9ICQucGFyYW0sIGMsIGwsIHYsIGIgPSAkLmJicSA9ICQuYmJxIHx8IHt9LCBxLCB1LCBqLCBlID0gJC5ldmVudC5zcGVjaWFsLCBkID0gXCJoYXNoY2hhbmdlXCIsIEEgPSBcInF1ZXJ5c3RyaW5nXCIsIEQgPSBcImZyYWdtZW50XCIsIHkgPSBcImVsZW1VcmxBdHRyXCIsIGcgPSBcImxvY2F0aW9uXCIsIGsgPSBcImhyZWZcIiwgdCA9IFwic3JjXCIsIHggPSAvXi4qXFw/fCMuKiQvZywgdyA9IC9eLipcXCMvLCBoLCBDID0ge307XG5cbiAgICBmdW5jdGlvbiBFKEYpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBGID09PSBcInN0cmluZ1wiXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gQihHKSB7XG4gICAgICAgIHZhciBGID0gbS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gRy5hcHBseSh0aGlzLCBGLmNvbmNhdChtLmNhbGwoYXJndW1lbnRzKSkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBuKEYpIHtcbiAgICAgICAgcmV0dXJuIEYucmVwbGFjZSgvXlteI10qIz8oLiopJC8sIFwiJDFcIilcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvKEYpIHtcbiAgICAgICAgcmV0dXJuIEYucmVwbGFjZSgvKD86XltePyNdKlxcPyhbXiNdKikuKiQpPy4qLywgXCIkMVwiKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGYoSCwgTSwgRiwgSSwgRykge1xuICAgICAgICB2YXIgTywgTCwgSywgTiwgSjtcbiAgICAgICAgaWYgKEkgIT09IGkpIHtcbiAgICAgICAgICAgIEsgPSBGLm1hdGNoKEggPyAvXihbXiNdKilcXCM/KC4qKSQvIDogL14oW14jP10qKVxcPz8oW14jXSopKCM/LiopLyk7XG4gICAgICAgICAgICBKID0gS1szXSB8fCBcIlwiO1xuICAgICAgICAgICAgaWYgKEcgPT09IDIgJiYgRShJKSkge1xuICAgICAgICAgICAgICAgIEwgPSBJLnJlcGxhY2UoSCA/IHcgOiB4LCBcIlwiKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBOID0gbChLWzJdKTtcbiAgICAgICAgICAgICAgICBJID0gRShJKSA/IGxbSCA/IEQgOiBBXShJKSA6IEk7XG4gICAgICAgICAgICAgICAgTCA9IEcgPT09IDIgPyBJIDogRyA9PT0gMSA/ICQuZXh0ZW5kKHt9LCBJLCBOKSA6ICQuZXh0ZW5kKHt9LCBOLCBJKTtcbiAgICAgICAgICAgICAgICBMID0gYShMKTtcbiAgICAgICAgICAgICAgICBpZiAoSCkge1xuICAgICAgICAgICAgICAgICAgICBMID0gTC5yZXBsYWNlKGgsIHIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgTyA9IEtbMV0gKyAoSCA/IFwiI1wiIDogTCB8fCAhS1sxXSA/IFwiP1wiIDogXCJcIikgKyBMICsgSlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgTyA9IE0oRiAhPT0gaSA/IEYgOiBwW2ddW2tdKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPXG4gICAgfVxuXG4gICAgYVtBXSA9IEIoZiwgMCwgbyk7XG4gICAgYVtEXSA9IGMgPSBCKGYsIDEsIG4pO1xuICAgIGMubm9Fc2NhcGUgPSBmdW5jdGlvbiAoRykge1xuICAgICAgICBHID0gRyB8fCBcIlwiO1xuICAgICAgICB2YXIgRiA9ICQubWFwKEcuc3BsaXQoXCJcIiksIGVuY29kZVVSSUNvbXBvbmVudCk7XG4gICAgICAgIGggPSBuZXcgUmVnRXhwKEYuam9pbihcInxcIiksIFwiZ1wiKVxuICAgIH07XG4gICAgYy5ub0VzY2FwZShcIiwvXCIpO1xuICAgICQuZGVwYXJhbSA9IGwgPSBmdW5jdGlvbiAoSSwgRikge1xuICAgICAgICB2YXIgSCA9IHt9LCBHID0ge1widHJ1ZVwiOiAhMCwgXCJmYWxzZVwiOiAhMSwgXCJudWxsXCI6IG51bGx9O1xuICAgICAgICAkLmVhY2goSS5yZXBsYWNlKC9cXCsvZywgXCIgXCIpLnNwbGl0KFwiJlwiKSwgZnVuY3Rpb24gKEwsIFEpIHtcbiAgICAgICAgICAgIHZhciBLID0gUS5zcGxpdChcIj1cIiksIFAgPSByKEtbMF0pLCBKLCBPID0gSCwgTSA9IDAsIFIgPSBQLnNwbGl0KFwiXVtcIiksIE4gPSBSLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICBpZiAoL1xcWy8udGVzdChSWzBdKSAmJiAvXFxdJC8udGVzdChSW05dKSkge1xuICAgICAgICAgICAgICAgIFJbTl0gPSBSW05dLnJlcGxhY2UoL1xcXSQvLCBcIlwiKTtcbiAgICAgICAgICAgICAgICBSID0gUi5zaGlmdCgpLnNwbGl0KFwiW1wiKS5jb25jYXQoUik7XG4gICAgICAgICAgICAgICAgTiA9IFIubGVuZ3RoIC0gMVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBOID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEsubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICAgICAgSiA9IHIoS1sxXSk7XG4gICAgICAgICAgICAgICAgaWYgKEYpIHtcbiAgICAgICAgICAgICAgICAgICAgSiA9IEogJiYgIWlzTmFOKEopID8gK0ogOiBKID09PSBcInVuZGVmaW5lZFwiID8gaSA6IEdbSl0gIT09IGkgPyBHW0pdIDogSlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoTikge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKDsgTSA8PSBOOyBNKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFAgPSBSW01dID09PSBcIlwiID8gTy5sZW5ndGggOiBSW01dO1xuICAgICAgICAgICAgICAgICAgICAgICAgTyA9IE9bUF0gPSBNIDwgTiA/IE9bUF0gfHwgKFJbTSArIDFdICYmIGlzTmFOKFJbTSArIDFdKSA/IHt9IDogW10pIDogSlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQuaXNBcnJheShIW1BdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgSFtQXS5wdXNoKEopXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoSFtQXSAhPT0gaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhbUF0gPSBbSFtQXSwgSl1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSFtQXSA9IEpcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKFApIHtcbiAgICAgICAgICAgICAgICAgICAgSFtQXSA9IEYgPyBpIDogXCJcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBIXG4gICAgfTtcbiAgICBmdW5jdGlvbiB6KEgsIEYsIEcpIHtcbiAgICAgICAgaWYgKEYgPT09IGkgfHwgdHlwZW9mIEYgPT09IFwiYm9vbGVhblwiKSB7XG4gICAgICAgICAgICBHID0gRjtcbiAgICAgICAgICAgIEYgPSBhW0ggPyBEIDogQV0oKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgRiA9IEUoRikgPyBGLnJlcGxhY2UoSCA/IHcgOiB4LCBcIlwiKSA6IEZcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbChGLCBHKVxuICAgIH1cblxuICAgIGxbQV0gPSBCKHosIDApO1xuICAgIGxbRF0gPSB2ID0gQih6LCAxKTtcbiAgICAkW3ldIHx8ICgkW3ldID0gZnVuY3Rpb24gKEYpIHtcbiAgICAgICAgcmV0dXJuICQuZXh0ZW5kKEMsIEYpXG4gICAgfSkoe2E6IGssIGJhc2U6IGssIGlmcmFtZTogdCwgaW1nOiB0LCBpbnB1dDogdCwgZm9ybTogXCJhY3Rpb25cIiwgbGluazogaywgc2NyaXB0OiB0fSk7XG4gICAgaiA9ICRbeV07XG4gICAgZnVuY3Rpb24gcyhJLCBHLCBILCBGKSB7XG4gICAgICAgIGlmICghRShIKSAmJiB0eXBlb2YgSCAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgRiA9IEg7XG4gICAgICAgICAgICBIID0gRztcbiAgICAgICAgICAgIEcgPSBpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgTCA9ICQodGhpcyksIEogPSBHIHx8IGooKVsodGhpcy5ub2RlTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpXSB8fCBcIlwiLCBLID0gSiAmJiBMLmF0dHIoSikgfHwgXCJcIjtcbiAgICAgICAgICAgIEwuYXR0cihKLCBhW0ldKEssIEgsIEYpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQuZm5bQV0gPSBCKHMsIEEpO1xuICAgICQuZm5bRF0gPSBCKHMsIEQpO1xuICAgIGIucHVzaFN0YXRlID0gcSA9IGZ1bmN0aW9uIChJLCBGKSB7XG4gICAgICAgIGlmIChFKEkpICYmIC9eIy8udGVzdChJKSAmJiBGID09PSBpKSB7XG4gICAgICAgICAgICBGID0gMlxuICAgICAgICB9XG4gICAgICAgIHZhciBIID0gSSAhPT0gaSwgRyA9IGMocFtnXVtrXSwgSCA/IEkgOiB7fSwgSCA/IEYgOiAyKTtcbiAgICAgICAgcFtnXVtrXSA9IEcgKyAoLyMvLnRlc3QoRykgPyBcIlwiIDogXCIjXCIpXG4gICAgfTtcbiAgICBiLmdldFN0YXRlID0gdSA9IGZ1bmN0aW9uIChGLCBHKSB7XG4gICAgICAgIHJldHVybiBGID09PSBpIHx8IHR5cGVvZiBGID09PSBcImJvb2xlYW5cIiA/IHYoRikgOiB2KEcpW0ZdXG4gICAgfTtcbiAgICBiLnJlbW92ZVN0YXRlID0gZnVuY3Rpb24gKEYpIHtcbiAgICAgICAgdmFyIEcgPSB7fTtcbiAgICAgICAgaWYgKEYgIT09IGkpIHtcbiAgICAgICAgICAgIEcgPSB1KCk7XG4gICAgICAgICAgICAkLmVhY2goJC5pc0FycmF5KEYpID8gRiA6IGFyZ3VtZW50cywgZnVuY3Rpb24gKEksIEgpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgR1tIXVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBxKEcsIDIpXG4gICAgfTtcbiAgICBlW2RdID0gJC5leHRlbmQoZVtkXSwge1xuICAgICAgICBhZGQ6IGZ1bmN0aW9uIChGKSB7XG4gICAgICAgICAgICB2YXIgSDtcblxuICAgICAgICAgICAgZnVuY3Rpb24gRyhKKSB7XG4gICAgICAgICAgICAgICAgdmFyIEkgPSBKW0RdID0gYygpO1xuICAgICAgICAgICAgICAgIEouZ2V0U3RhdGUgPSBmdW5jdGlvbiAoSywgTCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gSyA9PT0gaSB8fCB0eXBlb2YgSyA9PT0gXCJib29sZWFuXCIgPyBsKEksIEspIDogbChJLCBMKVtLXVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgSC5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICgkLmlzRnVuY3Rpb24oRikpIHtcbiAgICAgICAgICAgICAgICBIID0gRjtcbiAgICAgICAgICAgICAgICByZXR1cm4gR1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBIID0gRi5oYW5kbGVyO1xuICAgICAgICAgICAgICAgIEYuaGFuZGxlciA9IEdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG59KShqUXVlcnksIHdpbmRvdyk7XG4vKlxuICogalF1ZXJ5IGhhc2hjaGFuZ2UgZXZlbnQgLSB2MS4yIC0gMi8xMS8yMDEwXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1oYXNoY2hhbmdlLXBsdWdpbi9cbiAqIFxuICogQ29weXJpZ2h0IChjKSAyMDEwIFwiQ293Ym95XCIgQmVuIEFsbWFuXG4gKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgYW5kIEdQTCBsaWNlbnNlcy5cbiAqIGh0dHA6Ly9iZW5hbG1hbi5jb20vYWJvdXQvbGljZW5zZS9cbiAqL1xuKGZ1bmN0aW9uICgkLCBpLCBiKSB7XG4gICAgdmFyIGosIGsgPSAkLmV2ZW50LnNwZWNpYWwsIGMgPSBcImxvY2F0aW9uXCIsIGQgPSBcImhhc2hjaGFuZ2VcIiwgbCA9IFwiaHJlZlwiLCBmID0gJC5icm93c2VyLCBnID0gZG9jdW1lbnQuZG9jdW1lbnRNb2RlLCBoID0gZi5tc2llICYmIChnID09PSBiIHx8IGcgPCA4KSwgZSA9IFwib25cIiArIGQgaW4gaSAmJiAhaDtcblxuICAgIGZ1bmN0aW9uIGEobSkge1xuICAgICAgICBtID0gbSB8fCBpW2NdW2xdO1xuICAgICAgICByZXR1cm4gbS5yZXBsYWNlKC9eW14jXSojPyguKikkLywgXCIkMVwiKVxuICAgIH1cblxuICAgICRbZCArIFwiRGVsYXlcIl0gPSAxMDA7XG4gICAga1tkXSA9ICQuZXh0ZW5kKGtbZF0sIHtcbiAgICAgICAgc2V0dXA6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkKGouc3RhcnQpXG4gICAgICAgIH0sIHRlYXJkb3duOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJChqLnN0b3ApXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBqID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG0gPSB7fSwgciwgbiwgbywgcTtcblxuICAgICAgICBmdW5jdGlvbiBwKCkge1xuICAgICAgICAgICAgbyA9IHEgPSBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGgpIHtcbiAgICAgICAgICAgICAgICBuID0gJCgnPGlmcmFtZSBzcmM9XCJqYXZhc2NyaXB0OjBcIi8+JykuaGlkZSgpLmluc2VydEFmdGVyKFwiYm9keVwiKVswXS5jb250ZW50V2luZG93O1xuICAgICAgICAgICAgICAgIHEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhKG4uZG9jdW1lbnRbY11bbF0pXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBvID0gZnVuY3Rpb24gKHUsIHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHUgIT09IHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ID0gbi5kb2N1bWVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHQub3BlbigpLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0W2NdLmhhc2ggPSBcIiNcIiArIHVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgbyhhKCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBtLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0ID0gYSgpO1xuICAgICAgICAgICAgbyB8fCBwKCk7XG4gICAgICAgICAgICAoZnVuY3Rpb24gcygpIHtcbiAgICAgICAgICAgICAgICB2YXIgdiA9IGEoKSwgdSA9IHEodCk7XG4gICAgICAgICAgICAgICAgaWYgKHYgIT09IHQpIHtcbiAgICAgICAgICAgICAgICAgICAgbyh0ID0gdiwgdSk7XG4gICAgICAgICAgICAgICAgICAgICQoaSkudHJpZ2dlcihkKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh1ICE9PSB0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpW2NdW2xdID0gaVtjXVtsXS5yZXBsYWNlKC8jLiovLCBcIlwiKSArIFwiI1wiICsgdVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHIgPSBzZXRUaW1lb3V0KHMsICRbZCArIFwiRGVsYXlcIl0pXG4gICAgICAgICAgICB9KSgpXG4gICAgICAgIH07XG4gICAgICAgIG0uc3RvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghbikge1xuICAgICAgICAgICAgICAgIHIgJiYgY2xlYXJUaW1lb3V0KHIpO1xuICAgICAgICAgICAgICAgIHIgPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBtXG4gICAgfSkoKVxufSkoalF1ZXJ5LCB3aW5kb3cpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkuYmEtYmJxLm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBieFNsaWRlciB2NC4yLjFkXG4gKiBDb3B5cmlnaHQgMjAxMy0yMDE3IFN0ZXZlbiBXYW5kZXJza2lcbiAqIFdyaXR0ZW4gd2hpbGUgZHJpbmtpbmcgQmVsZ2lhbiBhbGVzIGFuZCBsaXN0ZW5pbmcgdG8gamF6elxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUKVxuICovXG5cbjsoZnVuY3Rpb24oJCkge1xuXG4gIHZhciBkZWZhdWx0cyA9IHtcblxuICAgIC8vIEdFTkVSQUxcbiAgICBtb2RlOiAnaG9yaXpvbnRhbCcsXG4gICAgc2xpZGVTZWxlY3RvcjogJycsXG4gICAgaW5maW5pdGVMb29wOiB0cnVlLFxuICAgIGhpZGVDb250cm9sT25FbmQ6IGZhbHNlLFxuICAgIHNwZWVkOiA1MDAsXG4gICAgZWFzaW5nOiBudWxsLFxuICAgIHNsaWRlTWFyZ2luOiAwLFxuICAgIHN0YXJ0U2xpZGU6IDAsXG4gICAgcmFuZG9tU3RhcnQ6IGZhbHNlLFxuICAgIGNhcHRpb25zOiBmYWxzZSxcbiAgICB0aWNrZXI6IGZhbHNlLFxuICAgIHRpY2tlckhvdmVyOiBmYWxzZSxcbiAgICBhZGFwdGl2ZUhlaWdodDogZmFsc2UsXG4gICAgYWRhcHRpdmVIZWlnaHRTcGVlZDogNTAwLFxuICAgIHZpZGVvOiBmYWxzZSxcbiAgICB1c2VDU1M6IHRydWUsXG4gICAgcHJlbG9hZEltYWdlczogJ3Zpc2libGUnLFxuICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgc2xpZGVaSW5kZXg6IDUwLFxuICAgIHdyYXBwZXJDbGFzczogJ2J4LXdyYXBwZXInLFxuXG4gICAgLy8gVE9VQ0hcbiAgICB0b3VjaEVuYWJsZWQ6IHRydWUsXG4gICAgc3dpcGVUaHJlc2hvbGQ6IDUwLFxuICAgIG9uZVRvT25lVG91Y2g6IHRydWUsXG4gICAgcHJldmVudERlZmF1bHRTd2lwZVg6IHRydWUsXG4gICAgcHJldmVudERlZmF1bHRTd2lwZVk6IGZhbHNlLFxuXG4gICAgLy8gQUNDRVNTSUJJTElUWVxuICAgIGFyaWFMaXZlOiB0cnVlLFxuICAgIGFyaWFIaWRkZW46IHRydWUsXG5cbiAgICAvLyBLRVlCT0FSRFxuICAgIGtleWJvYXJkRW5hYmxlZDogZmFsc2UsXG5cbiAgICAvLyBQQUdFUlxuICAgIHBhZ2VyOiB0cnVlLFxuICAgIHBhZ2VyVHlwZTogJ2Z1bGwnLFxuICAgIHBhZ2VyU2hvcnRTZXBhcmF0b3I6ICcgLyAnLFxuICAgIHBhZ2VyU2VsZWN0b3I6IG51bGwsXG4gICAgYnVpbGRQYWdlcjogbnVsbCxcbiAgICBwYWdlckN1c3RvbTogbnVsbCxcblxuICAgIC8vIENPTlRST0xTXG4gICAgY29udHJvbHM6IHRydWUsXG4gICAgbmV4dFRleHQ6ICdOZXh0JyxcbiAgICBwcmV2VGV4dDogJ1ByZXYnLFxuICAgIG5leHRTZWxlY3RvcjogbnVsbCxcbiAgICBwcmV2U2VsZWN0b3I6IG51bGwsXG4gICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICBzdGFydFRleHQ6ICdTdGFydCcsXG4gICAgc3RvcFRleHQ6ICdTdG9wJyxcbiAgICBhdXRvQ29udHJvbHNDb21iaW5lOiBmYWxzZSxcbiAgICBhdXRvQ29udHJvbHNTZWxlY3RvcjogbnVsbCxcblxuICAgIC8vIEFVVE9cbiAgICBhdXRvOiBmYWxzZSxcbiAgICBwYXVzZTogNDAwMCxcbiAgICBhdXRvU3RhcnQ6IHRydWUsXG4gICAgYXV0b0RpcmVjdGlvbjogJ25leHQnLFxuICAgIHN0b3BBdXRvT25DbGljazogZmFsc2UsXG4gICAgYXV0b0hvdmVyOiBmYWxzZSxcbiAgICBhdXRvRGVsYXk6IDAsXG4gICAgYXV0b1NsaWRlRm9yT25lUGFnZTogZmFsc2UsXG5cbiAgICAvLyBDQVJPVVNFTFxuICAgIG1pblNsaWRlczogMSxcbiAgICBtYXhTbGlkZXM6IDEsXG4gICAgbW92ZVNsaWRlczogMCxcbiAgICBzbGlkZVdpZHRoOiAwLFxuICAgIHNocmlua0l0ZW1zOiBmYWxzZSxcblxuICAgIC8vIENBTExCQUNLU1xuICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxuICAgIG9uU2xpZGVCZWZvcmU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcbiAgICBvblNsaWRlQWZ0ZXI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcbiAgICBvblNsaWRlTmV4dDogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxuICAgIG9uU2xpZGVQcmV2OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXG4gICAgb25TbGlkZXJSZXNpemU6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcblx0b25BdXRvQ2hhbmdlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0gLy9jYWxscyB3aGVuIGF1dG8gc2xpZGVzIHN0YXJ0cyBhbmQgc3RvcHNcbiAgfTtcblxuICAkLmZuLmJ4U2xpZGVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuXG4gICAgaWYgKHRoaXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvLyBzdXBwb3J0IG11bHRpcGxlIGVsZW1lbnRzXG4gICAgaWYgKHRoaXMubGVuZ3RoID4gMSkge1xuICAgICAgdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLmJ4U2xpZGVyKG9wdGlvbnMpO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgYSBuYW1lc3BhY2UgdG8gYmUgdXNlZCB0aHJvdWdob3V0IHRoZSBwbHVnaW5cbiAgICB2YXIgc2xpZGVyID0ge30sXG4gICAgLy8gc2V0IGEgcmVmZXJlbmNlIHRvIG91ciBzbGlkZXIgZWxlbWVudFxuICAgIGVsID0gdGhpcyxcbiAgICAvLyBnZXQgdGhlIG9yaWdpbmFsIHdpbmRvdyBkaW1lbnMgKHRoYW5rcyBhIGxvdCBJRSlcbiAgICB3aW5kb3dXaWR0aCA9ICQod2luZG93KS53aWR0aCgpLFxuICAgIHdpbmRvd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcblxuICAgIC8vIFJldHVybiBpZiBzbGlkZXIgaXMgYWxyZWFkeSBpbml0aWFsaXplZFxuICAgIGlmICgkKGVsKS5kYXRhKCdieFNsaWRlcicpKSB7IHJldHVybjsgfVxuXG4gICAgLyoqXG4gICAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgKiA9IFBSSVZBVEUgRlVOQ1RJT05TXG4gICAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIG5hbWVzcGFjZSBzZXR0aW5ncyB0byBiZSB1c2VkIHRocm91Z2hvdXQgcGx1Z2luXG4gICAgICovXG4gICAgdmFyIGluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIFJldHVybiBpZiBzbGlkZXIgaXMgYWxyZWFkeSBpbml0aWFsaXplZFxuICAgICAgaWYgKCQoZWwpLmRhdGEoJ2J4U2xpZGVyJykpIHsgcmV0dXJuOyB9XG4gICAgICAvLyBtZXJnZSB1c2VyLXN1cHBsaWVkIG9wdGlvbnMgd2l0aCB0aGUgZGVmYXVsdHNcbiAgICAgIHNsaWRlci5zZXR0aW5ncyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgICAvLyBwYXJzZSBzbGlkZVdpZHRoIHNldHRpbmdcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoID0gcGFyc2VJbnQoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGgpO1xuICAgICAgLy8gc3RvcmUgdGhlIG9yaWdpbmFsIGNoaWxkcmVuXG4gICAgICBzbGlkZXIuY2hpbGRyZW4gPSBlbC5jaGlsZHJlbihzbGlkZXIuc2V0dGluZ3Muc2xpZGVTZWxlY3Rvcik7XG4gICAgICAvLyBjaGVjayBpZiBhY3R1YWwgbnVtYmVyIG9mIHNsaWRlcyBpcyBsZXNzIHRoYW4gbWluU2xpZGVzIC8gbWF4U2xpZGVzXG4gICAgICBpZiAoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCA8IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMpIHsgc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7IH1cbiAgICAgIGlmIChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIDwgc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcykgeyBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzID0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aDsgfVxuICAgICAgLy8gaWYgcmFuZG9tIHN0YXJ0LCBzZXQgdGhlIHN0YXJ0U2xpZGUgc2V0dGluZyB0byByYW5kb20gbnVtYmVyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnJhbmRvbVN0YXJ0KSB7IHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCk7IH1cbiAgICAgIC8vIHN0b3JlIGFjdGl2ZSBzbGlkZSBpbmZvcm1hdGlvblxuICAgICAgc2xpZGVyLmFjdGl2ZSA9IHsgaW5kZXg6IHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlIH07XG4gICAgICAvLyBzdG9yZSBpZiB0aGUgc2xpZGVyIGlzIGluIGNhcm91c2VsIG1vZGUgKGRpc3BsYXlpbmcgLyBtb3ZpbmcgbXVsdGlwbGUgc2xpZGVzKVxuICAgICAgc2xpZGVyLmNhcm91c2VsID0gc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyA+IDEgfHwgc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA+IDE7XG4gICAgICAvLyBpZiBjYXJvdXNlbCwgZm9yY2UgcHJlbG9hZEltYWdlcyA9ICdhbGwnXG4gICAgICBpZiAoc2xpZGVyLmNhcm91c2VsKSB7IHNsaWRlci5zZXR0aW5ncy5wcmVsb2FkSW1hZ2VzID0gJ2FsbCc7IH1cbiAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgbWluIC8gbWF4IHdpZHRoIHRocmVzaG9sZHMgYmFzZWQgb24gbWluIC8gbWF4IG51bWJlciBvZiBzbGlkZXNcbiAgICAgIC8vIHVzZWQgdG8gc2V0dXAgYW5kIHVwZGF0ZSBjYXJvdXNlbCBzbGlkZXMgZGltZW5zaW9uc1xuICAgICAgc2xpZGVyLm1pblRocmVzaG9sZCA9IChzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzICogc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGgpICsgKChzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzIC0gMSkgKiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pO1xuICAgICAgc2xpZGVyLm1heFRocmVzaG9sZCA9IChzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzICogc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGgpICsgKChzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzIC0gMSkgKiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pO1xuICAgICAgLy8gc3RvcmUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHNsaWRlciAoaWYgY3VycmVudGx5IGFuaW1hdGluZywgd29ya2luZyBpcyB0cnVlKVxuICAgICAgc2xpZGVyLndvcmtpbmcgPSBmYWxzZTtcbiAgICAgIC8vIGluaXRpYWxpemUgdGhlIGNvbnRyb2xzIG9iamVjdFxuICAgICAgc2xpZGVyLmNvbnRyb2xzID0ge307XG4gICAgICAvLyBpbml0aWFsaXplIGFuIGF1dG8gaW50ZXJ2YWxcbiAgICAgIHNsaWRlci5pbnRlcnZhbCA9IG51bGw7XG4gICAgICAvLyBkZXRlcm1pbmUgd2hpY2ggcHJvcGVydHkgdG8gdXNlIGZvciB0cmFuc2l0aW9uc1xuICAgICAgc2xpZGVyLmFuaW1Qcm9wID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgPyAndG9wJyA6ICdsZWZ0JztcbiAgICAgIC8vIGRldGVybWluZSBpZiBoYXJkd2FyZSBhY2NlbGVyYXRpb24gY2FuIGJlIHVzZWRcbiAgICAgIHNsaWRlci51c2luZ0NTUyA9IHNsaWRlci5zZXR0aW5ncy51c2VDU1MgJiYgc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICdmYWRlJyAmJiAoZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBvdXIgdGVzdCBkaXYgZWxlbWVudFxuICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JyksXG4gICAgICAgIC8vIGNzcyB0cmFuc2l0aW9uIHByb3BlcnRpZXNcbiAgICAgICAgcHJvcHMgPSBbJ1dlYmtpdFBlcnNwZWN0aXZlJywgJ01velBlcnNwZWN0aXZlJywgJ09QZXJzcGVjdGl2ZScsICdtc1BlcnNwZWN0aXZlJ107XG4gICAgICAgIC8vIHRlc3QgZm9yIGVhY2ggcHJvcGVydHlcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChkaXYuc3R5bGVbcHJvcHNbaV1dICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNsaWRlci5jc3NQcmVmaXggPSBwcm9wc1tpXS5yZXBsYWNlKCdQZXJzcGVjdGl2ZScsICcnKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgc2xpZGVyLmFuaW1Qcm9wID0gJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNmb3JtJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9KCkpO1xuICAgICAgLy8gaWYgdmVydGljYWwgbW9kZSBhbHdheXMgbWFrZSBtYXhTbGlkZXMgYW5kIG1pblNsaWRlcyBlcXVhbFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgPSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzOyB9XG4gICAgICAvLyBzYXZlIG9yaWdpbmFsIHN0eWxlIGRhdGFcbiAgICAgIGVsLmRhdGEoJ29yaWdTdHlsZScsIGVsLmF0dHIoJ3N0eWxlJykpO1xuICAgICAgZWwuY2hpbGRyZW4oc2xpZGVyLnNldHRpbmdzLnNsaWRlU2VsZWN0b3IpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJywgJCh0aGlzKS5hdHRyKCdzdHlsZScpKTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBwZXJmb3JtIGFsbCBET00gLyBDU1MgbW9kaWZpY2F0aW9uc1xuICAgICAgc2V0dXAoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgYWxsIERPTSBhbmQgQ1NTIG1vZGlmaWNhdGlvbnNcbiAgICAgKi9cbiAgICB2YXIgc2V0dXAgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBwcmVsb2FkU2VsZWN0b3IgPSBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUpOyAvLyBzZXQgdGhlIGRlZmF1bHQgcHJlbG9hZCBzZWxlY3RvciAodmlzaWJsZSlcblxuICAgICAgLy8gd3JhcCBlbCBpbiBhIHdyYXBwZXJcbiAgICAgIGVsLndyYXAoJzxkaXYgY2xhc3M9XCInICsgc2xpZGVyLnNldHRpbmdzLndyYXBwZXJDbGFzcyArICdcIj48ZGl2IGNsYXNzPVwiYngtdmlld3BvcnRcIj48L2Rpdj48L2Rpdj4nKTtcbiAgICAgIC8vIHN0b3JlIGEgbmFtZXNwYWNlIHJlZmVyZW5jZSB0byAuYngtdmlld3BvcnRcbiAgICAgIHNsaWRlci52aWV3cG9ydCA9IGVsLnBhcmVudCgpO1xuXG4gICAgICAvLyBhZGQgYXJpYS1saXZlIGlmIHRoZSBzZXR0aW5nIGlzIGVuYWJsZWQgYW5kIHRpY2tlciBtb2RlIGlzIGRpc2FibGVkXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFMaXZlICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7XG4gICAgICAgIHNsaWRlci52aWV3cG9ydC5hdHRyKCdhcmlhLWxpdmUnLCAncG9saXRlJyk7XG4gICAgICB9XG4gICAgICAvLyBhZGQgYSBsb2FkaW5nIGRpdiB0byBkaXNwbGF5IHdoaWxlIGltYWdlcyBhcmUgbG9hZGluZ1xuICAgICAgc2xpZGVyLmxvYWRlciA9ICQoJzxkaXYgY2xhc3M9XCJieC1sb2FkaW5nXCIgLz4nKTtcbiAgICAgIHNsaWRlci52aWV3cG9ydC5wcmVwZW5kKHNsaWRlci5sb2FkZXIpO1xuICAgICAgLy8gc2V0IGVsIHRvIGEgbWFzc2l2ZSB3aWR0aCwgdG8gaG9sZCBhbnkgbmVlZGVkIHNsaWRlc1xuICAgICAgLy8gYWxzbyBzdHJpcCBhbnkgbWFyZ2luIGFuZCBwYWRkaW5nIGZyb20gZWxcbiAgICAgIGVsLmNzcyh7XG4gICAgICAgIHdpZHRoOiBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggKiAxMDAwICsgMjE1KSArICclJyA6ICdhdXRvJyxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgICAgIH0pO1xuICAgICAgLy8gaWYgdXNpbmcgQ1NTLCBhZGQgdGhlIGVhc2luZyBwcm9wZXJ0eVxuICAgICAgaWYgKHNsaWRlci51c2luZ0NTUyAmJiBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nKSB7XG4gICAgICAgIGVsLmNzcygnLScgKyBzbGlkZXIuY3NzUHJlZml4ICsgJy10cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbicsIHNsaWRlci5zZXR0aW5ncy5lYXNpbmcpO1xuICAgICAgLy8gaWYgbm90IHVzaW5nIENTUyBhbmQgbm8gZWFzaW5nIHZhbHVlIHdhcyBzdXBwbGllZCwgdXNlIHRoZSBkZWZhdWx0IEpTIGFuaW1hdGlvbiBlYXNpbmcgKHN3aW5nKVxuICAgICAgfSBlbHNlIGlmICghc2xpZGVyLnNldHRpbmdzLmVhc2luZykge1xuICAgICAgICBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nID0gJ3N3aW5nJztcbiAgICAgIH1cbiAgICAgIC8vIG1ha2UgbW9kaWZpY2F0aW9ucyB0byB0aGUgdmlld3BvcnQgKC5ieC12aWV3cG9ydClcbiAgICAgIHNsaWRlci52aWV3cG9ydC5jc3Moe1xuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gICAgICB9KTtcbiAgICAgIHNsaWRlci52aWV3cG9ydC5wYXJlbnQoKS5jc3Moe1xuICAgICAgICBtYXhXaWR0aDogZ2V0Vmlld3BvcnRNYXhXaWR0aCgpXG4gICAgICB9KTtcbiAgICAgIC8vIGFwcGx5IGNzcyB0byBhbGwgc2xpZGVyIGNoaWxkcmVuXG4gICAgICBzbGlkZXIuY2hpbGRyZW4uY3NzKHtcbiAgICAgICAgLy8gdGhlIGZsb2F0IGF0dHJpYnV0ZSBpcyBhIHJlc2VydmVkIHdvcmQgaW4gY29tcHJlc3NvcnMgbGlrZSBZVUkgY29tcHJlc3NvciBhbmQgbmVlZCB0byBiZSBxdW90ZWQgIzQ4XG4gICAgICAgICdmbG9hdCc6IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAnbGVmdCcgOiAnbm9uZScsXG4gICAgICAgIGxpc3RTdHlsZTogJ25vbmUnLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuICAgICAgfSk7XG4gICAgICAvLyBhcHBseSB0aGUgY2FsY3VsYXRlZCB3aWR0aCBhZnRlciB0aGUgZmxvYXQgaXMgYXBwbGllZCB0byBwcmV2ZW50IHNjcm9sbGJhciBpbnRlcmZlcmVuY2VcbiAgICAgIHNsaWRlci5jaGlsZHJlbi5jc3MoJ3dpZHRoJywgZ2V0U2xpZGVXaWR0aCgpKTtcbiAgICAgIC8vIGlmIHNsaWRlTWFyZ2luIGlzIHN1cHBsaWVkLCBhZGQgdGhlIGNzc1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgJiYgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luID4gMCkgeyBzbGlkZXIuY2hpbGRyZW4uY3NzKCdtYXJnaW5SaWdodCcsIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7IH1cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJyAmJiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gPiAwKSB7IHNsaWRlci5jaGlsZHJlbi5jc3MoJ21hcmdpbkJvdHRvbScsIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7IH1cbiAgICAgIC8vIGlmIFwiZmFkZVwiIG1vZGUsIGFkZCBwb3NpdGlvbmluZyBhbmQgei1pbmRleCBDU1NcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2ZhZGUnKSB7XG4gICAgICAgIHNsaWRlci5jaGlsZHJlbi5jc3Moe1xuICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgIHpJbmRleDogMCxcbiAgICAgICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHByZXBhcmUgdGhlIHotaW5kZXggb24gdGhlIHNob3dpbmcgZWxlbWVudFxuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUpLmNzcyh7ekluZGV4OiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVaSW5kZXgsIGRpc3BsYXk6ICdibG9jayd9KTtcbiAgICAgIH1cbiAgICAgIC8vIGNyZWF0ZSBhbiBlbGVtZW50IHRvIGNvbnRhaW4gYWxsIHNsaWRlciBjb250cm9scyAocGFnZXIsIHN0YXJ0IC8gc3RvcCwgZXRjKVxuICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsID0gJCgnPGRpdiBjbGFzcz1cImJ4LWNvbnRyb2xzXCIgLz4nKTtcbiAgICAgIC8vIGlmIGNhcHRpb25zIGFyZSByZXF1ZXN0ZWQsIGFkZCB0aGVtXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNhcHRpb25zKSB7IGFwcGVuZENhcHRpb25zKCk7IH1cbiAgICAgIC8vIGNoZWNrIGlmIHN0YXJ0U2xpZGUgaXMgbGFzdCBzbGlkZVxuICAgICAgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUgPT09IGdldFBhZ2VyUXR5KCkgLSAxO1xuICAgICAgLy8gaWYgdmlkZW8gaXMgdHJ1ZSwgc2V0IHVwIHRoZSBmaXRWaWRzIHBsdWdpblxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy52aWRlbykgeyBlbC5maXRWaWRzKCk7IH1cblx0ICAvL3ByZWxvYWRJbWFnZXNcblx0ICBpZiAoc2xpZGVyLnNldHRpbmdzLnByZWxvYWRJbWFnZXMgPT09ICdub25lJykgeyBcblx0XHQgIHByZWxvYWRTZWxlY3RvciA9IG51bGw7IFxuXHQgIH1cbiAgICAgIGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5wcmVsb2FkSW1hZ2VzID09PSAnYWxsJyB8fCBzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7IFxuXHRcdCAgcHJlbG9hZFNlbGVjdG9yID0gc2xpZGVyLmNoaWxkcmVuOyBcblx0ICB9XG4gICAgICAvLyBvbmx5IGNoZWNrIGZvciBjb250cm9sIGFkZGl0aW9uIGlmIG5vdCBpbiBcInRpY2tlclwiIG1vZGVcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xuICAgICAgICAvLyBpZiBjb250cm9scyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzKSB7IGFwcGVuZENvbnRyb2xzKCk7IH1cbiAgICAgICAgLy8gaWYgYXV0byBpcyB0cnVlLCBhbmQgYXV0byBjb250cm9scyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scykgeyBhcHBlbmRDb250cm9sc0F1dG8oKTsgfVxuICAgICAgICAvLyBpZiBwYWdlciBpcyByZXF1ZXN0ZWQsIGFkZCBpdFxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IGFwcGVuZFBhZ2VyKCk7IH1cbiAgICAgICAgLy8gaWYgYW55IGNvbnRyb2wgb3B0aW9uIGlzIHJlcXVlc3RlZCwgYWRkIHRoZSBjb250cm9scyB3cmFwcGVyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMgfHwgc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scyB8fCBzbGlkZXIuc2V0dGluZ3MucGFnZXIpIHsgc2xpZGVyLnZpZXdwb3J0LmFmdGVyKHNsaWRlci5jb250cm9scy5lbCk7IH1cbiAgICAgIC8vIGlmIHRpY2tlciBtb2RlLCBkbyBub3QgYWxsb3cgYSBwYWdlclxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVyLnNldHRpbmdzLnBhZ2VyID0gZmFsc2U7XG4gICAgICB9XG5cdCAgaWYgKHByZWxvYWRTZWxlY3RvciA9PT0gbnVsbCkge1xuICAgICAgICBzdGFydCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZEVsZW1lbnRzKHByZWxvYWRTZWxlY3Rvciwgc3RhcnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgbG9hZEVsZW1lbnRzID0gZnVuY3Rpb24oc2VsZWN0b3IsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgdG90YWwgPSBzZWxlY3Rvci5maW5kKCdpbWc6bm90KFtzcmM9XCJcIl0pLCBpZnJhbWUnKS5sZW5ndGgsXG4gICAgICBjb3VudCA9IDA7XG4gICAgICBpZiAodG90YWwgPT09IDApIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2VsZWN0b3IuZmluZCgnaW1nOm5vdChbc3JjPVwiXCJdKSwgaWZyYW1lJykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgJCh0aGlzKS5vbmUoJ2xvYWQgZXJyb3InLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoKytjb3VudCA9PT0gdG90YWwpIHsgY2FsbGJhY2soKTsgfVxuICAgICAgICB9KS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmICh0aGlzLmNvbXBsZXRlIHx8IHRoaXMuc3JjID09ICcnKSB7ICQodGhpcykudHJpZ2dlcignbG9hZCcpOyB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IHRoZSBzbGlkZXJcbiAgICAgKi9cbiAgICB2YXIgc3RhcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGlmIGluZmluaXRlIGxvb3AsIHByZXBhcmUgYWRkaXRpb25hbCBzbGlkZXNcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmIHNsaWRlci5zZXR0aW5ncy5tb2RlICE9PSAnZmFkZScgJiYgIXNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHtcbiAgICAgICAgdmFyIHNsaWNlICAgID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgPyBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzIDogc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyxcbiAgICAgICAgc2xpY2VBcHBlbmQgID0gc2xpZGVyLmNoaWxkcmVuLnNsaWNlKDAsIHNsaWNlKS5jbG9uZSh0cnVlKS5hZGRDbGFzcygnYngtY2xvbmUnKSxcbiAgICAgICAgc2xpY2VQcmVwZW5kID0gc2xpZGVyLmNoaWxkcmVuLnNsaWNlKC1zbGljZSkuY2xvbmUodHJ1ZSkuYWRkQ2xhc3MoJ2J4LWNsb25lJyk7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbikge1xuICAgICAgICAgIHNsaWNlQXBwZW5kLmF0dHIoJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XG4gICAgICAgICAgc2xpY2VQcmVwZW5kLmF0dHIoJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWwuYXBwZW5kKHNsaWNlQXBwZW5kKS5wcmVwZW5kKHNsaWNlUHJlcGVuZCk7XG4gICAgICB9XG4gICAgICAvLyByZW1vdmUgdGhlIGxvYWRpbmcgRE9NIGVsZW1lbnRcbiAgICAgIHNsaWRlci5sb2FkZXIucmVtb3ZlKCk7XG4gICAgICAvLyBzZXQgdGhlIGxlZnQgLyB0b3AgcG9zaXRpb24gb2YgXCJlbFwiXG4gICAgICBzZXRTbGlkZVBvc2l0aW9uKCk7XG4gICAgICAvLyBpZiBcInZlcnRpY2FsXCIgbW9kZSwgYWx3YXlzIHVzZSBhZGFwdGl2ZUhlaWdodCB0byBwcmV2ZW50IG9kZCBiZWhhdmlvclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7IHNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodCA9IHRydWU7IH1cbiAgICAgIC8vIHNldCB0aGUgdmlld3BvcnQgaGVpZ2h0XG4gICAgICBzbGlkZXIudmlld3BvcnQuaGVpZ2h0KGdldFZpZXdwb3J0SGVpZ2h0KCkpO1xuICAgICAgLy8gbWFrZSBzdXJlIGV2ZXJ5dGhpbmcgaXMgcG9zaXRpb25lZCBqdXN0IHJpZ2h0IChzYW1lIGFzIGEgd2luZG93IHJlc2l6ZSlcbiAgICAgIGVsLnJlZHJhd1NsaWRlcigpO1xuICAgICAgLy8gb25TbGlkZXJMb2FkIGNhbGxiYWNrXG4gICAgICBzbGlkZXIuc2V0dGluZ3Mub25TbGlkZXJMb2FkLmNhbGwoZWwsIHNsaWRlci5hY3RpdmUuaW5kZXgpO1xuICAgICAgLy8gc2xpZGVyIGhhcyBiZWVuIGZ1bGx5IGluaXRpYWxpemVkXG4gICAgICBzbGlkZXIuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgLy8gYWRkIHRoZSByZXNpemUgY2FsbCB0byB0aGUgd2luZG93XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnJlc3BvbnNpdmUpIHsgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCByZXNpemVXaW5kb3cpOyB9XG4gICAgICAvLyBpZiBhdXRvIGlzIHRydWUgYW5kIGhhcyBtb3JlIHRoYW4gMSBwYWdlLCBzdGFydCB0aGUgc2hvd1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvICYmIHNsaWRlci5zZXR0aW5ncy5hdXRvU3RhcnQgJiYgKGdldFBhZ2VyUXR5KCkgPiAxIHx8IHNsaWRlci5zZXR0aW5ncy5hdXRvU2xpZGVGb3JPbmVQYWdlKSkgeyBpbml0QXV0bygpOyB9XG4gICAgICAvLyBpZiB0aWNrZXIgaXMgdHJ1ZSwgc3RhcnQgdGhlIHRpY2tlclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHsgaW5pdFRpY2tlcigpOyB9XG4gICAgICAvLyBpZiBwYWdlciBpcyByZXF1ZXN0ZWQsIG1ha2UgdGhlIGFwcHJvcHJpYXRlIHBhZ2VyIGxpbmsgYWN0aXZlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IHVwZGF0ZVBhZ2VyQWN0aXZlKHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlKTsgfVxuICAgICAgLy8gY2hlY2sgZm9yIGFueSB1cGRhdGVzIHRvIHRoZSBjb250cm9scyAobGlrZSBoaWRlQ29udHJvbE9uRW5kIHVwZGF0ZXMpXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzKSB7IHVwZGF0ZURpcmVjdGlvbkNvbnRyb2xzKCk7IH1cbiAgICAgIC8vIGlmIHRvdWNoRW5hYmxlZCBpcyB0cnVlLCBzZXR1cCB0aGUgdG91Y2ggZXZlbnRzXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnRvdWNoRW5hYmxlZCAmJiAhc2xpZGVyLnNldHRpbmdzLnRpY2tlcikgeyBpbml0VG91Y2goKTsgfVxuICAgICAgLy8gaWYga2V5Ym9hcmRFbmFibGVkIGlzIHRydWUsIHNldHVwIHRoZSBrZXlib2FyZCBldmVudHNcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Mua2V5Ym9hcmRFbmFibGVkICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7XG4gICAgICAgICQoZG9jdW1lbnQpLmtleWRvd24oa2V5UHJlc3MpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIGhlaWdodCBvZiB0aGUgdmlld3BvcnQsIHVzZWQgdG8gZGV0ZXJtaW5lIGVpdGhlciBhZGFwdGl2ZUhlaWdodCBvciB0aGUgbWF4SGVpZ2h0IHZhbHVlXG4gICAgICovXG4gICAgdmFyIGdldFZpZXdwb3J0SGVpZ2h0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaGVpZ2h0ID0gMDtcbiAgICAgIC8vIGZpcnN0IGRldGVybWluZSB3aGljaCBjaGlsZHJlbiAoc2xpZGVzKSBzaG91bGQgYmUgdXNlZCBpbiBvdXIgaGVpZ2h0IGNhbGN1bGF0aW9uXG4gICAgICB2YXIgY2hpbGRyZW4gPSAkKCk7XG4gICAgICAvLyBpZiBtb2RlIGlzIG5vdCBcInZlcnRpY2FsXCIgYW5kIGFkYXB0aXZlSGVpZ2h0IGlzIGZhbHNlLCBpbmNsdWRlIGFsbCBjaGlsZHJlblxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlICE9PSAndmVydGljYWwnICYmICFzbGlkZXIuc2V0dGluZ3MuYWRhcHRpdmVIZWlnaHQpIHtcbiAgICAgICAgY2hpbGRyZW4gPSBzbGlkZXIuY2hpbGRyZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBpZiBub3QgY2Fyb3VzZWwsIHJldHVybiB0aGUgc2luZ2xlIGFjdGl2ZSBjaGlsZFxuICAgICAgICBpZiAoIXNsaWRlci5jYXJvdXNlbCkge1xuICAgICAgICAgIGNoaWxkcmVuID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXgpO1xuICAgICAgICAvLyBpZiBjYXJvdXNlbCwgcmV0dXJuIGEgc2xpY2Ugb2YgY2hpbGRyZW5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBnZXQgdGhlIGluZGl2aWR1YWwgc2xpZGUgaW5kZXhcbiAgICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPT09IDEgPyBzbGlkZXIuYWN0aXZlLmluZGV4IDogc2xpZGVyLmFjdGl2ZS5pbmRleCAqIGdldE1vdmVCeSgpO1xuICAgICAgICAgIC8vIGFkZCB0aGUgY3VycmVudCBzbGlkZSB0byB0aGUgY2hpbGRyZW5cbiAgICAgICAgICBjaGlsZHJlbiA9IHNsaWRlci5jaGlsZHJlbi5lcShjdXJyZW50SW5kZXgpO1xuICAgICAgICAgIC8vIGN5Y2xlIHRocm91Z2ggdGhlIHJlbWFpbmluZyBcInNob3dpbmdcIiBzbGlkZXNcbiAgICAgICAgICBmb3IgKGkgPSAxOyBpIDw9IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgLSAxOyBpKyspIHtcbiAgICAgICAgICAgIC8vIGlmIGxvb3BlZCBiYWNrIHRvIHRoZSBzdGFydFxuICAgICAgICAgICAgaWYgKGN1cnJlbnRJbmRleCArIGkgPj0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuLmFkZChzbGlkZXIuY2hpbGRyZW4uZXEoaSAtIDEpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuID0gY2hpbGRyZW4uYWRkKHNsaWRlci5jaGlsZHJlbi5lcShjdXJyZW50SW5kZXggKyBpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBpZiBcInZlcnRpY2FsXCIgbW9kZSwgY2FsY3VsYXRlIHRoZSBzdW0gb2YgdGhlIGhlaWdodHMgb2YgdGhlIGNoaWxkcmVuXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgY2hpbGRyZW4uZWFjaChmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgIGhlaWdodCArPSAkKHRoaXMpLm91dGVySGVpZ2h0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBhZGQgdXNlci1zdXBwbGllZCBtYXJnaW5zXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gPiAwKSB7XG4gICAgICAgICAgaGVpZ2h0ICs9IHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbiAqIChzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIC8vIGlmIG5vdCBcInZlcnRpY2FsXCIgbW9kZSwgY2FsY3VsYXRlIHRoZSBtYXggaGVpZ2h0IG9mIHRoZSBjaGlsZHJlblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGVpZ2h0ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgY2hpbGRyZW4ubWFwKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkKHRoaXMpLm91dGVySGVpZ2h0KGZhbHNlKTtcbiAgICAgICAgfSkuZ2V0KCkpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LmNzcygnYm94LXNpemluZycpID09PSAnYm9yZGVyLWJveCcpIHtcbiAgICAgICAgaGVpZ2h0ICs9IHBhcnNlRmxvYXQoc2xpZGVyLnZpZXdwb3J0LmNzcygncGFkZGluZy10b3AnKSkgKyBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ3BhZGRpbmctYm90dG9tJykpICtcbiAgICAgICAgICAgICAgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdib3JkZXItdG9wLXdpZHRoJykpICsgcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdib3JkZXItYm90dG9tLXdpZHRoJykpO1xuICAgICAgfSBlbHNlIGlmIChzbGlkZXIudmlld3BvcnQuY3NzKCdib3gtc2l6aW5nJykgPT09ICdwYWRkaW5nLWJveCcpIHtcbiAgICAgICAgaGVpZ2h0ICs9IHBhcnNlRmxvYXQoc2xpZGVyLnZpZXdwb3J0LmNzcygncGFkZGluZy10b3AnKSkgKyBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ3BhZGRpbmctYm90dG9tJykpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaGVpZ2h0O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIHdpZHRoIHRvIGJlIHVzZWQgZm9yIHRoZSBvdXRlciB3cmFwcGVyIC8gdmlld3BvcnRcbiAgICAgKi9cbiAgICB2YXIgZ2V0Vmlld3BvcnRNYXhXaWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHdpZHRoID0gJzEwMCUnO1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoID4gMCkge1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIHdpZHRoID0gKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgKiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCkgKyAoKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgLSAxKSAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2lkdGggPSBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHdpZHRoO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjYWxjdWxhdGVkIHdpZHRoIHRvIGJlIGFwcGxpZWQgdG8gZWFjaCBzbGlkZVxuICAgICAqL1xuICAgIHZhciBnZXRTbGlkZVdpZHRoID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbmV3RWxXaWR0aCA9IHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoLCAvLyBzdGFydCB3aXRoIGFueSB1c2VyLXN1cHBsaWVkIHNsaWRlIHdpZHRoXG4gICAgICB3cmFwV2lkdGggICAgICA9IHNsaWRlci52aWV3cG9ydC53aWR0aCgpOyAgICAvLyBnZXQgdGhlIGN1cnJlbnQgdmlld3BvcnQgd2lkdGhcbiAgICAgIC8vIGlmIHNsaWRlIHdpZHRoIHdhcyBub3Qgc3VwcGxpZWQsIG9yIGlzIGxhcmdlciB0aGFuIHRoZSB2aWV3cG9ydCB1c2UgdGhlIHZpZXdwb3J0IHdpZHRoXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPT09IDAgfHxcbiAgICAgICAgKHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoID4gd3JhcFdpZHRoICYmICFzbGlkZXIuY2Fyb3VzZWwpIHx8XG4gICAgICAgIHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7XG4gICAgICAgIG5ld0VsV2lkdGggPSB3cmFwV2lkdGg7XG4gICAgICAvLyBpZiBjYXJvdXNlbCwgdXNlIHRoZSB0aHJlc2hvbGRzIHRvIGRldGVybWluZSB0aGUgd2lkdGhcbiAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA+IDEgJiYgc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICBpZiAod3JhcFdpZHRoID4gc2xpZGVyLm1heFRocmVzaG9sZCkge1xuICAgICAgICAgIHJldHVybiBuZXdFbFdpZHRoO1xuICAgICAgICB9IGVsc2UgaWYgKHdyYXBXaWR0aCA8IHNsaWRlci5taW5UaHJlc2hvbGQpIHtcbiAgICAgICAgICBuZXdFbFdpZHRoID0gKHdyYXBXaWR0aCAtIChzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4gKiAoc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyAtIDEpKSkgLyBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5zaHJpbmtJdGVtcykge1xuICAgICAgICAgIG5ld0VsV2lkdGggPSBNYXRoLmZsb29yKCh3cmFwV2lkdGggKyBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pIC8gKE1hdGguY2VpbCgod3JhcFdpZHRoICsgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKSAvIChuZXdFbFdpZHRoICsgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKSkpIC0gc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0VsV2lkdGg7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBzbGlkZXMgY3VycmVudGx5IHZpc2libGUgaW4gdGhlIHZpZXdwb3J0IChpbmNsdWRlcyBwYXJ0aWFsbHkgdmlzaWJsZSBzbGlkZXMpXG4gICAgICovXG4gICAgdmFyIGdldE51bWJlclNsaWRlc1Nob3dpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzbGlkZXNTaG93aW5nID0gMSxcbiAgICAgIGNoaWxkV2lkdGggPSBudWxsO1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgJiYgc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPiAwKSB7XG4gICAgICAgIC8vIGlmIHZpZXdwb3J0IGlzIHNtYWxsZXIgdGhhbiBtaW5UaHJlc2hvbGQsIHJldHVybiBtaW5TbGlkZXNcbiAgICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC53aWR0aCgpIDwgc2xpZGVyLm1pblRocmVzaG9sZCkge1xuICAgICAgICAgIHNsaWRlc1Nob3dpbmcgPSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xuICAgICAgICAvLyBpZiB2aWV3cG9ydCBpcyBsYXJnZXIgdGhhbiBtYXhUaHJlc2hvbGQsIHJldHVybiBtYXhTbGlkZXNcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIudmlld3BvcnQud2lkdGgoKSA+IHNsaWRlci5tYXhUaHJlc2hvbGQpIHtcbiAgICAgICAgICBzbGlkZXNTaG93aW5nID0gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcztcbiAgICAgICAgLy8gaWYgdmlld3BvcnQgaXMgYmV0d2VlbiBtaW4gLyBtYXggdGhyZXNob2xkcywgZGl2aWRlIHZpZXdwb3J0IHdpZHRoIGJ5IGZpcnN0IGNoaWxkIHdpZHRoXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hpbGRXaWR0aCA9IHNsaWRlci5jaGlsZHJlbi5maXJzdCgpLndpZHRoKCkgKyBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW47XG4gICAgICAgICAgc2xpZGVzU2hvd2luZyA9IE1hdGguZmxvb3IoKHNsaWRlci52aWV3cG9ydC53aWR0aCgpICtcbiAgICAgICAgICAgIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbikgLyBjaGlsZFdpZHRoKSB8fCAxO1xuICAgICAgICB9XG4gICAgICAvLyBpZiBcInZlcnRpY2FsXCIgbW9kZSwgc2xpZGVzIHNob3dpbmcgd2lsbCBhbHdheXMgYmUgbWluU2xpZGVzXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7XG4gICAgICAgIHNsaWRlc1Nob3dpbmcgPSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNsaWRlc1Nob3dpbmc7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBwYWdlcyAob25lIGZ1bGwgdmlld3BvcnQgb2Ygc2xpZGVzIGlzIG9uZSBcInBhZ2VcIilcbiAgICAgKi9cbiAgICB2YXIgZ2V0UGFnZXJRdHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBwYWdlclF0eSA9IDAsXG4gICAgICBicmVha1BvaW50ID0gMCxcbiAgICAgIGNvdW50ZXIgPSAwO1xuICAgICAgLy8gaWYgbW92ZVNsaWRlcyBpcyBzcGVjaWZpZWQgYnkgdGhlIHVzZXJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA+IDApIHtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcbiAgICAgICAgICBwYWdlclF0eSA9IE1hdGguY2VpbChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC8gZ2V0TW92ZUJ5KCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHdoZW4gYnJlYWtwb2ludCBnb2VzIGFib3ZlIGNoaWxkcmVuIGxlbmd0aCwgY291bnRlciBpcyB0aGUgbnVtYmVyIG9mIHBhZ2VzXG4gICAgICAgICAgd2hpbGUgKGJyZWFrUG9pbnQgPCBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICAgICAgYnJlYWtQb2ludCA9IGNvdW50ZXIgKyBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XG4gICAgICAgICAgICBjb3VudGVyICs9IHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzIDw9IGdldE51bWJlclNsaWRlc1Nob3dpbmcoKSA/IHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzIDogZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpO1xuICAgICAgICAgIH1cblx0XHQgIHJldHVybiBjb3VudGVyO1xuICAgICAgICB9XG4gICAgICAvLyBpZiBtb3ZlU2xpZGVzIGlzIDAgKGF1dG8pIGRpdmlkZSBjaGlsZHJlbiBsZW5ndGggYnkgc2lkZXMgc2hvd2luZywgdGhlbiByb3VuZCB1cFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFnZXJRdHkgPSBNYXRoLmNlaWwoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAvIGdldE51bWJlclNsaWRlc1Nob3dpbmcoKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcGFnZXJRdHk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBpbmRpdmlkdWFsIHNsaWRlcyBieSB3aGljaCB0byBzaGlmdCB0aGUgc2xpZGVyXG4gICAgICovXG4gICAgdmFyIGdldE1vdmVCeSA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgbW92ZVNsaWRlcyB3YXMgc2V0IGJ5IHRoZSB1c2VyIGFuZCBtb3ZlU2xpZGVzIGlzIGxlc3MgdGhhbiBudW1iZXIgb2Ygc2xpZGVzIHNob3dpbmdcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA+IDAgJiYgc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPD0gZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpKSB7XG4gICAgICAgIHJldHVybiBzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcztcbiAgICAgIH1cbiAgICAgIC8vIGlmIG1vdmVTbGlkZXMgaXMgMCAoYXV0bylcbiAgICAgIHJldHVybiBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHNsaWRlcidzIChlbCkgbGVmdCBvciB0b3AgcG9zaXRpb25cbiAgICAgKi9cbiAgICB2YXIgc2V0U2xpZGVQb3NpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHBvc2l0aW9uLCBsYXN0Q2hpbGQsIGxhc3RTaG93aW5nSW5kZXg7XG4gICAgICAvLyBpZiBsYXN0IHNsaWRlLCBub3QgaW5maW5pdGUgbG9vcCwgYW5kIG51bWJlciBvZiBjaGlsZHJlbiBpcyBsYXJnZXIgdGhhbiBzcGVjaWZpZWQgbWF4U2xpZGVzXG4gICAgICBpZiAoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCA+IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgJiYgc2xpZGVyLmFjdGl2ZS5sYXN0ICYmICFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wKSB7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNoaWxkJ3MgcG9zaXRpb25cbiAgICAgICAgICBsYXN0Q2hpbGQgPSBzbGlkZXIuY2hpbGRyZW4ubGFzdCgpO1xuICAgICAgICAgIHBvc2l0aW9uID0gbGFzdENoaWxkLnBvc2l0aW9uKCk7XG4gICAgICAgICAgLy8gc2V0IHRoZSBsZWZ0IHBvc2l0aW9uXG4gICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtKHBvc2l0aW9uLmxlZnQgLSAoc2xpZGVyLnZpZXdwb3J0LndpZHRoKCkgLSBsYXN0Q2hpbGQub3V0ZXJXaWR0aCgpKSksICdyZXNldCcsIDApO1xuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7XG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IHNob3dpbmcgaW5kZXgncyBwb3NpdGlvblxuICAgICAgICAgIGxhc3RTaG93aW5nSW5kZXggPSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcztcbiAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShsYXN0U2hvd2luZ0luZGV4KS5wb3NpdGlvbigpO1xuICAgICAgICAgIC8vIHNldCB0aGUgdG9wIHBvc2l0aW9uXG4gICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtcG9zaXRpb24udG9wLCAncmVzZXQnLCAwKTtcbiAgICAgICAgfVxuICAgICAgLy8gaWYgbm90IGxhc3Qgc2xpZGVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGdldCB0aGUgcG9zaXRpb24gb2YgdGhlIGZpcnN0IHNob3dpbmcgc2xpZGVcbiAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCAqIGdldE1vdmVCeSgpKS5wb3NpdGlvbigpO1xuICAgICAgICAvLyBjaGVjayBmb3IgbGFzdCBzbGlkZVxuICAgICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gZ2V0UGFnZXJRdHkoKSAtIDEpIHsgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gdHJ1ZTsgfVxuICAgICAgICAvLyBzZXQgdGhlIHJlc3BlY3RpdmUgcG9zaXRpb25cbiAgICAgICAgaWYgKHBvc2l0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykgeyBzZXRQb3NpdGlvblByb3BlcnR5KC1wb3NpdGlvbi5sZWZ0LCAncmVzZXQnLCAwKTsgfVxuICAgICAgICAgIGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7IHNldFBvc2l0aW9uUHJvcGVydHkoLXBvc2l0aW9uLnRvcCwgJ3Jlc2V0JywgMCk7IH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBlbCdzIGFuaW1hdGluZyBwcm9wZXJ0eSBwb3NpdGlvbiAod2hpY2ggaW4gdHVybiB3aWxsIHNvbWV0aW1lcyBhbmltYXRlIGVsKS5cbiAgICAgKiBJZiB1c2luZyBDU1MsIHNldHMgdGhlIHRyYW5zZm9ybSBwcm9wZXJ0eS4gSWYgbm90IHVzaW5nIENTUywgc2V0cyB0aGUgdG9wIC8gbGVmdCBwcm9wZXJ0eS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSAoaW50KVxuICAgICAqICAtIHRoZSBhbmltYXRpbmcgcHJvcGVydHkncyB2YWx1ZVxuICAgICAqXG4gICAgICogQHBhcmFtIHR5cGUgKHN0cmluZykgJ3NsaWRlJywgJ3Jlc2V0JywgJ3RpY2tlcidcbiAgICAgKiAgLSB0aGUgdHlwZSBvZiBpbnN0YW5jZSBmb3Igd2hpY2ggdGhlIGZ1bmN0aW9uIGlzIGJlaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZHVyYXRpb24gKGludClcbiAgICAgKiAgLSB0aGUgYW1vdW50IG9mIHRpbWUgKGluIG1zKSB0aGUgdHJhbnNpdGlvbiBzaG91bGQgb2NjdXB5XG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGFyYW1zIChhcnJheSkgb3B0aW9uYWxcbiAgICAgKiAgLSBhbiBvcHRpb25hbCBwYXJhbWV0ZXIgY29udGFpbmluZyBhbnkgdmFyaWFibGVzIHRoYXQgbmVlZCB0byBiZSBwYXNzZWQgaW5cbiAgICAgKi9cbiAgICB2YXIgc2V0UG9zaXRpb25Qcm9wZXJ0eSA9IGZ1bmN0aW9uKHZhbHVlLCB0eXBlLCBkdXJhdGlvbiwgcGFyYW1zKSB7XG4gICAgICB2YXIgYW5pbWF0ZU9iaiwgcHJvcFZhbHVlO1xuICAgICAgLy8gdXNlIENTUyB0cmFuc2Zvcm1cbiAgICAgIGlmIChzbGlkZXIudXNpbmdDU1MpIHtcbiAgICAgICAgLy8gZGV0ZXJtaW5lIHRoZSB0cmFuc2xhdGUzZCB2YWx1ZVxuICAgICAgICBwcm9wVmFsdWUgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJyA/ICd0cmFuc2xhdGUzZCgwLCAnICsgdmFsdWUgKyAncHgsIDApJyA6ICd0cmFuc2xhdGUzZCgnICsgdmFsdWUgKyAncHgsIDAsIDApJztcbiAgICAgICAgLy8gYWRkIHRoZSBDU1MgdHJhbnNpdGlvbi1kdXJhdGlvblxuICAgICAgICBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNpdGlvbi1kdXJhdGlvbicsIGR1cmF0aW9uIC8gMTAwMCArICdzJyk7XG4gICAgICAgIGlmICh0eXBlID09PSAnc2xpZGUnKSB7XG4gICAgICAgICAgLy8gc2V0IHRoZSBwcm9wZXJ0eSB2YWx1ZVxuICAgICAgICAgIGVsLmNzcyhzbGlkZXIuYW5pbVByb3AsIHByb3BWYWx1ZSk7XG4gICAgICAgICAgaWYgKGR1cmF0aW9uICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBhZGQgYSBjYWxsYmFjayBtZXRob2QgLSBleGVjdXRlcyB3aGVuIENTUyB0cmFuc2l0aW9uIGNvbXBsZXRlc1xuICAgICAgICAgICAgZWwub24oJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgIC8vbWFrZSBzdXJlIGl0J3MgdGhlIGNvcnJlY3Qgb25lXG4gICAgICAgICAgICAgIGlmICghJChlLnRhcmdldCkuaXMoZWwpKSB7IHJldHVybjsgfVxuICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIGNhbGxiYWNrXG4gICAgICAgICAgICAgIGVsLm9mZigndHJhbnNpdGlvbmVuZCB3ZWJraXRUcmFuc2l0aW9uRW5kIG9UcmFuc2l0aW9uRW5kIE1TVHJhbnNpdGlvbkVuZCcpO1xuICAgICAgICAgICAgICB1cGRhdGVBZnRlclNsaWRlVHJhbnNpdGlvbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHsgLy9kdXJhdGlvbiA9IDBcbiAgICAgICAgICAgIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdyZXNldCcpIHtcbiAgICAgICAgICBlbC5jc3Moc2xpZGVyLmFuaW1Qcm9wLCBwcm9wVmFsdWUpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICd0aWNrZXInKSB7XG4gICAgICAgICAgLy8gbWFrZSB0aGUgdHJhbnNpdGlvbiB1c2UgJ2xpbmVhcidcbiAgICAgICAgICBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24nLCAnbGluZWFyJyk7XG4gICAgICAgICAgZWwuY3NzKHNsaWRlci5hbmltUHJvcCwgcHJvcFZhbHVlKTtcbiAgICAgICAgICBpZiAoZHVyYXRpb24gIT09IDApIHtcbiAgICAgICAgICAgIGVsLm9uKCd0cmFuc2l0aW9uZW5kIHdlYmtpdFRyYW5zaXRpb25FbmQgb1RyYW5zaXRpb25FbmQgTVNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBpdCdzIHRoZSBjb3JyZWN0IG9uZVxuICAgICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmlzKGVsKSkgeyByZXR1cm47IH1cbiAgICAgICAgICAgICAgLy8gcmVtb3ZlIHRoZSBjYWxsYmFja1xuICAgICAgICAgICAgICBlbC5vZmYoJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnKTtcbiAgICAgICAgICAgICAgLy8gcmVzZXQgdGhlIHBvc2l0aW9uXG4gICAgICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkocGFyYW1zLnJlc2V0VmFsdWUsICdyZXNldCcsIDApO1xuICAgICAgICAgICAgICAvLyBzdGFydCB0aGUgbG9vcCBhZ2FpblxuICAgICAgICAgICAgICB0aWNrZXJMb29wKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2UgeyAvL2R1cmF0aW9uID0gMFxuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShwYXJhbXMucmVzZXRWYWx1ZSwgJ3Jlc2V0JywgMCk7XG4gICAgICAgICAgICB0aWNrZXJMb29wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAvLyB1c2UgSlMgYW5pbWF0ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYW5pbWF0ZU9iaiA9IHt9O1xuICAgICAgICBhbmltYXRlT2JqW3NsaWRlci5hbmltUHJvcF0gPSB2YWx1ZTtcbiAgICAgICAgaWYgKHR5cGUgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICBlbC5hbmltYXRlKGFuaW1hdGVPYmosIGR1cmF0aW9uLCBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3Jlc2V0Jykge1xuICAgICAgICAgIGVsLmNzcyhzbGlkZXIuYW5pbVByb3AsIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAndGlja2VyJykge1xuICAgICAgICAgIGVsLmFuaW1hdGUoYW5pbWF0ZU9iaiwgZHVyYXRpb24sICdsaW5lYXInLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkocGFyYW1zLnJlc2V0VmFsdWUsICdyZXNldCcsIDApO1xuICAgICAgICAgICAgLy8gcnVuIHRoZSByZWN1cnNpdmUgbG9vcCBhZnRlciBhbmltYXRpb25cbiAgICAgICAgICAgIHRpY2tlckxvb3AoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQb3B1bGF0ZXMgdGhlIHBhZ2VyIHdpdGggcHJvcGVyIGFtb3VudCBvZiBwYWdlc1xuICAgICAqL1xuICAgIHZhciBwb3B1bGF0ZVBhZ2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcGFnZXJIdG1sID0gJycsXG4gICAgICBsaW5rQ29udGVudCA9ICcnLFxuICAgICAgcGFnZXJRdHkgPSBnZXRQYWdlclF0eSgpO1xuICAgICAgLy8gbG9vcCB0aHJvdWdoIGVhY2ggcGFnZXIgaXRlbVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWdlclF0eTsgaSsrKSB7XG4gICAgICAgIGxpbmtDb250ZW50ID0gJyc7XG4gICAgICAgIC8vIGlmIGEgYnVpbGRQYWdlciBmdW5jdGlvbiBpcyBzdXBwbGllZCwgdXNlIGl0IHRvIGdldCBwYWdlciBsaW5rIHZhbHVlLCBlbHNlIHVzZSBpbmRleCArIDFcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5idWlsZFBhZ2VyICYmICQuaXNGdW5jdGlvbihzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcikgfHwgc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKTtcbiAgICAgICAgICBzbGlkZXIucGFnZXJFbC5hZGRDbGFzcygnYngtY3VzdG9tLXBhZ2VyJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBpICsgMTtcbiAgICAgICAgICBzbGlkZXIucGFnZXJFbC5hZGRDbGFzcygnYngtZGVmYXVsdC1wYWdlcicpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHZhciBsaW5rQ29udGVudCA9IHNsaWRlci5zZXR0aW5ncy5idWlsZFBhZ2VyICYmICQuaXNGdW5jdGlvbihzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcikgPyBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKSA6IGkgKyAxO1xuICAgICAgICAvLyBhZGQgdGhlIG1hcmt1cCB0byB0aGUgc3RyaW5nXG4gICAgICAgIHBhZ2VySHRtbCArPSAnPGRpdiBjbGFzcz1cImJ4LXBhZ2VyLWl0ZW1cIj48YSBocmVmPVwiXCIgZGF0YS1zbGlkZS1pbmRleD1cIicgKyBpICsgJ1wiIGNsYXNzPVwiYngtcGFnZXItbGlua1wiPicgKyBsaW5rQ29udGVudCArICc8L2E+PC9kaXY+JztcbiAgICAgIH1cbiAgICAgIC8vIHBvcHVsYXRlIHRoZSBwYWdlciBlbGVtZW50IHdpdGggcGFnZXIgbGlua3NcbiAgICAgIHNsaWRlci5wYWdlckVsLmh0bWwocGFnZXJIdG1sKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwZW5kcyB0aGUgcGFnZXIgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kUGFnZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XG4gICAgICAgIC8vIGNyZWF0ZSB0aGUgcGFnZXIgRE9NIGVsZW1lbnRcbiAgICAgICAgc2xpZGVyLnBhZ2VyRWwgPSAkKCc8ZGl2IGNsYXNzPVwiYngtcGFnZXJcIiAvPicpO1xuICAgICAgICAvLyBpZiBhIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXQgd2l0aCB0aGUgcGFnZXJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5wYWdlclNlbGVjdG9yKSB7XG4gICAgICAgICAgJChzbGlkZXIuc2V0dGluZ3MucGFnZXJTZWxlY3RvcikuaHRtbChzbGlkZXIucGFnZXJFbCk7XG4gICAgICAgIC8vIGlmIG5vIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgYWRkIGl0IGFmdGVyIHRoZSB3cmFwcGVyXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLmFkZENsYXNzKCdieC1oYXMtcGFnZXInKS5hcHBlbmQoc2xpZGVyLnBhZ2VyRWwpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHBvcHVsYXRlIHRoZSBwYWdlclxuICAgICAgICBwb3B1bGF0ZVBhZ2VyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXIucGFnZXJFbCA9ICQoc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKTtcbiAgICAgIH1cbiAgICAgIC8vIGFzc2lnbiB0aGUgcGFnZXIgY2xpY2sgYmluZGluZ1xuICAgICAgc2xpZGVyLnBhZ2VyRWwub24oJ2NsaWNrIHRvdWNoZW5kJywgJ2EnLCBjbGlja1BhZ2VyQmluZCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFwcGVuZHMgcHJldiAvIG5leHQgY29udHJvbHMgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kQ29udHJvbHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHNsaWRlci5jb250cm9scy5uZXh0ID0gJCgnPGEgY2xhc3M9XCJieC1uZXh0XCIgaHJlZj1cIlwiPicgKyBzbGlkZXIuc2V0dGluZ3MubmV4dFRleHQgKyAnPC9hPicpO1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYgPSAkKCc8YSBjbGFzcz1cImJ4LXByZXZcIiBocmVmPVwiXCI+JyArIHNsaWRlci5zZXR0aW5ncy5wcmV2VGV4dCArICc8L2E+Jyk7XG4gICAgICAvLyBhZGQgY2xpY2sgYWN0aW9ucyB0byB0aGUgY29udHJvbHNcbiAgICAgIHNsaWRlci5jb250cm9scy5uZXh0Lm9uKCdjbGljayB0b3VjaGVuZCcsIGNsaWNrTmV4dEJpbmQpO1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYub24oJ2NsaWNrIHRvdWNoZW5kJywgY2xpY2tQcmV2QmluZCk7XG4gICAgICAvLyBpZiBuZXh0U2VsZWN0b3Igd2FzIHN1cHBsaWVkLCBwb3B1bGF0ZSBpdFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5uZXh0U2VsZWN0b3IpIHtcbiAgICAgICAgJChzbGlkZXIuc2V0dGluZ3MubmV4dFNlbGVjdG9yKS5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLm5leHQpO1xuICAgICAgfVxuICAgICAgLy8gaWYgcHJldlNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXRcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucHJldlNlbGVjdG9yKSB7XG4gICAgICAgICQoc2xpZGVyLnNldHRpbmdzLnByZXZTZWxlY3RvcikuYXBwZW5kKHNsaWRlci5jb250cm9scy5wcmV2KTtcbiAgICAgIH1cbiAgICAgIC8vIGlmIG5vIGN1c3RvbSBzZWxlY3RvcnMgd2VyZSBzdXBwbGllZFxuICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MubmV4dFNlbGVjdG9yICYmICFzbGlkZXIuc2V0dGluZ3MucHJldlNlbGVjdG9yKSB7XG4gICAgICAgIC8vIGFkZCB0aGUgY29udHJvbHMgdG8gdGhlIERPTVxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZGlyZWN0aW9uRWwgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtZGlyZWN0aW9uXCIgLz4nKTtcbiAgICAgICAgLy8gYWRkIHRoZSBjb250cm9sIGVsZW1lbnRzIHRvIHRoZSBkaXJlY3Rpb25FbFxuICAgICAgICBzbGlkZXIuY29udHJvbHMuZGlyZWN0aW9uRWwuYXBwZW5kKHNsaWRlci5jb250cm9scy5wcmV2KS5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLm5leHQpO1xuICAgICAgICAvLyBzbGlkZXIudmlld3BvcnQuYXBwZW5kKHNsaWRlci5jb250cm9scy5kaXJlY3Rpb25FbCk7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5lbC5hZGRDbGFzcygnYngtaGFzLWNvbnRyb2xzLWRpcmVjdGlvbicpLmFwcGVuZChzbGlkZXIuY29udHJvbHMuZGlyZWN0aW9uRWwpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBcHBlbmRzIHN0YXJ0IC8gc3RvcCBhdXRvIGNvbnRyb2xzIHRvIHRoZSBjb250cm9scyBlbGVtZW50XG4gICAgICovXG4gICAgdmFyIGFwcGVuZENvbnRyb2xzQXV0byA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnN0YXJ0ID0gJCgnPGRpdiBjbGFzcz1cImJ4LWNvbnRyb2xzLWF1dG8taXRlbVwiPjxhIGNsYXNzPVwiYngtc3RhcnRcIiBocmVmPVwiXCI+JyArIHNsaWRlci5zZXR0aW5ncy5zdGFydFRleHQgKyAnPC9hPjwvZGl2PicpO1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnN0b3AgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtYXV0by1pdGVtXCI+PGEgY2xhc3M9XCJieC1zdG9wXCIgaHJlZj1cIlwiPicgKyBzbGlkZXIuc2V0dGluZ3Muc3RvcFRleHQgKyAnPC9hPjwvZGl2PicpO1xuICAgICAgLy8gYWRkIHRoZSBjb250cm9scyB0byB0aGUgRE9NXG4gICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsID0gJCgnPGRpdiBjbGFzcz1cImJ4LWNvbnRyb2xzLWF1dG9cIiAvPicpO1xuICAgICAgLy8gb24gY2xpY2sgYWN0aW9ucyB0byB0aGUgY29udHJvbHNcbiAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwub24oJ2NsaWNrJywgJy5ieC1zdGFydCcsIGNsaWNrU3RhcnRCaW5kKTtcbiAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwub24oJ2NsaWNrJywgJy5ieC1zdG9wJywgY2xpY2tTdG9wQmluZCk7XG4gICAgICAvLyBpZiBhdXRvQ29udHJvbHNDb21iaW5lLCBpbnNlcnQgb25seSB0aGUgXCJzdGFydFwiIGNvbnRyb2xcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzQ29tYmluZSkge1xuICAgICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLmFwcGVuZChzbGlkZXIuY29udHJvbHMuc3RhcnQpO1xuICAgICAgLy8gaWYgYXV0b0NvbnRyb2xzQ29tYmluZSBpcyBmYWxzZSwgaW5zZXJ0IGJvdGggY29udHJvbHNcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwuYXBwZW5kKHNsaWRlci5jb250cm9scy5zdGFydCkuYXBwZW5kKHNsaWRlci5jb250cm9scy5zdG9wKTtcbiAgICAgIH1cbiAgICAgIC8vIGlmIGF1dG8gY29udHJvbHMgc2VsZWN0b3Igd2FzIHN1cHBsaWVkLCBwb3B1bGF0ZSBpdCB3aXRoIHRoZSBjb250cm9sc1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNTZWxlY3Rvcikge1xuICAgICAgICAkKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNTZWxlY3RvcikuaHRtbChzbGlkZXIuY29udHJvbHMuYXV0b0VsKTtcbiAgICAgIC8vIGlmIGF1dG8gY29udHJvbHMgc2VsZWN0b3Igd2FzIG5vdCBzdXBwbGllZCwgYWRkIGl0IGFmdGVyIHRoZSB3cmFwcGVyXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXIuY29udHJvbHMuZWwuYWRkQ2xhc3MoJ2J4LWhhcy1jb250cm9scy1hdXRvJykuYXBwZW5kKHNsaWRlci5jb250cm9scy5hdXRvRWwpO1xuICAgICAgfVxuICAgICAgLy8gdXBkYXRlIHRoZSBhdXRvIGNvbnRyb2xzXG4gICAgICB1cGRhdGVBdXRvQ29udHJvbHMoc2xpZGVyLnNldHRpbmdzLmF1dG9TdGFydCA/ICdzdG9wJyA6ICdzdGFydCcpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBcHBlbmRzIGltYWdlIGNhcHRpb25zIHRvIHRoZSBET01cbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kQ2FwdGlvbnMgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGN5Y2xlIHRocm91Z2ggZWFjaCBjaGlsZFxuICAgICAgc2xpZGVyLmNoaWxkcmVuLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgLy8gZ2V0IHRoZSBpbWFnZSB0aXRsZSBhdHRyaWJ1dGVcbiAgICAgICAgdmFyIHRpdGxlID0gJCh0aGlzKS5maW5kKCdpbWc6Zmlyc3QnKS5hdHRyKCd0aXRsZScpO1xuICAgICAgICAvLyBhcHBlbmQgdGhlIGNhcHRpb25cbiAgICAgICAgaWYgKHRpdGxlICE9PSB1bmRlZmluZWQgJiYgKCcnICsgdGl0bGUpLmxlbmd0aCkge1xuICAgICAgICAgICQodGhpcykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiYngtY2FwdGlvblwiPjxzcGFuPicgKyB0aXRsZSArICc8L3NwYW4+PC9kaXY+Jyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbGljayBuZXh0IGJpbmRpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIGNsaWNrTmV4dEJpbmQgPSBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLmVsLmhhc0NsYXNzKCdkaXNhYmxlZCcpKSB7IHJldHVybjsgfVxuICAgICAgLy8gaWYgYXV0byBzaG93IGlzIHJ1bm5pbmcsIHN0b3AgaXRcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0byAmJiBzbGlkZXIuc2V0dGluZ3Muc3RvcEF1dG9PbkNsaWNrKSB7IGVsLnN0b3BBdXRvKCk7IH1cbiAgICAgIGVsLmdvVG9OZXh0U2xpZGUoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2xpY2sgcHJldiBiaW5kaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBjbGlja1ByZXZCaW5kID0gZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5lbC5oYXNDbGFzcygnZGlzYWJsZWQnKSkgeyByZXR1cm47IH1cbiAgICAgIC8vIGlmIGF1dG8gc2hvdyBpcyBydW5uaW5nLCBzdG9wIGl0XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLnN0b3BBdXRvT25DbGljaykgeyBlbC5zdG9wQXV0bygpOyB9XG4gICAgICBlbC5nb1RvUHJldlNsaWRlKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsaWNrIHN0YXJ0IGJpbmRpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIGNsaWNrU3RhcnRCaW5kID0gZnVuY3Rpb24oZSkge1xuICAgICAgZWwuc3RhcnRBdXRvKCk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsaWNrIHN0b3AgYmluZGluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgY2xpY2tTdG9wQmluZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGVsLnN0b3BBdXRvKCk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsaWNrIHBhZ2VyIGJpbmRpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIGNsaWNrUGFnZXJCaW5kID0gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIHBhZ2VyTGluaywgcGFnZXJJbmRleDtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMuZWwuaGFzQ2xhc3MoJ2Rpc2FibGVkJykpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gaWYgYXV0byBzaG93IGlzIHJ1bm5pbmcsIHN0b3AgaXRcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0byAgJiYgc2xpZGVyLnNldHRpbmdzLnN0b3BBdXRvT25DbGljaykgeyBlbC5zdG9wQXV0bygpOyB9XG4gICAgICBwYWdlckxpbmsgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgICBpZiAocGFnZXJMaW5rLmF0dHIoJ2RhdGEtc2xpZGUtaW5kZXgnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHBhZ2VySW5kZXggPSBwYXJzZUludChwYWdlckxpbmsuYXR0cignZGF0YS1zbGlkZS1pbmRleCcpKTtcbiAgICAgICAgLy8gaWYgY2xpY2tlZCBwYWdlciBsaW5rIGlzIG5vdCBhY3RpdmUsIGNvbnRpbnVlIHdpdGggdGhlIGdvVG9TbGlkZSBjYWxsXG4gICAgICAgIGlmIChwYWdlckluZGV4ICE9PSBzbGlkZXIuYWN0aXZlLmluZGV4KSB7IGVsLmdvVG9TbGlkZShwYWdlckluZGV4KTsgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBwYWdlciBsaW5rcyB3aXRoIGFuIGFjdGl2ZSBjbGFzc1xuICAgICAqXG4gICAgICogQHBhcmFtIHNsaWRlSW5kZXggKGludClcbiAgICAgKiAgLSBpbmRleCBvZiBzbGlkZSB0byBtYWtlIGFjdGl2ZVxuICAgICAqL1xuICAgIHZhciB1cGRhdGVQYWdlckFjdGl2ZSA9IGZ1bmN0aW9uKHNsaWRlSW5kZXgpIHtcbiAgICAgIC8vIGlmIFwic2hvcnRcIiBwYWdlciB0eXBlXG4gICAgICB2YXIgbGVuID0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aDsgLy8gbmIgb2YgY2hpbGRyZW5cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucGFnZXJUeXBlID09PSAnc2hvcnQnKSB7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzID4gMSkge1xuICAgICAgICAgIGxlbiA9IE1hdGguY2VpbChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC8gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgc2xpZGVyLnBhZ2VyRWwuaHRtbCgoc2xpZGVJbmRleCArIDEpICsgc2xpZGVyLnNldHRpbmdzLnBhZ2VyU2hvcnRTZXBhcmF0b3IgKyBsZW4pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyByZW1vdmUgYWxsIHBhZ2VyIGFjdGl2ZSBjbGFzc2VzXG4gICAgICBzbGlkZXIucGFnZXJFbC5maW5kKCdhJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgLy8gYXBwbHkgdGhlIGFjdGl2ZSBjbGFzcyBmb3IgYWxsIHBhZ2Vyc1xuICAgICAgc2xpZGVyLnBhZ2VyRWwuZWFjaChmdW5jdGlvbihpLCBlbCkgeyAkKGVsKS5maW5kKCdhJykuZXEoc2xpZGVJbmRleCkuYWRkQ2xhc3MoJ2FjdGl2ZScpOyB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgbmVlZGVkIGFjdGlvbnMgYWZ0ZXIgYSBzbGlkZSB0cmFuc2l0aW9uXG4gICAgICovXG4gICAgdmFyIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBpZiBpbmZpbml0ZSBsb29wIGlzIHRydWVcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wKSB7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9ICcnO1xuICAgICAgICAvLyBmaXJzdCBzbGlkZVxuICAgICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkge1xuICAgICAgICAgIC8vIHNldCB0aGUgbmV3IHBvc2l0aW9uXG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEoMCkucG9zaXRpb24oKTtcbiAgICAgICAgLy8gY2Fyb3VzZWwsIGxhc3Qgc2xpZGVcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIuYWN0aXZlLmluZGV4ID09PSBnZXRQYWdlclF0eSgpIC0gMSAmJiBzbGlkZXIuY2Fyb3VzZWwpIHtcbiAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcSgoZ2V0UGFnZXJRdHkoKSAtIDEpICogZ2V0TW92ZUJ5KCkpLnBvc2l0aW9uKCk7XG4gICAgICAgIC8vIGxhc3Qgc2xpZGVcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIuYWN0aXZlLmluZGV4ID09PSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSAxKS5wb3NpdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3NpdGlvbikge1xuICAgICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7IHNldFBvc2l0aW9uUHJvcGVydHkoLXBvc2l0aW9uLmxlZnQsICdyZXNldCcsIDApOyB9XG4gICAgICAgICAgZWxzZSBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHsgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtcG9zaXRpb24udG9wLCAncmVzZXQnLCAwKTsgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBkZWNsYXJlIHRoYXQgdGhlIHRyYW5zaXRpb24gaXMgY29tcGxldGVcbiAgICAgIHNsaWRlci53b3JraW5nID0gZmFsc2U7XG4gICAgICAvLyBvblNsaWRlQWZ0ZXIgY2FsbGJhY2tcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5vblNsaWRlQWZ0ZXIuY2FsbChlbCwgc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXgpLCBzbGlkZXIub2xkSW5kZXgsIHNsaWRlci5hY3RpdmUuaW5kZXgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBhdXRvIGNvbnRyb2xzIHN0YXRlIChlaXRoZXIgYWN0aXZlLCBvciBjb21iaW5lZCBzd2l0Y2gpXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RhdGUgKHN0cmluZykgXCJzdGFydFwiLCBcInN0b3BcIlxuICAgICAqICAtIHRoZSBuZXcgc3RhdGUgb2YgdGhlIGF1dG8gc2hvd1xuICAgICAqL1xuICAgIHZhciB1cGRhdGVBdXRvQ29udHJvbHMgPSBmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgLy8gaWYgYXV0b0NvbnRyb2xzQ29tYmluZSBpcyB0cnVlLCByZXBsYWNlIHRoZSBjdXJyZW50IGNvbnRyb2wgd2l0aCB0aGUgbmV3IHN0YXRlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9sc0NvbWJpbmUpIHtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5odG1sKHNsaWRlci5jb250cm9sc1tzdGF0ZV0pO1xuICAgICAgLy8gaWYgYXV0b0NvbnRyb2xzQ29tYmluZSBpcyBmYWxzZSwgYXBwbHkgdGhlIFwiYWN0aXZlXCIgY2xhc3MgdG8gdGhlIGFwcHJvcHJpYXRlIGNvbnRyb2xcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwuZmluZCgnYScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5maW5kKCdhOm5vdCguYngtJyArIHN0YXRlICsgJyknKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgdGhlIGRpcmVjdGlvbiBjb250cm9scyAoY2hlY2tzIGlmIGVpdGhlciBzaG91bGQgYmUgaGlkZGVuKVxuICAgICAqL1xuICAgIHZhciB1cGRhdGVEaXJlY3Rpb25Db250cm9scyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGdldFBhZ2VyUXR5KCkgPT09IDEpIHtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5uZXh0LmFkZENsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgfSBlbHNlIGlmICghc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuc2V0dGluZ3MuaGlkZUNvbnRyb2xPbkVuZCkge1xuICAgICAgICAvLyBpZiBmaXJzdCBzbGlkZVxuICAgICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkge1xuICAgICAgICAgIHNsaWRlci5jb250cm9scy5wcmV2LmFkZENsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICAgIHNsaWRlci5jb250cm9scy5uZXh0LnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICAvLyBpZiBsYXN0IHNsaWRlXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gZ2V0UGFnZXJRdHkoKSAtIDEpIHtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5hZGRDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMucHJldi5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgLy8gaWYgYW55IHNsaWRlIGluIHRoZSBtaWRkbGVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMucHJldi5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cdC8qIGF1dG8gc3RhcnQgYW5kIHN0b3AgZnVuY3Rpb25zICovXG5cdHZhciB3aW5kb3dGb2N1c0hhbmRsZXIgPSBmdW5jdGlvbigpIHsgZWwuc3RhcnRBdXRvKCk7IH07XG5cdHZhciB3aW5kb3dCbHVySGFuZGxlciA9IGZ1bmN0aW9uKCkgeyBlbC5zdG9wQXV0bygpOyB9O1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBhdXRvIHByb2Nlc3NcbiAgICAgKi9cbiAgICB2YXIgaW5pdEF1dG8gPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGlmIGF1dG9EZWxheSB3YXMgc3VwcGxpZWQsIGxhdW5jaCB0aGUgYXV0byBzaG93IHVzaW5nIGEgc2V0VGltZW91dCgpIGNhbGxcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RlbGF5ID4gMCkge1xuICAgICAgICBzZXRUaW1lb3V0KGVsLnN0YXJ0QXV0bywgc2xpZGVyLnNldHRpbmdzLmF1dG9EZWxheSk7XG4gICAgICAvLyBpZiBhdXRvRGVsYXkgd2FzIG5vdCBzdXBwbGllZCwgc3RhcnQgdGhlIGF1dG8gc2hvdyBub3JtYWxseVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWwuc3RhcnRBdXRvKCk7XG5cbiAgICAgICAgLy9hZGQgZm9jdXMgYW5kIGJsdXIgZXZlbnRzIHRvIGVuc3VyZSBpdHMgcnVubmluZyBpZiB0aW1lb3V0IGdldHMgcGF1c2VkXG4gICAgICAgICQod2luZG93KS5mb2N1cyh3aW5kb3dGb2N1c0hhbmRsZXIpLmJsdXIod2luZG93Qmx1ckhhbmRsZXIpO1xuICAgICAgfVxuICAgICAgLy8gaWYgYXV0b0hvdmVyIGlzIHJlcXVlc3RlZFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvSG92ZXIpIHtcbiAgICAgICAgLy8gb24gZWwgaG92ZXJcbiAgICAgICAgZWwuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgLy8gaWYgdGhlIGF1dG8gc2hvdyBpcyBjdXJyZW50bHkgcGxheWluZyAoaGFzIGFuIGFjdGl2ZSBpbnRlcnZhbClcbiAgICAgICAgICBpZiAoc2xpZGVyLmludGVydmFsKSB7XG4gICAgICAgICAgICAvLyBzdG9wIHRoZSBhdXRvIHNob3cgYW5kIHBhc3MgdHJ1ZSBhcmd1bWVudCB3aGljaCB3aWxsIHByZXZlbnQgY29udHJvbCB1cGRhdGVcbiAgICAgICAgICAgIGVsLnN0b3BBdXRvKHRydWUpO1xuICAgICAgICAgICAgLy8gY3JlYXRlIGEgbmV3IGF1dG9QYXVzZWQgdmFsdWUgd2hpY2ggd2lsbCBiZSB1c2VkIGJ5IHRoZSByZWxhdGl2ZSBcIm1vdXNlb3V0XCIgZXZlbnRcbiAgICAgICAgICAgIHNsaWRlci5hdXRvUGF1c2VkID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8vIGlmIHRoZSBhdXRvUGF1c2VkIHZhbHVlIHdhcyBjcmVhdGVkIGJlIHRoZSBwcmlvciBcIm1vdXNlb3ZlclwiIGV2ZW50XG4gICAgICAgICAgaWYgKHNsaWRlci5hdXRvUGF1c2VkKSB7XG4gICAgICAgICAgICAvLyBzdGFydCB0aGUgYXV0byBzaG93IGFuZCBwYXNzIHRydWUgYXJndW1lbnQgd2hpY2ggd2lsbCBwcmV2ZW50IGNvbnRyb2wgdXBkYXRlXG4gICAgICAgICAgICBlbC5zdGFydEF1dG8odHJ1ZSk7XG4gICAgICAgICAgICAvLyByZXNldCB0aGUgYXV0b1BhdXNlZCB2YWx1ZVxuICAgICAgICAgICAgc2xpZGVyLmF1dG9QYXVzZWQgPSBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSB0aWNrZXIgcHJvY2Vzc1xuICAgICAqL1xuICAgIHZhciBpbml0VGlja2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc3RhcnRQb3NpdGlvbiA9IDAsXG4gICAgICBwb3NpdGlvbiwgdHJhbnNmb3JtLCB2YWx1ZSwgaWR4LCByYXRpbywgcHJvcGVydHksIG5ld1NwZWVkLCB0b3RhbERpbWVucztcbiAgICAgIC8vIGlmIGF1dG9EaXJlY3Rpb24gaXMgXCJuZXh0XCIsIGFwcGVuZCBhIGNsb25lIG9mIHRoZSBlbnRpcmUgc2xpZGVyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9EaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICBlbC5hcHBlbmQoc2xpZGVyLmNoaWxkcmVuLmNsb25lKCkuYWRkQ2xhc3MoJ2J4LWNsb25lJykpO1xuICAgICAgLy8gaWYgYXV0b0RpcmVjdGlvbiBpcyBcInByZXZcIiwgcHJlcGVuZCBhIGNsb25lIG9mIHRoZSBlbnRpcmUgc2xpZGVyLCBhbmQgc2V0IHRoZSBsZWZ0IHBvc2l0aW9uXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbC5wcmVwZW5kKHNsaWRlci5jaGlsZHJlbi5jbG9uZSgpLmFkZENsYXNzKCdieC1jbG9uZScpKTtcbiAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZmlyc3QoKS5wb3NpdGlvbigpO1xuICAgICAgICBzdGFydFBvc2l0aW9uID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IC1wb3NpdGlvbi5sZWZ0IDogLXBvc2l0aW9uLnRvcDtcbiAgICAgIH1cbiAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoc3RhcnRQb3NpdGlvbiwgJ3Jlc2V0JywgMCk7XG4gICAgICAvLyBkbyBub3QgYWxsb3cgY29udHJvbHMgaW4gdGlja2VyIG1vZGVcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5wYWdlciA9IGZhbHNlO1xuICAgICAgc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzID0gZmFsc2U7XG4gICAgICBzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzID0gZmFsc2U7XG4gICAgICAvLyBpZiBhdXRvSG92ZXIgaXMgcmVxdWVzdGVkXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnRpY2tlckhvdmVyKSB7XG4gICAgICAgIGlmIChzbGlkZXIudXNpbmdDU1MpIHtcbiAgICAgICAgICBpZHggPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gNCA6IDU7XG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmhvdmVyKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdHJhbnNmb3JtID0gZWwuY3NzKCctJyArIHNsaWRlci5jc3NQcmVmaXggKyAnLXRyYW5zZm9ybScpO1xuICAgICAgICAgICAgdmFsdWUgPSBwYXJzZUZsb2F0KHRyYW5zZm9ybS5zcGxpdCgnLCcpW2lkeF0pO1xuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0b3RhbERpbWVucyA9IDA7XG4gICAgICAgICAgICBzbGlkZXIuY2hpbGRyZW4uZWFjaChmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgICB0b3RhbERpbWVucyArPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gJCh0aGlzKS5vdXRlcldpZHRoKHRydWUpIDogJCh0aGlzKS5vdXRlckhlaWdodCh0cnVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBzcGVlZCByYXRpbyAodXNlZCB0byBkZXRlcm1pbmUgdGhlIG5ldyBzcGVlZCB0byBmaW5pc2ggdGhlIHBhdXNlZCBhbmltYXRpb24pXG4gICAgICAgICAgICByYXRpbyA9IHNsaWRlci5zZXR0aW5ncy5zcGVlZCAvIHRvdGFsRGltZW5zO1xuICAgICAgICAgICAgLy8gZGV0ZXJtaW5lIHdoaWNoIHByb3BlcnR5IHRvIHVzZVxuICAgICAgICAgICAgcHJvcGVydHkgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gJ2xlZnQnIDogJ3RvcCc7XG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIG5ldyBzcGVlZFxuICAgICAgICAgICAgbmV3U3BlZWQgPSByYXRpbyAqICh0b3RhbERpbWVucyAtIChNYXRoLmFicyhwYXJzZUludCh2YWx1ZSkpKSk7XG4gICAgICAgICAgICB0aWNrZXJMb29wKG5ld1NwZWVkKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBvbiBlbCBob3ZlclxuICAgICAgICAgIHNsaWRlci52aWV3cG9ydC5ob3ZlcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGVsLnN0b3AoKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgdG90YWwgd2lkdGggb2YgY2hpbGRyZW4gKHVzZWQgdG8gY2FsY3VsYXRlIHRoZSBzcGVlZCByYXRpbylcbiAgICAgICAgICAgIHRvdGFsRGltZW5zID0gMDtcbiAgICAgICAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICAgIHRvdGFsRGltZW5zICs9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAkKHRoaXMpLm91dGVyV2lkdGgodHJ1ZSkgOiAkKHRoaXMpLm91dGVySGVpZ2h0KHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHNwZWVkIHJhdGlvICh1c2VkIHRvIGRldGVybWluZSB0aGUgbmV3IHNwZWVkIHRvIGZpbmlzaCB0aGUgcGF1c2VkIGFuaW1hdGlvbilcbiAgICAgICAgICAgIHJhdGlvID0gc2xpZGVyLnNldHRpbmdzLnNwZWVkIC8gdG90YWxEaW1lbnM7XG4gICAgICAgICAgICAvLyBkZXRlcm1pbmUgd2hpY2ggcHJvcGVydHkgdG8gdXNlXG4gICAgICAgICAgICBwcm9wZXJ0eSA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAnbGVmdCcgOiAndG9wJztcbiAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgbmV3IHNwZWVkXG4gICAgICAgICAgICBuZXdTcGVlZCA9IHJhdGlvICogKHRvdGFsRGltZW5zIC0gKE1hdGguYWJzKHBhcnNlSW50KGVsLmNzcyhwcm9wZXJ0eSkpKSkpO1xuICAgICAgICAgICAgdGlja2VyTG9vcChuZXdTcGVlZCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIHN0YXJ0IHRoZSB0aWNrZXIgbG9vcFxuICAgICAgdGlja2VyTG9vcCgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSdW5zIGEgY29udGludW91cyBsb29wLCBuZXdzIHRpY2tlci1zdHlsZVxuICAgICAqL1xuICAgIHZhciB0aWNrZXJMb29wID0gZnVuY3Rpb24ocmVzdW1lU3BlZWQpIHtcbiAgICAgIHZhciBzcGVlZCA9IHJlc3VtZVNwZWVkID8gcmVzdW1lU3BlZWQgOiBzbGlkZXIuc2V0dGluZ3Muc3BlZWQsXG4gICAgICBwb3NpdGlvbiA9IHtsZWZ0OiAwLCB0b3A6IDB9LFxuICAgICAgcmVzZXQgPSB7bGVmdDogMCwgdG9wOiAwfSxcbiAgICAgIGFuaW1hdGVQcm9wZXJ0eSwgcmVzZXRWYWx1ZSwgcGFyYW1zO1xuXG4gICAgICAvLyBpZiBcIm5leHRcIiBhbmltYXRlIGxlZnQgcG9zaXRpb24gdG8gbGFzdCBjaGlsZCwgdGhlbiByZXNldCBsZWZ0IHRvIDBcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RpcmVjdGlvbiA9PT0gJ25leHQnKSB7XG4gICAgICAgIHBvc2l0aW9uID0gZWwuZmluZCgnLmJ4LWNsb25lJykuZmlyc3QoKS5wb3NpdGlvbigpO1xuICAgICAgLy8gaWYgXCJwcmV2XCIgYW5pbWF0ZSBsZWZ0IHBvc2l0aW9uIHRvIDAsIHRoZW4gcmVzZXQgbGVmdCB0byBmaXJzdCBub24tY2xvbmUgY2hpbGRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc2V0ID0gc2xpZGVyLmNoaWxkcmVuLmZpcnN0KCkucG9zaXRpb24oKTtcbiAgICAgIH1cbiAgICAgIGFuaW1hdGVQcm9wZXJ0eSA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAtcG9zaXRpb24ubGVmdCA6IC1wb3NpdGlvbi50b3A7XG4gICAgICByZXNldFZhbHVlID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IC1yZXNldC5sZWZ0IDogLXJlc2V0LnRvcDtcbiAgICAgIHBhcmFtcyA9IHtyZXNldFZhbHVlOiByZXNldFZhbHVlfTtcbiAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoYW5pbWF0ZVByb3BlcnR5LCAndGlja2VyJywgc3BlZWQsIHBhcmFtcyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGVsIGlzIG9uIHNjcmVlblxuICAgICAqL1xuICAgIHZhciBpc09uU2NyZWVuID0gZnVuY3Rpb24oZWwpIHtcbiAgICAgIHZhciB3aW4gPSAkKHdpbmRvdyksXG4gICAgICB2aWV3cG9ydCA9IHtcbiAgICAgICAgdG9wOiB3aW4uc2Nyb2xsVG9wKCksXG4gICAgICAgIGxlZnQ6IHdpbi5zY3JvbGxMZWZ0KClcbiAgICAgIH0sXG4gICAgICBib3VuZHMgPSBlbC5vZmZzZXQoKTtcblxuICAgICAgdmlld3BvcnQucmlnaHQgPSB2aWV3cG9ydC5sZWZ0ICsgd2luLndpZHRoKCk7XG4gICAgICB2aWV3cG9ydC5ib3R0b20gPSB2aWV3cG9ydC50b3AgKyB3aW4uaGVpZ2h0KCk7XG4gICAgICBib3VuZHMucmlnaHQgPSBib3VuZHMubGVmdCArIGVsLm91dGVyV2lkdGgoKTtcbiAgICAgIGJvdW5kcy5ib3R0b20gPSBib3VuZHMudG9wICsgZWwub3V0ZXJIZWlnaHQoKTtcblxuICAgICAgcmV0dXJuICghKHZpZXdwb3J0LnJpZ2h0IDwgYm91bmRzLmxlZnQgfHwgdmlld3BvcnQubGVmdCA+IGJvdW5kcy5yaWdodCB8fCB2aWV3cG9ydC5ib3R0b20gPCBib3VuZHMudG9wIHx8IHZpZXdwb3J0LnRvcCA+IGJvdW5kcy5ib3R0b20pKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMga2V5Ym9hcmQgZXZlbnRzXG4gICAgICovXG4gICAgdmFyIGtleVByZXNzID0gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIGFjdGl2ZUVsZW1lbnRUYWcgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSxcbiAgICAgIHRhZ0ZpbHRlcnMgPSAnaW5wdXR8dGV4dGFyZWEnLFxuICAgICAgcCA9IG5ldyBSZWdFeHAoYWN0aXZlRWxlbWVudFRhZyxbJ2knXSksXG4gICAgICByZXN1bHQgPSBwLmV4ZWModGFnRmlsdGVycyk7XG5cbiAgICAgIGlmIChyZXN1bHQgPT0gbnVsbCAmJiBpc09uU2NyZWVuKGVsKSkge1xuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAzOSkge1xuICAgICAgICAgIGNsaWNrTmV4dEJpbmQoZSk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PT0gMzcpIHtcbiAgICAgICAgICBjbGlja1ByZXZCaW5kKGUpO1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyB0b3VjaCBldmVudHNcbiAgICAgKi9cbiAgICB2YXIgaW5pdFRvdWNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBpbml0aWFsaXplIG9iamVjdCB0byBjb250YWluIGFsbCB0b3VjaCB2YWx1ZXNcbiAgICAgIHNsaWRlci50b3VjaCA9IHtcbiAgICAgICAgc3RhcnQ6IHt4OiAwLCB5OiAwfSxcbiAgICAgICAgZW5kOiB7eDogMCwgeTogMH1cbiAgICAgIH07XG4gICAgICBzbGlkZXIudmlld3BvcnQub24oJ3RvdWNoc3RhcnQgTVNQb2ludGVyRG93biBwb2ludGVyZG93bicsIG9uVG91Y2hTdGFydCk7XG5cbiAgICAgIC8vZm9yIGJyb3dzZXJzIHRoYXQgaGF2ZSBpbXBsZW1lbnRlZCBwb2ludGVyIGV2ZW50cyBhbmQgZmlyZSBhIGNsaWNrIGFmdGVyXG4gICAgICAvL2V2ZXJ5IHBvaW50ZXJ1cCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgcG9pbnRlcnVwIGlzIG9uIHNhbWUgc2NyZWVuIGxvY2F0aW9uIGFzIHBvaW50ZXJkb3duIG9yIG5vdFxuICAgICAgc2xpZGVyLnZpZXdwb3J0Lm9uKCdjbGljaycsICcuYnhzbGlkZXIgYScsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5oYXNDbGFzcygnY2xpY2stZGlzYWJsZWQnKSkge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBzbGlkZXIudmlld3BvcnQucmVtb3ZlQ2xhc3MoJ2NsaWNrLWRpc2FibGVkJyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBFdmVudCBoYW5kbGVyIGZvciBcInRvdWNoc3RhcnRcIlxuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgb25Ub3VjaFN0YXJ0ID0gZnVuY3Rpb24oZSkge1xuICAgICAgLy8gd2F0Y2ggb25seSBmb3IgbGVmdCBtb3VzZSwgdG91Y2ggY29udGFjdCBhbmQgcGVuIGNvbnRhY3RcbiAgICAgIC8vIHRvdWNoc3RhcnQgZXZlbnQgb2JqZWN0IGRvZXNuYHQgaGF2ZSBidXR0b24gcHJvcGVydHlcbiAgICAgIGlmIChlLnR5cGUgIT09ICd0b3VjaHN0YXJ0JyAmJiBlLmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAvL2Rpc2FibGUgc2xpZGVyIGNvbnRyb2xzIHdoaWxlIHVzZXIgaXMgaW50ZXJhY3Rpbmcgd2l0aCBzbGlkZXMgdG8gYXZvaWQgc2xpZGVyIGZyZWV6ZSB0aGF0IGhhcHBlbnMgb24gdG91Y2ggZGV2aWNlcyB3aGVuIGEgc2xpZGUgc3dpcGUgaGFwcGVucyBpbW1lZGlhdGVseSBhZnRlciBpbnRlcmFjdGluZyB3aXRoIHNsaWRlciBjb250cm9sc1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLmFkZENsYXNzKCdkaXNhYmxlZCcpO1xuXG4gICAgICBpZiAoc2xpZGVyLndvcmtpbmcpIHtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gcmVjb3JkIHRoZSBvcmlnaW5hbCBwb3NpdGlvbiB3aGVuIHRvdWNoIHN0YXJ0c1xuICAgICAgICBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MgPSBlbC5wb3NpdGlvbigpO1xuICAgICAgICB2YXIgb3JpZyA9IGUub3JpZ2luYWxFdmVudCxcbiAgICAgICAgdG91Y2hQb2ludHMgPSAodHlwZW9mIG9yaWcuY2hhbmdlZFRvdWNoZXMgIT09ICd1bmRlZmluZWQnKSA/IG9yaWcuY2hhbmdlZFRvdWNoZXMgOiBbb3JpZ107XG5cdFx0dmFyIGNocm9tZVBvaW50ZXJFdmVudHMgPSB0eXBlb2YgUG9pbnRlckV2ZW50ID09PSAnZnVuY3Rpb24nOyBcblx0XHRpZiAoY2hyb21lUG9pbnRlckV2ZW50cykgeyBcblx0XHRcdGlmIChvcmlnLnBvaW50ZXJJZCA9PT0gdW5kZWZpbmVkKSB7IFxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9IFxuXHRcdH1cbiAgICAgICAgLy8gcmVjb3JkIHRoZSBzdGFydGluZyB0b3VjaCB4LCB5IGNvb3JkaW5hdGVzXG4gICAgICAgIHNsaWRlci50b3VjaC5zdGFydC54ID0gdG91Y2hQb2ludHNbMF0ucGFnZVg7XG4gICAgICAgIHNsaWRlci50b3VjaC5zdGFydC55ID0gdG91Y2hQb2ludHNbMF0ucGFnZVk7XG5cbiAgICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5nZXQoMCkuc2V0UG9pbnRlckNhcHR1cmUpIHtcbiAgICAgICAgICBzbGlkZXIucG9pbnRlcklkID0gb3JpZy5wb2ludGVySWQ7XG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5zZXRQb2ludGVyQ2FwdHVyZShzbGlkZXIucG9pbnRlcklkKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBzdG9yZSBvcmlnaW5hbCBldmVudCBkYXRhIGZvciBjbGljayBmaXhhdGlvblxuICAgICAgICBzbGlkZXIub3JpZ2luYWxDbGlja1RhcmdldCA9IG9yaWcub3JpZ2luYWxUYXJnZXQgfHwgb3JpZy50YXJnZXQ7XG4gICAgICAgIHNsaWRlci5vcmlnaW5hbENsaWNrQnV0dG9uID0gb3JpZy5idXR0b247XG4gICAgICAgIHNsaWRlci5vcmlnaW5hbENsaWNrQnV0dG9ucyA9IG9yaWcuYnV0dG9ucztcbiAgICAgICAgc2xpZGVyLm9yaWdpbmFsRXZlbnRUeXBlID0gb3JpZy50eXBlO1xuICAgICAgICAvLyBhdCB0aGlzIG1vbWVudCB3ZSBkb25gdCBrbm93IHdoYXQgaXQgaXMgY2xpY2sgb3Igc3dpcGVcbiAgICAgICAgc2xpZGVyLmhhc01vdmUgPSBmYWxzZTtcbiAgICAgICAgLy8gb24gYSBcInRvdWNobW92ZVwiIGV2ZW50IHRvIHRoZSB2aWV3cG9ydFxuICAgICAgICBzbGlkZXIudmlld3BvcnQub24oJ3RvdWNobW92ZSBNU1BvaW50ZXJNb3ZlIHBvaW50ZXJtb3ZlJywgb25Ub3VjaE1vdmUpO1xuICAgICAgICAvLyBvbiBhIFwidG91Y2hlbmRcIiBldmVudCB0byB0aGUgdmlld3BvcnRcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0Lm9uKCd0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXAnLCBvblRvdWNoRW5kKTtcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0Lm9uKCdNU1BvaW50ZXJDYW5jZWwgcG9pbnRlcmNhbmNlbCcsIG9uUG9pbnRlckNhbmNlbCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENhbmNlbCBQb2ludGVyIGZvciBXaW5kb3dzIFBob25lXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBvblBvaW50ZXJDYW5jZWwgPSBmdW5jdGlvbihlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAvKiBvblBvaW50ZXJDYW5jZWwgaGFuZGxlciBpcyBuZWVkZWQgdG8gZGVhbCB3aXRoIHNpdHVhdGlvbnMgd2hlbiBhIHRvdWNoZW5kXG4gICAgICBkb2Vzbid0IGZpcmUgYWZ0ZXIgYSB0b3VjaHN0YXJ0ICh0aGlzIGhhcHBlbnMgb24gd2luZG93cyBwaG9uZXMgb25seSkgKi9cbiAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zLmxlZnQsICdyZXNldCcsIDApO1xuXG4gICAgICAvL3JlbW92ZSBoYW5kbGVyc1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLnJlbW92ZUNsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgc2xpZGVyLnZpZXdwb3J0Lm9mZignTVNQb2ludGVyQ2FuY2VsIHBvaW50ZXJjYW5jZWwnLCBvblBvaW50ZXJDYW5jZWwpO1xuICAgICAgc2xpZGVyLnZpZXdwb3J0Lm9mZigndG91Y2htb3ZlIE1TUG9pbnRlck1vdmUgcG9pbnRlcm1vdmUnLCBvblRvdWNoTW92ZSk7XG4gICAgICBzbGlkZXIudmlld3BvcnQub2ZmKCd0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXAnLCBvblRvdWNoRW5kKTtcbiAgICAgIGlmIChzbGlkZXIudmlld3BvcnQuZ2V0KDApLnJlbGVhc2VQb2ludGVyQ2FwdHVyZSkge1xuICAgICAgICBzbGlkZXIudmlld3BvcnQuZ2V0KDApLnJlbGVhc2VQb2ludGVyQ2FwdHVyZShzbGlkZXIucG9pbnRlcklkKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRXZlbnQgaGFuZGxlciBmb3IgXCJ0b3VjaG1vdmVcIlxuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgb25Ub3VjaE1vdmUgPSBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgb3JpZyA9IGUub3JpZ2luYWxFdmVudCxcbiAgICAgIHRvdWNoUG9pbnRzID0gKHR5cGVvZiBvcmlnLmNoYW5nZWRUb3VjaGVzICE9PSAndW5kZWZpbmVkJykgPyBvcmlnLmNoYW5nZWRUb3VjaGVzIDogW29yaWddLFxuICAgICAgLy8gaWYgc2Nyb2xsaW5nIG9uIHkgYXhpcywgZG8gbm90IHByZXZlbnQgZGVmYXVsdFxuICAgICAgeE1vdmVtZW50ID0gTWF0aC5hYnModG91Y2hQb2ludHNbMF0ucGFnZVggLSBzbGlkZXIudG91Y2guc3RhcnQueCksXG4gICAgICB5TW92ZW1lbnQgPSBNYXRoLmFicyh0b3VjaFBvaW50c1swXS5wYWdlWSAtIHNsaWRlci50b3VjaC5zdGFydC55KSxcbiAgICAgIHZhbHVlID0gMCxcbiAgICAgIGNoYW5nZSA9IDA7XG4gICAgICAvLyB0aGlzIGlzIHN3aXBlXG4gICAgICBzbGlkZXIuaGFzTW92ZSA9IHRydWU7XG5cbiAgICAgIC8vIHggYXhpcyBzd2lwZVxuICAgICAgaWYgKCh4TW92ZW1lbnQgKiAzKSA+IHlNb3ZlbWVudCAmJiBzbGlkZXIuc2V0dGluZ3MucHJldmVudERlZmF1bHRTd2lwZVgpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgLy8geSBheGlzIHN3aXBlXG4gICAgICB9IGVsc2UgaWYgKCh5TW92ZW1lbnQgKiAzKSA+IHhNb3ZlbWVudCAmJiBzbGlkZXIuc2V0dGluZ3MucHJldmVudERlZmF1bHRTd2lwZVkpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgICAgaWYgKGUudHlwZSAhPT0gJ3RvdWNobW92ZScpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICdmYWRlJyAmJiBzbGlkZXIuc2V0dGluZ3Mub25lVG9PbmVUb3VjaCkge1xuICAgICAgICAvLyBpZiBob3Jpem9udGFsLCBkcmFnIGFsb25nIHggYXhpc1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIGNoYW5nZSA9IHRvdWNoUG9pbnRzWzBdLnBhZ2VYIC0gc2xpZGVyLnRvdWNoLnN0YXJ0Lng7XG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdCArIGNoYW5nZTtcbiAgICAgICAgLy8gaWYgdmVydGljYWwsIGRyYWcgYWxvbmcgeSBheGlzXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlID0gdG91Y2hQb2ludHNbMF0ucGFnZVkgLSBzbGlkZXIudG91Y2guc3RhcnQueTtcbiAgICAgICAgICB2YWx1ZSA9IHNsaWRlci50b3VjaC5vcmlnaW5hbFBvcy50b3AgKyBjaGFuZ2U7XG4gICAgICAgIH1cbiAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIFwidG91Y2hlbmRcIlxuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgb25Ub3VjaEVuZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHNsaWRlci52aWV3cG9ydC5vZmYoJ3RvdWNobW92ZSBNU1BvaW50ZXJNb3ZlIHBvaW50ZXJtb3ZlJywgb25Ub3VjaE1vdmUpO1xuICAgICAgLy9lbmFibGUgc2xpZGVyIGNvbnRyb2xzIGFzIHNvb24gYXMgdXNlciBzdG9wcyBpbnRlcmFjaW5nIHdpdGggc2xpZGVzXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICB2YXIgb3JpZyAgICA9IGUub3JpZ2luYWxFdmVudCxcbiAgICAgIHRvdWNoUG9pbnRzID0gKHR5cGVvZiBvcmlnLmNoYW5nZWRUb3VjaGVzICE9PSAndW5kZWZpbmVkJykgPyBvcmlnLmNoYW5nZWRUb3VjaGVzIDogW29yaWddLFxuICAgICAgdmFsdWUgICAgICAgPSAwLFxuICAgICAgZGlzdGFuY2UgICAgPSAwO1xuICAgICAgLy8gcmVjb3JkIGVuZCB4LCB5IHBvc2l0aW9uc1xuICAgICAgc2xpZGVyLnRvdWNoLmVuZC54ID0gdG91Y2hQb2ludHNbMF0ucGFnZVg7XG4gICAgICBzbGlkZXIudG91Y2guZW5kLnkgPSB0b3VjaFBvaW50c1swXS5wYWdlWTtcbiAgICAgIC8vIGlmIGZhZGUgbW9kZSwgY2hlY2sgaWYgYWJzb2x1dGUgeCBkaXN0YW5jZSBjbGVhcnMgdGhlIHRocmVzaG9sZFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnZmFkZScpIHtcbiAgICAgICAgZGlzdGFuY2UgPSBNYXRoLmFicyhzbGlkZXIudG91Y2guc3RhcnQueCAtIHNsaWRlci50b3VjaC5lbmQueCk7XG4gICAgICAgIGlmIChkaXN0YW5jZSA+PSBzbGlkZXIuc2V0dGluZ3Muc3dpcGVUaHJlc2hvbGQpIHtcbiAgICAgICAgICBpZiAoc2xpZGVyLnRvdWNoLnN0YXJ0LnggPiBzbGlkZXIudG91Y2guZW5kLngpIHtcbiAgICAgICAgICAgIGVsLmdvVG9OZXh0U2xpZGUoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbC5zdG9wQXV0bygpO1xuICAgICAgICB9XG4gICAgICAvLyBub3QgZmFkZSBtb2RlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBjYWxjdWxhdGUgZGlzdGFuY2UgYW5kIGVsJ3MgYW5pbWF0ZSBwcm9wZXJ0eVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIGRpc3RhbmNlID0gc2xpZGVyLnRvdWNoLmVuZC54IC0gc2xpZGVyLnRvdWNoLnN0YXJ0Lng7XG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkaXN0YW5jZSA9IHNsaWRlci50b3VjaC5lbmQueSAtIHNsaWRlci50b3VjaC5zdGFydC55O1xuICAgICAgICAgIHZhbHVlID0gc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zLnRvcDtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBub3QgaW5maW5pdGUgbG9vcCBhbmQgZmlyc3QgLyBsYXN0IHNsaWRlLCBkbyBub3QgYXR0ZW1wdCBhIHNsaWRlIHRyYW5zaXRpb25cbiAgICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmICgoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCAmJiBkaXN0YW5jZSA+IDApIHx8IChzbGlkZXIuYWN0aXZlLmxhc3QgJiYgZGlzdGFuY2UgPCAwKSkpIHtcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAncmVzZXQnLCAyMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGNoZWNrIGlmIGRpc3RhbmNlIGNsZWFycyB0aHJlc2hvbGRcbiAgICAgICAgICBpZiAoTWF0aC5hYnMoZGlzdGFuY2UpID49IHNsaWRlci5zZXR0aW5ncy5zd2lwZVRocmVzaG9sZCkge1xuICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDwgMCkge1xuICAgICAgICAgICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBlbC5nb1RvUHJldlNsaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbC5zdG9wQXV0bygpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBlbC5hbmltYXRlKHByb3BlcnR5LCAyMDApO1xuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMjAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNsaWRlci52aWV3cG9ydC5vZmYoJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIG9uVG91Y2hFbmQpO1xuXG4gICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5yZWxlYXNlUG9pbnRlckNhcHR1cmUpIHtcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5yZWxlYXNlUG9pbnRlckNhcHR1cmUoc2xpZGVyLnBvaW50ZXJJZCk7XG4gICAgICB9XG4gICAgICAvLyBpZiBzbGlkZXIgaGFkIHN3aXBlIHdpdGggbGVmdCBtb3VzZSwgdG91Y2ggY29udGFjdCBhbmQgcGVuIGNvbnRhY3RcbiAgICAgIGlmIChzbGlkZXIuaGFzTW92ZSA9PT0gZmFsc2UgJiYgKHNsaWRlci5vcmlnaW5hbENsaWNrQnV0dG9uID09PSAwIHx8IHNsaWRlci5vcmlnaW5hbEV2ZW50VHlwZSA9PT0gJ3RvdWNoc3RhcnQnKSkge1xuICAgICAgICAvLyB0cmlnZ2VyIGNsaWNrIGV2ZW50IChmaXggZm9yIEZpcmVmb3g1OSBhbmQgUG9pbnRlckV2ZW50IHN0YW5kYXJkIGNvbXBhdGliaWxpdHkpXG4gICAgICAgICQoc2xpZGVyLm9yaWdpbmFsQ2xpY2tUYXJnZXQpLnRyaWdnZXIoe1xuICAgICAgICAgIHR5cGU6ICdjbGljaycsXG4gICAgICAgICAgYnV0dG9uOiBzbGlkZXIub3JpZ2luYWxDbGlja0J1dHRvbixcbiAgICAgICAgICBidXR0b25zOiBzbGlkZXIub3JpZ2luYWxDbGlja0J1dHRvbnNcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFdpbmRvdyByZXNpemUgZXZlbnQgY2FsbGJhY2tcbiAgICAgKi9cbiAgICB2YXIgcmVzaXplV2luZG93ID0gZnVuY3Rpb24oZSkge1xuICAgICAgLy8gZG9uJ3QgZG8gYW55dGhpbmcgaWYgc2xpZGVyIGlzbid0IGluaXRpYWxpemVkLlxuICAgICAgaWYgKCFzbGlkZXIuaW5pdGlhbGl6ZWQpIHsgcmV0dXJuOyB9XG4gICAgICAvLyBEZWxheSBpZiBzbGlkZXIgd29ya2luZy5cbiAgICAgIGlmIChzbGlkZXIud29ya2luZykge1xuICAgICAgICB3aW5kb3cuc2V0VGltZW91dChyZXNpemVXaW5kb3csIDEwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGdldCB0aGUgbmV3IHdpbmRvdyBkaW1lbnMgKGFnYWluLCB0aGFuayB5b3UgSUUpXG4gICAgICAgIHZhciB3aW5kb3dXaWR0aE5ldyA9ICQod2luZG93KS53aWR0aCgpLFxuICAgICAgICB3aW5kb3dIZWlnaHROZXcgPSAkKHdpbmRvdykuaGVpZ2h0KCk7XG4gICAgICAgIC8vIG1ha2Ugc3VyZSB0aGF0IGl0IGlzIGEgdHJ1ZSB3aW5kb3cgcmVzaXplXG4gICAgICAgIC8vICp3ZSBtdXN0IGNoZWNrIHRoaXMgYmVjYXVzZSBvdXIgZGlub3NhdXIgZnJpZW5kIElFIGZpcmVzIGEgd2luZG93IHJlc2l6ZSBldmVudCB3aGVuIGNlcnRhaW4gRE9NIGVsZW1lbnRzXG4gICAgICAgIC8vIGFyZSByZXNpemVkLiBDYW4geW91IGp1c3QgZGllIGFscmVhZHk/KlxuICAgICAgICBpZiAod2luZG93V2lkdGggIT09IHdpbmRvd1dpZHRoTmV3IHx8IHdpbmRvd0hlaWdodCAhPT0gd2luZG93SGVpZ2h0TmV3KSB7XG4gICAgICAgICAgLy8gc2V0IHRoZSBuZXcgd2luZG93IGRpbWVuc1xuICAgICAgICAgIHdpbmRvd1dpZHRoID0gd2luZG93V2lkdGhOZXc7XG4gICAgICAgICAgd2luZG93SGVpZ2h0ID0gd2luZG93SGVpZ2h0TmV3O1xuICAgICAgICAgIC8vIHVwZGF0ZSBhbGwgZHluYW1pYyBlbGVtZW50c1xuICAgICAgICAgIGVsLnJlZHJhd1NsaWRlcigpO1xuICAgICAgICAgIC8vIENhbGwgdXNlciByZXNpemUgaGFuZGxlclxuICAgICAgICAgIHNsaWRlci5zZXR0aW5ncy5vblNsaWRlclJlc2l6ZS5jYWxsKGVsLCBzbGlkZXIuYWN0aXZlLmluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIGFuIGFyaWEtaGlkZGVuPXRydWUgYXR0cmlidXRlIHRvIGVhY2ggZWxlbWVudFxuICAgICAqXG4gICAgICogQHBhcmFtIHN0YXJ0VmlzaWJsZUluZGV4IChpbnQpXG4gICAgICogIC0gdGhlIGZpcnN0IHZpc2libGUgZWxlbWVudCdzIGluZGV4XG4gICAgICovXG4gICAgdmFyIGFwcGx5QXJpYUhpZGRlbkF0dHJpYnV0ZXMgPSBmdW5jdGlvbihzdGFydFZpc2libGVJbmRleCkge1xuICAgICAgdmFyIG51bWJlck9mU2xpZGVzU2hvd2luZyA9IGdldE51bWJlclNsaWRlc1Nob3dpbmcoKTtcbiAgICAgIC8vIG9ubHkgYXBwbHkgYXR0cmlidXRlcyBpZiB0aGUgc2V0dGluZyBpcyBlbmFibGVkIGFuZCBub3QgaW4gdGlja2VyIG1vZGVcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbiAmJiAhc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xuICAgICAgICAvLyBhZGQgYXJpYS1oaWRkZW49dHJ1ZSB0byBhbGwgZWxlbWVudHNcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmF0dHIoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKTtcbiAgICAgICAgLy8gZ2V0IHRoZSB2aXNpYmxlIGVsZW1lbnRzIGFuZCBjaGFuZ2UgdG8gYXJpYS1oaWRkZW49ZmFsc2VcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLnNsaWNlKHN0YXJ0VmlzaWJsZUluZGV4LCBzdGFydFZpc2libGVJbmRleCArIG51bWJlck9mU2xpZGVzU2hvd2luZykuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBpbmRleCBhY2NvcmRpbmcgdG8gcHJlc2VudCBwYWdlIHJhbmdlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2xpZGVPbmRleCAoaW50KVxuICAgICAqICAtIHRoZSBkZXNpcmVkIHNsaWRlIGluZGV4XG4gICAgICovXG4gICAgdmFyIHNldFNsaWRlSW5kZXggPSBmdW5jdGlvbihzbGlkZUluZGV4KSB7XG4gICAgICBpZiAoc2xpZGVJbmRleCA8IDApIHtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcbiAgICAgICAgICByZXR1cm4gZ2V0UGFnZXJRdHkoKSAtIDE7XG4gICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAvL3dlIGRvbid0IGdvIHRvIHVuZGVmaW5lZCBzbGlkZXNcbiAgICAgICAgICByZXR1cm4gc2xpZGVyLmFjdGl2ZS5pbmRleDtcbiAgICAgICAgfVxuICAgICAgLy8gaWYgc2xpZGVJbmRleCBpcyBncmVhdGVyIHRoYW4gY2hpbGRyZW4gbGVuZ3RoLCBzZXQgYWN0aXZlIGluZGV4IHRvIDAgKHRoaXMgaGFwcGVucyBkdXJpbmcgaW5maW5pdGUgbG9vcClcbiAgICAgIH0gZWxzZSBpZiAoc2xpZGVJbmRleCA+PSBnZXRQYWdlclF0eSgpKSB7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wKSB7XG4gICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy93ZSBkb24ndCBtb3ZlIHRvIHVuZGVmaW5lZCBwYWdlc1xuICAgICAgICAgIHJldHVybiBzbGlkZXIuYWN0aXZlLmluZGV4O1xuICAgICAgICB9XG4gICAgICAvLyBzZXQgYWN0aXZlIGluZGV4IHRvIHJlcXVlc3RlZCBzbGlkZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHNsaWRlSW5kZXg7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICogPSBQVUJMSUMgRlVOQ1RJT05TXG4gICAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIHNsaWRlIHRyYW5zaXRpb24gdG8gdGhlIHNwZWNpZmllZCBzbGlkZVxuICAgICAqXG4gICAgICogQHBhcmFtIHNsaWRlSW5kZXggKGludClcbiAgICAgKiAgLSB0aGUgZGVzdGluYXRpb24gc2xpZGUncyBpbmRleCAoemVyby1iYXNlZClcbiAgICAgKlxuICAgICAqIEBwYXJhbSBkaXJlY3Rpb24gKHN0cmluZylcbiAgICAgKiAgLSBJTlRFUk5BTCBVU0UgT05MWSAtIHRoZSBkaXJlY3Rpb24gb2YgdHJhdmVsIChcInByZXZcIiAvIFwibmV4dFwiKVxuICAgICAqL1xuICAgIGVsLmdvVG9TbGlkZSA9IGZ1bmN0aW9uKHNsaWRlSW5kZXgsIGRpcmVjdGlvbikge1xuICAgICAgLy8gb25TbGlkZUJlZm9yZSwgb25TbGlkZU5leHQsIG9uU2xpZGVQcmV2IGNhbGxiYWNrc1xuICAgICAgLy8gQWxsb3cgdHJhbnNpdGlvbiBjYW5jZWxpbmcgYmFzZWQgb24gcmV0dXJuZWQgdmFsdWVcbiAgICAgIHZhciBwZXJmb3JtVHJhbnNpdGlvbiA9IHRydWUsXG4gICAgICBtb3ZlQnkgPSAwLFxuICAgICAgcG9zaXRpb24gPSB7bGVmdDogMCwgdG9wOiAwfSxcbiAgICAgIGxhc3RDaGlsZCA9IG51bGwsXG4gICAgICBsYXN0U2hvd2luZ0luZGV4LCBlcSwgdmFsdWUsIHJlcXVlc3RFbDtcbiAgICAgIC8vIHN0b3JlIHRoZSBvbGQgaW5kZXhcbiAgICAgIHNsaWRlci5vbGRJbmRleCA9IHNsaWRlci5hY3RpdmUuaW5kZXg7XG4gICAgICAvL3NldCBuZXcgaW5kZXhcbiAgICAgIHNsaWRlci5hY3RpdmUuaW5kZXggPSBzZXRTbGlkZUluZGV4KHNsaWRlSW5kZXgpO1xuXG4gICAgICAvLyBpZiBwbHVnaW4gaXMgY3VycmVudGx5IGluIG1vdGlvbiwgaWdub3JlIHJlcXVlc3RcbiAgICAgIGlmIChzbGlkZXIud29ya2luZyB8fCBzbGlkZXIuYWN0aXZlLmluZGV4ID09PSBzbGlkZXIub2xkSW5kZXgpIHsgcmV0dXJuOyB9XG4gICAgICAvLyBkZWNsYXJlIHRoYXQgcGx1Z2luIGlzIGluIG1vdGlvblxuICAgICAgc2xpZGVyLndvcmtpbmcgPSB0cnVlO1xuXG4gICAgICBwZXJmb3JtVHJhbnNpdGlvbiA9IHNsaWRlci5zZXR0aW5ncy5vblNsaWRlQmVmb3JlLmNhbGwoZWwsIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KSwgc2xpZGVyLm9sZEluZGV4LCBzbGlkZXIuYWN0aXZlLmluZGV4KTtcblxuICAgICAgLy8gSWYgdHJhbnNpdGlvbnMgY2FuY2VsZWQsIHJlc2V0IGFuZCByZXR1cm5cbiAgICAgIGlmICh0eXBlb2YgKHBlcmZvcm1UcmFuc2l0aW9uKSAhPT0gJ3VuZGVmaW5lZCcgJiYgIXBlcmZvcm1UcmFuc2l0aW9uKSB7XG4gICAgICAgIHNsaWRlci5hY3RpdmUuaW5kZXggPSBzbGlkZXIub2xkSW5kZXg7IC8vIHJlc3RvcmUgb2xkIGluZGV4XG4gICAgICAgIHNsaWRlci53b3JraW5nID0gZmFsc2U7IC8vIGlzIG5vdCBpbiBtb3Rpb25cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgLy8gUHJldmVudCBjYW5jZWxpbmcgaW4gZnV0dXJlIGZ1bmN0aW9ucyBvciBsYWNrIHRoZXJlLW9mIGZyb20gbmVnYXRpbmcgcHJldmlvdXMgY29tbWFuZHMgdG8gY2FuY2VsXG4gICAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLm9uU2xpZGVOZXh0LmNhbGwoZWwsIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KSwgc2xpZGVyLm9sZEluZGV4LCBzbGlkZXIuYWN0aXZlLmluZGV4KSkge1xuICAgICAgICAgIHBlcmZvcm1UcmFuc2l0aW9uID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAncHJldicpIHtcbiAgICAgICAgLy8gUHJldmVudCBjYW5jZWxpbmcgaW4gZnV0dXJlIGZ1bmN0aW9ucyBvciBsYWNrIHRoZXJlLW9mIGZyb20gbmVnYXRpbmcgcHJldmlvdXMgY29tbWFuZHMgdG8gY2FuY2VsXG4gICAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLm9uU2xpZGVQcmV2LmNhbGwoZWwsIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KSwgc2xpZGVyLm9sZEluZGV4LCBzbGlkZXIuYWN0aXZlLmluZGV4KSkge1xuICAgICAgICAgIHBlcmZvcm1UcmFuc2l0aW9uID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gY2hlY2sgaWYgbGFzdCBzbGlkZVxuICAgICAgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gc2xpZGVyLmFjdGl2ZS5pbmRleCA+PSBnZXRQYWdlclF0eSgpIC0gMTtcbiAgICAgIC8vIHVwZGF0ZSB0aGUgcGFnZXIgd2l0aCBhY3RpdmUgY2xhc3NcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucGFnZXIgfHwgc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7IHVwZGF0ZVBhZ2VyQWN0aXZlKHNsaWRlci5hY3RpdmUuaW5kZXgpOyB9XG4gICAgICAvLyAvLyBjaGVjayBmb3IgZGlyZWN0aW9uIGNvbnRyb2wgdXBkYXRlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzKSB7IHVwZGF0ZURpcmVjdGlvbkNvbnRyb2xzKCk7IH1cbiAgICAgIC8vIGlmIHNsaWRlciBpcyBzZXQgdG8gbW9kZTogXCJmYWRlXCJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2ZhZGUnKSB7XG4gICAgICAgIC8vIGlmIGFkYXB0aXZlSGVpZ2h0IGlzIHRydWUgYW5kIG5leHQgaGVpZ2h0IGlzIGRpZmZlcmVudCBmcm9tIGN1cnJlbnQgaGVpZ2h0LCBhbmltYXRlIHRvIHRoZSBuZXcgaGVpZ2h0XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYWRhcHRpdmVIZWlnaHQgJiYgc2xpZGVyLnZpZXdwb3J0LmhlaWdodCgpICE9PSBnZXRWaWV3cG9ydEhlaWdodCgpKSB7XG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmFuaW1hdGUoe2hlaWdodDogZ2V0Vmlld3BvcnRIZWlnaHQoKX0sIHNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodFNwZWVkKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBmYWRlIG91dCB0aGUgdmlzaWJsZSBjaGlsZCBhbmQgcmVzZXQgaXRzIHotaW5kZXggdmFsdWVcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmZpbHRlcignOnZpc2libGUnKS5mYWRlT3V0KHNsaWRlci5zZXR0aW5ncy5zcGVlZCkuY3NzKHt6SW5kZXg6IDB9KTtcbiAgICAgICAgLy8gZmFkZSBpbiB0aGUgbmV3bHkgcmVxdWVzdGVkIHNsaWRlXG4gICAgICAgIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KS5jc3MoJ3pJbmRleCcsIHNsaWRlci5zZXR0aW5ncy5zbGlkZVpJbmRleCArIDEpLmZhZGVJbihzbGlkZXIuc2V0dGluZ3Muc3BlZWQsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICQodGhpcykuY3NzKCd6SW5kZXgnLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVaSW5kZXgpO1xuICAgICAgICAgIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uKCk7XG4gICAgICAgIH0pO1xuICAgICAgLy8gc2xpZGVyIG1vZGUgaXMgbm90IFwiZmFkZVwiXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBpZiBhZGFwdGl2ZUhlaWdodCBpcyB0cnVlIGFuZCBuZXh0IGhlaWdodCBpcyBkaWZmZXJlbnQgZnJvbSBjdXJyZW50IGhlaWdodCwgYW5pbWF0ZSB0byB0aGUgbmV3IGhlaWdodFxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0ICYmIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoKSAhPT0gZ2V0Vmlld3BvcnRIZWlnaHQoKSkge1xuICAgICAgICAgIHNsaWRlci52aWV3cG9ydC5hbmltYXRlKHtoZWlnaHQ6IGdldFZpZXdwb3J0SGVpZ2h0KCl9LCBzbGlkZXIuc2V0dGluZ3MuYWRhcHRpdmVIZWlnaHRTcGVlZCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgY2Fyb3VzZWwgYW5kIG5vdCBpbmZpbml0ZSBsb29wXG4gICAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuY2Fyb3VzZWwgJiYgc2xpZGVyLmFjdGl2ZS5sYXN0KSB7XG4gICAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBjaGlsZCBwb3NpdGlvblxuICAgICAgICAgICAgbGFzdENoaWxkID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIHBvc2l0aW9uID0gbGFzdENoaWxkLnBvc2l0aW9uKCk7XG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBsYXN0IHNsaWRlXG4gICAgICAgICAgICBtb3ZlQnkgPSBzbGlkZXIudmlld3BvcnQud2lkdGgoKSAtIGxhc3RDaGlsZC5vdXRlcldpZHRoKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGdldCBsYXN0IHNob3dpbmcgaW5kZXggcG9zaXRpb25cbiAgICAgICAgICAgIGxhc3RTaG93aW5nSW5kZXggPSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcztcbiAgICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKGxhc3RTaG93aW5nSW5kZXgpLnBvc2l0aW9uKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIGhvcml6b250YWwgY2Fyb3VzZWwsIGdvaW5nIHByZXZpb3VzIHdoaWxlIG9uIGZpcnN0IHNsaWRlIChpbmZpbml0ZUxvb3AgbW9kZSlcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIuY2Fyb3VzZWwgJiYgc2xpZGVyLmFjdGl2ZS5sYXN0ICYmIGRpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNoaWxkIHBvc2l0aW9uXG4gICAgICAgICAgZXEgPSBzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA9PT0gMSA/IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgLSBnZXRNb3ZlQnkoKSA6ICgoZ2V0UGFnZXJRdHkoKSAtIDEpICogZ2V0TW92ZUJ5KCkpIC0gKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLSBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzKTtcbiAgICAgICAgICBsYXN0Q2hpbGQgPSBlbC5jaGlsZHJlbignLmJ4LWNsb25lJykuZXEoZXEpO1xuICAgICAgICAgIHBvc2l0aW9uID0gbGFzdENoaWxkLnBvc2l0aW9uKCk7XG4gICAgICAgIC8vIGlmIGluZmluaXRlIGxvb3AgYW5kIFwiTmV4dFwiIGlzIGNsaWNrZWQgb24gdGhlIGxhc3Qgc2xpZGVcbiAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICduZXh0JyAmJiBzbGlkZXIuYWN0aXZlLmluZGV4ID09PSAwKSB7XG4gICAgICAgICAgLy8gZ2V0IHRoZSBsYXN0IGNsb25lIHBvc2l0aW9uXG4gICAgICAgICAgcG9zaXRpb24gPSBlbC5maW5kKCc+IC5ieC1jbG9uZScpLmVxKHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpLnBvc2l0aW9uKCk7XG4gICAgICAgICAgc2xpZGVyLmFjdGl2ZS5sYXN0ID0gZmFsc2U7XG4gICAgICAgIC8vIG5vcm1hbCBub24temVybyByZXF1ZXN0c1xuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlSW5kZXggPj0gMCkge1xuICAgICAgICAgIC8vcGFyc2VJbnQgaXMgYXBwbGllZCB0byBhbGxvdyBmbG9hdHMgZm9yIHNsaWRlcy9wYWdlXG4gICAgICAgICAgcmVxdWVzdEVsID0gc2xpZGVJbmRleCAqIHBhcnNlSW50KGdldE1vdmVCeSgpKTtcbiAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShyZXF1ZXN0RWwpLnBvc2l0aW9uKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKiBJZiB0aGUgcG9zaXRpb24gZG9lc24ndCBleGlzdFxuICAgICAgICAgKiAoZS5nLiBpZiB5b3UgZGVzdHJveSB0aGUgc2xpZGVyIG9uIGEgbmV4dCBjbGljayksXG4gICAgICAgICAqIGl0IGRvZXNuJ3QgdGhyb3cgYW4gZXJyb3IuXG4gICAgICAgICAqL1xuICAgICAgICBpZiAodHlwZW9mIChwb3NpdGlvbikgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLShwb3NpdGlvbi5sZWZ0IC0gbW92ZUJ5KSA6IC1wb3NpdGlvbi50b3A7XG4gICAgICAgICAgLy8gcGx1Z2luIHZhbHVlcyB0byBiZSBhbmltYXRlZFxuICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkodmFsdWUsICdzbGlkZScsIHNsaWRlci5zZXR0aW5ncy5zcGVlZCk7XG4gICAgICAgIH1cbiAgICAgICAgc2xpZGVyLndvcmtpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbikgeyBhcHBseUFyaWFIaWRkZW5BdHRyaWJ1dGVzKHNsaWRlci5hY3RpdmUuaW5kZXggKiBnZXRNb3ZlQnkoKSk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVHJhbnNpdGlvbnMgdG8gdGhlIG5leHQgc2xpZGUgaW4gdGhlIHNob3dcbiAgICAgKi9cbiAgICBlbC5nb1RvTmV4dFNsaWRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBpZiBpbmZpbml0ZUxvb3AgaXMgZmFsc2UgYW5kIGxhc3QgcGFnZSBpcyBzaG93aW5nLCBkaXNyZWdhcmQgY2FsbFxuICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmIHNsaWRlci5hY3RpdmUubGFzdCkgeyByZXR1cm47IH1cblx0ICBpZiAoc2xpZGVyLndvcmtpbmcgPT09IHRydWUpeyByZXR1cm4gO31cbiAgICAgIHZhciBwYWdlckluZGV4ID0gcGFyc2VJbnQoc2xpZGVyLmFjdGl2ZS5pbmRleCkgKyAxO1xuICAgICAgZWwuZ29Ub1NsaWRlKHBhZ2VySW5kZXgsICduZXh0Jyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRyYW5zaXRpb25zIHRvIHRoZSBwcmV2IHNsaWRlIGluIHRoZSBzaG93XG4gICAgICovXG4gICAgZWwuZ29Ub1ByZXZTbGlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgaW5maW5pdGVMb29wIGlzIGZhbHNlIGFuZCBsYXN0IHBhZ2UgaXMgc2hvd2luZywgZGlzcmVnYXJkIGNhbGxcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuYWN0aXZlLmluZGV4ID09PSAwKSB7IHJldHVybjsgfVxuXHQgIGlmIChzbGlkZXIud29ya2luZyA9PT0gdHJ1ZSl7IHJldHVybiA7fVxuICAgICAgdmFyIHBhZ2VySW5kZXggPSBwYXJzZUludChzbGlkZXIuYWN0aXZlLmluZGV4KSAtIDE7XG4gICAgICBlbC5nb1RvU2xpZGUocGFnZXJJbmRleCwgJ3ByZXYnKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3RhcnRzIHRoZSBhdXRvIHNob3dcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwcmV2ZW50Q29udHJvbFVwZGF0ZSAoYm9vbGVhbilcbiAgICAgKiAgLSBpZiB0cnVlLCBhdXRvIGNvbnRyb2xzIHN0YXRlIHdpbGwgbm90IGJlIHVwZGF0ZWRcbiAgICAgKi9cbiAgICBlbC5zdGFydEF1dG8gPSBmdW5jdGlvbihwcmV2ZW50Q29udHJvbFVwZGF0ZSkge1xuICAgICAgLy8gaWYgYW4gaW50ZXJ2YWwgYWxyZWFkeSBleGlzdHMsIGRpc3JlZ2FyZCBjYWxsXG4gICAgICBpZiAoc2xpZGVyLmludGVydmFsKSB7IHJldHVybjsgfVxuICAgICAgLy8gY3JlYXRlIGFuIGludGVydmFsXG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xuICAgICAgICB9XG4gICAgICB9LCBzbGlkZXIuc2V0dGluZ3MucGF1c2UpO1xuXHQgIC8vYWxsYmFjayBmb3Igd2hlbiB0aGUgYXV0byByb3RhdGUgc3RhdHVzIGNoYW5nZXNcblx0ICBzbGlkZXIuc2V0dGluZ3Mub25BdXRvQ2hhbmdlLmNhbGwoZWwsIHRydWUpO1xuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBhcmUgZGlzcGxheWVkIGFuZCBwcmV2ZW50Q29udHJvbFVwZGF0ZSBpcyBub3QgdHJ1ZVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgJiYgcHJldmVudENvbnRyb2xVcGRhdGUgIT09IHRydWUpIHsgdXBkYXRlQXV0b0NvbnRyb2xzKCdzdG9wJyk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3RvcHMgdGhlIGF1dG8gc2hvd1xuICAgICAqXG4gICAgICogQHBhcmFtIHByZXZlbnRDb250cm9sVXBkYXRlIChib29sZWFuKVxuICAgICAqICAtIGlmIHRydWUsIGF1dG8gY29udHJvbHMgc3RhdGUgd2lsbCBub3QgYmUgdXBkYXRlZFxuICAgICAqL1xuICAgIGVsLnN0b3BBdXRvID0gZnVuY3Rpb24ocHJldmVudENvbnRyb2xVcGRhdGUpIHtcbiAgICAgIC8vIGlmIHNsaWRlciBpcyBhdXRvIHBhdXNlZCwganVzdCBjbGVhciB0aGF0IHN0YXRlXG4gICAgICBpZiAoc2xpZGVyLmF1dG9QYXVzZWQpIHNsaWRlci5hdXRvUGF1c2VkID0gZmFsc2U7XG4gICAgICAvLyBpZiBubyBpbnRlcnZhbCBleGlzdHMsIGRpc3JlZ2FyZCBjYWxsXG4gICAgICBpZiAoIXNsaWRlci5pbnRlcnZhbCkgeyByZXR1cm47IH1cbiAgICAgIC8vIGNsZWFyIHRoZSBpbnRlcnZhbFxuICAgICAgY2xlYXJJbnRlcnZhbChzbGlkZXIuaW50ZXJ2YWwpO1xuICAgICAgc2xpZGVyLmludGVydmFsID0gbnVsbDtcblx0ICAvL2FsbGJhY2sgZm9yIHdoZW4gdGhlIGF1dG8gcm90YXRlIHN0YXR1cyBjaGFuZ2VzXG5cdCAgc2xpZGVyLnNldHRpbmdzLm9uQXV0b0NoYW5nZS5jYWxsKGVsLCBmYWxzZSk7XG4gICAgICAvLyBpZiBhdXRvIGNvbnRyb2xzIGFyZSBkaXNwbGF5ZWQgYW5kIHByZXZlbnRDb250cm9sVXBkYXRlIGlzIG5vdCB0cnVlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scyAmJiBwcmV2ZW50Q29udHJvbFVwZGF0ZSAhPT0gdHJ1ZSkgeyB1cGRhdGVBdXRvQ29udHJvbHMoJ3N0YXJ0Jyk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBjdXJyZW50IHNsaWRlIGluZGV4ICh6ZXJvLWJhc2VkKVxuICAgICAqL1xuICAgIGVsLmdldEN1cnJlbnRTbGlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNsaWRlci5hY3RpdmUuaW5kZXg7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgY3VycmVudCBzbGlkZSBlbGVtZW50XG4gICAgICovXG4gICAgZWwuZ2V0Q3VycmVudFNsaWRlRWxlbWVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHNsaWRlIGVsZW1lbnRcbiAgICAgKiBAcGFyYW0gaW5kZXggKGludClcbiAgICAgKiAgLSBUaGUgaW5kZXggKHplcm8tYmFzZWQpIG9mIHRoZSBlbGVtZW50IHlvdSB3YW50IHJldHVybmVkLlxuICAgICAqL1xuICAgIGVsLmdldFNsaWRlRWxlbWVudCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICByZXR1cm4gc2xpZGVyLmNoaWxkcmVuLmVxKGluZGV4KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBudW1iZXIgb2Ygc2xpZGVzIGluIHNob3dcbiAgICAgKi9cbiAgICBlbC5nZXRTbGlkZUNvdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJuIHNsaWRlci53b3JraW5nIHZhcmlhYmxlXG4gICAgICovXG4gICAgZWwuaXNXb3JraW5nID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc2xpZGVyLndvcmtpbmc7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhbGwgZHluYW1pYyBzbGlkZXIgZWxlbWVudHNcbiAgICAgKi9cbiAgICBlbC5yZWRyYXdTbGlkZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIHJlc2l6ZSBhbGwgY2hpbGRyZW4gaW4gcmF0aW8gdG8gbmV3IHNjcmVlbiBzaXplXG4gICAgICBzbGlkZXIuY2hpbGRyZW4uYWRkKGVsLmZpbmQoJy5ieC1jbG9uZScpKS5vdXRlcldpZHRoKGdldFNsaWRlV2lkdGgoKSk7XG4gICAgICAvLyBhZGp1c3QgdGhlIGhlaWdodFxuICAgICAgc2xpZGVyLnZpZXdwb3J0LmNzcygnaGVpZ2h0JywgZ2V0Vmlld3BvcnRIZWlnaHQoKSk7XG4gICAgICAvLyB1cGRhdGUgdGhlIHNsaWRlIHBvc2l0aW9uXG4gICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHsgc2V0U2xpZGVQb3NpdGlvbigpOyB9XG4gICAgICAvLyBpZiBhY3RpdmUubGFzdCB3YXMgdHJ1ZSBiZWZvcmUgdGhlIHNjcmVlbiByZXNpemUsIHdlIHdhbnRcbiAgICAgIC8vIHRvIGtlZXAgaXQgbGFzdCBubyBtYXR0ZXIgd2hhdCBzY3JlZW4gc2l6ZSB3ZSBlbmQgb25cbiAgICAgIGlmIChzbGlkZXIuYWN0aXZlLmxhc3QpIHsgc2xpZGVyLmFjdGl2ZS5pbmRleCA9IGdldFBhZ2VyUXR5KCkgLSAxOyB9XG4gICAgICAvLyBpZiB0aGUgYWN0aXZlIGluZGV4IChwYWdlKSBubyBsb25nZXIgZXhpc3RzIGR1ZSB0byB0aGUgcmVzaXplLCBzaW1wbHkgc2V0IHRoZSBpbmRleCBhcyBsYXN0XG4gICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA+PSBnZXRQYWdlclF0eSgpKSB7IHNsaWRlci5hY3RpdmUubGFzdCA9IHRydWU7IH1cbiAgICAgIC8vIGlmIGEgcGFnZXIgaXMgYmVpbmcgZGlzcGxheWVkIGFuZCBhIGN1c3RvbSBwYWdlciBpcyBub3QgYmVpbmcgdXNlZCwgdXBkYXRlIGl0XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyICYmICFzbGlkZXIuc2V0dGluZ3MucGFnZXJDdXN0b20pIHtcbiAgICAgICAgcG9wdWxhdGVQYWdlcigpO1xuICAgICAgICB1cGRhdGVQYWdlckFjdGl2ZShzbGlkZXIuYWN0aXZlLmluZGV4KTtcbiAgICAgIH1cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbikgeyBhcHBseUFyaWFIaWRkZW5BdHRyaWJ1dGVzKHNsaWRlci5hY3RpdmUuaW5kZXggKiBnZXRNb3ZlQnkoKSk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRGVzdHJveSB0aGUgY3VycmVudCBpbnN0YW5jZSBvZiB0aGUgc2xpZGVyIChyZXZlcnQgZXZlcnl0aGluZyBiYWNrIHRvIG9yaWdpbmFsIHN0YXRlKVxuICAgICAqL1xuICAgIGVsLmRlc3Ryb3lTbGlkZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGRvbid0IGRvIGFueXRoaW5nIGlmIHNsaWRlciBoYXMgYWxyZWFkeSBiZWVuIGRlc3Ryb3llZFxuICAgICAgaWYgKCFzbGlkZXIuaW5pdGlhbGl6ZWQpIHsgcmV0dXJuOyB9XG4gICAgICBzbGlkZXIuaW5pdGlhbGl6ZWQgPSBmYWxzZTtcbiAgICAgICQoJy5ieC1jbG9uZScsIHRoaXMpLnJlbW92ZSgpO1xuICAgICAgc2xpZGVyLmNoaWxkcmVuLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICgkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAkKHRoaXMpLmF0dHIoJ3N0eWxlJywgJCh0aGlzKS5kYXRhKCdvcmlnU3R5bGUnKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJCh0aGlzKS5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIGlmICgkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5hdHRyKCdzdHlsZScsICQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJCh0aGlzKS5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgfVxuICAgICAgJCh0aGlzKS51bndyYXAoKS51bndyYXAoKTtcbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMuZWwpIHsgc2xpZGVyLmNvbnRyb2xzLmVsLnJlbW92ZSgpOyB9XG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLm5leHQpIHsgc2xpZGVyLmNvbnRyb2xzLm5leHQucmVtb3ZlKCk7IH1cbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMucHJldikgeyBzbGlkZXIuY29udHJvbHMucHJldi5yZW1vdmUoKTsgfVxuICAgICAgaWYgKHNsaWRlci5wYWdlckVsICYmIHNsaWRlci5zZXR0aW5ncy5jb250cm9scyAmJiAhc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7IHNsaWRlci5wYWdlckVsLnJlbW92ZSgpOyB9XG4gICAgICAkKCcuYngtY2FwdGlvbicsIHRoaXMpLnJlbW92ZSgpO1xuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5hdXRvRWwpIHsgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5yZW1vdmUoKTsgfVxuICAgICAgY2xlYXJJbnRlcnZhbChzbGlkZXIuaW50ZXJ2YWwpO1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5yZXNwb25zaXZlKSB7ICQod2luZG93KS5vZmYoJ3Jlc2l6ZScsIHJlc2l6ZVdpbmRvdyk7IH1cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Mua2V5Ym9hcmRFbmFibGVkKSB7ICQoZG9jdW1lbnQpLm9mZigna2V5ZG93bicsIGtleVByZXNzKTsgfVxuICAgICAgLy9yZW1vdmUgc2VsZiByZWZlcmVuY2UgaW4gZGF0YVxuICAgICAgJCh0aGlzKS5yZW1vdmVEYXRhKCdieFNsaWRlcicpO1xuXHQgIC8vIHJlbW92ZSBnbG9iYWwgd2luZG93IGhhbmRsZXJzXG5cdCAgJCh3aW5kb3cpLm9mZignYmx1cicsIHdpbmRvd0JsdXJIYW5kbGVyKS5vZmYoJ2ZvY3VzJywgd2luZG93Rm9jdXNIYW5kbGVyKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVsb2FkIHRoZSBzbGlkZXIgKHJldmVydCBhbGwgRE9NIGNoYW5nZXMsIGFuZCByZS1pbml0aWFsaXplKVxuICAgICAqL1xuICAgIGVsLnJlbG9hZFNsaWRlciA9IGZ1bmN0aW9uKHNldHRpbmdzKSB7XG4gICAgICBpZiAoc2V0dGluZ3MgIT09IHVuZGVmaW5lZCkgeyBvcHRpb25zID0gc2V0dGluZ3M7IH1cbiAgICAgIGVsLmRlc3Ryb3lTbGlkZXIoKTtcbiAgICAgIGluaXQoKTtcbiAgICAgIC8vc3RvcmUgcmVmZXJlbmNlIHRvIHNlbGYgaW4gb3JkZXIgdG8gYWNjZXNzIHB1YmxpYyBmdW5jdGlvbnMgbGF0ZXJcbiAgICAgICQoZWwpLmRhdGEoJ2J4U2xpZGVyJywgdGhpcyk7XG4gICAgfTtcblxuICAgIGluaXQoKTtcblxuICAgICQoZWwpLmRhdGEoJ2J4U2xpZGVyJywgdGhpcyk7XG5cbiAgICAvLyByZXR1cm5zIHRoZSBjdXJyZW50IGpRdWVyeSBvYmplY3RcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxufSkoalF1ZXJ5KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2J4c2xpZGVyL2Rpc3QvanF1ZXJ5LmJ4c2xpZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKlxuICogalF1ZXJ5IHBsdWdpbiB0byB3cmFwIGVsZW1lbnRzXG4gKlxuICogaHR0cDovL2pzYmluLmNvbS9pZGl6ZVxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkKSB7XG5cbiAgICAkLmZuLndyYXBDaGlsZHJlbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICAgICAgb3B0aW9ucyA9ICQuZXh0ZW5kKHtcbiAgICAgICAgICAgIGNoaWxkRWxlbTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc2V0czogMSxcbiAgICAgICAgICAgIHdyYXBwZXI6ICdkaXYnXG4gICAgICAgIH0sIG9wdGlvbnMgfHwge30pO1xuXG4gICAgICAgIGlmIChvcHRpb25zLmNoaWxkRWxlbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBlbGVtcyA9ICQodGhpcykuY2hpbGRyZW4ob3B0aW9ucy5jaGlsZEVsZW0pO1xuICAgICAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcblxuICAgICAgICAgICAgICAgIGVsZW1zLmVhY2goZnVuY3Rpb24gKGksIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCgoaSArIDEpICUgb3B0aW9ucy5zZXRzID09PSAwKSB8fCAoaSA9PT0gZWxlbXMubGVuZ3RoIC0gMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzZXQgPSAkKGFycik7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnIgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldC53cmFwQWxsKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQob3B0aW9ucy53cmFwcGVyKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LmlkaXplLmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkKSB7XG4gICAgdmFyIHBhZ2VEcm9wZG93bnMgPSBbXTtcbiAgICB2YXIgY2xvc2VQYWdlRHJvcGRvd25zID0gZnVuY3Rpb24gKGV4Y2VwdCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhZ2VEcm9wZG93bnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhZ2VEcm9wZG93bnNbaV0uZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBhZ2VEcm9wZG93biA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKCFleGNlcHQgfHwgZXhjZXB0Lmxlbmd0aCAhPSAxIHx8IHBhZ2VEcm9wZG93bi5nZXQoMCkgIT0gZXhjZXB0LmdldCgwKSkge1xuICAgICAgICAgICAgICAgICAgICBwYWdlRHJvcGRvd24ucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgICQoJ2JvZHknKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNsb3NlUGFnZURyb3Bkb3ducyhudWxsKTtcbiAgICB9KTtcblxuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKGRyb3Bkb3ducywgb3B0KSB7XG4gICAgICAgIHZhciBfb3B0ID0gJC5leHRlbmQoe2NoYW5nZUxpc3RlbmVyczogW10sIGlzTWVudTogZmFsc2V9LCBvcHQpO1xuXG4gICAgICAgIHBhZ2VEcm9wZG93bnMucHVzaChkcm9wZG93bnMpO1xuXG4gICAgICAgIGRyb3Bkb3ducy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBkcm9wZG93biA9ICQodGhpcyk7XG4gICAgICAgICAgICBkcm9wZG93bi5kYXRhKCdkcm9wZG93bi1vcHRpb25zJywgX29wdCk7XG5cbiAgICAgICAgICAgIGRyb3Bkb3duLmZpbmQoJ2EuZGlzcGxheScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBkcm9wZG93bi50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgY2xvc2VQYWdlRHJvcGRvd25zKGRyb3Bkb3duKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKG9wdCAmJiBvcHQudmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgc2V0T3B0aW9ucyhkcm9wZG93biwgb3B0LnZhbHVlcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvcHQgJiYgb3B0LmluaXRpYWxWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHNlbGVjdChkcm9wZG93biwgb3B0LmluaXRpYWxWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbml0T3B0aW9ucyhkcm9wZG93biwgdHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgb3B0aW9uVmFsdWUgPSBmdW5jdGlvbiAoZHJvcGRvd24sIGtleSkge1xuICAgICAgICB2YXIgb3B0ID0gZHJvcGRvd24uZGF0YSgnZHJvcGRvd24tb3B0aW9ucycpO1xuICAgICAgICByZXR1cm4gb3B0ID8gb3B0W2tleV0gOiBudWxsO1xuICAgIH07XG5cbiAgICB2YXIgaW52b2tlT3B0aW9uRXh0ID0gZnVuY3Rpb24gKGRyb3Bkb3duLCBma2V5LCBhLCBiLCBjKSB7XG4gICAgICAgIHZhciBmID0gb3B0aW9uVmFsdWUoZHJvcGRvd24sIGZrZXkpO1xuICAgICAgICBpZiAoZikge1xuICAgICAgICAgICAgZihhLCBiLCBjKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgaW5pdE9wdGlvbnMgPSBmdW5jdGlvbiAoZHJvcGRvd24sIHJlYWRJbnB1dFZhbHVlKSB7XG4gICAgICAgIHZhciBvcHRpb25zID0gZHJvcGRvd24uZmluZCgnLm9wdGlvbnMgPiBhJyk7XG4gICAgICAgIGRyb3Bkb3duLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcsIG9wdGlvbnMubGVuZ3RoIDwgMik7XG4gICAgICAgIGlmICghZHJvcGRvd24uZGF0YSgnZHJvcGRvd24tb3B0aW9ucycpLmlzTWVudSkge1xuICAgICAgICAgICAgb3B0aW9ucy5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0QW5kTm90aWZ5KGRyb3Bkb3duLCAkKHRoaXMpLmF0dHIoJ2RhdGEtdmFsdWUnKSk7XG4gICAgICAgICAgICAgICAgY2xvc2VQYWdlRHJvcGRvd25zKGRyb3Bkb3duKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHJlYWRJbnB1dFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHYgPSBkcm9wZG93bi5maW5kKCdpbnB1dDpoaWRkZW4nKS52YWwoKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdChkcm9wZG93biwgdik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIHZhciBmaXJlT25TZWxlY3QgPSBmdW5jdGlvbiAoZHJvcGRvd24pIHtcbiAgICAgICAgdmFyIG9wdCA9IGRyb3Bkb3duLmRhdGEoJ2Ryb3Bkb3duLW9wdGlvbnMnKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHQuY2hhbmdlTGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBvcHQuY2hhbmdlTGlzdGVuZXJzW2ldKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIHNlbGVjdEFuZE5vdGlmeSA9IGZ1bmN0aW9uIChkcm9wZG93biwgdmFsdWUpIHtcbiAgICAgICAgc2VsZWN0KGRyb3Bkb3duLCB2YWx1ZSk7XG4gICAgICAgIGZpcmVPblNlbGVjdChkcm9wZG93bik7XG4gICAgICAgIGludm9rZU9wdGlvbkV4dChkcm9wZG93biwgJ29uc2VsZWN0JywgdmFsdWUpO1xuICAgIH07XG5cbiAgICB2YXIgc2VsZWN0ID0gZnVuY3Rpb24gKGRyb3Bkb3duLCB2YWx1ZSkge1xuICAgICAgICB2YXIgbGluayA9IGRyb3Bkb3duLmZpbmQoJ2FbZGF0YS12YWx1ZT1cIicgKyB2YWx1ZSArICdcIl0nKTtcbiAgICAgICAgZHJvcGRvd24uZmluZCgnYS5kaXNwbGF5IHNwYW4nKS5odG1sKGxpbmsuaHRtbCgpKTtcbiAgICAgICAgbGluay5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgZHJvcGRvd24uZmluZCgnYVtkYXRhLXZhbHVlIT1cIicgKyB2YWx1ZSArICdcIl0nKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgZHJvcGRvd24ucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICBkcm9wZG93bi5maW5kKCdpbnB1dDpoaWRkZW4nKS52YWwodmFsdWUpO1xuICAgIH07XG5cbiAgICB2YXIgc2V0T3B0aW9ucyA9IGZ1bmN0aW9uIChkcm9wZG93biwgb3B0aW9ucywgc2VsZWN0ZWRLZXkpIHtcbiAgICAgICAgdmFyIG9wdGlvbnNDb250YWluZXIgPSBkcm9wZG93bi5maW5kKCcub3B0aW9ucycpO1xuICAgICAgICBvcHRpb25zQ29udGFpbmVyLmVtcHR5KCk7XG4gICAgICAgIHZhciBzZWxlY3RlZCA9IG51bGw7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3B0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIG8gPSBvcHRpb25zW2ldO1xuICAgICAgICAgICAgdmFyIGlzU2VsZWN0ZWQgPSBvWzBdID09IHNlbGVjdGVkS2V5O1xuICAgICAgICAgICAgaWYgKGlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3RlZCA9IG87XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJzxhIGhyZWY9XCIjXCI+PC9hPicpLmF0dHIoJ2RhdGEtdmFsdWUnLCBvWzBdKS5odG1sKG9bMV0pLnRvZ2dsZUNsYXNzKCdzZWxlY3RlZCcsIGlzU2VsZWN0ZWQpLmFwcGVuZFRvKG9wdGlvbnNDb250YWluZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNlbGVjdGVkKSB7XG4gICAgICAgICAgICBkcm9wZG93bi5maW5kKCdhLmRpc3BsYXkgc3BhbicpLmh0bWwoc2VsZWN0ZWRbMV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5pdE9wdGlvbnMoZHJvcGRvd24sIGZhbHNlKTtcbiAgICB9O1xuXG4gICAgdmFyIHZhbHVlID0gZnVuY3Rpb24gKGRyb3Bkb3duKSB7XG4gICAgICAgIHJldHVybiBkcm9wZG93bi5maW5kKCcub3B0aW9ucyBhLnNlbGVjdGVkJykuYXR0cignZGF0YS12YWx1ZScpO1xuICAgIH07XG5cbiAgICB2YXIgYWRkQ2hhbmdlTGlzdGVuZXIgPSBmdW5jdGlvbiAoZHJvcGRvd25zLCBsaXN0ZW5lcikge1xuICAgICAgICBkcm9wZG93bnMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZHJvcGRvd24gPSAkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIG9wdCA9IGRyb3Bkb3duLmRhdGEoJ2Ryb3Bkb3duLW9wdGlvbnMnKTtcbiAgICAgICAgICAgIG9wdC5jaGFuZ2VMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgICAgICBkcm9wZG93bi5kYXRhKCdkcm9wZG93bi1vcHRpb25zJywgb3B0KTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgICQuZm4uY2l0eURyb3Bkb3duID0gZnVuY3Rpb24gKG9wdCwgcDEsIHAyKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgc3dpdGNoIChvcHQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdkaXNhYmxlJzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZW5hYmxlJzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnc2VsZWN0JzpcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0KHRoaXMsIHAxKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnc2V0T3B0aW9ucyc6XG4gICAgICAgICAgICAgICAgICAgIHNldE9wdGlvbnModGhpcywgcDEsIHAyKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAndmFsdWUnOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUodGhpcyk7XG4gICAgICAgICAgICAgICAgY2FzZSAnY2hhbmdlJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFkZENoYW5nZUxpc3RlbmVyKHRoaXMsIHAxKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluaXQodGhpcywgb3B0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS5jaXR5ZHJvcGRvd24uanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCQpIHtcblxuICAgIHZhciBzY3JvbGxUbyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3Njcm9sbC10bycpLFxuXG4gICAgICAgIGluaXQgPSBmdW5jdGlvbiAod2lkZ2V0cykge1xuICAgICAgICAgICAgdmFyIHcgPSAkKHdpbmRvdyksXG4gICAgICAgICAgICAgICAgbWFwID0ge307XG5cbiAgICAgICAgICAgIHdpZGdldHMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHdpZGdldCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnRQYW5lbHMgPSB3aWRnZXQuZmluZChcIj5kaXYgPi5jb250ZW50LXBhbmVsXCIpLFxuXG4gICAgICAgICAgICAgICAgICAgIGlkID0gd2lkZ2V0LmF0dHIoJ2lkJykgfHwgJ3RhYicsXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2YXRlID0gZnVuY3Rpb24gKGFuY2hvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gKGFuY2hvci5hdHRyKCdocmVmJykgfHwgJycpLm1hdGNoKC9eIyguKykkLyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3SGVhZGVyID0gYW5jaG9yLnBhcmVudChcImgyXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmFtcyA9IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1RhYiA9IGFuY2hvci5wYXJlbnQoJ2xpJykubGVuZ3RoID4gMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxyZWFkeVNlbGVjdGVkID0gIWlzVGFiICYmIGFuY2hvci5jbG9zZXN0KCcudGFiLXBhbmVsJykuaGFzQ2xhc3MoJ3NlbGVjdGVkJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRQYW5lbCA9IGFuY2hvci5jbG9zZXN0KCcudGFiLXBhbmVsJykuZmluZCgnLnBhbmVsLWNvbnRlbnQnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtc1tpZF0gPSBhbHJlYWR5U2VsZWN0ZWQgPyBudWxsIDogbWF0Y2hbMV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0KHdpZGdldCwgcGFyYW1zW2lkXSB8fCBmYWxzZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoISQuaXNFbXB0eU9iamVjdChuZXdIZWFkZXIub2Zmc2V0KCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ2h0bWw6bm90KDphbmltYXRlZCksIGJvZHk6bm90KDphbmltYXRlZCknKS5hbmltYXRlKHtzY3JvbGxUb3A6IG5ld0hlYWRlci5vZmZzZXQoKS50b3B9LCAnc2xvdycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRQYW5lbHMucmVtb3ZlQXR0cigndGFiaW5kZXgnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbmNob3IucGFyZW50KCkuaGFzQ2xhc3MoJ2FjY29yZGlvbi10b29nbGUnKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50UGFuZWwuYXR0cigndGFiaW5kZXgnLCAnMCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50UGFuZWwuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmNob3IuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkLmJicS5wdXNoU3RhdGUocGFyYW1zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICQoJ2FbaHJlZl49XCIjJyArIGlkICsgJz1cIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvciA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IGFuY2hvci5hdHRyKCdocmVmJykubWF0Y2goLyMoW2EtekEtWjAtOV0rKT1bYS16QS1aMC05XSsvKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFuY2hvci5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxUb3A6ICQoJyMnICsgaWQpLm9mZnNldCgpLnRvcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgbWFwW2lkXSA9IHdpZGdldDtcblxuICAgICAgICAgICAgICAgIHdpZGdldC5maW5kKCc+dWwgYSwgPi50YWItcGFuZWwgPi5hY2NvcmRpb24tdG9vZ2xlIGEnKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICBhY3RpdmF0ZSgkKHRoaXMpKTtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH0pLmtleWRvd24oZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGUud2hpY2ggPT09IDM3KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmF0ZSgkKHRoaXMpLnBhcmVudCgpLnByZXYoKS5jaGlsZHJlbignYScpKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlLndoaWNoID09PSAzOSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZhdGUoJCh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuY2hpbGRyZW4oJ2EnKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB3Lm9uKCdoYXNoY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSAkLmJicS5nZXRTdGF0ZSgpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGlkIGluIG1hcCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobWFwLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0KG1hcFtpZF0sIHBhcmFtc1tpZF0gfHwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHcudHJpZ2dlcihcImhhc2hjaGFuZ2VcIik7XG4gICAgICAgIH0sXG5cbiAgICAgICAgc2VsZWN0ID0gZnVuY3Rpb24gKHdpZGdldCwgaWQpIHtcbiAgICAgICAgICAgIHdpZGdldC5maW5kKCc+LnRhYi1wYW5lbC5kZWZhdWx0JykucmVtb3ZlQ2xhc3MoJ2RlZmF1bHQnKTtcbiAgICAgICAgICAgIHdpZGdldC5maW5kKCc+dWwgLnNlbGVjdGVkLCA+LnRhYi1wYW5lbC5zZWxlY3RlZCcpLnJlbW92ZUNsYXNzKCdzZWxlY3RlZCcpO1xuXG4gICAgICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgaGFzaCA9ICcjJyArIGlkO1xuXG4gICAgICAgICAgICAgICAgd2lkZ2V0LmZpbmQoJz51bCBhW2hyZWY9XCInICsgaGFzaCArICdcIl0nKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICB3aWRnZXQuZmluZChoYXNoKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgd2lkZ2V0LmZpbmQoJz51bCBsaScpLmZpcnN0KCkuZmluZCgnYScpLmFkZENsYXNzKCdzZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgIHdpZGdldC5maW5kKCc+LnRhYi1wYW5lbCcpLmZpcnN0KCkuYWRkQ2xhc3MoJ2RlZmF1bHQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuXG4gICAgJC5mbi5hY2NvcmRpb25UYWJzID0gZnVuY3Rpb24gKG9wdCkge1xuICAgICAgICBpbml0KHRoaXMsIG9wdCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LmFjY29yZGlvbi10YWJzLmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkKSB7XG4gICAgdmFyIGFjY2VzcyA9IGZhbHNlLFxuXG4gICAgICAgIGluaXQgPSBmdW5jdGlvbiAodmlkZW9Db250YWluZXJzLCBvcHQpIHtcbiAgICAgICAgICAgIHZpZGVvQ29udGFpbmVycy5ub3QoJ1tkYXRhLXZpZGVvLWlkLXJlYWR5XScpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXIgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtdmlkZW8taWQtcmVhZHknLCAxKSxcbiAgICAgICAgICAgICAgICAgICAgaW1nR3JvdXAgPSBjb250YWluZXIuZmluZCgnLnlvdXR1YmUtcHJldmlldycpLFxuICAgICAgICAgICAgICAgICAgICBpZnJhbWVJZCA9IGNvbnRhaW5lci5hdHRyKCdkYXRhLXZpZGVvLWlmcmFtZS1pZCcpLFxuICAgICAgICAgICAgICAgICAgICBhbmNob3IgPSBpbWdHcm91cC5jaGlsZHJlbignYScpLFxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGUgPSBhbmNob3IubGVuZ3RoID4gMCA/IGFuY2hvciA6IGltZ0dyb3VwLFxuXG4gICAgICAgICAgICAgICAgICAgIGxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbW9kZSA9IGFjY2VzcyA9PSAneW91a3UnICYmIGNvbnRhaW5lci5hdHRyKCdkYXRhLXlvdWt1LWlkJykgPyAneW91a3UnIDogJ3lvdXR1YmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYztcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1vZGUgPT09ICd5b3V0dWJlJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYyA9ICdodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nICsgY29udGFpbmVyLmF0dHIoJ2RhdGEtdmlkZW8taWQnKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICc/cmVsPTAmYXV0b3BsYXk9MSZ3bW9kZT10cmFuc3BhcmVudCZjb250cm9scz0nICsgb3B0LmNvbnRyb2xzICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyZzaG93aW5mbz0nICsgb3B0LnNob3dJbmZvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuYXV0b1BsYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjICs9ICcmZW5hYmxlanNhcGk9MSZ2ZXJzaW9uPTMnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmMgPSAnaHR0cDovL3BsYXllci55b3VrdS5jb20vZW1iZWQvJyArIGNvbnRhaW5lci5hdHRyKCdkYXRhLXlvdWt1LWlkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdC5hdXRvUGxheSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmMgKz0gJyZhdXRvcGxheT0xJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGlmcmFtZSA9ICQoJzxpZnJhbWU+PC9pZnJhbWU+JykuYXR0cignaWQnLCBpZnJhbWVJZCkuYXR0cignc3JjJywgc3JjKS5hdHRyKCdmcmFtZWJvcmRlcicsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdC5hbGxvd0Z1bGxzY3JlZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZnJhbWUuYXR0cignYWxsb3dmdWxsc2NyZWVuJywgMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZnJhbWUuYXBwZW5kVG8oY29udGFpbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcHQuY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtb2RlID09PSAneW91dHViZScgJiYgb3B0LmF1dG9QbGF5ICYmIHR5cGVvZiBZVCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXcgWVQuUGxheWVyKGlmcmFtZUlkLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50czoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ29uUmVhZHknOiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudC50YXJnZXQucGxheVZpZGVvKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmcmFtZS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgY2xpY2thYmxlLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICAgICAgICAgIGNsaWNrYWJsZS51bmJpbmQoKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChhY2Nlc3MgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVzdCA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVzdC5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzID0gJ3lvdXR1YmUnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzID0gJ3lvdWt1JztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVzdC5zcmMgPSBcImh0dHA6Ly95b3V0dWJlLmNvbS9mYXZpY29uLmljb1wiO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICQuZm4udmlkZW9QcmV2aWV3ID0gZnVuY3Rpb24gKG9wdCkge1xuICAgICAgICBpbml0KHRoaXMsICQuZXh0ZW5kKHtcbiAgICAgICAgICAgIGF1dG9QbGF5OiB0cnVlLFxuICAgICAgICAgICAgYWxsb3dGdWxsc2NyZWVuOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbnRyb2xzOiAyLFxuICAgICAgICAgICAgc2hvd0luZm86IDFcbiAgICAgICAgfSwgb3B0KSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LnlvdXR1YmVwcmV2aWV3LmpzXG4vLyBtb2R1bGUgaWQgPSAyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKipcbiAqIGZyb206XG4gKiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzExODAzMjE1L2hvdy10by1pbmNsdWRlLW11bHRpcGxlLWpzLWZpbGVzLXVzaW5nLWpxdWVyeS1nZXRzY3JpcHQtbWV0aG9kXG4gKiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJCkge1xuICAgIHZhciBqc1BhdGggPSByZXF1aXJlKCcuL2pzLXBhdGgnKTtcblxuICAgICQuZ2V0TXVsdGlKc1NjcmlwdHMgPSBmdW5jdGlvbiAobGlzdCwgY2IsIGZvcmNlWGRvbWFpbikge1xuICAgICAgICB2YXIgcGF0aCA9IGpzUGF0aCgpLFxuICAgICAgICAgICAgaSA9IDAsXG4gICAgICAgICAgICBmZXRjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmIChpIDwgbGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogcGF0aCArIGxpc3RbaSsrXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcInNjcmlwdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmV0Y2gsXG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjcm9zc0RvbWFpbjogZm9yY2VYZG9tYWluIHx8IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNiKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICBmZXRjaCgpO1xuICAgIH07XG5cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2pxdWVyeS9qcXVlcnkubXVsdGlzY3JpcHRzLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGF0aCA9IG51bGw7XG4gICAgJCgnc2NyaXB0W3NyY10nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNyYyA9ICQodGhpcykuYXR0cignc3JjJyksXG4gICAgICAgICAgICBtYXRjaCA9IHNyYy5tYXRjaCgvKC4rXFwvKShbMC05XStcXC4pP0NJVFlfUlxcLihtaW5cXC4pP2pzKFxcP3Y9WzAtOV0rKT8kLyk7XG5cbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBwYXRoID0gbWF0Y2hbMV07XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBwYXRoO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2pxdWVyeS9qcy1wYXRoLmpzXG4vLyBtb2R1bGUgaWQgPSAyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGlucHV0VVJMLCBpbnB1dERhdGEsIGlucHV0VHlwZSkge1xuICAgICAgICB2YXIgcHJvbWlzZSA9ICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGlucHV0VVJMLFxuICAgICAgICAgICAgZGF0YTogaW5wdXREYXRhLFxuICAgICAgICAgICAgdHlwZTogKGlucHV0VHlwZSA/IGlucHV0VHlwZSA6ICdnZXQnKVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZSggZnVuY3Rpb24ocmVzcG9uc2VEYXRhLCBzdGF0dXMsIHhocikge1xuICAgICAgICAgICAgLy8gUHJlLWRldGVybWluZWQgTG9naWMgZm9yIFN1Y2Nlc3NcbiAgICAgICAgICAgIC8vICh0aGlzIHdpbGwgcnVuIGJlZm9yZSBhbnkgYC5kb25lKClgIG9yIGAuZmFpbCgpYCB3aGVyZSBgY3VzdG9tQUpBWCgpYCBpcyBjYWxsZWQpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnU3VjY2VzcycpO1xuICAgICAgICB9KVxuICAgICAgICAuZmFpbCggZnVuY3Rpb24oeGhyLCBzdGF0dXMsIGVycikge1xuICAgICAgICAgICAgLy8gUHJlLWRldGVybWluZWQgTG9naWMgZm9yIEZhaWx1cmVcbiAgICAgICAgICAgIC8vICh0aGlzIHdpbGwgcnVuIGJlZm9yZSBhbnkgYC5kb25lKClgIG9yIGAuZmFpbCgpYCB3aGVyZSBgY3VzdG9tQUpBWCgpYCBpcyBjYWxsZWQpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnRmFpbHVyZScpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfTtcblxufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9jdXN0b20tYWpheC5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLypcbiAqIHNldHMgdXAgYSBjYXJvdXNlbCBvbiBhIHBhZ2VcbiAqIEBwYXJhbSBjYXJvdXNlbE9iaiA6IE9iamVjdFxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcbiAgICAgICAgZGVidWcgPSByZXF1aXJlKCcuLi8uLi91dGlscy9kZWJ1ZycpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgkY2Fyb3VzZWxPYmopIHtcbiAgICAgICAgaWYgKCRjYXJvdXNlbE9iai5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICRjYXJvdXNlbE9iai5hcHBlbmQoJCgnI21haW4tY2Fyb3VzZWwtc2xpZGVzJykuaHRtbCgpKTtcblxuICAgICAgICAgICAgdmFyIG51bVNsaWRlcyA9ICRjYXJvdXNlbE9iai5jaGlsZHJlbigpLmxlbmd0aCxcbiAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyID0gJGNhcm91c2VsT2JqLnBhcmVudHMoXCIjcHJvbW8td3JhcHBlclwiKSxcbiAgICAgICAgICAgICAgICBvdmVycmlkZUNvbnRyb2xzID0gbnVtU2xpZGVzID4gMSA/IHt9IDoge1xuICAgICAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIC8vIG9wdGlvbnMgZm9yIHRoZSBob21lIGNhcm91c2VsXG4gICAgICAgICAgICAgICAgc2xpZGVyT3B0aW9ucyA9ICgkcHJvbW9XcmFwcGVyLmF0dHIoXCJkYXRhLWNhcm91c2VsLXR5cGVcIikgIT09IFwiaG9tZVwiKSA/IHt9IDoge1xuICAgICAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHRTd2lwZVg6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVZOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYnVpbGRQYWdlcjogZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJzxzcGFuIGNsYXNzPVwiZmEgZmEtY2lyY2xlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPkdvIHRvIHNsaWRlICcgKyAoaW5kZXggKyAxKSArICc8L3NwYW4+JztcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRUZXh0OiAnPHNwYW4gY2xhc3M9XCJiZyBmYSBmYS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJpYyBmYSBmYS1wbGF5XCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPlBsYXkgc2xpZGVzPC9zcGFuPicsXG4gICAgICAgICAgICAgICAgICAgIHN0b3BUZXh0OiAnPHNwYW4gY2xhc3M9XCJiZyBmYSBmYS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJpYyBmYSBmYS1wYXVzZVwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5TdG9wIHNsaWRlczwvc3Bhbj4nLFxuICAgICAgICAgICAgICAgICAgICBwcmV2VGV4dDogJzxzcGFuIGNsYXNzPVwiYmcgZmEgZmEtY2lyY2xlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiaWMgZmEgZmEtY2hldnJvbi1sZWZ0XCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPlByZXZpb3VzIHNsaWRlPC9zcGFuPicsXG4gICAgICAgICAgICAgICAgICAgIG5leHRUZXh0OiAnPHNwYW4gY2xhc3M9XCJiZyBmYSBmYS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJpYyBmYSBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPk5leHQgc2xpZGU8L3NwYW4+J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xlYXJpbmdPcHRpb25zID0gKCRwcm9tb1dyYXBwZXIuYXR0cihcImRhdGEtY2Fyb3VzZWwtdHlwZVwiKSAhPT0gXCJjbGVhcmluZ1wiKSA/IHt9IDoge1xuICAgICAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9TdGFydDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGluaXRTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgYXV0bzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRleHQ6IFwiPHNwYW4gY2xhc3M9XFxcInZpc3VhbGx5aGlkZGVuXFxcIj5TdGFydCBzbGlkZXI8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImZhIGZhLXBsYXlcXFwiPjwvc3Bhbj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0b3BUZXh0OiBcIjxzcGFuIGNsYXNzPVxcXCJ2aXN1YWxseWhpZGRlblxcXCI+UGF1c2Ugc2xpZGVyPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJmYSBmYS1wYXVzZVxcXCI+PC9zcGFuPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV4dFRleHQ6IFwiPHNwYW4gY2xhc3M9XFxcInZpc3VhbGx5aGlkZGVuXFxcIj5OZXh0IHNsaWRlPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJmYSBmYS1jYXJldC1yaWdodFxcXCI+PC9zcGFuPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldlRleHQ6IFwiPHNwYW4gY2xhc3M9XFxcInZpc3VhbGx5aGlkZGVuXFxcIj5QcmV2aW91cyBzbGlkZTwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiZmEgZmEtY2FyZXQtbGVmdFxcXCI+PC9zcGFuPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbHM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobnVtU2xpZGVzIDwgMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyLmFkZENsYXNzKFwicHJvbW8td3JhcHBlci0tc2luZ2xlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwgc2xpZGVyT3B0aW9ucywgb3ZlcnJpZGVDb250cm9scywgY2xlYXJpbmdPcHRpb25zKTtcblxuICAgICAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyLnJlbW92ZUNsYXNzKFwiY2Fyb3VzZWwtbG9hZGluZ1wiKTtcbiAgICAgICAgICAgICAgICAgICAgJHByb21vV3JhcHBlci5maW5kKFwiLmxvYWRpbmctZmEtaWNvblwiKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgJHByb21vV3JhcHBlci5maW5kKFwiLmJ4c2xpZGVyXCIpLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgJGNhcm91c2VsT2JqLmJ4U2xpZGVyKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyLmZpbmQoXCIuYngtY29udHJvbHNcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vc2V0IHVwIHNsaWRlclxuICAgICAgICAgICAgaWYgKG51bVNsaWRlcyA+IDApIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhcIm1vcmUgdGhhbiAwIHNsaWRlcywgbmVlZCBjYXJvdXNlbC4gTnVtU2xpZGVzID1cIiArIG51bVNsaWRlcyk7XG4gICAgICAgICAgICAgICAgaW5pdFNsaWRlcigkY2Fyb3VzZWxPYmopO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvY3JlYXRlLXNsaWRlci5qc1xuLy8gbW9kdWxlIGlkID0gMjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBJbml0aWFsaXNlIERyb3Bkb3duc1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIHZhciAkID0gcmVxdWlyZShcIi4uL2pxdWVyeVwiKTtcbiAgICB2YXIgY29udGVudFdyYXBwZXIgPSAkKFwiLmNpdHktaGVhbHRoX19jb250YWluZXJcIik7XG4gICAgdmFyIGxvYWRpbmcgICAgICAgID0gJChcIi5jaXR5LWhlYWx0aF9fbG9hZGluZ1wiKTtcbiAgICB2YXIgZm9ybSAgICAgICAgICAgPSAkKFwiLmNpdHktaGVhbHRoX19mb3JtXCIpO1xuICAgIHZhciBpbnB1dHMgICAgICAgICA9IGZvcm0uZmluZChcImlucHV0XCIpO1xuXG4gICAgdmFyIGZpeFBhZ2luYXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIi5jaXR5LWhlYWx0aF9fcGFnaW5hdGlvbi0tYWxsIGFcIikuY2xpY2soIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHZhciBwYWdlID0gJCh0aGlzKS5hdHRyKFwiaHJlZlwiKS5zcGxpdChcInJlc3VsdF8zMTQ3MjlfcmVzdWx0X3BhZ2U9XCIpWzFdO1xuICAgICAgICAgICAgcmVsb2FkKHtcbiAgICAgICAgICAgICAgICBcInJlc3VsdF8zMTQ3MjlfcmVzdWx0X3BhZ2VcIjogcGFnZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgICQoXCIuY2l0eS1oZWFsdGhfX3BhZ2luYXRpb24tLWZpbHRlcmVkIGFcIikuY2xpY2soIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHZhciBwYWdlID0gJCh0aGlzKS5hdHRyKFwiaHJlZlwiKS5zcGxpdChcImN1cnJlbnRfcmVzdWx0X3BhZ2U9XCIpWzFdLnNwbGl0KFwiJlwiKVswXTtcbiAgICAgICAgICAgIHJlbG9hZCh7XG4gICAgICAgICAgICAgICAgXCJjdXJyZW50X3Jlc3VsdF9wYWdlXCI6IHBhZ2VcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHZhciByZWxvYWQgPSBmdW5jdGlvbihmaXhlZFBhcmFtcykge1xuICAgICAgICB2YXIgcGFyYW1zID0gJC5leHRlbmQoe3Q6IG5ldyBEYXRlKCkuZ2V0VGltZSgpfSwgZml4ZWRQYXJhbXMpO1xuXG4gICAgICAgIGlucHV0cy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IGlucHV0LmF0dHIoXCJuYW1lXCIpO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXQudmFsKCk7XG5cbiAgICAgICAgICAgIGlmIChuYW1lICYmIG5hbWUubGVuZ3RoID4gMCAmJiB2YWx1ZSAmJiB2YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zW25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnRlbnRXcmFwcGVyLmNzcyhcImRpc3BsYXlcIiwgXCJub25lXCIpO1xuICAgICAgICBsb2FkaW5nLmNzcyhcImRpc3BsYXlcIiwgXCJpbmxpbmUtYmxvY2tcIik7XG5cbiAgICAgICAgJC5nZXQoXCIvL3d3dy5jaXR5LmFjLnVrL2FwaS9jaXR5LWhlYWx0aC1jb3Vyc2VzL19ub2NhY2hlXCIsIHBhcmFtcywgZnVuY3Rpb24oZGF0YSkgeyB9KVxuICAgICAgICAgICAgLmRvbmUoIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50V3JhcHBlci5odG1sKGRhdGEpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5hbHdheXMoIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50V3JhcHBlci5jc3MoXCJkaXNwbGF5XCIsIFwiYmxvY2tcIik7XG4gICAgICAgICAgICAgICAgbG9hZGluZy5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcbiAgICAgICAgICAgICAgICBmaXhQYWdpbmF0aW9uKCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAkKFwiLmNpdHktaGVhbHRoX19mb3JtIC5kcm9wZG93bi1zZWxlY3RcIikuY2l0eURyb3Bkb3duKHtcbiAgICAgICAgICAgIFwib25zZWxlY3RcIjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVsb2FkKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBmaXhQYWdpbmF0aW9uKCk7XG4gICAgfTtcblxufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LWRyb3Bkb3ducy5qc1xuLy8gbW9kdWxlIGlkID0gMjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBjcmVhdGVzIGR5bmFtaWMgZ29vZ2xlIG1hcHNcbiAqIEByZXR1cm46IFVuZGVmaW5lZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG5cbiAgICAgICAgb25Mb2FkID0gZnVuY3Rpb24gKGR5bmFtaWNNYXApIHtcbiAgICAgICAgICAgIHZhciBpaWksXG4gICAgICAgICAgICAgICAgY3VycmVudE1hcmtlcixcbiAgICAgICAgICAgICAgICBtYXJrZXIsXG4gICAgICAgICAgICAgICAgY2VudGVyTWFya2VyLFxuICAgICAgICAgICAgICAgIGdtYXAsXG4gICAgICAgICAgICAgICAgbGFiZWxCb3gsXG4gICAgICAgICAgICAgICAgaW5mb1dpbmRvdyxcbiAgICAgICAgICAgICAgICBnbWFwRGF0YSxcbiAgICAgICAgICAgICAgICB1c2VyTWFwQ2VudGVyLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uUm9vdE5vZGUgPSBkeW5hbWljTWFwLmF0dHIoXCJkYXRhLWxvY2F0aW9ucy1ub2RlXCIpLFxuICAgICAgICAgICAgICAgIGNvbXB1dGVkU2l6ZSA9IG5ldyBnb29nbGUubWFwcy5TaXplKDM2LCA0MyksXG4gICAgICAgICAgICAgICAgaW5mb1dpbmRvd09mZlNldCA9IG5ldyBnb29nbGUubWFwcy5TaXplKDAsIC0zMCksXG4gICAgICAgICAgICAgICAgZ21hcENvbG91ck9wdGlvbnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcImxhbmRzY2FwZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogLTYwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZ2h0bmVzczogNjVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlVHlwZTogXCJwb2lcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdHVyYXRpb246IC00MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IDQwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwic2ltcGxpZmllZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlVHlwZTogXCJyb2FkLmhpZ2h3YXlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdHVyYXRpb246IC04MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IDQwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwic2ltcGxpZmllZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlVHlwZTogXCJyb2FkLmFydGVyaWFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAtNjBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiA0MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcIm9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcInJvYWQubG9jYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdHVyYXRpb246IC02MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IDQwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwib25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwidHJhbnNpdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogLTYwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZ2h0bmVzczogNDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJzaW1wbGlmaWVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcImFkbWluaXN0cmF0aXZlLnByb3ZpbmNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcIm9mZlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlVHlwZTogXCJ3YXRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFR5cGU6IFwibGFiZWxzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcIm9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiAtMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcIndhdGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VHlwZTogXCJnZW9tZXRyeVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiAtMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcInRyYW5zaXQuc3RhdGlvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogMzBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiAtMTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICBhdHRhY2hDbGlja0V2ZW50ID0gZnVuY3Rpb24gKG1hcCwgbWFya2VyLCBsYWJlbGVkQm94LCBkZXNjcmlwdGlvbikge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9uIGNsaWNrIG9uIGEgbWFya2VyLCBzZXQgdGhlIGNvbnRlbnQgb2YgaW5mb3dpbmRvdyBhbmQgb3BlbiBpdFxuICAgICAgICAgICAgICAgICAgICAvL2Fsc28gY2VudGVyIHRoZSBtYXAgb24gdGhhdCBtYXJrZXJcbiAgICAgICAgICAgICAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIobWFya2VyLCBcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm9XaW5kb3cuc2V0Q29udGVudChcIjxzcGFuIGNsYXNzPVxcXCJtYXJrZXItZGVzY3JpcHRpb25cXFwiPlwiICsgZGVzY3JpcHRpb24gKyBcIjxcXC9zcGFuPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm9XaW5kb3cuc2V0UG9zaXRpb24obWFya2VyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm9XaW5kb3cub3BlbihtYXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFwLnBhblRvKG1hcmtlci5wb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcGxhY2VDZW50ZXJNYXJrZXIgPSBmdW5jdGlvbiAobWFwLCBtYXJrZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlIG1hcmtlciBmb3IgdGhlIGNlbnRlciBvZiB0aGUgbWFwXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlck1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogbWFya2VyLmljb25cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXA6IG1hcCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhtYXJrZXIubGF0aXR1ZGUsIG1hcmtlci5sb25naXR1ZGUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IG1hcmtlci5uYW1lXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGNlbnRlck1hcmtlci5zZXRaSW5kZXgoMTgwKTtcblxuICAgICAgICAgICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihjZW50ZXJNYXJrZXIsIFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5mb1dpbmRvdy5zZXRDb250ZW50KFwiPHNwYW4gY2xhc3M9XFxcIm1hcmtlci10aXRsZVxcXCI+XCIgKyBjZW50ZXJNYXJrZXIudGl0bGUgKyBcIjxcXC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJtYXJrZXItZGVzY3JpcHRpb25cXFwiPlwiICsgbWFya2VyLmRlc2NyaXB0aW9uICsgXCI8XFwvc3Bhbj5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZvV2luZG93LnNldFBvc2l0aW9uKGNlbnRlck1hcmtlci5wb3NpdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZvV2luZG93Lm9wZW4obWFwKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwbGFjZUFsbE1hcmtlciA9IGZ1bmN0aW9uIChtYXJrZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoaWlpID0gMDsgaWlpIDwgbWFya2Vycy5sZW5ndGg7IGlpaSsrKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRNYXJrZXIgPSBtYXJrZXJzW2lpaV07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRlZmluZSBhIG5ldyBtYXJrZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGljb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBjdXJyZW50TWFya2VyLmljb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcDogZ21hcCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGN1cnJlbnRNYXJrZXIubGF0aXR1ZGUsIGN1cnJlbnRNYXJrZXIubG9uZ2l0dWRlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogY3VycmVudE1hcmtlci5uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2V0IGEgbGFiZWwgZm9yIGVhY2ggbWFya2VyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB1c2VzIGdvb2dsZSBtYXAgcGx1Z2luXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbEJveCA9IG5ldyBJbmZvQm94KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBtYXJrZXIudGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IG1hcmtlci5wb3NpdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYW5lOiBcIm1hcFBhbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZUJveFVSTDogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlQXV0b1BhbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3hTdHlsZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCJhdXRvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxCb3gub3BlbihnbWFwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFjaENsaWNrRXZlbnQoZ21hcCwgbWFya2VyLCBsYWJlbEJveCwgKGN1cnJlbnRNYXJrZXIuZGVzY3JpcHRpb24gKyBcIiZuYnNwO1wiKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBjYWxsIHRoZSBnb29nbGUgbWFwcyBsb2NhdGlvbiBhcGkgaW4gbWF0cml4IHRvIGdldCB0aGUgZGF0YSBvbiB0aGUgbWFya2VycyBhbmQgdGhlIGluaXRpYWwgbWFwIHBhcmFtZXRlcnNcbiAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgdXJsOiBcIi8vd3d3LmNpdHkuYWMudWsvYXBpL2dvb2dsZS1tYXAtbG9jYXRpb25zP3Jvb3Q9XCIgKyBsb2NhdGlvblJvb3ROb2RlLFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIlxuICAgICAgICAgICAgfSkuZG9uZShmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhICE9PSBudWxsKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gbWFwIGFuZCBtYXJrZXJzIGRhdGFcbiAgICAgICAgICAgICAgICAgICAgZ21hcERhdGEgPSBkYXRhO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSB0aGUgbWFwXG4gICAgICAgICAgICAgICAgICAgIGdtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHluYW1pYy1nbWFwXCIpLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlZXRWaWV3Q29udHJvbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB6b29tOiBnbWFwRGF0YS5sb2FkT3B0aW9ucy56b29tLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGdtYXBEYXRhLmxvYWRPcHRpb25zLmxhdGl0dWRlLCBnbWFwRGF0YS5sb2FkT3B0aW9ucy5sb25naXR1ZGUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVzOiBnbWFwQ29sb3VyT3B0aW9uc1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBjcmVhdGUgYSBuZXcgaW5mbyB3aW5kb3dcbiAgICAgICAgICAgICAgICAgICAgaW5mb1dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHtwaXhlbE9mZnNldDogaW5mb1dpbmRvd09mZlNldH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBhbGwgdGhlIG1hcmtlcnMgZXhjZXB0IHRoZSBjZW50cmFsIG9uZVxuICAgICAgICAgICAgICAgICAgICAvLyBhZGQgYSBsYWJlbCB0byBlYWNoIG9mIHRoZW1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2VBbGxNYXJrZXIoZ21hcERhdGEubWFya2Vycyk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkIGEgbWFya2VyIGZvciB0aGUgY2VudGVyIG9mIHRoZSBtYXBcbiAgICAgICAgICAgICAgICAgICAgcGxhY2VDZW50ZXJNYXJrZXIoZ21hcCwgZ21hcERhdGEuY2VudGVyTWFya2VyKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBvbiByZXNpemluZyB0aGUgbWFwLCBtYWtlIHN1cmUgd2Uga2VlcCB0aGUgY3VycmVudCBjZW50ZXIgcG9zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkRG9tTGlzdGVuZXIod2luZG93LCBcInJlc2l6ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyTWFwQ2VudGVyID0gZ21hcC5nZXRDZW50ZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LnRyaWdnZXIoZ21hcCwgXCJyZXNpemVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBnbWFwLnNldENlbnRlcih1c2VyTWFwQ2VudGVyKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoZHluYW1pY01hcCkge1xuICAgICAgICBpZiAoZHluYW1pY01hcC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAkLmdldE11bHRpSnNTY3JpcHRzKFsnbGliL2dvb2dsZS9tYXAvaW5mb2JveC1wYWNrZWQtMS4xLjkuanMnXSwgb25Mb2FkLmJpbmQobnVsbCwgZHluYW1pY01hcCkpO1xuICAgICAgICB9XG4gICAgfTtcblxufSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvaW5pdC1keW5hbWljLW1hcC5qc1xuLy8gbW9kdWxlIGlkID0gMjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhekxpc3RpbmdzKSB7XG5cbiAgICAgICAgYXpMaXN0aW5ncy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgbGV0dGVycyA9IG1lLmZpbmQoJy5sZXR0ZXItbGlzdCBhJyksXG4gICAgICAgICAgICAgICAgbGV0dGVyR3JvdXBzID0gbWUuZmluZCgnLmxldHRlci1ncm91cCcpLFxuXG4gICAgICAgICAgICAgICAgc2VsZWN0ID0gZnVuY3Rpb24gKGFuY2hvcikge1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXJzLmZpbHRlcignW2hyZWYhPVwiJyArIGFuY2hvciArICdcIl0nKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVycy5maWx0ZXIoJ1tocmVmPVwiJyArIGFuY2hvciArICdcIl0nKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcblxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChhbmNob3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gYW5jaG9yLnN1YnN0cigxKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVyR3JvdXBzLmZpbHRlcignW25hbWUhPVwiJyArIG5hbWUgKyAnXCJdJykuYWRkQ2xhc3MoJ3Vuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlckdyb3Vwcy5maWx0ZXIoJ1tuYW1lPVwiJyArIG5hbWUgKyAnXCJdJykucmVtb3ZlQ2xhc3MoJ3Vuc2VsZWN0ZWQnKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlckdyb3Vwcy5yZW1vdmVDbGFzcygndW5zZWxlY3RlZCcpLnJlbW92ZUNsYXNzKCdzZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcblxuXG4gICAgICAgICAgICBsZXR0ZXJHcm91cHMuZmluZCgnLmdvLXVwJykuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3QoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNoaWxkcmVuKCdzcGFuJykuaHRtbCgnU2hvdyBhbGwnKS5lbmQoKVxuICAgICAgICAgICAgICAgIC5jaGlsZHJlbignaScpLnJlbW92ZUNsYXNzKCdmYS1hcnJvdy1jaXJjbGUtby11cCcpLmFkZENsYXNzKCdmYS1yZXBseScpO1xuXG4gICAgICAgICAgICBsZXR0ZXJzLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0KCQodGhpcykuYXR0cignaHJlZicpKTtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvYXotbGlzdGluZy5qc1xuLy8gbW9kdWxlIGlkID0gMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJy5pbWFnZS1hY2NvcmRpb24gbGFiZWwnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgbGFiZWxUYXJnZXQgPSAkKHRoaXMpLmF0dHIoJ2ZvcicpO1xuICAgICAgICAgICAgJCgnIycgKyBsYWJlbFRhcmdldCkuYmx1cigpO1xuICAgICAgICAgICAgJCgnIycgKyBsYWJlbFRhcmdldCkuZm9jdXMoKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5pbWFnZS1hY2NvcmRpb24gaW5wdXRbdHlwZT1cInJhZGlvXCJdJykuY2hhbmdlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByYWRpb0lucHV0ID0gJCh0aGlzKTtcbiAgICAgICAgICAgICQoJy5pbWFnZS1hY2NvcmRpb24gaW5wdXRbdHlwZT1cInJhZGlvXCJdJykucmVtb3ZlQ2xhc3MoJ2NoZWNrZWQnKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICByYWRpb0lucHV0LmFkZENsYXNzKCdjaGVja2VkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG59KCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2ltYWdlLWFjY29yZGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gMjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBJbml0IHNlZSBtb3JlIHdpZGdldFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgd2lkZ2V0cyA9ICQoXCIuc2VlLW1vcmVcIik7XG5cbiAgICAgICAgd2lkZ2V0cy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB3aWRnZXQgPSAkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIHRvZ2dsZSA9IHdpZGdldC5maW5kKCcuc2VlLW1vcmVfX3RvZ2dsZScpO1xuICAgICAgICAgICAgdmFyIHRvZ2dsZUxhYmVsID0gdG9nZ2xlLmZpbmQoJy5zZWUtbW9yZV9fdG9nZ2xlX19sYWJlbCcpO1xuICAgICAgICAgICAgaWYgKHRvZ2dsZUxhYmVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRvZ2dsZUxhYmVsID0gdG9nZ2xlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHdpZGdldC5maW5kKCcuc2VlLW1vcmVfX2NvbnRlbnQnKTtcbiAgICAgICAgICAgIHZhciBzaG93VGV4dCA9IHRvZ2dsZS5odG1sKCk7XG4gICAgICAgICAgICB2YXIgaGlkZVRleHQgPSB0b2dnbGUuYXR0cignZGF0YS1oaWRlLXRleHQnKSB8fCAnSGlkZSc7XG4gICAgICAgICAgICB0b2dnbGUuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHdpZGdldC5oYXNDbGFzcygnc2VlLW1vcmUtLWFjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUxhYmVsLmh0bWwoc2hvd1RleHQpO1xuICAgICAgICAgICAgICAgICAgICB3aWRnZXQucmVtb3ZlQ2xhc3MoJ3NlZS1tb3JlLS1hY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zbGlkZVVwKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkZ2V0LmFkZENsYXNzKCdzZWUtbW9yZS0tYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgIHRvZ2dsZUxhYmVsLmh0bWwoaGlkZVRleHQpO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50LnNsaWRlRG93bigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG59KCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtc2VlLW1vcmUuanNcbi8vIG1vZHVsZSBpZCA9IDI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogVG9nZ2xlIFZpc2liaWxpdHkgb2YgSW1hZ2UgQ3JlZGl0IENvbXBvbmVudFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgJGNyZWRpdHMgPSAkKFwiLmltYWdlLWNyZWRpdFwiKSxcbiAgICAgICAgICAgICRjcmVkaXRJdGVtcyA9ICQoXCIuY3JlZGl0cy1pdGVtc1wiKSxcbiAgICAgICAgICAgICRzY3BDcmVkaXRzVGl0bGUgPSAkKFwiLmNyZWRpdHMtdGl0bGVcIiksXG4gICAgICAgICAgICBjcmVkaXRCdXR0b25DbGFzcyA9IFwiLmltYWdlLWNyZWRpdF9fYnV0dG9uXCIsXG5cbiAgICAgICAgICAgIHRvZ2dsZUltYWdlQ3JlZGl0ID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IG5vZGUuYXR0cihcImFyaWEtcHJlc3NlZFwiKSA9PT0gXCJ0cnVlXCIgPyBcImZhbHNlXCIgOiBcInRydWVcIjtcbiAgICAgICAgICAgICAgICBub2RlLmF0dHIoXCJhcmlhLXByZXNzZWRcIiwgc3RhdGUpO1xuICAgICAgICAgICAgICAgIG5vZGUucGFyZW50KCkuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwgc3RhdGUpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAkY3JlZGl0cy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykuZmluZChjcmVkaXRCdXR0b25DbGFzcykuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHRvZ2dsZUltYWdlQ3JlZGl0KCQodGhpcykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRzY3BDcmVkaXRzVGl0bGUub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKFwiY3JlZGl0cy10aXRsZS0tYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgLm5leHQoXCIuY3JlZGl0cy1pdGVtc1wiKS50b2dnbGVDbGFzcyhcInNyLW9ubHlcIik7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvaW1hZ2UtY3JlZGl0YXRpb24uanNcbi8vIG1vZHVsZSBpZCA9IDMwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8vIGZhbGxiYWNrIGZvciBicm93c2VycyB0aGF0IGRvbid0IHVuZGVyc3RhbmQgcGxhY2Vob2xkZXIgYXR0cmlidXRlXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcbiAgICAgICAgTW9kZXJuaXpyID0gd2luZG93Lk1vZGVybml6cjtcblxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKE1vZGVybml6ciAmJiAhTW9kZXJuaXpyLmlucHV0LnBsYWNlaG9sZGVyKSB7XG4gICAgICAgICAgICB2YXIgaW5wdXRzID0gJChcIltwbGFjZWhvbGRlcl1cIik7XG5cbiAgICAgICAgICAgIGlucHV0cy5mb2N1cyhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQudmFsKCkgPT09IGlucHV0LmF0dHIoXCJwbGFjZWhvbGRlclwiKSkge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWwoXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0LnJlbW92ZUNsYXNzKFwicGxhY2Vob2xkZXJcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkuYmx1cihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlucHV0ID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQudmFsKCkgPT09IFwiXCIgfHwgaW5wdXQudmFsKCkgPT09IGlucHV0LmF0dHIoXCJwbGFjZWhvbGRlclwiKSkge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5hZGRDbGFzcyhcInBsYWNlaG9sZGVyXCIpO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWwoaW5wdXQuYXR0cihcInBsYWNlaG9sZGVyXCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KS5ibHVyKCk7XG5cbiAgICAgICAgICAgIGlucHV0cy5wYXJlbnRzKFwiZm9ybVwiKS5zdWJtaXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICQodGhpcykuZmluZChcIltwbGFjZWhvbGRlcl1cIikuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC52YWwoKSA9PT0gaW5wdXQuYXR0cihcInBsYWNlaG9sZGVyXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWwoXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxufSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvcGxhY2Vob2xkZXItZmFsbGJhY2suanNcbi8vIG1vZHVsZSBpZCA9IDMxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcuaW1hZ2UtY2Fyb3VzZWwnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBjYXJvdXNlbCA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgc2xpZGVzID0gY2Fyb3VzZWwuY2hpbGRyZW4oKTtcbiAgICAgICAgICAgIHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLWluZGV4JywgaSk7XG4gICAgICAgICAgICB9KS53cmFwQWxsKCc8ZGl2PjwvZGl2PicpO1xuXG4gICAgICAgICAgICB2YXIgdXBkYXRlQWN0aXZlID0gZnVuY3Rpb24gKHNsaWRlRWxlbWVudCwgb2xkSW5kZXgsIG5ld0luZGV4KSB7XG4gICAgICAgICAgICAgICAgY2Fyb3VzZWwuZmluZCgnLmltYWdlLWNhcm91c2VfX2l0ZW0tLWFjdGl2ZScpLnJlbW92ZUNsYXNzKCdpbWFnZS1jYXJvdXNlX19pdGVtLS1hY3RpdmUnKTtcbiAgICAgICAgICAgICAgICBjYXJvdXNlbC5maW5kKCcuaW1hZ2UtY2Fyb3VzZV9faXRlbVtkYXRhLWluZGV4PVwiJyArIG5ld0luZGV4ICsgJ1wiXScpLmFkZENsYXNzKCdpbWFnZS1jYXJvdXNlX19pdGVtLS1hY3RpdmUnKVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdmFyIHNsaWRlciA9IG51bGw7XG5cbiAgICAgICAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbmV4dFRleHQ6ICc8c3Bhbj48c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5HbyB0byBuZXh0IHNsaWRlPC9zcGFuPjxzcGFuIGNsYXNzPVwiZmEgZmEtY2hldnJvbi1yaWdodFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj48L3NwYW4+JyxcbiAgICAgICAgICAgICAgICBwcmV2VGV4dDogJzxzcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPkdvIHRvIHByZXZpb3VzIHNsaWRlPC9zcGFuPjxzcGFuIGNsYXNzPVwiZmEgZmEtY2hldnJvbi1sZWZ0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPjwvc3Bhbj4nLFxuICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBtb3ZlU2xpZGVzOiAxLFxuICAgICAgICAgICAgICAgIHNsaWRlV2lkdGg6IDAsXG4gICAgICAgICAgICAgICAgZmlyc3RTbGlkZU1hcmdpbjogMCxcbiAgICAgICAgICAgICAgICBvblNsaWRlQmVmb3JlOiB1cGRhdGVBY3RpdmUsXG4gICAgICAgICAgICAgICAgb25TbGlkZUFmdGVyOiB1cGRhdGVBY3RpdmUsXG4gICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoY3VycmVudEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcm91c2VsLmZpbmQoJy5ieC1jb250cm9scyBhJykuYXR0cigncm9sZScsICdidXR0b24nKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQoY2Fyb3VzZWwuZmluZCgnLmltYWdlLWNhcm91c2VfX2l0ZW0nKS5jc3MoJ3dpZHRoJykpICE9PSBvcHRpb25zLnNsaWRlV2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQodXBkYXRlLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcm91c2VsLmZpbmQoJy5pbWFnZS1jYXJvdXNlX19pdGVtW2RhdGEtaW5kZXg9XCInICsgY3VycmVudEluZGV4ICsgJ1wiXScpLmFkZENsYXNzKCdpbWFnZS1jYXJvdXNlX19pdGVtLS1hY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcm91c2VsLmZpbmQoJy5pbWFnZS1jYXJvdXNlX19pdGVtJykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbWFyZ2luLWxlZnQnOiBvcHRpb25zLmZpcnN0U2xpZGVNYXJnaW4gKyAncHgnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtYXJnaW4tcmlnaHQnOiAoLW9wdGlvbnMuZmlyc3RTbGlkZU1hcmdpbikgKyAncHgnXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHZhciB1cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHdpZHRoID0gY2Fyb3VzZWwud2lkdGgoKTtcbiAgICAgICAgICAgICAgICBpZiAoTW9kZXJuaXpyLm1xKCcobWluLXdpZHRoOiA2MDBweCknKSkge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1heFNsaWRlcyA9IDI7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuc2xpZGVXaWR0aCA9IE1hdGgucm91bmQoLjUgKiAoMjAgKyB3aWR0aCkpO1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmZpcnN0U2xpZGVNYXJnaW4gPSAuMjUgKiB3aWR0aCAtIDU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5tYXhTbGlkZXMgPSAxO1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnNsaWRlV2lkdGggPSB3aWR0aDtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5maXJzdFNsaWRlTWFyZ2luID0gMDtcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIGlmIChzbGlkZXIgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVyID0gY2Fyb3VzZWwuY2hpbGRyZW4oKS5ieFNsaWRlcihvcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZXIucmVsb2FkU2xpZGVyKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICQod2luZG93KS5yZXNpemUodXBkYXRlKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvaW5pdC1pbWFnZS1jYXJvdXNlbC5qc1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGluaXRXaGl0ZUNhcmRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA2MDApIHtcbiAgICAgICAgICAgICQoJy53aGl0ZS1jYXJkJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJveCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBib3guZmluZCgnLndoaXRlLWNhcmRfX2NvbnRlbnQnKTtcblxuICAgICAgICAgICAgICAgIGlmIChjb250ZW50LmhlaWdodCgpID4gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuYWRkQ2xhc3MoJ3doaXRlLWNhcmRfX2NvbnRlbnQtLXJlYWQtbW9yZScpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnV0dG9uID0gJCgnPGRpdiBjbGFzcz1cIndoaXRlLWNhcmRfX3JlYWQtbW9yZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ3aGl0ZS1jYXJkX19yZWFkLW1vcmVfX2JnXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGEgIGhyZWY9XCIjXCI+PHNwYW4+cmVhZCBtb3JlPC9zcGFuPjwvYT4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5yZW1vdmVDbGFzcygnd2hpdGUtY2FyZF9fY29udGVudC0tcmVhZC1tb3JlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmFwcGVuZFRvKGJveCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAkKCcud2hpdGUtY2FyZCAuZW1iZWQtY29udGFpbmVyJykudmlkZW9QcmV2aWV3KHthbGxvd0Z1bGxzY3JlZW46IHRydWV9KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGluaXRXaGl0ZUNhcmRzO1xufSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvaW5pdC13aGl0ZS1jYXJkcy5qc1xuLy8gbW9kdWxlIGlkID0gMzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBhZGRzIGF1dG9jb21wbGV0ZSBmdW5jdGlvbmFsaXR5IHRvIHRoZSBtYWluIHNlYXJjaCBiYXIsIHVzaW5nIGpRdWVyeSBVSVxuICogQHBhcmFtOiB7T2JqZWN0fSBmb3JtIC0galF1ZXJ5IG9iamVjdCBmb3IgZm9ybSB0byBydW4gYXV0b1N1Z2dlc3Qgb25cbiAqIEBwYXJhbToge09iamVjdH0gaW5wdXQgLSBqUXVlcnkgb2JqZWN0IGZvciBpbnB1dCBlbGVtZW50cyB0byBydW4gYXV0b1N1Z2dlc3Qgb25cbiAqIEBwYXJhbToge1N0cmluZ30gY29sbGVjdGlvbiAtIHRoZSBuYW1lIG9mIHRoZSBGdW5uZWxiYWNrIGNvbGxlY3Rpb24gdG8gcXVlcnlcbiAqIEByZXR1bjoge1VuZGVmaW5lZH1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcblxuICAgICAgICBhcnJheUR1cGxpY2F0ZVphcHBlciA9IGZ1bmN0aW9uIChteUFycmF5KSB7XG4gICAgICAgICAgICB2YXIgbXlVbmlxdWVBcnJheSA9IFtdO1xuICAgICAgICAgICAgJC5lYWNoKG15QXJyYXksIGZ1bmN0aW9uIChpLCBlbCkge1xuICAgICAgICAgICAgICAgIGlmICgkLmluQXJyYXkoZWwsIG15VW5pcXVlQXJyYXkpID09PSAtMSkgbXlVbmlxdWVBcnJheS5wdXNoKGVsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG15VW5pcXVlQXJyYXk7XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKGZvcm0sIGlucHV0LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgIGlucHV0LmF1dG9jb21wbGV0ZSh7XG5cbiAgICAgICAgICAgIHNvdXJjZTogZnVuY3Rpb24gKHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZiY29sbGVjdGlvbiA9IGNvbGxlY3Rpb24gfHwgXCJtYWluLWFsbFwiO1xuICAgICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICAgIHVybDogXCIvYXBpL3N1Z2dlc3QuanNvbj9jb2xsZWN0aW9uPVwiICsgZmJjb2xsZWN0aW9uICsgXCImZm10PWpzb25cIixcbiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJ0aWFsX3F1ZXJ5OiByZXF1ZXN0LnRlcm1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBhcnJheUR1cGxpY2F0ZVphcHBlcihkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlKCQubWFwKGRhdGEsIGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7IC8vZW5kICQuYWpheFxuXG4gICAgICAgICAgICB9LCAvL2VuZCBzb3VyY2UgZnVuY3Rpb25cblxuICAgICAgICAgICAgbWluTGVuZ3RoOiAyLFxuICAgICAgICAgICAgZGVsYXk6IDIwLFxuXG4gICAgICAgICAgICAvL3doZW4geW91IGhhdmUgc2VsZWN0ZWQgc29tZXRoaW5nXG4gICAgICAgICAgICBcInNlbGVjdFwiOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgLy9jbG9zZSB0aGUgZHJvcCBkb3duXG4gICAgICAgICAgICAgICAgLy9uZWVkIHRvIGNyZWF0ZSBhIGR1bW15IGFzc2lnbm1lbnQsIHRvIHBsZWFzZSBqc2xpbnRcbiAgICAgICAgICAgICAgICAvL2Nsb3NlIGlzIHN0aWxsIHBlcmZvcm1lZFxuICAgICAgICAgICAgICAgIHZhciBjID0gdGhpcy5jbG9zZTtcbiAgICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBvbiBjbGljayB0aGUgc2VsZWN0ZWQgdmFsdWUgcmVwbGFjZXMgdGhlIHR5cGUgdmFsdWVcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnZhbCh1aS5pdGVtLnZhbHVlKTtcbiAgICAgICAgICAgICAgICBmb3JtLnN1Ym1pdCgpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLy9zaG93IHRoZSBkcm9wIGRvd25cbiAgICAgICAgICAgIG9wZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLWFsbFwiKS5hZGRDbGFzcyhcInVpLWNvcm5lci10b3BcIik7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvL2Nsb3NlIHRoZSBkcm9wIGRvd25cbiAgICAgICAgICAgIGNsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLWNvcm5lci10b3BcIikuYWRkQ2xhc3MoXCJ1aS1jb3JuZXItYWxsXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3Mvc2VhcmNoLWF1dG9jb21wbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcblxuICAgICAgICBzY3JlZW5XaWR0aCA9IC0xLFxuICAgICAgICBpbk1kID0gdHJ1ZSxcbiAgICAgICAgc2xpZGVyID0gbnVsbCxcbiAgICAgICAgJHcgPSAkKHdpbmRvdyksXG5cbiAgICAgICAgdXBkYXRlTmV3c1NsaWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciAkaG9tZU5ld3MgPSAkKCcubmV3cy1ldmVudHMtc3RyaXBfX25ld3MnKSxcbiAgICAgICAgICAgICAgICB3aWR0aCA9IE1hdGgucm91bmQoJHcud2lkdGgoKSk7XG5cbiAgICAgICAgICAgIGlmICh3aWR0aCAhPT0gc2NyZWVuV2lkdGgpIHtcbiAgICAgICAgICAgICAgICBzY3JlZW5XaWR0aCA9IHdpZHRoO1xuXG4gICAgICAgICAgICAgICAgdmFyIG5ld0luTWQgPSBzY3JlZW5XaWR0aCA+PSA4NTA7XG4gICAgICAgICAgICAgICAgaWYgKG5ld0luTWQgIT09IGluTWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5NZCA9IG5ld0luTWQ7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGluTWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlci5kZXN0cm95U2xpZGVyKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkaG9tZU5ld3MuYWRkQ2xhc3MoJ3JvdycpLmF0dHIoJ3N0eWxlJywgJycpLmNoaWxkcmVuKCkuYWRkQ2xhc3MoJ2NvbC14cy0yNCBjb2wtbWQtOCcpLmNzcygnd2lkdGgnLCAnJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNsaWRlciA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXIgPSAkaG9tZU5ld3MucmVtb3ZlQ2xhc3MoJ3JvdycpLmNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoJ2NvbC14cy0yNCBjb2wtbWQtOCcpLmVuZCgpLmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVYOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVZOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2VGV4dDogJzxpIGNsYXNzPVwiYmcgZmEgZmEtY2lyY2xlXCI+PC9pPjxpIGNsYXNzPVwiaWMgZmEgZmEtY2hldnJvbi1sZWZ0XCI+PC9pPicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dFRleHQ6ICc8aSBjbGFzcz1cImJnIGZhIGZhLWNpcmNsZVwiPjwvaT48aSBjbGFzcz1cImljIGZhIGZhLWNoZXZyb24tcmlnaHRcIj48L2k+J1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAkdy5yZXNpemUodXBkYXRlTmV3c1NsaWRlcik7XG4gICAgICAgIHVwZGF0ZU5ld3NTbGlkZXIoKTtcbiAgICB9O1xufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LW5ld3MtZXZlbnRzLXN0cmlwLmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkbWVudVdyYXBwZXIgPSAkKFwiLnByaW1hcnktbWVudS13cmFwcGVyXCIpLFxuICAgICAgICAkbWVudVRvZ2dsZSAgPSAkKFwiLnByaW1hcnktbWVudS10b2dnbGVcIiksXG4gICAgICAgICRtZW51ICAgICAgICA9ICQoXCIucHJpbWFyeS1tZW51XCIpLFxuXG4gICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsgPSBmdW5jdGlvbiAodG9nZ2xlLCBpc09wZW4pIHtcbiAgICAgICAgICAgIHRvZ2dsZS50b2dnbGVDbGFzcyhcInByaW1hcnktbWVudV9faXRlbS10b2dnbGUtLW9wZW5cIiwgaXNPcGVuKTtcbiAgICAgICAgICAgIHRvZ2dsZS5hdHRyKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuID8gJ3RydWUnIDogJ2ZhbHNlJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgYnVpbGRNZW51ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJG1lbnUuZmluZChcImxpOmhhcyh1bClcIilcbiAgICAgICAgICAgICAgICAgLmFkZENsYXNzKFwicHJpbWFyeS1tZW51X19pdGVtLS1icmFuY2hcIilcbiAgICAgICAgICAgICAgICAgLmNoaWxkcmVuKFwiLnByaW1hcnktbWVudV9faXRlbS1pbnRlcmlvclwiKVxuICAgICAgICAgICAgICAgICAuZWFjaChmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgJGFyaWFMYWJlbCA9IFwic2hvdyBvciBoaWRlIGl0ZW1zIHVuZGVyIFwiICsgJCh0aGlzKS5maW5kKFwiLnByaW1hcnktbWVudV9faXRlbS10ZXh0XCIpLnRleHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXBwZW5kKFwiPGEgY2xhc3M9J3ByaW1hcnktbWVudV9faXRlbS10b2dnbGUnIGhyZWY9JyMnIGFyaWEtbGFiZWw9J1wiICsgJGFyaWFMYWJlbCArIFwiJz48L2E+XCIpO1xuICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJG1lbnVUb2dnbGUuYXR0cihcImFyaWEtbGFiZWxcIiwgJG1lbnVUb2dnbGUuZmluZChcIi5wcmltYXJ5LW1lbnUtdG9nZ2xlX19zZWN0aW9uLW5hbWVcIikudGV4dCgpICsgXCIgbWVudVwiKTtcbiAgICAgICAgfSxcblxuICAgICAgICBoaWdobGlnaHRDdXJyZW50UGFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBwYXRobmFtZSA9ICh3aW5kb3cubG9jYXRpb24uaHJlZikucmVwbGFjZShcIi9fbm9jYWNoZVwiLCBcIlwiKS5yZXBsYWNlKFwiL19yZWNhY2hlXCIsIFwiXCIpO1xuICAgICAgICAgICAgJChcIi5wcmltYXJ5LW1lbnUgLnByaW1hcnktbWVudV9faXRlbS1saW5rW2hyZWYkPSdcIiArIHBhdGhuYW1lICArIFwiJ11cIikuYWRkQ2xhc3MoXCJwcmltYXJ5LW1lbnVfX2l0ZW0tbGluay0tc2VsZWN0ZWRcIik7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb3BlbkN1cnJlbnRTdWJtZW51cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRtZW51LmZpbmQoXCIucHJpbWFyeS1tZW51X19zdWJtZW51XCIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKFwiLnByaW1hcnktbWVudV9faXRlbS1saW5rLS1zZWxlY3RlZFwiKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVUb2dnbGVMaW5rKCQodGhpcykucHJldigpLmNoaWxkcmVuKFwiLnByaW1hcnktbWVudV9faXRlbS10b2dnbGVcIiksIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsoJCh0aGlzKS5wcmV2KCkuY2hpbGRyZW4oXCIucHJpbWFyeS1tZW51X19pdGVtLXRvZ2dsZVwiKSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIG9wZW5TdWJtZW51ID0gZnVuY3Rpb24gKCR0b2dnbGUpIHtcbiAgICAgICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsoJHRvZ2dsZSwgdHJ1ZSk7XG4gICAgICAgICAgICAkdG9nZ2xlLnBhcmVudChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0taW50ZXJpb3JcIikubmV4dCgpLnNsaWRlRG93bihcImZhc3RcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgY2xvc2VTYW1lTGV2ZWxTdWJtZW51cygkdG9nZ2xlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNsb3NlU2FtZUxldmVsU3VibWVudXMgPSBmdW5jdGlvbiAoJHRvZ2dsZSkge1xuICAgICAgICAgICAgdmFyICRzaWJsaW5nQnJhbmNoZXMgPSAkdG9nZ2xlLmNsb3Nlc3QoXCIucHJpbWFyeS1tZW51X19pdGVtLS1icmFuY2hcIikuc2libGluZ3MoXCIucHJpbWFyeS1tZW51X19pdGVtLS1icmFuY2hcIik7XG5cbiAgICAgICAgICAgICQuZWFjaCgkc2libGluZ0JyYW5jaGVzLCBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmZpbmQoXCIucHJpbWFyeS1tZW51X19pdGVtLWxpbmstLXNlbGVjdGVkXCIpLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsoJCh0aGlzKS5maW5kKFwiLnByaW1hcnktbWVudV9faXRlbS10b2dnbGVcIiksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKFwiLnByaW1hcnktbWVudV9fc3VibWVudVwiKS5zbGlkZVVwKFwibWVkaXVtXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNsb3NlU3VibWVudSA9IGZ1bmN0aW9uICgkdG9nZ2xlKSB7XG4gICAgICAgICAgICB2YXIgJGVuY2xvc2luZ01lbnVJdGVtID0gJHRvZ2dsZS5jbG9zZXN0KFwiLnByaW1hcnktbWVudV9faXRlbS0tYnJhbmNoXCIpO1xuXG4gICAgICAgICAgICBpZiAoJGVuY2xvc2luZ01lbnVJdGVtLmZpbmQoXCIucHJpbWFyeS1tZW51X19pdGVtLWxpbmstLXNlbGVjdGVkXCIpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVUb2dnbGVMaW5rKCR0b2dnbGUsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAkdG9nZ2xlLnBhcmVudChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0taW50ZXJpb3JcIikubmV4dCgpLnNsaWRlVXAoXCJmYXN0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlVG9nZ2xlTGluaygkZW5jbG9zaW5nTWVudUl0ZW0uZmluZChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tdG9nZ2xlXCIpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgJGVuY2xvc2luZ01lbnVJdGVtLmZpbmQoXCIucHJpbWFyeS1tZW51X19zdWJtZW51XCIpLnNsaWRlVXAoXCJmYXN0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRNZW51ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgYnVpbGRNZW51KCk7XG4gICAgICAgICAgICBoaWdobGlnaHRDdXJyZW50UGFnZSgpO1xuXG4gICAgICAgICAgICAkbWVudVRvZ2dsZS5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKCRtZW51LmlzKFwiOmhpZGRlblwiKSkge1xuICAgICAgICAgICAgICAgICAgICBvcGVuQ3VycmVudFN1Ym1lbnVzKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIHNldE9wZW4gPSAhJG1lbnVUb2dnbGUuaGFzQ2xhc3MoXCJwcmltYXJ5LW1lbnUtdG9nZ2xlLS1vcGVuXCIpO1xuXG4gICAgICAgICAgICAgICAgJG1lbnVUb2dnbGUudG9nZ2xlQ2xhc3MoXCJwcmltYXJ5LW1lbnUtdG9nZ2xlLS1vcGVuXCIsIHNldE9wZW4pO1xuICAgICAgICAgICAgICAgICRtZW51VG9nZ2xlLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBzZXRPcGVuID8gJ3RydWUnIDogJ2ZhbHNlJyk7XG5cbiAgICAgICAgICAgICAgICAkbWVudS5zbGlkZVRvZ2dsZShcImZhc3RcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQoXCIucHJpbWFyeS1tZW51X19pdGVtLXRvZ2dsZVwiKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcyhcInByaW1hcnktbWVudV9faXRlbS10b2dnbGUtLW9wZW5cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VTdWJtZW51KCQodGhpcykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb3BlblN1Ym1lbnUoJCh0aGlzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGluaXRNZW51KCk7XG59O1xuXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2hlYWRlci1wcmltYXJ5LW5hdi5qc1xuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXJcbiAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIgPSAkKFwiLmdsb2JhbC1uYXZfX3RvZ2dsZVwiKSxcbiAgICAgICAgJGhlYWRlclNlYXJjaCA9ICQoXCIuaGVhZGVyX19zZWFyY2hcIiksXG4gICAgICAgICRoZWFkZXJTZWFyY2hUb2dnbGVyID0gJChcIi5oZWFkZXJfX3NlYXJjaF9fdG9nZ2xlXCIpLFxuICAgICAgICAkZ2xvYmFsTmF2V3JhcHBlciA9ICQoXCIuZ2xvYmFsLW5hdl9fd3JhcHBlclwiKSxcbiAgICAgICAgJGdsb2JhbE5hdkRyb3BUb2dnbGVyID0gJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX3RvZ2dsZVwiKSxcbiAgICAgICAgJHV0aWxOYXYgPSAkKFwiLmhlYWRlcl9fdXRpbF9fYXVkaWVuY2VfX2J1dHRvbi1saW5rXCIpLFxuICAgICAgICAkYm9keSA9ICQoJ2JvZHknKSxcbiAgICAgICAgJGNvbXBhY3RXaWR0aCA9IDc0OCxcbiAgICAgICAgJHN0aWNreUhlYWRlclNjcm9sbFRocmVzaG9sZCA9IDcwLFxuICAgICAgICAkbGFzdFNjcm9sbFRvcCA9IDAsXG4gICAgICAgICR3aW5kb3cgPSAkKHdpbmRvdyksXG5cblxuICAgICAgICBjbG9zZU1lbnVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJChcIi5oZWFkZXJfX3V0aWxfX2l0ZW0tLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlXCIpO1xuICAgICAgICAgICAgJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlXCIpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdkRyb3BUb2dnbGVyLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgICAgICAgICAgICR1dGlsTmF2LmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgICAgICAgfSxcblxuICAgICAgICB0b2dnbGVNb2JpbGVHbG9iYWxNZW51ID0gZnVuY3Rpb24gKG9wZW5NZW51KSB7XG4gICAgICAgICAgICB2YXIgb3BlblNlYXJjaCA9IG9wZW5NZW51ID09PSAnc2VhcmNoJyAmJiAhJGhlYWRlclNlYXJjaC5oYXNDbGFzcyhcImhlYWRlcl9fc2VhcmNoLS1hY3RpdmVcIik7XG4gICAgICAgICAgICB2YXIgb3Blbk5hdiA9IG9wZW5NZW51ID09PSAnbmF2JyAmJiAhJGdsb2JhbE5hdldyYXBwZXIuaGFzQ2xhc3MoXCJnbG9iYWwtbmF2X193cmFwcGVyLS1hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICRnbG9iYWxOYXZXcmFwcGVyLnRvZ2dsZUNsYXNzKFwiZ2xvYmFsLW5hdl9fd3JhcHBlci0tYWN0aXZlXCIsIG9wZW5OYXYpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIuYXR0cignYXJpYS1leHBhbmRlZCcsIG9wZW5OYXYgPyAndHJ1ZScgOiAnZmFsc2UnKTtcblxuICAgICAgICAgICAgJGhlYWRlclNlYXJjaC50b2dnbGVDbGFzcyhcImhlYWRlcl9fc2VhcmNoLS1hY3RpdmVcIiwgb3BlblNlYXJjaCk7XG4gICAgICAgICAgICAkaGVhZGVyU2VhcmNoVG9nZ2xlci5hdHRyKCdhcmlhLWV4cGFuZGVkJywgb3BlblNlYXJjaCA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRTa2lwTGlua3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCcjc2tpcC10by1xdWVyeScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTW9iaWxlR2xvYmFsTWVudSgnc2VhcmNoJyk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNxdWVyeScpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfSwgMjUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkKCcjc2tpcC10by1hY2Nlc3NpYmlsaXR5JykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKCcjYWNjZXNzaWJpbGl0eScpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfSwgMjUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cblxuICAgICAgICB1cGRhdGVUYWJOYXZpZ2F0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCR3aW5kb3cud2lkdGgoKSA+ICRjb21wYWN0V2lkdGgpIHtcbiAgICAgICAgICAgICAgICAkKFwiLmdsb2JhbC1uYXZfX21lbnUtaXRlbV9fbGlua1wiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5zaWJsaW5ncyhcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX3RvZ2dsZVwiKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cihcInRhYmluZGV4XCIsIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX2xpbmtcIikucmVtb3ZlQXR0cihcInRhYmluZGV4XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHVwZGF0ZVNjcm9sbERvd24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJG5ld1Njcm9sbFRvcCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XG4gICAgICAgICAgICAkYm9keS50b2dnbGVDbGFzcygnc2Nyb2xsLWRvd24nLCAoJG5ld1Njcm9sbFRvcCA+ICRzdGlja3lIZWFkZXJTY3JvbGxUaHJlc2hvbGQpICYmICgkbmV3U2Nyb2xsVG9wIDwgJGxhc3RTY3JvbGxUb3ApKTtcbiAgICAgICAgICAgICRsYXN0U2Nyb2xsVG9wID0gJG5ld1Njcm9sbFRvcDtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICBpbml0U2tpcExpbmtzKCk7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVXBkYXRlIGNsYXNzbmFtZSBkZXBlbmRpbmcgb24gc2Nyb2xsIHBvc2l0aW9uXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICR3aW5kb3cuc2Nyb2xsKHVwZGF0ZVNjcm9sbERvd24pO1xuICAgICAgICAgICAgdXBkYXRlU2Nyb2xsRG93bigpO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFdpdGggSlMgZW5hYmxlZCwgbGlua3MgZ29pbmcgdG8gb3RoZXIgcGFnZXMgc2hvdWxkIG5vdCBiZSByZWFjaGFibGUgdGhyb3VnaCB0aGUgdGFiIGtleSxcbiAgICAgICAgICAgICAqIGFzIG9wcG9zZWQgdG8gdG9nZ2xlIGxpbmtzIC0gZXhjZXB0IHdoZW4gbWVudSBpcyBpbiBjb21wYWN0IHZpZXcuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKHVwZGF0ZVRhYk5hdmlnYXRpb24pO1xuICAgICAgICAgICAgdXBkYXRlVGFiTmF2aWdhdGlvbigpO1xuXG4gICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG5cbiAgICAgICAgICAgICR1dGlsTmF2Lm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXJcbiAgICAgICAgICAgICAgICAgICAgdGhhdCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudCA9IHRoYXQucGFyZW50KFwibGlcIiksXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldElzQWN0aXZlID0gcGFyZW50Lmhhc0NsYXNzKFwiaGVhZGVyX191dGlsX19pdGVtLS1hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG4gICAgICAgICAgICAgICAgaWYgKCF0YXJnZXRJc0FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQuYWRkQ2xhc3MoXCJoZWFkZXJfX3V0aWxfX2l0ZW0tLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkYm9keS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY2xvc2VNZW51cygpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogTm90IHBlcmZlY3QgYXMgaXQgcmVsaWVzIG9uIGtleXVwIGluc3RlYWQgb2Yga2V5ZG93blxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICAkYm9keS5rZXl1cChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlLmtleUNvZGUgPT09IDkgJiZcbiAgICAgICAgICAgICAgICAgICAgJCgnLmhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlLC5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZScpLmxlbmd0aCA+IDAgJiYgISQoZS50YXJnZXQpLmlzKCcuaGVhZGVyX191dGlsX19pdGVtLS1hY3RpdmUsLmhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlICosIC5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZSwgLmdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlIConKSkge1xuICAgICAgICAgICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICRnbG9iYWxOYXZEcm9wVG9nZ2xlci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyXG4gICAgICAgICAgICAgICAgICAgIHRoYXQgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSB0aGF0LnBhcmVudHMoXCIuZ2xvYmFsLW5hdl9fbWVudS1pdGVtXCIpLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRJc0FjdGl2ZSA9IHBhcmVudC5oYXNDbGFzcyhcImdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlXCIpO1xuXG4gICAgICAgICAgICAgICAgY2xvc2VNZW51cygpO1xuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0SXNBY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50LmFkZENsYXNzKFwiZ2xvYmFsLW5hdl9fbWVudS1pdGVtLS1hY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuYXR0cignYXJpYS1leHBhbmRlZCcsICd0cnVlJyk7XG4gICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdG9nZ2xlTW9iaWxlR2xvYmFsTWVudSgnbm9uZScpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB0b2dnbGVNb2JpbGVHbG9iYWxNZW51KCduYXYnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkaGVhZGVyU2VhcmNoVG9nZ2xlci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHRvZ2dsZU1vYmlsZUdsb2JhbE1lbnUoJ3NlYXJjaCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gaW5pdCgpO1xufTtcblxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9oZWFkZXItbmF2cy5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICBpbml0ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICQoXCIubGluay0tZ290b1wiKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJ2h0bWwsYm9keScpLnNjcm9sbFRvcCgwKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJldHVybiBpbml0KCk7XG59O1xuXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2Zvb3Rlci5qc1xuLy8gbW9kdWxlIGlkID0gMzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBJbml0IHNlZSBwb3B1cFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYW5jaG9ycyA9ICQoXCJhW2RhdGEtcG9wdXAtZGlhbG9nXVwiKTtcblxuICAgICAgICBhbmNob3JzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFuY2hvciA9ICQodGhpcyk7XG5cbiAgICAgICAgICAgIGFuY2hvci5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgdmFyIGxpbmsgPSAkKGUuY3VycmVudFRhcmdldCkuYXR0cignaHJlZicpO1xuXG4gICAgICAgICAgICAkKCcjJythbmNob3IuYXR0cignZGF0YS1wb3B1cC1kaWFsb2cnKSkuZGlhbG9nKHtcbiAgICAgICAgICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0aXRsZTogYW5jaG9yLmF0dHIoJ3RpdGxlJyksXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwMCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwMCxcbiAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHJlc2l6YWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIkNhbmNlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoIHRoaXMgKS5kaWFsb2coIFwiY2xvc2VcIiApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBcIkFjY2VwdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGxpbms7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggdGhpcyApLmRpYWxvZyggXCJjbG9zZVwiICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9wb3B1cC1kaWFsb2cuanNcbi8vIG1vZHVsZSBpZCA9IDM5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiLnJlc3BvbnNpdmUtdGFibGVcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciB0aGV0YWJsZSA9ICQodGhpcyk7XG4gICAgICAgICAgICB0aGV0YWJsZS5maW5kKFwidGJvZHkgdGRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJkYXRhLXRoXCIsIHRoZXRhYmxlLmZpbmQoXCJ0aGVhZCB0aDpudGgtY2hpbGQoXCIrKCQodGhpcykuaW5kZXgoKSsxKStcIilcIikudGV4dCgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9yZXNwb25zaXZlLXRhYmxlcy5qc1xuLy8gbW9kdWxlIGlkID0gNDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKTtcblxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgJCgnLmN5Y2xpYy1wb3B1cC1pdGVtX190aXRsZScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGNsaWNrZWRJdGVtTGluayA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgY2xpY2tlZEl0ZW0gICAgID0gJCh0aGlzKS5jbG9zZXN0KCcuY3ljbGljLXBvcHVwLWl0ZW0nKTtcbiAgICAgICAgICAgIHZhciBwb3B1cEdyb3VwICAgICAgPSBjbGlja2VkSXRlbUxpbmsuY2xvc2VzdChcIi5jeWNsaWMtcG9wdXAtZ3JvdXBcIik7XG4gICAgICAgICAgICB2YXIgYWxsUG9wdXBJdGVtcyAgID0gcG9wdXBHcm91cC5jaGlsZHJlbignLmN5Y2xpYy1wb3B1cC1pdGVtJyk7XG4gICAgICAgICAgICB2YXIgY3VycmVudEluZGV4ICAgID0gMDtcbiAgICAgICAgICAgIHZhciBub09mUG9wdXBJdGVtcyAgPSBhbGxQb3B1cEl0ZW1zLmxlbmd0aDtcblxuICAgICAgICAgICAgYWxsUG9wdXBJdGVtcy5lYWNoKGZ1bmN0aW9uKGluZGV4LCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmdldCgwKSA9PT0gY2xpY2tlZEl0ZW0uZ2V0KDApKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRXaWR0aCgpIHtcbiAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSAkKHdpbmRvdykud2lkdGgoKSAqIDAuOTtcblxuICAgICAgICAgICAgICAgIGlmICh3aWR0aCA+IDUwMCkge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aCA9IDUwMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdpZHRoO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXROZXh0SXRlbShyZXZlcnNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJldmVyc2UgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJbmRleCA9PSBub09mUG9wdXBJdGVtcyAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJbmRleCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggPSBub09mUG9wdXBJdGVtcyAtIDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXgtLTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBuZXh0SXRlbSA9IGFsbFBvcHVwSXRlbXMuZ2V0KGN1cnJlbnRJbmRleCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHRJdGVtO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBzZXREaWFsb2dCdXR0b25zKCkge1xuICAgICAgICAgICAgICAgIGlmIChub09mUG9wdXBJdGVtcyA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJ1dHRvbnNUb1NldCA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnUFJFVklPVVMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5odG1sKCQoZ2V0TmV4dEl0ZW0odHJ1ZSkpLmZpbmQoJy5jeWNsaWMtcG9wdXAtaXRlbV9fZGV0YWlsJykuaHRtbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICdORVhUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuaHRtbCgkKGdldE5leHRJdGVtKGZhbHNlKSkuZmluZCgnLmN5Y2xpYy1wb3B1cC1pdGVtX19kZXRhaWwnKS5odG1sKCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXTtcblxuICAgICAgICAgICAgICAgICAgICAkKCcudWktZGlhbG9nLWNvbnRlbnQnKS5kaWFsb2coJ29wdGlvbicsICdidXR0b25zJywgYnV0dG9uc1RvU2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICQoJzxkaXY+PC9kaXY+JykuZGlhbG9nKHtcbiAgICAgICAgICAgICAgICBtb2RhbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHJlc2l6YWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgd2lkdGg6IGdldFdpZHRoKCksXG5cbiAgICAgICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuZGlhbG9nKCdkZXN0cm95JylcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgY3JlYXRlOmZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy51aS1kaWFsb2cnKS5hZGRDbGFzcygnY3ljbGljLXBvcHVwJyk7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuaHRtbChjbGlja2VkSXRlbS5maW5kKCcuY3ljbGljLXBvcHVwLWl0ZW1fX2RldGFpbCcpLmh0bWwoKSk7XG4gICAgICAgICAgICAgICAgICAgIHNldERpYWxvZ0J1dHRvbnMoKTtcbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgb3BlbjpmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub09mUG9wdXBJdGVtcyA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuZmluZCgnYnV0dG9uOm50aC1jaGlsZCgyKScpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmZpbmQoJy51aS1kaWFsb2ctdGl0bGViYXItY2xvc2UnKS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCgnLnVpLWRpYWxvZy1jb250ZW50JykuZGlhbG9nKCdvcHRpb24nLCAncG9zaXRpb24nLCAnY2VudGVyJyk7XG4gICAgICAgICAgICAgICAgJCgnLnVpLWRpYWxvZy1jb250ZW50JykuZGlhbG9nKCdvcHRpb24nLCAnd2lkdGgnLCBnZXRXaWR0aCgpKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkKCcudWktd2lkZ2V0LW92ZXJsYXknKS5jbGljayhmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICQoJ2Rpdjp1aS1kaWFsb2c6dmlzaWJsZScpLmRpYWxvZygnY2xvc2UnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH07XG59KCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2N5Y2xpYy1wb3B1cC5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYm9keUVsZW1lbnQpIHtcblxuXG4vKipcbiAqIEFkZHMgYSBGb250QXdlc29tZSBpY29uIChvciBhbnkgb3RoZXIgY2xhc3NlcykgYXMgYSA8c3Bhbj4gZWxlbWVudCB0byB0aGUgc3BlY2lmaWVkIERPTSBlbGVtZW50LlxuICogVGhlIGljb24gY2FuIGJlIGFwcGVuZGVkIHRvIHRoZSBlbmQgb3IgcHJlcGVuZGVkIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGVsZW1lbnQgYmFzZWQgb24gdGhlIGFwcGVuZCBmbGFnLlxuICpcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnQgLSBUaGUgRE9NIGVsZW1lbnQgdG8gd2hpY2ggdGhlIGljb24gd2lsbCBiZSBhZGRlZC4gSXQgbXVzdCBiZSBhIHZhbGlkIEhUTUxFbGVtZW50LlxuICogQHBhcmFtIHtzdHJpbmd8c3RyaW5nW119IGNsYXNzZXMgLSBBIHN0cmluZyBvciBhbiBhcnJheSBvZiBzdHJpbmdzIHJlcHJlc2VudGluZyB0aGUgY2xhc3MoZXMpIHRvIGJlIGFkZGVkIHRvIHRoZSBpY29uJ3MgPHNwYW4+IGVsZW1lbnQuIElmIGEgc2luZ2xlIGNsYXNzIGlzIHBhc3NlZCwgaXQgd2lsbCBiZSBhZGRlZCBkaXJlY3RseS4gSWYgYW4gYXJyYXkgaXMgcGFzc2VkLCBhbGwgY2xhc3NlcyB3aWxsIGJlIGFkZGVkLlxuICogQHBhcmFtIHtib29sZWFufSBbYXBwZW5kPWZhbHNlXSAtIEEgYm9vbGVhbiBmbGFnIGluZGljYXRpbmcgd2hldGhlciB0aGUgaWNvbiBzaG91bGQgYmUgYXBwZW5kZWQgb3IgcHJlcGVuZGVkLlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIElmIHRydWUsIHRoZSBpY29uIHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhlIGVuZCBvZiB0aGUgZWxlbWVudC4gXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSWYgZmFsc2Ugb3Igbm90IHByb3ZpZGVkLCB0aGUgaWNvbiB3aWxsIGJlIHByZXBlbmRlZCB0byB0aGUgYmVnaW5uaW5nLlxuICpcbiAqIFVzYWdlOlxuICogYWRkSWNvbihlbGVtZW50LCAnZmEta2l0JywgdHJ1ZSk7ICAgICAgIC8vIEFwcGVuZHMgYSBzaW5nbGUgY2xhc3MgaWNvblxuICogYWRkSWNvbihlbGVtZW50LCBbJ2ZhLWtpdCcsICdmYS1zaGFyZSddLCBmYWxzZSk7IC8vIFByZXBlbmRzIG11bHRpcGxlIGNsYXNzZXNcbiAqL1xuICAgIGZ1bmN0aW9uIGFkZEljb24oZWxlbWVudCwgY2xhc3NlcywgYXBwZW5kID0gZmFsc2UpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQgJiYgY2xhc3Nlcykge1xuICAgICAgICAgICAgLy8gQ3JlYXRlIHNwYW4gZm9yIEZBIGljb25cbiAgICAgICAgICAgIGNvbnN0IHNwYW5Ob2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDaGVjayBpZiAnY2xhc3NlcycgaXMgYSBzdHJpbmcgKHNpbmdsZSBjbGFzcykgb3IgYW4gYXJyYXkgKG11bHRpcGxlIGNsYXNzZXMpXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNsYXNzZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgc3Bhbk5vZGUuY2xhc3NMaXN0LmFkZChjbGFzc2VzKTsgIC8vIEFkZCB0aGUgc2luZ2xlIGNsYXNzXG4gICAgICAgICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2xhc3NlcykpIHtcbiAgICAgICAgICAgICAgICBjbGFzc2VzLmZvckVhY2goY2xzID0+IHNwYW5Ob2RlLmNsYXNzTGlzdC5hZGQoY2xzKSk7ICAvLyBBZGQgbXVsdGlwbGUgY2xhc3Nlc1xuICAgICAgICAgICAgfVxuICAgXG4gICAgICAgICAgICAvLyBBcHBlbmQgb3IgcHJlcGVuZCB0aGUgaWNvbiBiYXNlZCBvbiB0aGUgYHBvc2AgcGFyYW1ldGVyXG4gICAgICAgICAgICBpZiAoYXBwZW5kKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5hcHBlbmQoJyAnLHNwYW5Ob2RlKTsgLy8gQWRkcyBpY29uIHRvIHRoZSBiZWdpbm5pbmdcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5wcmVwZW5kKHNwYW5Ob2RlKTsgIC8vIEFkZHMgaWNvbiB0byB0aGUgZW5kXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbi8qKlxuICogQ2hlY2tzIGlmIHByb3ZpZGVkIGVsZW1lbnQgaXMgYSBzaGFyZXBvaW50IGxpbmsgYW5kIGlmIHNvIGFkZHMgdGhlIGZhLXNoYXJlcG9pbnQgaWNvbi5cbiAqXG4qL1xuICAgIGZ1bmN0aW9uIGZpbmRTaGFyZXBvaW50TGluayhhbmNob3IpIHtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChhbmNob3IuaHJlZik7XG4gICAgICAgIGNvbnN0IGV4Y2x1ZGVkRXh0ZW5zaW9ucyA9IFsnLnBkZicsICcuZG9jeCcsICcueGxzeCcsICcucHB0eCcsICcueGxzJywgJy5kb2MnXTsgXG4gICAgICAgIGNvbnN0IHBhdGhuYW1lID0gdXJsLnBhdGhuYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIFVSTCBob3N0bmFtZSBlbmRzIHdpdGggc2hhcmVwb2ludC5jb20gYW5kIGRvZXMgbm90IGhhdmUgYW4gZXhjbHVkZWQgZXh0ZW5zaW9uXG4gICAgICAgIGNvbnN0IGhhc0V4Y2x1ZGVkRXh0ZW5zaW9uID0gZXhjbHVkZWRFeHRlbnNpb25zLnNvbWUoZXh0ID0+IHBhdGhuYW1lLmVuZHNXaXRoKGV4dCkpO1xuXG4gICAgICAgIGlmICh1cmwuaG9zdG5hbWUuZW5kc1dpdGgoJ3NoYXJlcG9pbnQuY29tJykgJiYgIWhhc0V4Y2x1ZGVkRXh0ZW5zaW9uKSB7XG4gICAgICAgICAgICBjb25zdCBmaXJzdENoaWxkID0gYW5jaG9yLmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICBpZiAoZmlyc3RDaGlsZCAmJiBmaXJzdENoaWxkLm5vZGVUeXBlID09PSAzKSB7XG4gICAgICAgICAgICAgICAgLy8gT25seSBhZGQgdGhlIGljb24gaWYgdGhlIGZpcnN0IGNoaWxkIG9mIGFuY2hvciBpcyBhIHRleHQgbm9kZSwgYXZvaWRpbmcgZHVwbGljYXRlIGljb25zXG4gICAgICAgICAgICAgICAgYWRkSWNvbihhbmNob3IsIFsnZmEta2l0JywgJ2ZhLXNoYXJlcG9pbnQnXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG4gICAgLyoqXG4gICAgICogTG9vcCBvdmVyIGV2ZXJ5IGxpbmsgYW5kIGFwcGx5IG5lc3Nlc3NhcnkgY2xhc3Nlc1xuICAgICAqXG4gICAgICovXG4gICAgZnVuY3Rpb24gZmluZExpbmtzKCkge1xuICAgICAgICBjb25zdCBhbmNob3JzID0gYm9keUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYScpO1xuXG4gICAgICAgIGFuY2hvcnMuZm9yRWFjaChmdW5jdGlvbiAoYW5jaG9yKSB7XG4gICAgICAgICAgICBmaW5kU2hhcmVwb2ludExpbmsoYW5jaG9yKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZmluZExpbmtzKCk7XG5cbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL2xpbmstZmluZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCIvKlxuICogVGhpcyBpcyBjdXN0b20gSmF2YXNjcmlwdCB0byBvdmVycmlkZSB1bndhbnRlZCB0ZXh0IC8gY2hhcmFjdGVycyBwcmludGVkIGJ5IFJlYWN0IG9uIHRoZSBmb2xsb3dpbmcgVVJMXG4gKiBodHRwczovL3Jlc2VhcmNoY2VudHJlcy5jaXR5LmFjLnVrL3NvZnR3YXJlLXJlbGlhYmlsaXR5L3B1YmxpY2F0aW9ucy9fbm9jYWNoZVxuICogQSBSZWFjdCBzb2x1dGlvbiB3YXNuJ3QgZm91bmQgdG8gc3RvcCB0aGUgdGV4dCBiZWluZyBwcmludGVkLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIC8vY2hlY2tzIGlmIElEIGV4aXN0czogcHVibGljYXRpb25zLXNlYXJjaC1yZWFjdFxuICAgICAgICBpZigkKCcjcHVibGljYXRpb25zLXNlYXJjaC1yZWFjdCcpLmxlbmd0aCl7XG4gICAgICAgICAgICB2YXIgc3RyaW5nID0nXCJ9LFwic3RhdGljRGF0YVwiOmZhbHNlLFwiZml4ZWRQcm9wZXJ0aWVzXCI6e1wiZGl2aXNpb25zXCI6XCJJSUNTV1JcIn19JztcbiAgICAgICAgICAgICQoJyNjb250ZW50JykuaHRtbCgkKCcjY29udGVudCcpLmh0bWwoKS5yZXBsYWNlKHN0cmluZywnJykpO1xuICAgICAgICB9XG4gICAgfTtcbn0pKCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9tYWluL2Z1bmNzL3Jlc2VhcmNoLXB1YmxpY2F0aW9ucy5qc1xuLy8gbW9kdWxlIGlkID0gNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgeyBhcmlhIH0gPSByZXF1aXJlKCcuLi9hcmlhLWF0dHJpYnV0ZXMnKTtcbiAgICBjb25zdCB7IGFwcGVuZEFsbCwgdG9Cb29sLCB2ZXJ0aWNhbGx5SW5XaW5kb3cgfSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3V0aWxzJyk7XG5cbiAgICBjb25zdCBjbGFzc05hbWUgPSAnYWNjb3JkaW9uJyxcbiAgICAgICAgaGVhZGluZ0NsYXNzTmFtZSA9IGNsYXNzTmFtZSArICdfX2hlYWRpbmcnLFxuICAgICAgICBoZWFkaW5nVGV4dENsYXNzTmFtZSA9IGhlYWRpbmdDbGFzc05hbWUgKyAnX190ZXh0JyxcbiAgICAgICAgaGVhZGluZ0ljb25DbGFzc05hbWUgPSBoZWFkaW5nQ2xhc3NOYW1lICsgJ19faW5kaWNhdG9yJyxcbiAgICAgICAgYm9keUNsYXNzTmFtZSA9IGNsYXNzTmFtZSArICdfX2JvZHknLFxuICAgICAgICBvbmVTZWNvbmQgPSAxMDAwLFxuICAgICAgICB0ZW50aE9mQVNlY29uZCA9IDEwMCxcbiAgICAgICAgc2Nyb2xsRHVyYXRpb24gPSBvbmVTZWNvbmQsXG4gICAgICAgIHNjcm9sbFRvID0gdHJ1ZTtcblxuICAgIC8qKlxuICAgICAqIENsZWFudXAgYWZ0ZXIgdHJhbnNpdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGFjY29yZGlvblNlY3Rpb24gLSBUaGUgc2VjdGlvbiB0aGF0IHRyYW5zaXRpb25lZC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjbGVhbnVwVHJhbnNpdGlvbihzZWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IG9wZW4gPSB0b0Jvb2woc2VjdGlvbi5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmRhdGFzZXQub3Blbik7XG4gICAgICAgIHNlY3Rpb24uc3R5bGUuaGVpZ2h0ID0gbnVsbDtcbiAgICAgICAgc2VjdGlvbi5kYXRhc2V0LmNsb3NlZCA9IG9wZW4gPyAnZmFsc2UnIDogJ3RydWUnO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldCBzdHlsZSBwcm9wZXJ0aWVzIGZvciB0cmFuc2l0aW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCAtIFRoZSBzZWN0aW9uIHRvIHRyYW5zaXRpb24uXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGluaXRpYWxIZWlnaHQgLSBUaGUgaW5pdGlhbCBoZWlnaHQgZnJvbSB3aGljaCB0byB0cmFuc2l0aW9uLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldHVwVHJhbnNpdGlvbihlbGVtZW50LCBpbml0aWFsSGVpZ2h0KSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gaW5pdGlhbEhlaWdodDtcbiAgICAgICAgZWxlbWVudC5kYXRhc2V0LmNsb3NlZCA9ICdmYWxzZSc7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE9wZW4gYSBzZWN0aW9uLCBjYWxjdWxhdGUgaXRzIGhlaWdodCwgdGhlbiBjbG9zZSBpdCBhZ2Fpbi5cbiAgICAgKlxuICAgICAqIFdpdGggbm8gdHJhbnNpdGlvbiwgdGhpcyBpcyBlc3NlbnRpYWxseSBpbnZpc2libGUgdG8gdGhlIHVzZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0hUTUxIZWFkaW5nRWxlbWVudH0gaGVhZGluZyAtIEFuIGFjY29yZGlvbiBoZWFkaW5nLlxuICAgICAqIEByZXR1cm4ge3N0cmluZ30gVGhlIHBpeGVsIGhlaWdodCBvZiB0aGUgc2VjdGlvbiB3aGVuIG9wZW4uXG4gICAgICovXG4gICAgZnVuY3Rpb24gY2FsY3VsYXRlQWNjb3JkaW9uQm9keUhlaWdodChoZWFkaW5nKSB7XG4gICAgICAgIGNvbnN0IHNlY3Rpb24gPSBoZWFkaW5nLm5leHRFbGVtZW50U2libGluZztcblxuICAgICAgICBzZXRTZWN0aW9uKGhlYWRpbmcsIHRydWUpO1xuICAgICAgICBzZWN0aW9uLmRhdGFzZXQuY2xvc2VkID0gJ2ZhbHNlJztcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gc2VjdGlvbi5vZmZzZXRIZWlnaHQgKyAncHgnO1xuXG4gICAgICAgIHNldFNlY3Rpb24oaGVhZGluZywgZmFsc2UpO1xuICAgICAgICBzZWN0aW9uLmRhdGFzZXQuY2xvc2VkID0gJ3RydWUnO1xuXG4gICAgICAgIHJldHVybiBoZWlnaHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzcG9uZCB0byBidXR0b24gY2xpY2tzIC0gb3BlbiBpZiBjbG9zZWQsIGNsb3NlIGlmIG9wZW4uXG4gICAgICpcbiAgICAgKiBJZiBvcGVuaW5nLCB3aWxsIGFsc28gcHVzaCB0aGUgaGVhZGluZyBJRCBpbnRvIHRoZSBoaXN0b3J5LCBzbyBDK1BpbmcgdGhlIFVSTFxuICAgICAqIHdpbGwgb3BlbiB0aGUgbW9zdCByZWNlbnRseSB2aWV3ZWQgc2VjdGlvbi4gQ2xvc2luZyBhIHNlY3Rpb24gcmVtb3ZlcyBhbnlcbiAgICAgKiBoYXNoLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtIVE1MQnV0dG9uRWxlbWVudH0gYnV0dG9uIC0gVGhlIGJ1dHRvbiB0aGF0IHdhcyBjbGlja2VkLlxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnRbXX0gaGVhZGluZ3MgLSBBbGwgaGVhZGluZ3MgaW4gdGhpcyBhY2NvcmRpb24uXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbdG9nZ2xlT3Blbl0gLSBTaG91bGQgb3RoZXIgYWNjb3JkaW9uIHNlY3Rpb25zIGNsb3NlPyBEZWZhdWx0IHRvIGZhbHNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGJ1dHRvbkNsaWNrKGJ1dHRvbiwgaGVhZGluZ3MsIHRvZ2dsZU9wZW4sIGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBoZWFkaW5nID0gYnV0dG9uLnBhcmVudE5vZGUsXG4gICAgICAgICAgICBhY2NvcmRpb25TZWN0aW9uID0gaGVhZGluZy5uZXh0RWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFmdGVyIHdlJ3ZlIHRyYW5zaXRpb25lZCB0aGUgb3BlbmluZy9jbG9zaW5nLCB3ZSB3YW50IHRvIHJldmVydCB0b1xuICAgICAgICAgKiBsZXR0aW5nIHRoZSBDU1Mgc2l6ZSB0aGUgZWxlbWVudC4gQWRkIGEgbGlzdGVuZXIgdG8gZG8gdGhpcyB0aGF0IHdpbGxcbiAgICAgICAgICogc2VsZi1kZXN0cnVjdCBhZnRlciBydW5uaW5nLlxuICAgICAgICAgKi9cbiAgICAgICAgYWNjb3JkaW9uU2VjdGlvbi5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgJ3RyYW5zaXRpb25lbmQnLFxuICAgICAgICAgICAgKCkgPT4gY2xlYW51cFRyYW5zaXRpb24oYWNjb3JkaW9uU2VjdGlvbiksXG4gICAgICAgICAgICB7IGNhcHR1cmU6IHRydWUsIG9uY2U6IHRydWUgfVxuICAgICAgICApO1xuXG4gICAgICAgIGlmICh0b0Jvb2woYnV0dG9uLmdldEF0dHJpYnV0ZShhcmlhLmV4cGFuZGVkKSkpIHtcbiAgICAgICAgICAgIC8vIFN0YXJ0aW5nIGhlaWdodCBpcyB0aGUgY3VycmVudCBoZWlnaHRcbiAgICAgICAgICAgIHNldHVwVHJhbnNpdGlvbihhY2NvcmRpb25TZWN0aW9uLCBhY2NvcmRpb25TZWN0aW9uLm9mZnNldEhlaWdodCArICdweCcpO1xuICAgICAgICAgICAgLy8gc2V0VGltZW91dCBsZXRzIHRoZSBET00gcmVjYWxjdWxhdGUgYmVmb3JlIHdlIGNvbnRpbnVlLCBzbyB0aGUgdHJhbnNpdGlvbiB3aWxsIGZpcmVcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGFjY29yZGlvblNlY3Rpb24uc3R5bGUuaGVpZ2h0ID0gJzBweCc7XG4gICAgICAgICAgICB9LCB0ZW50aE9mQVNlY29uZCk7XG5cbiAgICAgICAgICAgIHNldFNlY3Rpb24oaGVhZGluZywgZmFsc2UpO1xuICAgICAgICAgICAgLy8gdXBkYXRlcyBVUkwgaGFzaCwgYnkgcmVtb3ZpbmcgaGFzaCBmcm9tIFVSTCB3aGVuIGFjY29yZGlvbiBjbG9zZXNcbiAgICAgICAgICAgIC8vaGlzdG9yeS5wdXNoU3RhdGUoe30sIG51bGwsIGxvY2F0aW9uLmhyZWYuc3BsaXQoJyMnKVswXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBDYWxjbHVsYXRlIGFuZCBzYXZlIGhvdyBiaWcgd2UncmUgdHJhbnNpdGlvbmluZyB0b1xuICAgICAgICAgICAgY29uc3Qgc2VjdGlvbkhlaWdodCA9IGNhbGN1bGF0ZUFjY29yZGlvbkJvZHlIZWlnaHQoaGVhZGluZyk7XG4gICAgICAgICAgICAvLyBTdGFydGluZyBoZWlnaHQgaXMgMFxuICAgICAgICAgICAgc2V0dXBUcmFuc2l0aW9uKGFjY29yZGlvblNlY3Rpb24sICcwcHgnKTtcbiAgICAgICAgICAgIC8vIHNldFRpbWVvdXQgbGV0cyB0aGUgRE9NIHJlY2FsY3VsYXRlIGJlZm9yZSB3ZSBjb250aW51ZSwgc28gdGhlIHRyYW5zaXRpb24gd2lsbCBmaXJlXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBhY2NvcmRpb25TZWN0aW9uLnN0eWxlLmhlaWdodCA9IHNlY3Rpb25IZWlnaHQ7XG4gICAgICAgICAgICB9LCB0ZW50aE9mQVNlY29uZCk7XG5cbiAgICAgICAgICAgIGlmICh0b2dnbGVPcGVuKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VjdGlvbnMgPSBBcnJheS5mcm9tKFxuICAgICAgICAgICAgICAgICAgICBoZWFkaW5nLnBhcmVudE5vZGUucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgICAgICAgICAgICAgYCMke2hlYWRpbmcucGFyZW50RWxlbWVudC5pZH0gPiAuJHtib2R5Q2xhc3NOYW1lfWBcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgaGVhZGluZ3MuZm9yRWFjaCgoaGVhZGluZykgPT4gc2V0U2VjdGlvbihoZWFkaW5nLCBmYWxzZSkpO1xuICAgICAgICAgICAgICAgIHNlY3Rpb25zXG4gICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoKHNlY3Rpb24pID0+IHNlY3Rpb24uaWQgIT09IGFjY29yZGlvblNlY3Rpb24uaWQpXG4gICAgICAgICAgICAgICAgICAgIC5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmRhdGFzZXQuY2xvc2VkID0gJ3RydWUnO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldFNlY3Rpb24oaGVhZGluZywgdHJ1ZSk7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgc2Nyb2xsVG8gJiZcbiAgICAgICAgICAgICAgICAhKFxuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbGx5SW5XaW5kb3coaGVhZGluZykgJiZcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWxseUluV2luZG93KGFjY29yZGlvblNlY3Rpb24pXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgLy9zY3JvbGwudG8oaGVhZGluZywgc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIHdpbmRvdy5zY3JvbGxUbyhcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiB3aW5kb3cuc2Nyb2xsWSArIGhlYWRpbmcuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIC0gMjAwLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IHdpbmRvdy5zY3JvbGxYICsgaGVhZGluZy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LFxuICAgICAgICAgICAgICAgICAgICAgICAgYmVoYXZpb3IgOiAnc21vb3RoJ1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gdXBkYXRlcyBVUkwgaGFzaCB3aXRoIGFjY29yZGlvbiBoZWFkaW5nLCB3aGVuIGFjY29yZGlvbiBvcGVuc1xuICAgICAgICAgICAgLy93aW5kb3cubG9jYXRpb24uaGFzaCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5pZDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgYSBoZWFkaW5nIGFuZCB0aGUgYnV0dG9uIG5lc3RlZCB3aXRoaW4gdG8gYmUgb3BlbiBvciBjbG9zZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0hUTUxIZWFkaW5nRWxlbWVudH0gaGVhZGluZyAtIEFuIGFjY29yZGlvbiBoZWFkaW5nLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gb3BlbiAtIFNldCB0aGlzIHNlY3Rpb24gdG8gYmUgb3Blbj9cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzZXRTZWN0aW9uKGhlYWRpbmcsIG9wZW4pIHtcbiAgICAgICAgaGVhZGluZy5kYXRhc2V0Lm9wZW4gPSBvcGVuO1xuICAgICAgICBoZWFkaW5nLmZpcnN0RWxlbWVudENoaWxkLnNldEF0dHJpYnV0ZShhcmlhLmV4cGFuZGVkLCBvcGVuKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBidXR0b24gZnJvbSB0aGUgdGV4dCBjb250ZW50IG9mIGEgaGVhZGluZy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGhlYWRpbmcgLSBBbiBhY2NvcmRpb24gaGVhZGluZy5cbiAgICAgKiBAcmV0dXJucyB7SFRNTEJ1dHRvbkVsZW1lbnR9IEFuIGFjY29yZGlvbiBzZWN0aW9uIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBidXR0b25Gcm9tSGVhZGluZyhoZWFkaW5nKSB7XG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpLFxuICAgICAgICAgICAgLy8gQ2hyb21lIGNhbid0IGFwcGx5IGdyaWQgbGF5b3V0IHRvIGJ1dHRvbnMsIG5lZWQgdG8gd3JhcCBjb250ZW50c1xuICAgICAgICAgICAgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAgICAgdGV4dFNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyksXG4gICAgICAgICAgICBpY29uU3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcblxuICAgICAgICB0ZXh0U3Bhbi5jbGFzc05hbWUgPSBoZWFkaW5nVGV4dENsYXNzTmFtZTtcbiAgICAgICAgaWNvblNwYW4uY2xhc3NOYW1lID0gaGVhZGluZ0ljb25DbGFzc05hbWU7XG4gICAgICAgIGljb25TcGFuLnNldEF0dHJpYnV0ZShhcmlhLmhpZGRlbiwgdHJ1ZSk7XG4gICAgICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG5cbiAgICAgICAgdGV4dFNwYW4uYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoaGVhZGluZy50ZXh0Q29udGVudCkpO1xuICAgICAgICBhcHBlbmRBbGwod3JhcHBlciwgW3RleHRTcGFuLCBpY29uU3Bhbl0pO1xuICAgICAgICBidXR0b24uYXBwZW5kQ2hpbGQod3JhcHBlcik7XG5cbiAgICAgICAgcmV0dXJuIGJ1dHRvbjtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKGFjY29yZGlvbiwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB0b2dnbGVPcGVuID0gZmFsc2UsXG4gICAgICAgICAgICBkZWZhdWx0T3BlbiA9IGZhbHNlLFxuICAgICAgICAgICAgYWxsb3dTaW5nbGUgPSBmYWxzZSxcbiAgICAgICAgICAgIGhlYWRpbmdMZXZlbCA9IGFjY29yZGlvbi5maXJzdEVsZW1lbnRDaGlsZC50YWdOYW1lO1xuXG4gICAgICAgIGNvbnN0IGhlYWRpbmdzID0gQXJyYXkuZnJvbShcbiAgICAgICAgICAgIGFjY29yZGlvbi5xdWVyeVNlbGVjdG9yQWxsKFxuICAgICAgICAgICAgICAgIGA6c2NvcGUgPiAke2hlYWRpbmdMZXZlbH1gXG4gICAgICAgICAgICApXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgY29udGVudEJvZHkgPSBBcnJheS5mcm9tKFxuICAgICAgICAgICAgYWNjb3JkaW9uLnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICAgICAgICAgICAgJzpzY29wZSA+IDpudGgtY2hpbGQoZXZlbiknXG4gICAgICAgICAgICApKTtcblxuICAgICAgICBjb250ZW50Qm9keS5mb3JFYWNoKCBib2R5ID0+IHtcbiAgICAgICAgICAgIGJvZHkuY2xhc3NMaXN0LmFkZChib2R5Q2xhc3NOYW1lKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGlkTGlua2VkID0gZmFsc2U7XG5cbiAgICAgICAgaGVhZGluZ3MuZm9yRWFjaCggaCA9PiBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsaW5rID0gaC5xdWVyeVNlbGVjdG9yKCdhJyk7XG5cbiAgICAgICAgICAgICAgICBpZihsaW5rKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgaC5pZCA9IGguZmlyc3RDaGlsZC5oYXNoO1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICAgICAgICAgICAgICBlbC50ZXh0Q29udGVudCA9IGgucXVlcnlTZWxlY3RvcignYScpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgICAgICAgICBoLmZpcnN0Q2hpbGQucmVwbGFjZVdpdGgoZWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgaC5jbGFzc0xpc3QuYWRkKGhlYWRpbmdDbGFzc05hbWUpO1xuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGgubmV4dEVsZW1lbnRTaWJsaW5nLFxuICAgICAgICAgICAgICAgICAgICBidXR0b24gPSBidXR0b25Gcm9tSGVhZGluZyhoKTtcblxuICAgICAgICAgICAgICAgIGNvbnRlbnQuc2V0QXR0cmlidXRlKGFyaWEubGFiZWxsZWRCeSwgaC5pZCk7XG4gICAgICAgICAgICAgICAgY29udGVudC5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAncmVnaW9uJyk7XG4gICAgICAgICAgICAgICAgaC5yZXBsYWNlQ2hpbGQoYnV0dG9uLCBoLmZpcnN0Q2hpbGQpO1xuXG4gICAgICAgICAgICAgICAgc2V0U2VjdGlvbihoLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgaC5uZXh0RWxlbWVudFNpYmxpbmcuZGF0YXNldC5jbG9zZWQgPSAndHJ1ZSc7XG5cbiAgICAgICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgICAgICAgICAgJ2NsaWNrJyxcbiAgICAgICAgICAgICAgICAgICAgKGUpID0+IGJ1dHRvbkNsaWNrKGJ1dHRvbiwgaGVhZGluZ3MsIHRvZ2dsZU9wZW4sIGUpLFxuICAgICAgICAgICAgICAgICAgICB0cnVlXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcblxuICAgICAgICAvKiBTaG93IGZpcnN0IGl0ZW0gb2YgYWNjb3JkaW9uLCBpZiBhY2NvcmRpb24gaXMgc2V0IHRvIGRlZmF1bHQgb3BlbixcbiAgICAgICAgICAgYW5kIHdlIGhhdmVuJ3QgbGlua2VkIHRvIGEgc3BlY2lmaWMgc2VjdGlvbiAqL1xuICAgICAgICBpZiAoZGVmYXVsdE9wZW4gJiYgIWlkTGlua2VkKSB7XG4gICAgICAgICAgICBzZXRTZWN0aW9uKGhlYWRpbmdzWzBdLCB0cnVlKTtcbiAgICAgICAgICAgIGhlYWRpbmdzWzBdLm5leHRFbGVtZW50U2libGluZy5kYXRhc2V0LmNsb3NlZCA9ICdmYWxzZSc7XG4gICAgICAgIH1cbiAgICB9XG59KCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9mdW5jcy9hY2NvcmRpb24tMjAyNC5qc1xuLy8gbW9kdWxlIGlkID0gNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiBXQUktQVJJQSBhdHRyaWJ1dGVzXG4gKlxuICogUXVpY2tlciB0byB0eXBlLCBpbnRlbGxpc2Vuc2libGUsIGRvY3VtZW50cyB3aGF0IHRoZXkncmUgZm9yLCBhbmQgc2F2ZXMgYVxuICogdGlueSBhbW91bnQgb2YgY29kZSBieSByZXBsYWNpbmcgdGhlIHN0cmluZyAnYXJpYS0nIHdpdGggYSBtaW5pZmlhYmxlXG4gKiB2YXJpYWJsZSBhbmQgZG90IG5vdGF0aW9uLlxuICpcbiAqIEBtb2R1bGUgYXJpYS1hdHRyaWJ1dGVzXG4gKiBAYXV0aG9yIFdlYiBEZXZlbG9wbWVudFxuICogQGNvcHlyaWdodCBDaXR5LCBVbml2ZXJzaXR5IG9mIExvbmRvbiAyMDE4XG4gKi9cblxuLyoqXG4gKiBAcmVhZG9ubHlcbiAqIEBlbnVtIHtzdHJpbmd9XG4gKi9cbmNvbnN0IGFyaWEgPSB7XG4gICAgLyoqIElkZW50aWZpZXMgdGhlIGN1cnJlbnRseSBhY3RpdmUgZWxlbWVudCB3aGVuIERPTSBmb2N1cyBpcyBvbiBhIGNvbXBvc2l0ZSB3aWRnZXQsIHRleHRib3gsIGdyb3VwLCBvciBhcHBsaWNhdGlvbi4gKi9cbiAgICBhY3RpdmVEZXNjZW5kYW50OiAnYXJpYS1hY3RpdmVkZXNjZW5kYW50JyxcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgYXNzaXN0aXZlIHRlY2hub2xvZ2llcyB3aWxsIHByZXNlbnQgYWxsLCBvciBvbmx5IHBhcnRzIG9mLCB0aGUgY2hhbmdlZCByZWdpb24gYmFzZWQgb24gdGhlIGNoYW5nZSBub3RpZmljYXRpb25zIGRlZmluZWQgYnkgdGhlIGFyaWEtcmVsZXZhbnQgYXR0cmlidXRlLiAqL1xuICAgIGF0b21pYzogJ2FyaWEtYXRvbWljJyxcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgaW5wdXR0aW5nIHRleHQgY291bGQgdHJpZ2dlciBkaXNwbGF5IG9mIG9uZSBvciBtb3JlIHByZWRpY3Rpb25zIG9mIHRoZSB1c2VyJ3MgaW50ZW5kZWQgdmFsdWUgZm9yIGFuIGlucHV0IGFuZCBzcGVjaWZpZXMgaG93IHByZWRpY3Rpb25zIHdvdWxkIGJlIHByZXNlbnRlZCBpZiB0aGV5IGFyZSBtYWRlLiAqL1xuICAgIGF1dG9Db21wbGV0ZTogJ2FyaWEtYXV0b2NvbXBsZXRlJyxcbiAgICAvKiogSW5kaWNhdGVzIGFuIGVsZW1lbnQgaXMgYmVpbmcgbW9kaWZpZWQgYW5kIHRoYXQgYXNzaXN0aXZlIHRlY2hub2xvZ2llcyBNQVkgd2FudCB0byB3YWl0IHVudGlsIHRoZSBtb2RpZmljYXRpb25zIGFyZSBjb21wbGV0ZSBiZWZvcmUgZXhwb3NpbmcgdGhlbSB0byB0aGUgdXNlci4gKi9cbiAgICBidXN5OiAnYXJpYS1idXN5JyxcbiAgICAvKiogSW5kaWNhdGVzIHRoZSBjdXJyZW50IFwiY2hlY2tlZFwiIHN0YXRlIG9mIGNoZWNrYm94ZXMsIHJhZGlvIGJ1dHRvbnMsIGFuZCBvdGhlciB3aWRnZXRzLiAqL1xuICAgIGNoZWNrZWQ6ICdhcmlhLWNoZWNrZWQnLFxuICAgIC8qKiBEZWZpbmVzIHRoZSB0b3RhbCBudW1iZXIgb2YgY29sdW1ucyBpbiBhIHRhYmxlLCBncmlkLCBvciB0cmVlZ3JpZC4gKi9cbiAgICBjb2xDb3VudDogJ2FyaWEtY29sY291bnQnLFxuICAgIC8qKiBEZWZpbmVzIGFuIGVsZW1lbnQncyBjb2x1bW4gaW5kZXggb3IgcG9zaXRpb24gd2l0aCByZXNwZWN0IHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgY29sdW1ucyB3aXRoaW4gYSB0YWJsZSwgZ3JpZCwgb3IgdHJlZWdyaWQuICovXG4gICAgY29sSW5kZXg6ICdhcmlhLWNvbGluZGV4JyxcbiAgICAvKiogRGVmaW5lcyB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgc3Bhbm5lZCBieSBhIGNlbGwgb3IgZ3JpZGNlbGwgd2l0aGluIGEgdGFibGUsIGdyaWQsIG9yIHRyZWVncmlkLiAqL1xuICAgIGNvbFNwYW46ICdhcmlhLWNvbHNwYW4nLFxuICAgIC8qKiBJZGVudGlmaWVzIHRoZSBlbGVtZW50IChvciBlbGVtZW50cykgd2hvc2UgY29udGVudHMgb3IgcHJlc2VuY2UgYXJlIGNvbnRyb2xsZWQgYnkgdGhlIGN1cnJlbnQgZWxlbWVudC4gKi9cbiAgICBjb250cm9sczogJ2FyaWEtY29udHJvbHMnLFxuICAgIC8qKiBJbmRpY2F0ZXMgdGhlIGVsZW1lbnQgdGhhdCByZXByZXNlbnRzIHRoZSBjdXJyZW50IGl0ZW0gd2l0aGluIGEgY29udGFpbmVyIG9yIHNldCBvZiByZWxhdGVkIGVsZW1lbnRzLiAqL1xuICAgIGN1cnJlbnQ6ICdhcmlhLWN1cnJlbnQnLFxuICAgIC8qKiBJZGVudGlmaWVzIHRoZSBlbGVtZW50IChvciBlbGVtZW50cykgdGhhdCBkZXNjcmliZXMgdGhlIG9iamVjdC4gKi9cbiAgICBkZXNjcmliZWRCeTogJ2FyaWEtZGVzY3JpYmVkYnknLFxuICAgIC8qKiBJZGVudGlmaWVzIHRoZSBlbGVtZW50IHRoYXQgcHJvdmlkZXMgYSBkZXRhaWxlZCwgZXh0ZW5kZWQgZGVzY3JpcHRpb24gZm9yIHRoZSBvYmplY3QuICovXG4gICAgZGV0YWlsczogJ2FyaWEtZGV0YWlscycsXG4gICAgLyoqIEluZGljYXRlcyB0aGF0IHRoZSBlbGVtZW50IGlzIHBlcmNlaXZhYmxlIGJ1dCBkaXNhYmxlZCwgc28gaXQgaXMgbm90IGVkaXRhYmxlIG9yIG90aGVyd2lzZSBvcGVyYWJsZS4gKi9cbiAgICBkaXNhYmxlZDogJ2FyaWEtZGlzYWJsZWQnLFxuICAgIC8qKiBbRGVwcmVjYXRlZCBpbiBBUklBIDEuMV0gSW5kaWNhdGVzIHdoYXQgZnVuY3Rpb25zIGNhbiBiZSBwZXJmb3JtZWQgd2hlbiBhIGRyYWdnZWQgb2JqZWN0IGlzIHJlbGVhc2VkIG9uIHRoZSBkcm9wIHRhcmdldC4gKi9cbiAgICBkcm9wRWZmZWN0OiAnYXJpYS1kcm9wZWZmZWN0JyxcbiAgICAvKiogSWRlbnRpZmllcyB0aGUgZWxlbWVudCB0aGF0IHByb3ZpZGVzIGFuIGVycm9yIG1lc3NhZ2UgZm9yIHRoZSBvYmplY3QuICovXG4gICAgZXJyb3JNZXNzYWdlOiAnYXJpYS1lcnJvcm1lc3NhZ2UnLFxuICAgIC8qKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgZWxlbWVudCwgb3IgYW5vdGhlciBncm91cGluZyBlbGVtZW50IGl0IGNvbnRyb2xzLCBpcyBjdXJyZW50bHkgZXhwYW5kZWQgb3IgY29sbGFwc2VkLiAqL1xuICAgIGV4cGFuZGVkOiAnYXJpYS1leHBhbmRlZCcsXG4gICAgLyoqIElkZW50aWZpZXMgdGhlIG5leHQgZWxlbWVudCAob3IgZWxlbWVudHMpIGluIGFuIGFsdGVybmF0ZSByZWFkaW5nIG9yZGVyIG9mIGNvbnRlbnQgd2hpY2gsIGF0IHRoZSB1c2VyJ3MgZGlzY3JldGlvbiwgYWxsb3dzIGFzc2lzdGl2ZSB0ZWNobm9sb2d5IHRvIG92ZXJyaWRlIHRoZSBnZW5lcmFsIGRlZmF1bHQgb2YgcmVhZGluZyBpbiBkb2N1bWVudCBzb3VyY2Ugb3JkZXIuICovXG4gICAgZmxvd1RvOiAnYXJpYS1mbG93dG8nLFxuICAgIC8qKiBbRGVwcmVjYXRlZCBpbiBBUklBIDEuMV0gSW5kaWNhdGVzIGFuIGVsZW1lbnQncyBcImdyYWJiZWRcIiBzdGF0ZSBpbiBhIGRyYWctYW5kLWRyb3Agb3BlcmF0aW9uLiAqL1xuICAgIGdyYWJiZWQ6ICdhcmlhLWdyYWJiZWQnLFxuICAgIC8qKiBJbmRpY2F0ZXMgdGhlIGF2YWlsYWJpbGl0eSBhbmQgdHlwZSBvZiBpbnRlcmFjdGl2ZSBwb3B1cCBlbGVtZW50LCBzdWNoIGFzIG1lbnUgb3IgZGlhbG9nLCB0aGF0IGNhbiBiZSB0cmlnZ2VyZWQgYnkgYW4gZWxlbWVudC4gKi9cbiAgICBoYXNQb3B1cDogJ2FyaWEtaGFzcG9wdXAnLFxuICAgIC8qKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgZWxlbWVudCBpcyBleHBvc2VkIHRvIGFuIGFjY2Vzc2liaWxpdHkgQVBJLiAqL1xuICAgIGhpZGRlbjogJ2FyaWEtaGlkZGVuJyxcbiAgICAvKiogSW5kaWNhdGVzIHRoZSBlbnRlcmVkIHZhbHVlIGRvZXMgbm90IGNvbmZvcm0gdG8gdGhlIGZvcm1hdCBleHBlY3RlZCBieSB0aGUgYXBwbGljYXRpb24uICovXG4gICAgaW52YWxpZDogJ2FyaWEtaW52YWxpZCcsXG4gICAgLyoqIEluZGljYXRlcyBrZXlib2FyZCBzaG9ydGN1dHMgdGhhdCBhbiBhdXRob3IgaGFzIGltcGxlbWVudGVkIHRvIGFjdGl2YXRlIG9yIGdpdmUgZm9jdXMgdG8gYW4gZWxlbWVudC4gKi9cbiAgICBrZXlTaG9ydGN1dHM6ICdhcmlhLWtleXNob3J0Y3V0cycsXG4gICAgLyoqIERlZmluZXMgYSBzdHJpbmcgdmFsdWUgdGhhdCBsYWJlbHMgdGhlIGN1cnJlbnQgZWxlbWVudC4gKi9cbiAgICBsYWJlbDogJ2FyaWEtbGFiZWwnLFxuICAgIC8qKiBJZGVudGlmaWVzIHRoZSBlbGVtZW50IChvciBlbGVtZW50cykgdGhhdCBsYWJlbHMgdGhlIGN1cnJlbnQgZWxlbWVudC4gKi9cbiAgICBsYWJlbGxlZEJ5OiAnYXJpYS1sYWJlbGxlZGJ5JyxcbiAgICAvKiogRGVmaW5lcyB0aGUgaGllcmFyY2hpY2FsIGxldmVsIG9mIGFuIGVsZW1lbnQgd2l0aGluIGEgc3RydWN0dXJlLiAqL1xuICAgIGxldmVsOiAnYXJpYS1sZXZlbCcsXG4gICAgLyoqIEluZGljYXRlcyB0aGF0IGFuIGVsZW1lbnQgd2lsbCBiZSB1cGRhdGVkLCBhbmQgZGVzY3JpYmVzIHRoZSB0eXBlcyBvZiB1cGRhdGVzIHRoZSB1c2VyIGFnZW50cywgYXNzaXN0aXZlIHRlY2hub2xvZ2llcywgYW5kIHVzZXIgY2FuIGV4cGVjdCBmcm9tIHRoZSBsaXZlIHJlZ2lvbi4gKi9cbiAgICBsaXZlOiAnYXJpYS1saXZlJyxcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgYW4gZWxlbWVudCBpcyBtb2RhbCB3aGVuIGRpc3BsYXllZC4gKi9cbiAgICBtb2RhbDogJ2FyaWEtbW9kYWwnLFxuICAgIC8qKiBJbmRpY2F0ZXMgd2hldGhlciBhIHRleHQgYm94IGFjY2VwdHMgbXVsdGlwbGUgbGluZXMgb2YgaW5wdXQgb3Igb25seSBhIHNpbmdsZSBsaW5lLiAqL1xuICAgIG11bHRpTGluZTogJ2FyaWEtbXVsdGlsaW5lJyxcbiAgICAvKiogSW5kaWNhdGVzIHRoYXQgdGhlIHVzZXIgbWF5IHNlbGVjdCBtb3JlIHRoYW4gb25lIGl0ZW0gZnJvbSB0aGUgY3VycmVudCBzZWxlY3RhYmxlIGRlc2NlbmRhbnRzLiAqL1xuICAgIG11bHRpU2VsZWN0YWJsZTogJ2FyaWEtbXVsdGlzZWxlY3RhYmxlJyxcbiAgICAvKiogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVsZW1lbnQncyBvcmllbnRhdGlvbiBpcyBob3Jpem9udGFsLCB2ZXJ0aWNhbCwgb3IgdW5rbm93bi9hbWJpZ3VvdXMuICovXG4gICAgb3JpZW50YXRpb246ICdhcmlhLW9yaWVudGF0aW9uJyxcbiAgICAvKiogSWRlbnRpZmllcyBhbiBlbGVtZW50IChvciBlbGVtZW50cykgaW4gb3JkZXIgdG8gZGVmaW5lIGEgdmlzdWFsLCBmdW5jdGlvbmFsLCBvciBjb250ZXh0dWFsIHBhcmVudC9jaGlsZCByZWxhdGlvbnNoaXAgYmV0d2VlbiBET00gZWxlbWVudHMgd2hlcmUgdGhlIERPTSBoaWVyYXJjaHkgY2Fubm90IGJlIHVzZWQgdG8gcmVwcmVzZW50IHRoZSByZWxhdGlvbnNoaXAuICovXG4gICAgb3duczogJ2FyaWEtb3ducycsXG4gICAgLyoqIERlZmluZXMgYSBzaG9ydCBoaW50IChhIHdvcmQgb3Igc2hvcnQgcGhyYXNlKSBpbnRlbmRlZCB0byBhaWQgdGhlIHVzZXIgd2l0aCBkYXRhIGVudHJ5IHdoZW4gdGhlIGNvbnRyb2wgaGFzIG5vIHZhbHVlLiBBIGhpbnQgY291bGQgYmUgYSBzYW1wbGUgdmFsdWUgb3IgYSBicmllZiBkZXNjcmlwdGlvbiBvZiB0aGUgZXhwZWN0ZWQgZm9ybWF0LiAqL1xuICAgIHBsYWNlaG9sZGVyOiAnYXJpYS1wbGFjZWhvbGRlcicsXG4gICAgLyoqIERlZmluZXMgYW4gZWxlbWVudCdzIG51bWJlciBvciBwb3NpdGlvbiBpbiB0aGUgY3VycmVudCBzZXQgb2YgbGlzdGl0ZW1zIG9yIHRyZWVpdGVtcy4gTm90IHJlcXVpcmVkIGlmIGFsbCBlbGVtZW50cyBpbiB0aGUgc2V0IGFyZSBwcmVzZW50IGluIHRoZSBET00uICovXG4gICAgcG9zSW5zZXQ6ICdhcmlhLXBvc2luc2V0JyxcbiAgICAvKiogSW5kaWNhdGVzIHRoZSBjdXJyZW50IFwicHJlc3NlZFwiIHN0YXRlIG9mIHRvZ2dsZSBidXR0b25zLiAqL1xuICAgIHByZXNzZWQ6ICdhcmlhLXByZXNzZWQnLFxuICAgIC8qKiBJbmRpY2F0ZXMgdGhhdCB0aGUgZWxlbWVudCBpcyBub3QgZWRpdGFibGUsIGJ1dCBpcyBvdGhlcndpc2Ugb3BlcmFibGUuICovXG4gICAgcmVhZE9ubHk6ICdhcmlhLXJlYWRvbmx5JyxcbiAgICAvKiogSW5kaWNhdGVzIHdoYXQgbm90aWZpY2F0aW9ucyB0aGUgdXNlciBhZ2VudCB3aWxsIHRyaWdnZXIgd2hlbiB0aGUgYWNjZXNzaWJpbGl0eSB0cmVlIHdpdGhpbiBhIGxpdmUgcmVnaW9uIGlzIG1vZGlmaWVkLiAqL1xuICAgIHJlbGV2YW50OiAnYXJpYS1yZWxldmFudCcsXG4gICAgLyoqIEluZGljYXRlcyB0aGF0IHVzZXIgaW5wdXQgaXMgcmVxdWlyZWQgb24gdGhlIGVsZW1lbnQgYmVmb3JlIGEgZm9ybSBtYXkgYmUgc3VibWl0dGVkLiAqL1xuICAgIHJlcXVpcmVkOiAnYXJpYS1yZXF1aXJlZCcsXG4gICAgLyoqIERlZmluZXMgYSBodW1hbi1yZWFkYWJsZSwgYXV0aG9yLWxvY2FsaXplZCBkZXNjcmlwdGlvbiBmb3IgdGhlIHJvbGUgb2YgYW4gZWxlbWVudC4gKi9cbiAgICByb2xlRGVzY3JpcHRpb246ICdhcmlhLXJvbGVkZXNjcmlwdGlvbicsXG4gICAgLyoqIERlZmluZXMgdGhlIHRvdGFsIG51bWJlciBvZiByb3dzIGluIGEgdGFibGUsIGdyaWQsIG9yIHRyZWVncmlkLiAqL1xuICAgIHJvd0NvdW50OiAnYXJpYS1yb3djb3VudCcsXG4gICAgLyoqIERlZmluZXMgYW4gZWxlbWVudCdzIHJvdyBpbmRleCBvciBwb3NpdGlvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIHRvdGFsIG51bWJlciBvZiByb3dzIHdpdGhpbiBhIHRhYmxlLCBncmlkLCBvciB0cmVlZ3JpZC4gKi9cbiAgICByb3dJbmRleDogJ2FyaWEtcm93aW5kZXgnLFxuICAgIC8qKiBEZWZpbmVzIHRoZSBudW1iZXIgb2Ygcm93cyBzcGFubmVkIGJ5IGEgY2VsbCBvciBncmlkY2VsbCB3aXRoaW4gYSB0YWJsZSwgZ3JpZCwgb3IgdHJlZWdyaWQuICovXG4gICAgcm93U3BhbjogJ2FyaWEtcm93c3BhbicsXG4gICAgLyoqIEluZGljYXRlcyB0aGUgY3VycmVudCBcInNlbGVjdGVkXCIgc3RhdGUgb2YgdmFyaW91cyB3aWRnZXRzLiAqL1xuICAgIHNlbGVjdGVkOiAnYXJpYS1zZWxlY3RlZCcsXG4gICAgLyoqIERlZmluZXMgdGhlIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgY3VycmVudCBzZXQgb2YgbGlzdGl0ZW1zIG9yIHRyZWVpdGVtcy4gTm90IHJlcXVpcmVkIGlmIGFsbCBlbGVtZW50cyBpbiB0aGUgc2V0IGFyZSBwcmVzZW50IGluIHRoZSBET00uICovXG4gICAgc2V0U2l6ZTogJ2FyaWEtc2V0c2l6ZScsXG4gICAgLyoqIEluZGljYXRlcyBpZiBpdGVtcyBpbiBhIHRhYmxlIG9yIGdyaWQgYXJlIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3IgZGVzY2VuZGluZyBvcmRlci4gKi9cbiAgICBzb3J0OiAnYXJpYS1zb3J0JyxcbiAgICAvKiogRGVmaW5lcyB0aGUgbWF4aW11bSBhbGxvd2VkIHZhbHVlIGZvciBhIHJhbmdlIHdpZGdldC4gKi9cbiAgICB2YWx1ZU1heDogJ2FyaWEtdmFsdWVtYXgnLFxuICAgIC8qKiBEZWZpbmVzIHRoZSBtaW5pbXVtIGFsbG93ZWQgdmFsdWUgZm9yIGEgcmFuZ2Ugd2lkZ2V0LiAqL1xuICAgIHZhbHVlTWluOiAnYXJpYS12YWx1ZW1pbicsXG4gICAgLyoqIERlZmluZXMgdGhlIGN1cnJlbnQgdmFsdWUgZm9yIGEgcmFuZ2Ugd2lkZ2V0LiAqL1xuICAgIHZhbHVlTm93OiAnYXJpYS12YWx1ZW5vdycsXG4gICAgLyoqIERlZmluZXMgdGhlIGh1bWFuIHJlYWRhYmxlIHRleHQgYWx0ZXJuYXRpdmUgb2YgYXJpYS12YWx1ZW5vdyBmb3IgYSByYW5nZSB3aWRnZXQuICovXG4gICAgdmFsdWVUZXh0OiAnYXJpYS12YWx1ZXRleHQnLFxufTtcbmV4cG9ydHMuYXJpYSA9IE9iamVjdC5mcmVlemUoYXJpYSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9hcmlhLWF0dHJpYnV0ZXMuanNcbi8vIG1vZHVsZSBpZCA9IDQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogVHVybnMgc3RyaW5nIGJvb2xlYW4gaW50byByZWFsIGJvb2xlYW4uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHMgLSBBIHN0cmluZyB0aGF0IG1heSBiZSAndHJ1ZScuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiAndHJ1ZScuXG4gKi9cbmNvbnN0IHRvQm9vbCA9ICBmdW5jdGlvbiB0b0Jvb2wocykge1xuICAgIHJldHVybiBzID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2U7XG59XG5cbi8qKlxuICogQXBwZW5kIGFuIGFycmF5IG9mIGVsZW1lbnRzIHRvIGFuIGVsZW1lbnQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbSAtIFRoZSBwYXJlbnQgZWxlbWVudC5cbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnRbXX0gY2hpbGRyZW4gLSBBbiBhcnJheSBvZiBlbGVtZW50cyB0byBhcHBlbmQgdG8gaXQuXG4gKi9cbmNvbnN0IGFwcGVuZEFsbCA9IGZ1bmN0aW9uIChlbGVtLCBjaGlsZHJlbikge1xuICAgIGNoaWxkcmVuLmZvckVhY2goKGNoaWxkKSA9PiBlbGVtLmFwcGVuZENoaWxkKGNoaWxkKSk7XG59XG5cbi8qKlxuICogUHJlZGljYXRlIHRlc3Rpbmcgd2hldGhlciBhbiBlbGVtZW50IGlzIHBvc2l0aW9uZWQgaW4gdGhlIHdpbmRvdy5cbiAqXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbSAtIEFuIEhUTUwgZWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufSAtIElzIGl0IG9uc2NyZWVuP1xuICovXG5jb25zdCB2ZXJ0aWNhbGx5SW5XaW5kb3cgPSAgZnVuY3Rpb24oZWxlbSkge1xuICAgIHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCA+PSAwICYmXG4gICAgICAgIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIDw9IHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICA/IHRydWVcbiAgICAgICAgOiBmYWxzZTtcbn1cblxuXG5leHBvcnRzLmFwcGVuZEFsbCA9IGFwcGVuZEFsbDtcbmV4cG9ydHMudG9Cb29sID0gdG9Cb29sO1xuZXhwb3J0cy52ZXJ0aWNhbGx5SW5XaW5kb3cgPSB2ZXJ0aWNhbGx5SW5XaW5kb3c7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy91dGlscy91dGlscy5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL21haW4vanF1ZXJ5Jyk7XG5cbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBDSVRZX09QVElPTlMgIT09ICd1bmRlZmluZWQnICYmIENJVFlfT1BUSU9OUy5kZWZlcikge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBDSVRZX09QVElPTlMuZGVmZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBDSVRZX09QVElPTlMuZGVmZXJbaV0oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZGVmZXJyZWQuanNcbi8vIG1vZHVsZSBpZCA9IDQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIi8qKlxuICogY3JlYXRlcyBhbmQgYWRkcyBhIGZ1bmN0aW9uIGFzIHRoZSBkZWZhdWx0IGVycm9yIGhhbmRsZXIgZm9yIGpRdWVyeSBhamF4IG9wZXJhdGlvbnNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4vanF1ZXJ5JyksXG4gICAgICAgIHdlYlNlcnZpY2UgPSBcIi8vd2ViYXBwcy5jaXR5LmFjLnVrL21hdHJpeC9zZXJ2aWNlcy9qUXVlcnlFcnJvci5waHBcIixcblxuICAgICAgICBub3RpZnkgPSBmdW5jdGlvbiAoZXZlbnQsIGpxWEhSLCBhamF4U2V0dGluZ3MsIGVycm9yVGhyb3duKSB7XG5cbiAgICAgICAgICAgIC8vaW5zZXJ0IGFuIFwiaW1hZ2VcIiB3aGljaCBoYXMgYSB3ZWIgc2VydmljZSBhcyB0aGUgc3JjLFxuICAgICAgICAgICAgLy90aGUgd2ViIHNlcnZpY2Ugc2VuZHMgZW1haWwgdG8gdWNzLXdlYnRlYW1cbiAgICAgICAgICAgICQoXCI8aW1nIC8+XCIsIHtcbiAgICAgICAgICAgICAgICBzcmM6IHdlYlNlcnZpY2UgKyBcIj91PVwiICsgZXNjYXBlKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpICsgXCImcz1cIiArXG4gICAgICAgICAgICAgICAgZXNjYXBlKGFqYXhTZXR0aW5ncy51cmwpICsgXCImdD1cIiArIGFqYXhTZXR0aW5ncy50eXBlICsgXCImZT1cIiArIGVzY2FwZShlcnJvclRocm93biksXG4gICAgICAgICAgICAgICAgc3R5bGU6IFwiZGlzcGxheTogbm9uZVwiXG4gICAgICAgICAgICB9KS5hcHBlbmRUbyhcIiNmb290ZXJcIik7XG5cbiAgICAgICAgfTtcblxuICAgIC8vcmVnaXN0ZXIgdGhpcyBhcyBhIGdsb2JhbCBhamF4IGV2ZW50IGhhbmRsZXJcbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChkb2N1bWVudCkuYWpheEVycm9yKG5vdGlmeSk7XG4gICAgfSk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9qcy1lcnJvci1ub3RpZmllci5qc1xuLy8gbW9kdWxlIGlkID0gNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4vanF1ZXJ5JyksXG4gICAgICAgIGRlYnVnID0gcmVxdWlyZSgnLi4vdXRpbHMvZGVidWcnKSxcblxuICAgICAgICBjcmVhdGVHYWxsZXJ5ID0gcmVxdWlyZSgnLi9mdW5jcy9jcmVhdGUtZ2FsbGVyeScpLFxuICAgICAgICBkb3dubG9hZEZpbGVUeXBlcyA9IHJlcXVpcmUoJy4vZnVuY3MvZG93bmxvYWQtZmlsZS10eXBlcycpLFxuICAgICAgICB2aWV3cG9ydENoYW5nZWQgPSByZXF1aXJlKCcuL2Z1bmNzL3ZpZXdwb3J0LWNoYW5nZWQnKSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIG9iamVjdCB0byBob2xkIGdvb2dsZSBtYXBzIG1hcmtlcnNcbiAgICAgICAgICovXG4gICAgICAgIGdvb2dsZU1hcHNNYXJrZXJzID0ge30sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIG92ZXJsYXkgcGFuZSBmb3IgbWFwXG4gICAgICAgICAqL1xuICAgICAgICBtYXBPdmVybGF5UGFuZSA9IG51bGwsXG4gICAgICAgIC8qKlxuICAgICAgICAgKlxuICAgICAgICAgKiBXaGF0IG5lZWRzIHRvIGhhcHBlbiBhZnRlciBhIGJ4c2xpZGVyIGNhcm91c2VsIGhhcyBmaW5pc2hlZCBsb2FkaW5nOlxuICAgICAgICAgKiAxLiBpbmplY3QgY29udHJvbHMgaW50byBAd2lkZ2V0LiBmaW5kcyBkZWZhdWx0IGJ4c2xpZGVyIGNvbnRyb2xzLCByZXBsYWNlIHdpdGggZm9udCBhd2Vzb21lIGljb25zIGFuZCBhcHBlbmQgaW4gd2lkZ2V0XG4gICAgICAgICAqIDIuIGFkZCBzY3JvbGxhYmxlIGNsYXNzIHRvIHdpZGdldCBjb250ZW50XG4gICAgICAgICAqIDMuIHJlbW92ZSBsb2FkaW5nIHNwaW5uZXJcbiAgICAgICAgICogQHBhcmFtIGpRdWVyeSB3aWRnZXQ6IGEganF1ZXJ5IHdyYXBwZWQgLndpZGdldCAobmVlZGVkIGZvciB3aWRnZXQgY29udHJvbHMpXG4gICAgICAgICAqIEBwYXJhbSBzdHJpbmcgbWlkZGxlQnV0dG9uVGV4dDogd2hhdCB0byB3cml0ZSBvbiB0aGUgbWlkZGxlIGJ1dHRvbiAoZGVmYXVsdHMgdG8gXCJBbGxcIikgKG5lZWRlZCBmb3Igd2lkZ2V0IGNvbnRyb2xzKVxuICAgICAgICAgKiBAcGFyYW0gc3RyaW5nIGFsbExpbms6IHRoZSBcImFsbFwiIG1pZGRsZSBidXR0b24gaHJlZiAobmVlZGVkIGZvciB3aWRnZXQgY29udHJvbHMpXG4gICAgICAgICAqL1xuICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkID0gZnVuY3Rpb24gKHdpZGdldCwgYWxsTGluaywgbWlkZGxlQnV0dG9uVGV4dCkge1xuXG4gICAgICAgICAgICB2YXIgbGVmdFdpZGdldEJ1dHRvbiA9IFwiPGkgY2xhc3M9XFxcIiBmYSBmYS1jYXJldC1sZWZ0XFxcIj48L2k+XCIsXG4gICAgICAgICAgICAgICAgcmlnaHRXaWRnZXRCdXR0b24gPSBcIjxpIGNsYXNzPVxcXCIgZmEgZmEtY2FyZXQtcmlnaHRcXFwiPjwvaT5cIixcbiAgICAgICAgICAgIC8vIGNhcm91c2VsIGNvbnRyb2xzXG4gICAgICAgICAgICAgICAgcHJldmlvdXNCdXR0b24gPSB3aWRnZXQuZmluZChcIi5ieC1wcmV2XCIpLFxuICAgICAgICAgICAgICAgIG5leHRCdXR0b24gPSB3aWRnZXQuZmluZChcIi5ieC1uZXh0XCIpLFxuICAgICAgICAgICAgICAgIGlucHV0TWlkZGxlQnV0dG9uVGV4dCA9IG1pZGRsZUJ1dHRvblRleHQgPyBtaWRkbGVCdXR0b25UZXh0IDogXCJBbGxcIjtcblxuICAgICAgICAgICAgcHJldmlvdXNCdXR0b24uZW1wdHkoKS5hcHBlbmQobGVmdFdpZGdldEJ1dHRvbik7XG4gICAgICAgICAgICBuZXh0QnV0dG9uLmVtcHR5KCkuYXBwZW5kKHJpZ2h0V2lkZ2V0QnV0dG9uKTtcbiAgICAgICAgICAgIC8vYWRkIHRoZSBcImFsbFwiIGJ1dHRvbiBiZXR3ZWVuIHByZXZpb3VzIGFuZCBuZXh0IGJ1dHRvbnMgaWYgaXQgaXMgbmVlZGVkXG4gICAgICAgICAgICBpZiAoYWxsTGluaykge1xuICAgICAgICAgICAgICAgIHByZXZpb3VzQnV0dG9uLmFmdGVyKFwiPGEgaHJlZj1cXFwiXCIgKyBhbGxMaW5rICsgXCJcXFwiIGNsYXNzPVxcXCJieC1hbGxcXFwiID5cIiArIGlucHV0TWlkZGxlQnV0dG9uVGV4dCArIFwiPC9hPlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpZGdldC5maW5kKFwiLmJ4LWNvbnRyb2xzLWRpcmVjdGlvblwiKS5hcHBlbmRUbyh3aWRnZXQpO1xuICAgICAgICAgICAgd2lkZ2V0LmNoaWxkcmVuKCdoMicpLmFkZENsYXNzKCdjb250cm9scy1kaXJlY3Rpb24nKTtcblxuICAgICAgICAgICAgLy9hZGQgY2xhc3NcbiAgICAgICAgICAgIHdpZGdldC5maW5kKFwiLndpZGdldC1jb250ZW50XCIpLmFkZENsYXNzKFwic2Nyb2xsYWJsZVwiKTtcblxuICAgICAgICAgICAgLy9yZW1vdmUgd2lkZ2V0IGxvYWRpbmcgc3Bpbm5lclxuICAgICAgICAgICAgd2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcblxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBuZXdzIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdE5ld3MgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciBuZXdzV2lkZ2V0ID0gJChcIiNuZXdzLXdpZGdldFwiKSxcbiAgICAgICAgICAgICAgICBuZXdzTGlzdCA9IG5ld3NXaWRnZXQuZmluZChcIiNuZXdzLXJlc3VsdHNcIiksXG4gICAgICAgICAgICAgICAgYWxsTGluayA9IFwiLy93d3cuY2l0eS5hYy51ay9uZXdzXCIsXG4gICAgICAgICAgICAgICAgc2hvd0Ftb3VudCA9IDM7XG5cbiAgICAgICAgICAgIC8vcmVmb3JtYXQgdGhlIGNvbnRlbnQgaW50byBjb2x1bW4gc2l6ZXMgYmFzZWQgb24gZGV0ZXJtaW5lZCBzaXplLCBpZiB0aGVyZSBhcmUgbW9yZSB0aGFuIHNob3dBbW91bnQgaXRlbXNcbiAgICAgICAgICAgIGlmICgkKFwiI25ld3MtcmVzdWx0cyA+IC5hcnRpY2xlXCIpLnNpemUoKSA+IHNob3dBbW91bnQpIHtcbiAgICAgICAgICAgICAgICAvL3NldCB1cCBzb3J0YWJsZVxuICAgICAgICAgICAgICAgIG5ld3NMaXN0LndyYXBDaGlsZHJlbih7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkRWxlbTogXCIuYXJ0aWNsZVwiLFxuICAgICAgICAgICAgICAgICAgICBzZXRzOiBzaG93QW1vdW50XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgLy9sYXVuY2ggYnhzbGlkZXJcbiAgICAgICAgICAgICAgICBuZXdzTGlzdC5ieFNsaWRlcih7XG4gICAgICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYXVzZTogMTUwMDAsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcGFnZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBpbmZpbml0ZUxvb3A6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkKG5ld3NXaWRnZXQsIGFsbExpbmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL3JlbW92ZSB3aWRnZXQgbG9hZGluZyBzcGlubmVyLCBjYXNlIHdoZXJlIHRoZSBjYXJvdXNlbCBpc24ndCBuZWVkZWRcbiAgICAgICAgICAgICAgICBuZXdzV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogZXZlbnRzIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdEV2ZW50cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgdmFyIGV2ZW50c1dpZGdldCA9ICQoXCIjZXZlbnRzLXdpZGdldFwiKSxcbiAgICAgICAgICAgICAgICBldmVudHNMaXN0ID0gJChcIiNldmVudHMtcmVzdWx0c1wiKSxcbiAgICAgICAgICAgICAgICBhbGxMaW5rID0gXCIvL3d3dy5jaXR5LmFjLnVrL2V2ZW50c1wiLFxuICAgICAgICAgICAgICAgIHNob3dBbW91bnQgPSAzO1xuXG4gICAgICAgICAgICAvL2NsaWNrIGFueXdoZXJlIG9uIGV2ZW50XG4gICAgICAgICAgICAkKFwiLnZldmVudFwiLCBldmVudHNMaXN0KS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gJCh0aGlzKS5maW5kKFwiYVwiKS5hdHRyKFwiaHJlZlwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKCQoXCIjZXZlbnRzLXJlc3VsdHMgPiAudmV2ZW50XCIpLnNpemUoKSA+IHNob3dBbW91bnQpIHtcbiAgICAgICAgICAgICAgICAvL3NvcnQgdGhlIGNoaWxkcmVuIGludG8gZ3JvdXBzIG9mIHNob3dBbW91bnRcbiAgICAgICAgICAgICAgICBldmVudHNMaXN0LndyYXBDaGlsZHJlbih7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkRWxlbTogXCIuZXZlbnRcIixcbiAgICAgICAgICAgICAgICAgICAgc2V0czogc2hvd0Ftb3VudFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGV2ZW50c0xpc3QuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZUNvbnRyb2xPbkVuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZChldmVudHNXaWRnZXQsIGFsbExpbmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL3JlbW92ZSB3aWRnZXQgbG9hZGluZyBzcGlubmVyLCBjYXNlIHdoZXJlIHRoZSBjYXJvdXNlbCBpc24ndCBuZWVkZWRcbiAgICAgICAgICAgICAgICBldmVudHNXaWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sLy9lbmQgaW5pdEV2ZW50c1xuXG4gICAgICAgIGluaXRGbGlja3IgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciAkd2lkZ2V0ID0gJChcIiNmbGlja3Itd2lkZ2V0XCIpLFxuICAgICAgICAgICAgICAgICRzbGlkZVdyYXBwZXIgPSAkd2lkZ2V0LmZpbmQoXCJ1bFwiKSxcbiAgICAgICAgICAgICAgICBsb2FkZWRPdGhlclBpY3MsXG4gICAgICAgICAgICAgICAgYnhTbGlkZXJDYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICBkZWJ1ZyhcImZsaWNrciBjYWxsYmFjay4uLlwiKTtcblxuICAgICAgICAgICAgICAgICAgICAkKFwiLndpZGdldC1jb250ZW50XCIsICR3aWRnZXQpLmVhY2goZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2ZpbmQgdGhlIHVsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3RkaXYgPSAkKFwidWwgZGl2OmZpcnN0LWNoaWxkXCIsIHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy91bCA9ICQoXCJ1bFwiLCB0aGlzKSwgZGVmaW5lZCBub3QgdXNlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNKcSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0ID0gZmlyc3RkaXYuaGVpZ2h0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGggPSBmaXJzdGRpdi53aWR0aCgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2FkZCBjbGFzc2VzXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzSnEuYWRkQ2xhc3MoXCJzY3JvbGxhYmxlXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2FkZCBjc3MgdG8gLndpZGdldC1jb250ZW50XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzSnEuc3RvcCgpLmFuaW1hdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibWluLWhlaWdodFwiOiBoZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc0pxLmNzcyhcIndpZHRoXCIsIHdpZHRoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9yZW1vdmUgbG9hZGluZyBpY29uIHdoZW4gdGhlIGNvbnRlbnQgaXMgcmVhZHlcbiAgICAgICAgICAgICAgICAgICAgICAgICR3aWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGFmdGVyQnhTbGlkZXJMb2FkZWQoJHdpZGdldCk7XG5cbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvL2F0dGFjaCBhbiBldmVudCB0byBpbml0IHRoZSByZXN0IG9mIHRoZSBwaWNzXG4gICAgICAgICAgICAkd2lkZ2V0Lm1vdXNlZW50ZXIoZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgLy93ZSBvbmx5IHdhbnQgdG8gcnVuIHRoaXMgb25jZVxuICAgICAgICAgICAgICAgIGlmIChsb2FkZWRPdGhlclBpY3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxvYWRlZE90aGVyUGljcyA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAvL3RyYW5zbGF0ZSBhbGwgdGhlIHNwYW4uaW1hZ2V1cmxcInMgaW50byBhY3R1YWwgaW1hZ2VzXG4gICAgICAgICAgICAgICAgLy8oc2F2ZXMgc29tZSByZW5kZXJpbmcgdGltZSlcbiAgICAgICAgICAgICAgICAkKFwiYSAuaW1hZ2V1cmxcIiwgJHdpZGdldCkuZWFjaChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIHRoaXNKcSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gdGhpc0pxLnRleHQoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZ1RhZyA9IFwiPGltZyBzcmM9XFxcIlwiICsgdGV4dCArIFwiXFxcIiBhbHQ9XFxcIlxcXCI+XCI7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc0pxLnBhcmVudCgpLnRleHQoXCJcIikucHJlcGVuZChpbWdUYWcpO1xuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAkKFwicCAuaW1hZ2V1cmxcIiwgJHdpZGdldCkuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB0aGlzSnEgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCA9IHRoaXNKcS50ZXh0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZUF0dHIgPSBcImJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIHRleHQgKyBcIik7XCI7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc0pxLnBhcmVudCgpLmF0dHIoXCJzdHlsZVwiLCBzdHlsZUF0dHIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzSnEucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vc2V0IHVwIHNjcm9sbGFibGVcbiAgICAgICAgICAgICRzbGlkZVdyYXBwZXIuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbmZpbml0ZUxvb3A6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgbWluU2xpZGVzOiAxLFxuICAgICAgICAgICAgICAgIG1heFNsaWRlczogNCxcbiAgICAgICAgICAgICAgICBzbGlkZVdpZHRoOiAzMzAsXG4gICAgICAgICAgICAgICAgc2xpZGVNYXJnaW46IDAsXG4gICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LC8vZW5kIGluaXRGbGlja3JcblxuICAgICAgICAvKipcbiAgICAgICAgICogY291cnNlcyB3aWRnZXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRDb3Vyc2VzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgJHdpZGdldCA9ICQoXCIjY291cnNlcy13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgd2lkZ2V0Q29udGVudCA9ICR3aWRnZXQuZmluZChcIi53aWRnZXQtY29udGVudFwiKTtcblxuICAgICAgICAgICAgd2lkZ2V0Q29udGVudC5hY2NvcmRpb24oe1xuICAgICAgICAgICAgICAgIGhlaWdodFN0eWxlOiBcImNvbnRlbnRcIixcbiAgICAgICAgICAgICAgICBjb2xsYXBzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGFuaW1hdGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGljb25zOiB7XG4gICAgICAgICAgICAgICAgICAgIFwiaGVhZGVyXCI6IFwidWktaWNvbi10cmlhbmdsZS0xLXNcIixcbiAgICAgICAgICAgICAgICAgICAgXCJoZWFkZXJTZWxlY3RlZFwiOiBcInVpLWljb24tdHJpYW5nbGUtMS1uXCJcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNyZWF0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkKCR3aWRnZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0sLy9lbmQgaW5pdENvdXJzZXNcblxuICAgICAgICAvKipcbiAgICAgICAgICogdGVzdGltb25pYWxzIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFRlc3RpbW9uaWFscyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciAkdGVzdGltb25pYWxzV2lkZ2V0ID0gJChcIiN0ZXN0aW1vbmlhbHMtd2lkZ2V0XCIpLFxuICAgICAgICAgICAgICAgIHdpZGdldENvbnRlbnQgPSAkdGVzdGltb25pYWxzV2lkZ2V0LmZpbmQoXCIud2lkZ2V0LWNvbnRlbnRcIiksXG4gICAgICAgICAgICAgICAgdGVzdGltb25pYWxzTGlzdCA9IHdpZGdldENvbnRlbnQuZmluZChcInVsXCIpLFxuICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2s7XG5cbiAgICAgICAgICAgIC8vY2hlY2sgdGhlcmUgaXMgbW9yZSB0aGFuIDEgdGVzdGltb25pYWxzIGFuZCBpZiBzbywgc3RhcnQgdGhlIGNhcm91c2VsXG4gICAgICAgICAgICBpZiAoJChcImxpXCIsIHRlc3RpbW9uaWFsc0xpc3QpLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhcIkxlc3MgdGhhbiAyIHRlc3RpbW9uaWFscywgbm8gbmVlZCBmb3IgY2Fyb3VzZWxcIik7XG4gICAgICAgICAgICAgICAgJHRlc3RpbW9uaWFsc1dpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmFkZENsYXNzKFwid2lkZ2V0LW9uZS1pdGVtXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vYWRkIGNvbnRyb2xzXG4gICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZCgkdGVzdGltb25pYWxzV2lkZ2V0KTtcbiAgICAgICAgICAgICAgICAkdGVzdGltb25pYWxzV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vaW5pdGlhbGlzZSBieHNsaWRlclxuICAgICAgICAgICAgdGVzdGltb25pYWxzTGlzdC5ieFNsaWRlcih7XG4gICAgICAgICAgICAgICAgYXV0bzogZmFsc2UsXG4gICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYXVzZTogMTUwMDAsXG4gICAgICAgICAgICAgICAgc2xpZGVNYXJnaW46IDEwLFxuICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbmZpbml0ZUxvb3A6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LC8vZW5kIGluaXRUZXN0aW1vbmlhbHNcblxuICAgICAgICAvKipcbiAgICAgICAgICogcHJvZmlsZXMgd2lkZ2V0XG4gICAgICAgICAqL1xuICAgICAgICBpbml0UHJvZmlsZXMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciAkcHJvZmlsZXNXaWRnZXQgPSAkKFwiI3Byb2ZpbGVzLXdpZGdldFwiKSxcbiAgICAgICAgICAgICAgICB3aWRnZXRDb250ZW50ID0gJHByb2ZpbGVzV2lkZ2V0LmZpbmQoXCIud2lkZ2V0LWNvbnRlbnRcIiksXG4gICAgICAgICAgICAgICAgcHJvZmlsZXNMaXN0ID0gd2lkZ2V0Q29udGVudC5maW5kKFwidWxcIiksXG4gICAgICAgICAgICAgICAgYnhTbGlkZXJDYWxsYmFjazsvL2VuZCB2YXJzXG5cbiAgICAgICAgICAgIC8vY2hlY2sgdGhlcmUgaXMgbW9yZSB0aGFuIDEgdGVzdGltb25pYWxzIGFuZCBpZiBzbywgc3RhcnQgdGhlIGNhcm91c2VsXG4gICAgICAgICAgICBpZiAoJChcImxpXCIsIHByb2ZpbGVzTGlzdCkubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgICAgIGRlYnVnKFwiTGVzcyB0aGFuIDIgdGVzdGltb25pYWxzLCBubyBuZWVkIGZvciBjYXJvdXNlbFwiKTtcbiAgICAgICAgICAgICAgICAkcHJvZmlsZXNXaWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnhTbGlkZXJDYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL2FkZCBjb250cm9sc1xuICAgICAgICAgICAgICAgIGFmdGVyQnhTbGlkZXJMb2FkZWQoJHByb2ZpbGVzV2lkZ2V0KTtcbiAgICAgICAgICAgICAgICAkcHJvZmlsZXNXaWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy9pbml0aWFsaXNlIGJ4c2xpZGVyXG4gICAgICAgICAgICBwcm9maWxlc0xpc3QuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpbmZpbml0ZUxvb3A6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LC8vZW5kIHByb2ZpbGVzV2lkZ2V0c1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBzcG90bGlnaHQgb24gcmVzZWFyY2ggd2lkZ2V0XG4gICAgICAgICAqL1xuICAgICAgICBpbml0U3BvdGxpZ2h0UmVzZWFyY2ggPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciAkc3BvdGxpZ2h0UmVzZWFyY2hXaWRnZXQgPSAkKFwiI3Nwb3RsaWdodC1yZXNlYXJjaC13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgd2lkZ2V0Q29udGVudCA9ICRzcG90bGlnaHRSZXNlYXJjaFdpZGdldC5maW5kKFwiLndpZGdldC1jb250ZW50XCIpLFxuICAgICAgICAgICAgICAgIHNwb3RsaWdodFJlc2VhcmNoTGlzdCA9IHdpZGdldENvbnRlbnQuZmluZChcInVsXCIpLFxuICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2s7Ly9lbmQgdmFyc1xuXG4gICAgICAgICAgICAvL2NoZWNrIHRoZXJlIGlzIG1vcmUgdGhhbiAxIHNwb3RsaWdodCBvbiByZXNlYXJjaCBpdGVtcyBhbmQgaWYgc28sIHN0YXJ0IHRoZSBjYXJvdXNlbFxuICAgICAgICAgICAgaWYgKCQoXCJsaVwiLCBzcG90bGlnaHRSZXNlYXJjaExpc3QpLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhcIkxlc3MgdGhhbiAyIHNwb3RsaWdodCBvbiByZXNlYXJjaCwgbm8gbmVlZCBmb3IgY2Fyb3VzZWxcIik7XG4gICAgICAgICAgICAgICAgJHNwb3RsaWdodFJlc2VhcmNoV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuYWRkQ2xhc3MoXCJ3aWRnZXQtb25lLWl0ZW1cIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy9hZGQgY29udHJvbHNcbiAgICAgICAgICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkKCRzcG90bGlnaHRSZXNlYXJjaFdpZGdldCk7XG4gICAgICAgICAgICAgICAgJHNwb3RsaWdodFJlc2VhcmNoV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vaW5pdGlhbGlzZSBieHNsaWRlclxuICAgICAgICAgICAgc3BvdGxpZ2h0UmVzZWFyY2hMaXN0LmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSwvL2VuZCBpbml0U3BvdGxpZ2h0UmVzZWFyY2hcblxuICAgICAgICAvKipcbiAgICAgICAgICogUlNTIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFJzcyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgdmFyICR3aWRnZXQgPSAkKFwiI3Jzcy13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgd2lkZ2V0Q29udGVudCA9ICR3aWRnZXQuZmluZChcIi53aWRnZXQtY29udGVudFwiKSxcbiAgICAgICAgICAgICAgICBpdGVtcyA9IHdpZGdldENvbnRlbnQuZmluZChcIi5pdGVtc1wiKTsgLy9lbmQgdmFyc1xuXG4gICAgICAgICAgICBpZiAoaXRlbXMuY2hpbGRyZW4oKS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgLy9sb2FkIHVwIGJ4c2xpZGVyXG4gICAgICAgICAgICAgICAgaXRlbXMuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZUNvbnRyb2xPbkVuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZCgkd2lkZ2V0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vZG9uJ3QgbG9hZCB0aGUgYnhzbGlkZXIgY2Fyb3VzZWwgLCBqdXN0IHNob3cgd2lkZ2V0XG4gICAgICAgICAgICAgICAgJHdpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2FsbCB0byBhY3Rpb24gd2lkZ2V0XG4gICAgICAgICAqL1xuICAgICAgICBpbml0Q2FsbFRvQWN0aW9uID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgc3RhcnRfZGF0ZSA9ICQoXCIjc3RhcnRfZGF0ZVwiKS52YWwoKSxcbiAgICAgICAgICAgICAgICBlbmRfZGF0ZSA9ICQoXCIjZW5kX2RhdGVcIikudmFsKCksXG4gICAgICAgICAgICAgICAgc2QgPSBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIGVkID0gbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICBjZCxcbiAgICAgICAgICAgICAgICBzcGxpdERhdGUgPSBmdW5jdGlvbiAoZHQsIGlkdCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXRlQXJyYXkgPSBkdC5zcGxpdChcIi9cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmRvZkFycmF5ID0gZGF0ZUFycmF5WzJdLnNwbGl0KFwiIFwiKTtcblxuICAgICAgICAgICAgICAgICAgICBpZHQuc2V0RnVsbFllYXIoZW5kb2ZBcnJheVswXSk7XG4gICAgICAgICAgICAgICAgICAgIGlkdC5zZXRNb250aChkYXRlQXJyYXlbMV0gLSAxKTtcbiAgICAgICAgICAgICAgICAgICAgaWR0LnNldERhdGUoZGF0ZUFycmF5WzBdKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaWR0O1xuXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgc2QgPSBzcGxpdERhdGUoc3RhcnRfZGF0ZSwgc2QpO1xuICAgICAgICAgICAgZWQgPSBzcGxpdERhdGUoZW5kX2RhdGUsIGVkKTtcblxuICAgICAgICAgICAgLy9jdXJyZW50IGRhdGVcbiAgICAgICAgICAgIGNkID0gbmV3IERhdGUoKTtcblxuICAgICAgICAgICAgaWYgKGVkID49IGNkICYmIHNkIDw9IGNkKSB7XG5cbiAgICAgICAgICAgICAgICAvL1Nob3cgdGhlIG9uIGRhdGVcbiAgICAgICAgICAgICAgICAkKFwiI2NvbnRlbnRfb25fZGF0ZVwiKS5hdHRyKFwiY2xhc3NcIiwgXCJ3aWRnZXQtY29udGVudCBjdGEtd2lkZ2V0LXNob3dcIik7XG4gICAgICAgICAgICAgICAgJChcIiNjb250ZW50X291dF9vZl9kYXRlXCIpLmF0dHIoXCJjbGFzc1wiLCBcImN0YS13aWRnZXQtaGlkZVwiKTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIC8vU2hvdyBvdXQgb2YgZGF0ZVxuICAgICAgICAgICAgICAgICQoXCIjY29udGVudF9vdXRfb2ZfZGF0ZVwiKS5hdHRyKFwiY2xhc3NcIiwgXCJ3aWRnZXQtY29udGVudCBjdGEtd2lkZ2V0LXNob3dcIik7XG4gICAgICAgICAgICAgICAgJChcIiNjb250ZW50X29uX2RhdGVcIikuYXR0cihcImNsYXNzXCIsIFwiY3RhLXdpZGdldC1oaWRlXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGluaXRpYXRlcyBhbiBpbWFnZSBnYWxsZXJ5IHdpZGdldFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJuIHtvYmplY3QgfHwgdW5kZWZpbmVkfSByZXR1cm5zIHRoZSBnYWxsZXJpYSBqUXVlcnkgb2JqZWN0IGlmXG4gICAgICAgICAqIHN1Y2Nlc3NmdWwgZWxzZSB1bmRlZmluZWQgLSBmb3IgaW5zdGFuY2UgaWYgJGdhbGxlcnkgaXMgbm90IGEgalF1ZXJ5IG9iamVjdFxuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdEdhbGxlcnkgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciAkZ2FsbGVyeSA9ICQoXCIjZ2FsbGVyeS13aWRnZXQgLmdhbGxlcnlcIik7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlR2FsbGVyeSgkZ2FsbGVyeSwgdHJ1ZSk7XG5cbiAgICAgICAgfSxcblxuICAgICAgICBpbml0RnJlZVRleHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKFwiZGl2LmZyZWUtdGV4dCBhXCIpLnVuYmluZChcImNsaWNrXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbWFzdGVyIHdpZGdldCBpbml0aWFsaXNlciwgY2FsbHMgYWxsIHRoZSBvdGhlciBpbml0e21hcCxldmVudHMuLi59IGZ1bmN0aW9uc1xuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFdpZGdldHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciB3aWRnZXRzID0ge1xuICAgICAgICAgICAgICAgICAgICBcImV2ZW50c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0RXZlbnRzXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwibmV3c1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0TmV3c1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcImZsaWNrclwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0RmxpY2tyXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiY291cnNlc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0Q291cnNlc1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcInRlc3RpbW9uaWFsc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0VGVzdGltb25pYWxzXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwicnNzXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGY6IGluaXRSc3NcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJnYWxsZXJ5XCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGY6IGluaXRHYWxsZXJ5XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiY3RhXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGY6IGluaXRDYWxsVG9BY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJmcmVldGV4dFwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0RnJlZVRleHRcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJwcm9maWxlc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0UHJvZmlsZXNcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJzcG90bGlnaHQtcmVzZWFyY2hcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdFNwb3RsaWdodFJlc2VhcmNoXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgaWQ7XG5cblxuICAgICAgICAgICAgLy9sb29wIHRocm91Z2ggZWFjaCB3aWRnZXQgdHlwZSBhbmQgaW5pdCBpZiBwcmVzZW50XG4gICAgICAgICAgICBmb3IgKGlkIGluIHdpZGdldHMpIHtcbiAgICAgICAgICAgICAgICBpZiAod2lkZ2V0cy5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9iYWlsIGhlcmUgaWYgdGhlIHdpZGdldCBpcyBub3QgcHJlc2VudFxuICAgICAgICAgICAgICAgICAgICBpZiAoJChcIiNcIiArIGlkICsgXCItd2lkZ2V0XCIpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoXCJubyBcIiArIGlkICsgXCIgd2lkZ2V0XCIpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aWRnZXRzW2lkXS5mICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlYnVnKFwiY2FuJ3QgZmluZCBpbml0IGZ1bmMgb2YgXCIgKyBpZCArIFwiIHdpZGdldFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vcnVuIHRoZSBpbml0XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWJ1ZyhcInJ1bm5pbmcgaW5pdCBmdW5jIG9mIFwiICsgaWQgKyBcIiB3aWRnZXRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWRnZXRzW2lkXS5mLmFwcGx5KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gaW5pdFdpZGdldHM7XG5cbn0oKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vd2lkZ2V0cy5qc1xuLy8gbW9kdWxlIGlkID0gNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwiLyoqXG4gKiB1c2VkIGZvciBkZXRlY3RpbmcgZG93bmxvYWQgZmlsZXR5cGVzIGJ5IGV4dGVuc2lvblxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gW1wiZG9jXCIsIFwiZG9jeFwiLCBcInhsc1wiLCBcInhsc3hcIiwgXCJwcHRcIiwgXCJwcHR4XCIsIFwicHBzXCIsIFwicHBzeFwiLFxuICAgIFwicGRmXCIsIFwianBnXCIsIFwicG5nXCIsIFwiZ2lmXCIsIFwiemlwXCIsIFwidHh0XCIsIFwicnRmXCIsIFwibXAzXCJdO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vZnVuY3MvZG93bmxvYWQtZmlsZS10eXBlcy5qc1xuLy8gbW9kdWxlIGlkID0gNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuXG4gICAgICAgIHZpZXdwb3J0Q2hhbmdlZCA9IHJlcXVpcmUoJy4uL2Z1bmNzL3ZpZXdwb3J0LWNoYW5nZWQnKSxcbiAgICAgICAgZ2V0V2luZG93V2lkdGggPSByZXF1aXJlKCcuLi9mdW5jcy9nZXQtd2luZG93LXdpZHRoJyksXG5cbiAgICAgICAgYmluZE1lZ2FEZEV2ZW50cyA9IHJlcXVpcmUoJy4vYmluZC1tZWdhLWV2ZW50cycpLFxuXG4gICAgICAgICR3aW5kb3cgPSAkKHdpbmRvdyksXG4gICAgICAgICRib2R5ID0gJChcImJvZHlcIiksXG5cbiAgICAgICAgJGdsb2JhbE5hdiA9ICRib2R5LmZpbmQoXCIjZ2xvYmFsLW5hdjFcIiksXG4gICAgICAgICRuYXZMaXMgPSAkZ2xvYmFsTmF2LmNoaWxkcmVuKFwibGlcIiksXG4gICAgICAgICRtZWdhTGlua3MgPSAkZ2xvYmFsTmF2LmZpbmQoXCIubWVnYVwiKSxcbiAgICAgICAgJGRyb3BzID0gJGdsb2JhbE5hdi5maW5kKFwiLmRyb3BcIiksXG5cblxuICAgICAgICAkcmVzcG9uc2l2ZVRvZ2dsZXJzID0gJChcIi5yZXNwb25zaXZlLXRvZ2dsZXJcIiksXG4gICAgICAgICR0b2dnbGVlcyA9ICQoXCIudG9nZ2xlXCIpLFxuICAgICAgICAkdXRpbE5hdiA9ICQoXCIjdXRpbC1uYXZcIiksXG5cbiAgICAgICAgYnJlYWtwb2ludHMgPSByZXF1aXJlKCcuL2JyZWFrcG9pbnRzJyksXG5cbiAgICAgICAgb25SZXNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodmlld3BvcnRDaGFuZ2VkKCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV3V2lkdGggPSBnZXRXaW5kb3dXaWR0aCh3aW5kb3cpO1xuXG4gICAgICAgICAgICAgICAgaWYgKG5ld1dpZHRoID49IGJyZWFrcG9pbnRzLndpZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9iaWcgdG8gc21hbGw/XG4gICAgICAgICAgICAgICAgICAgICRib2R5LmFkZENsYXNzKFwic2NyZWVuLXdpZGVcIikucmVtb3ZlQ2xhc3MoXCJzY3JlZW4tdGhpbiBzY3JlZW4tbWVkaXVtXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgZ29pbmcgdG8gZGVza3RvcCBzaXplLFxuICAgICAgICAgICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIGJpbmQgdGhlIGV2ZW50IGhhbmRsZXJzXG4gICAgICAgICAgICAgICAgICAgIGJpbmRNZWdhRGRFdmVudHMoJG1lZ2FMaW5rcywgJG5hdkxpcywgJGRyb3BzKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBjbG9zZSBhbnkgb3BlbmVycyB3aGljaCB3ZXJlIG9wZW4gYmVmb3JlIHdpZHRoIGNoYW5nZVxuICAgICAgICAgICAgICAgICAgICAkcmVzcG9uc2l2ZVRvZ2dsZXJzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkdG9nZ2xlZXMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICR1dGlsTmF2LnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChuZXdXaWR0aCA+PSBicmVha3BvaW50cy5tZWRpdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgLy9zbWFsbCB0byBiaWc/XG4gICAgICAgICAgICAgICAgICAgICRib2R5LmFkZENsYXNzKFwic2NyZWVuLW1lZGl1bVwiKS5yZW1vdmVDbGFzcyhcInNjcmVlbi10aGluIHNjcmVlbi13aWRlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkdXRpbE5hdi5hZGRDbGFzcyhcImhpZGRlblwiKTtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3BzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkYm9keS5hZGRDbGFzcyhcInNjcmVlbi10aGluXCIpLnJlbW92ZUNsYXNzKFwic2NyZWVuLW1lZGl1bSBzY3JlZW4td2lkZVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKG9uUmVzaXplKTtcbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKCk7XG5cbiAgICAgICAgICAgIC8vIGF0dGFjaCBjbGljayBldmVudHMgb24gbW9iaWxlIG5hdmlnYXRpb24gdG9nZ2xlcnNcbiAgICAgICAgICAgICRyZXNwb25zaXZlVG9nZ2xlcnMub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuXG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgJHRvZ2dsZSA9ICRzZWxmLm5leHQoXCIudG9nZ2xlXCIpO1xuXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICRzZWxmLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICR0b2dnbGUudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gaW5pdCB0aGUgZ2xvYmFsIG5hdmlnYXRpb24gZHJvcCBkb3duc1xuICAgICAgICAgICAgJGRyb3BzLmhpZGUoKTtcblxuICAgICAgICAgICAgaWYgKGdldFdpbmRvd1dpZHRoKHdpbmRvdykgPCBicmVha3BvaW50cy53aWRlKSB7XG4gICAgICAgICAgICAgICAgJHV0aWxOYXYuY2hpbGRyZW4oXCJsaVwiKS5jbG9uZSgpLmFwcGVuZFRvKCRnbG9iYWxOYXYpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGluaXQ7XG59KCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDUxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXG5cblxuICAgIC8vIHdlIG9ubHkgbmVlZCB0aGlzIHN0dWZmIG9uIGEgZGVza3RvcCBzaXplZCBicm93c2VyXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcbiAgICAgICAgJGJvZHkgPSAkKCdib2R5JyksXG4gICAgICAgICRxdWVyeSA9ICQoXCIjc2VhcmNoICNxdWVyeVwiKSxcblxuICAgICAgICBicmVha3BvaW50cyA9IHJlcXVpcmUoJy4vYnJlYWtwb2ludHMnKSxcblxuICAgICAgICBib3VuZERyb3BFdmVudHMgPSBmYWxzZSxcblxuICAgICAgICBiaW5kTWVnYURkRXZlbnRzID0gZnVuY3Rpb24gKCRtZWdhTGlua3MsICRuYXZMaXMsICRkcm9wcykge1xuICAgICAgICAgICAgaWYgKCFib3VuZERyb3BFdmVudHMpIHtcblxuICAgICAgICAgICAgICAgIC8vYXR0YWNoIGNsaWNrLCBrZXlkb3duIGFuZCBmb2N1cyBoYW5kbGVyXG4gICAgICAgICAgICAgICAgJG1lZ2FMaW5rcy5vbihcImNsaWNrIGtleWRvd24gZm9jdXNcIiwgZnVuY3Rpb24gKGUpIHtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgJHRhcmdldCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICAkbGkgPSAkdGFyZ2V0LmNsb3Nlc3QoXCJsaVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRkcm9wID0gJGxpLmZpbmQoXCIuZHJvcFwiKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBpZiB3ZSBoYXZlIGJvdW5kIHRoZSBldmVudCwgYnV0IGFyZSBub3cgb24gc21hbGxlciB3aWR0aCB3ZSBkb24ndCB3YW50IHRvXG4gICAgICAgICAgICAgICAgICAgIC8vIHNob3cgdGhlIG1lZ2EgZHJvcGRvd25cbiAgICAgICAgICAgICAgICAgICAgaWYgKENJVFkuZ2V0V2luZG93V2lkdGgod2luZG93KSA8IGJyZWFrcG9pbnRzLmRlc2t0b3ApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vd2hhdCB0eXBlIG9mIGV2ZW50IHdhcyBmaXJlZD9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJrZXlkb3duXCIgJiYgZS5rZXlDb2RlICE9PSAxMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiBhIGtleXByZXNzIGV2ZW50IGJ1dCBidXR0b24gaGl0IHdhc24ndCBlbnRlclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJmb2N1c1wiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2Fsd2F5cyBraWxsIGFsbCBkcm9wIGRvd25zIHdoZW4gYSBtZWdhTGluayByZWNlaXZlcyBmb2N1cyB0aGVuIGRyb3Agb3V0IG9mIGZuXG4gICAgICAgICAgICAgICAgICAgICAgICAkbmF2TGlzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgJGRyb3BzLmhpZGUoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vaWYgd2UgYXJlIGhlcmUgdGhlbiB0aGUgZXZlbnQgaXMgZWl0aGVyIGEgY2xpY2sgb3IgXCJlbnRlclwiIGtleXByZXNzXG5cbiAgICAgICAgICAgICAgICAgICAgLy9yZW1vdmUgYWxsIGFjdGl2ZSBjbGFzcyBmcm9tIGFsbCBvdGhlciBsaW5rc1xuICAgICAgICAgICAgICAgICAgICAkbmF2TGlzLm5vdCgkbGlbMF0pLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkZHJvcHMubm90KCRkcm9wWzBdKS5oaWRlKCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICRsaS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3AudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICRkcm9wLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBvbiBibHVyIG9mIGxhc3QgbWVnYSBsaW5rIChzZWFyY2ggaW5wdXQgcXVlcnkgd2lsbCBiZSBmb2N1c3NlZCksIGNsb3NlXG4gICAgICAgICAgICAgICAgLy8gYW55IG9wZW4gZHJvcCBkb3duXG4gICAgICAgICAgICAgICAgJHF1ZXJ5Lm9uKFwiZm9jdXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkbmF2TGlzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkZHJvcHMuaGlkZSgpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy9kb24ndCBwcm9wb2dhdGUgY2xpY2tzIGluc2lkZSBtZWdhIG1lbnVzXG4gICAgICAgICAgICAgICAgJGRyb3BzLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vY2xvc2UgYW55IG9wZW4gbWVnYSBtZW51cyB3aGVuIHBhZ2UgaXMgY2xpY2tlZFxuICAgICAgICAgICAgICAgICRib2R5Lm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkZHJvcHMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIikuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAkbmF2TGlzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYm91bmREcm9wRXZlbnRzID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIHJldHVybiBiaW5kTWVnYURkRXZlbnRzO1xufSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvYmluZC1tZWdhLWV2ZW50cy5qc1xuLy8gbW9kdWxlIGlkID0gNTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuXG4gICAgICAgIHNsaWRlcnMgPSBbXG4gICAgICAgICAgICByZXF1aXJlKCcuL3Byb2ZpbGVzLWNhcm91c2VsJyksXG4gICAgICAgICAgICByZXF1aXJlKCcuL3N0YXQtY2Fyb3VzZWwnKVxuICAgICAgICBdLFxuXG4gICAgICAgIGNyZWF0ZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2YXIgJGNhcm91c2VsV3JhcHBlciA9ICQoZGF0YS5pZCksXG4gICAgICAgICAgICAgICAgJGNhcm91c2VsID0gJGNhcm91c2VsV3JhcHBlci5maW5kKFwiLmJ4c2xpZGVyXCIpLFxuICAgICAgICAgICAgICAgIHNsaWRlQ291bnQgPSAkY2Fyb3VzZWwuY2hpbGRyZW4oKS5sZW5ndGg7XG5cbiAgICAgICAgICAgICRjYXJvdXNlbFdyYXBwZXIucmVtb3ZlQ2xhc3MoXCJjYXJvdXNlbC1sb2FkaW5nXCIpO1xuICAgICAgICAgICAgaWYgKHNsaWRlQ291bnQgPiAxKSB7XG4gICAgICAgICAgICAgICAgJGNhcm91c2VsLmJ4U2xpZGVyKGRhdGEub3B0aW9ucyhzbGlkZUNvdW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2xpZGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNyZWF0ZShzbGlkZXJzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIHJldHVybiBpbml0O1xufSgpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDUzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlkOiAnI3Byb2ZpbGVzLWNhcm91c2VsJyxcbiAgICBvcHRpb25zOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgIHBhZ2VyOiB0cnVlLFxuICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgICBzbGlkZVdpZHRoOiAzMzAsXG4gICAgICAgICAgICBzbGlkZU1hcmdpbjogMCxcbiAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiBmYWxzZSxcbiAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICBtYXhTbGlkZXM6IDEsXG4gICAgICAgICAgICBwcmV2VGV4dDogXCI8aSBjbGFzcz1cXFwiZmEgZmEtYW5nbGUtbGVmdFxcXCI+PC9pPlwiLFxuICAgICAgICAgICAgbmV4dFRleHQ6IFwiPGkgY2xhc3M9XFxcImZhIGZhLWFuZ2xlLXJpZ2h0XFxcIj48L2k+XCJcbiAgICAgICAgfTtcbiAgICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvcHJvZmlsZXMtY2Fyb3VzZWwuanNcbi8vIG1vZHVsZSBpZCA9IDU0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlkOiAnI3N0YXRpc3RpYy1jYXJvdXNlbCcsXG4gICAgb3B0aW9uczogZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbnRyb2xzOiB0cnVlLFxuICAgICAgICAgICAgcGFnZXI6IGZhbHNlLFxuICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgICBzbGlkZVdpZHRoOiAzMDAsXG4gICAgICAgICAgICBzbGlkZU1hcmdpbjogNjAsXG4gICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcbiAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICBtaW5TbGlkZXM6IDEsXG4gICAgICAgICAgICBtb3ZlU2xpZGVzOiAxLFxuICAgICAgICAgICAgbWF4U2xpZGVzOiAobiA+PSAzKSA/IDMgOiAyLFxuICAgICAgICAgICAgcHJldlRleHQ6IFwiPGkgY2xhc3M9XFxcIiBmYSBmYS1jYXJldC1sZWZ0XFxcIj48L2k+XCIsXG4gICAgICAgICAgICBuZXh0VGV4dDogXCI8aSBjbGFzcz1cXFwiIGZhIGZhLWNhcmV0LXJpZ2h0XFxcIj48L2k+XCJcbiAgICAgICAgfTtcbiAgICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvc3RhdC1jYXJvdXNlbC5qc1xuLy8gbW9kdWxlIGlkID0gNTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==
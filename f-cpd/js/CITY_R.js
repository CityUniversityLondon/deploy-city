/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	
	var CITY = __webpack_require__(1),
	    deferred = __webpack_require__(40),
	    initJsFailureNotifier = __webpack_require__(41),
	    initWidgets = __webpack_require__(42),
	    initOnResize = __webpack_require__(44),
	    initCustomSliders = __webpack_require__(47);
	
	CITY.init();
	initJsFailureNotifier();
	deferred();
	initOnResize();
	initWidgets();
	initCustomSliders();


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	        customAJAX = __webpack_require__(16),
	        viewportChanged = __webpack_require__(17),
	        createGallery = __webpack_require__(18),
	        createSlider = __webpack_require__(19),
	        getWindowWidth = __webpack_require__(20),
	        initDropdowns = __webpack_require__(21),
	        initDynamicGmap = __webpack_require__(22),
	        initAzListing = __webpack_require__(23),
	        imageAccordion = __webpack_require__(24),
	        initSeeMore = __webpack_require__(25),
	        imageCreditation = __webpack_require__(26),
	        initPlaceholderHallback = __webpack_require__(27),
	        initImageCarousel = __webpack_require__(28),
	        initWhiteCards = __webpack_require__(29),
	        searchAutoComplete = __webpack_require__(30),
	        initNewsEventsStrip = __webpack_require__(31),
	        initCookieNotice = __webpack_require__(32),
	        headerPrimaryNav = __webpack_require__(34),
	        headerNavs = __webpack_require__(35),
	        footer = __webpack_require__(36),
	        popupDialog = __webpack_require__(37),
	        scrollTo = __webpack_require__(11),
	        responsiveTables = __webpack_require__(38),
	        cyclicPopup = __webpack_require__(39);
	
	    /**
	     * The main CITY wrapper object
	     * @version $Revision: 6291 $ ($Date: 2012-09-05 16:06:30 +0100 (Wed, 05 Sep 2012) $)
	     * @author City Web Team
	     */
	    var CITY = (function (w) {
	
	            "use strict";
	
	            /**
	             * The object to hold all loadable scripts, add an object here to allow it's loading in a page
	             *
	             * Each child object has three properties:
	             *   description: a short description of the script
	             *           src: the filename of the script
	             *       [async]: Whether to load the script asynchronously (assumed false unless given)
	             *
	             * @var Object
	             */
	            var scripts = {
	                    googleMapsApi: {
	                        description: "google maps api",
	                        src: "https://maps.googleapis.com/maps/api/js?key=AIzaSyC2tMpI7FFnlIjNvO0VrTPIhfGAvQhAfr0&sensor=false"
	                    },
	                    flowplayer: {
	                        description: "include flowplayer for pages with videos",
	                        src: "lib/flowplayer/flowplayer-3.2.4.min.js"
	                    },
	                    flowplayerEmbed: {
	                        description: "Embed code for flowplayer",
	                        src: "lib/flowplayer/flowplayer.embed-3.0.3.min.js"
	                    },
	                    swfobject: {
	                        description: "swfobject for youtube video(s)",
	                        src: "lib/swfobject/swfobject.js"
	                    },
	                    highcharts: {
	                        description: "JQuery charting plugin",
	                        src: "lib/jquery/plugins/highcharts/highcharts-4-1-4.js"
	                    },
	                    jVectorMap: {
	                        description: "jQuery plugin for SVG world map",
	                        src: "lib/jquery/plugins/vector-map/jquery.vector-map.min.js"
	                    },
	                    worldMap: {
	                        description: "map svg",
	                        src: "lib/jquery/plugins/vector-map/world-en.js"
	                    },
	                    buildingTheVision: {
	                        description: "building the vision specific scripts",
	                        src: "buildingTheVision.js"
	                    },
	                    library: {
	                        description: "library site scripts",
	                        src: "library.js"
	                    },
	                    location: {
	                        description: "Computer Room site scripts",
	                        src: "location.js"
	                    }
	                },
	
	                /***************************************************************************
	                 * GLOBAL VARIABLES
	                 ***************************************************************************/
	
	                /**
	                 * The location of external scripts (with trailing slash)
	                 * @var String
	                 */
	                srcPrefix = "//" + document.location.hostname.replace(/www|intranet/, "s1").replace("cass.", "").replace("citysport.org.uk", "city.ac.uk") + "/cityr/js/",
	
	
	                /**
	                 * The version number to prepend to the file name, set in page
	                 * @var String
	                 */
	                version = w.cityVersion || "123456789.",
	
	
	                /**
	                 * Lazyload function, injects a <script> element into the page head
	                 *
	                 * now proxies to yepnope
	                 *
	                 * @param {Object} jsHandle: The Object from CITY.scripts to load
	                 * @param {String} callback: The name of the callback to be executed after this script has loaded
	                 */
	                load = function (jsHandle, callback) {
	
	                    //work out full path
	                    var path = (function () {
	
	                        var script = scripts[jsHandle];
	
	                        if (/^https?:\/\//.test(script.src)) {
	                            return script.src;
	                        }
	
	                        return srcPrefix +
	                            (/plugins|lib/.test(script.src) ? "" : "modules/") +
	                            script.src;
	
	                    }());
	
	                    yepnope({
	                        load: path,
	                        callback: callback
	                    });
	
	                },
	
	                setVersion = function (v) {
	                    version = v;
	                },
	
	
	                /***************************************************************************
	                 * USEFUL GLOBAL FUNCTIONS
	                 ***************************************************************************/
	
	
	                /**
	                 * Stuff needed on everypage - explore city, login etc.
	                 */
	                initPage = function () {
	
	                    var $body = $("body"),
	                        $form = $body.find("#search, #header__search__form"),
	                        $searchForm = $body.find(".search-form[data-autocomplete-status!='off']"),
	                        $searchFormQuery = $searchForm.find(".search-form__query"),
	                        $query = $form.find("#query"),
	                        indexForm = $("#fb-queryform"),
	                        indexQuery = $("#search-query", indexForm),
	                        searchPageAutoCompleteCollection = $body.attr("id") === "intranet" ? "intranet" : "main-all",
	                        $galleries = $("#content").find(".gallery"),
	                        azListings = $('.az-single-page'),
	                        autoCompleteCollection = $searchForm.attr("data-collection"),
	                        // navigation
	
	                        $primaryNav = $("#primary-nav"),
	                        $secondaryNav = $("#secondary-nav"),
	                        $secondaryNavLis = $("#secondary-nav > li"),
	
	                        $carouselObj = $("#promo-area"), //carousel container
	                        // UI elements
	                        $accordions = $body.find(".accordion"),
	                        $responsiveTabs = $body.find(".responsive-tabs"),
	                        // misc.
	                        currentUrl = $primaryNav.data('url') || '',
	                        modifySecNav = currentUrl.indexOf('/my-country/') < 0;
	                    //end initPage vars
	
	
	                    // svg fallback
	                    if (!Modernizr.svg) {
	                        $('#header__logo img').attr('src', function () {
	                            return $(this).attr('src').replace('.svg', '.png');
	                        });
	                    }
	
	                    headerPrimaryNav();
	                    headerNavs();
	                    footer();
	                    $responsiveTabs.accordionTabs();
	                    initDropdowns();
	                    initAzListing(azListings);
	                    imageAccordion();
	                    initSeeMore();
	                    initWhiteCards();
	                    initNewsEventsStrip();
	                    createSlider($carouselObj);
	                    initPlaceholderHallback();
	                    initImageCarousel();
	                    initCookieNotice($);
	                    popupDialog();
	                    responsiveTables();
	                    cyclicPopup();
	                    // We need to wait for the DOM to be modified before
	                    // traversing for Image Credits
	                    imageCreditation();
	
	
	                    $galleries.each(function () {
	                        createGallery($(this));
	                    });
	
	                    //some helper stuff to style primary navigation
	
	                    if (currentUrl.indexOf('//www.city.ac.uk/news') >= 0) {
	                        $secondaryNav.hide();
	                    } else if (modifySecNav) {
	                        // add secondary-nav-siblings to secondary-nav only if we have some
	                        if ($("ol#secondary-nav > li:last > a").length &&
	                            $("ol#secondary-nav-siblings").length) {
	                            // if the link to this page isn't in secondary-nav-siblings, just add the siblings
	                            if ($("ol#secondary-nav-siblings a").map(function () {
	                                    return this.href
	                                })
	                                    .toArray()
	                                    .indexOf($("ol#secondary-nav > li:last > a")[0].href) === -1) {
	                                $("ol#secondary-nav").append($("<li>").html($("ol#secondary-nav-siblings")));
	                            } else {
	                                // otherwise replace the secondary nav completely
	                                $("ol#secondary-nav > li:last").empty().append($("ol#secondary-nav-siblings"));
	                            }
	                        }
	
	                        $("ol#primary-nav li, ol#secondary-nav li").removeClass("selected");
	                        $("ol#primary-nav a[href=\"" + currentUrl + "\"], ol#secondary-nav a[href=\"" + currentUrl + "\"]").parent("li").addClass("selected");
	
	                        if ($primaryNav.find(".current").length === 0 && $secondaryNav.find(".selected").length === 0) {
	                            //we are on the home page of the section so hide secondary nav and add helper class
	                            $secondaryNav.hide();
	                            $primaryNav.addClass("top-level");
	                        }
	
	                        //hide secondary level if empty
	                        if ($secondaryNavLis.length === 0) {
	                            $secondaryNav.hide();
	                        } else {
	                            //secondary nav is definitely showing, add some classes to help styling
	
	                            //if we have secondary-nav-siblings the prevous li element will be the parent from one level up
	                            // e.g. http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012/test-level
	                            $("#secondary-nav-siblings").parent().prev("li").addClass("end");
	
	                            // When the current page is part of the breadcrumb its previous sibling reguires a class of "selected-join"
	                            // we only want this to happen on direct children of $secondaryNav
	                            // e.g http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012
	                            $secondaryNav.find("> li.selected").prev().addClass("selected-join");
	
	                            if ($secondaryNav.find(".selected").length !== 0) {
	                                //add a class of ".parent" to active element in primary nav so we can un-bold it
	                                $primaryNav.find(".current").addClass("parent");
	                            }
	                        }
	                    }
	
	                    // initalise any accordions found
	                    $accordions.accordion({
	                        heightStyle: "content",
	                        collapsible: true,
	                        active: false,
	                        animate: false,
	                        icons: {
	                            "header": "ui-icon-triangle-1-s",
	                            "headerSelected": "ui-icon-triangle-1-n"
	                        },
	                        activate: function (event, ui) {
	                            scrollTo(ui.newHeader);
	                        }
	                    });
	
	                    //set up autocomplete on search box
	                    searchAutoComplete($form, $query, searchPageAutoCompleteCollection);
	
	                    //set up autocomplete on search box on main search page
	                    searchAutoComplete(indexForm, indexQuery, searchPageAutoCompleteCollection);
	
	                    //set up autocomplete on search box on intranet main search page
	                    searchAutoComplete($searchForm, $searchFormQuery, autoCompleteCollection);
	
	                    // catch any videos that have been manually input
	                    $("iframe[src*='youtube']").each(function () {
	
	                        var $element = $(this),
	                            vidWidth = $element.outerWidth(),
	                            $parent = $element.parent();
	
	                        // don't double wrap an iframe
	                        if (!$parent.hasClass("embed-container")) {
	                            // for elastic objects, we need 2 (!) wrappers
	                            $element.wrap("<div class=\"embed-wrapper\" style=\"width:" + vidWidth + "px\"><div class=\"embed-container\"></div></div>");
	                        }
	
	                    });
	
	                    initDynamicGmap($("#dynamic-gmap"));
	
	                    // hide/show functionality for unit lists (example on subject area pages)
	                    $(".unit-lists .unit-lists-title").click(function () {
	                        $(this).parents(".unit-lists").toggleClass("unit-lists-expanded");
	                    });
	
	                    //hide/show other amount and pass the correct value on City Future Fund page
	                    if ($("#future-fund-forms").length === 1 || $("#racing-form").length === 1) {
	                        $("#cff-regular-donation input[type=radio]").click(function () {
	                            var parentElement = $(this).parent();
	                            $(".donate-appeal").show();
	                            if (parentElement.find(".donation-other-option").is(":checked")) {
	                                parentElement.find(".donation-other-amount").show().find("input").attr("name", "regular_amount");
	                            }
	                            else {
	                                parentElement.find(".donation-other-amount").hide().find("input").attr("name", "").attr("value", "");
	                            }
	                        });
	                        $("#cff-single-donation input[type=radio]").click(function () {
	                            var parentElement = $(this).parent();
	                            if (parentElement.find(".donation-other-option").is(":checked")) {
	                                parentElement.find(".donation-other-amount").show().find("input").attr("name", "tfa_Amountyouwishtod");
	                            }
	                            else {
	                                parentElement.find(".donation-other-amount").hide().find("input").attr("name", "").attr("value", "");
	                            }
	                        });
	                    }
	
	                    $('.media-ribbon .embed-container').videoPreview({showInfo: 0});
	                    $('.widget-content .embed-container').videoPreview();
	                    $('.international-london .embed-container').videoPreview();
	                    $('.social-wall .embed-container').videoPreview();
	                    $('.embed-container.embed-container--default-yt-preview').videoPreview();
	
	                },//end initPage
	
	
	                objectSize = function (object) {
	
	                    var size = 0, key;
	
	                    for (key in object) {
	                        if (object.hasOwnProperty(key)) {
	                            size += 1;
	                        }
	                    }
	
	                    return size;
	
	                },
	
	                /**
	                 * Finds any vid images on a page and replaces them with either a YouTube iframe or SWFObject for FMS vids
	                 * @return: Undefined
	                 */
	                videos = function () {
	
	                    var $youtubeVids = $("img.youtube"),
	                        $fmsVids = $("img.fms"),
	
	                        /*
	                         * Replaces an image element with YouTube iFrame
	                         * @param: {Object} : $el - jQuery object for youTube images to be replaced
	                         * @retun: {Undefined}
	                         */
	                        embedYoutube = function ($youtubeVids) {
	
	                            $youtubeVids.each(function (i, el) {
	
	                                var $el = $(el),
	                                    vidWidth = 500, // default width
	                                    vidHeight = 320, // default height
	                                    videoID = $el.attr("id").replace("vid_", "");
	
	                                $el.replaceWith("<div class=\"embed-wrapper\"><div class=\"embed-container\"><iframe height=" + vidHeight + " width= " + vidWidth + " src=\"//www.youtube.com/embed/" + videoID + "?rel=0&wmode=transparent\" frameborder='0' allowfullscreen></iframe></div></div>");
	                            });
	                        },
	
	                        /*
	                         * Replaces an image element with SWF Object
	                         * @param: {Object} : $el - jQuery object for all fms images to be replaced
	                         * @retun: {Undefined}
	                         */
	                        embedFms = function ($fmsVids) {
	
	                            var splashImages = {
	                                cassStandard: "//s1.city.ac.uk/i/flowplayer-cass.jpg?v=8105",
	                                cassRetina: "",
	                                cityStandard: "//s1.city.ac.uk/i/flowplayer-city.jpg?v=8105",
	                                cityRentina: ""
	                            };
	
	                            $fmsVids.each(function (i, el) {
	
	                                var $el = $(el),
	                                    vidWidth = 687, //default width
	                                    vidHeight = 419, // default height
	                                    elId = $el.attr("id"),
	                                    vidId = elId.replace("vid_", ""),
	                                    expressInstall = "//s1.city.ac.uk/js/swfobject/expressInstall.swf",
	                                    flashtargetversion = "9.0.28",
	                                    flashvars = null,
	                                    params = {
	                                        allowScriptAccess: "always",
	                                        allowfullscreen: "true",
	                                        wmode: "transparent"
	                                    },
	                                    atts = {
	                                        "class": "vidplayer",
	                                        id: vidId
	                                    },
	                                    splashImage = CITY.isCass ? splashImages.cassStandard : splashImages.cityStandard,
	                                    swfCallBack = function (e) {
	                                        $(e.ref).wrap("<div class=\"embed-wrapper\" style=\"width:" + vidWidth + "px\"><div class=\"embed-container\"></div></div>");
	                                    };
	
	                                //if video is included in the course description div of a course N page, width needs to be 419
	                                if ($el.parents(".course-description").length !== 0) {
	                                    vidWidth = 419;
	                                }
	
	                                //vids have different sizes depending on the size of the content div and if they are widescreen on square
	                                if ($el.hasClass("widescreen")) {
	                                    vidHeight = vidWidth * 0.61;
	                                } else {
	                                    vidWidth = 500;
	                                    vidHeight = 320;
	                                }
	
	                                if (!swfobject.hasFlashPlayerVersion(flashtargetversion)) {
	
	                                    //explain why there is no video
	                                    $el.after("<p class=\"notice-message\"><i class=\"fa fa-exclamation-triangle\" style=\"color : #CCCC00\"></i> You need to have flash player " +
	                                        flashtargetversion + " or greater installed to see the video.</p>" +
	                                        "<p><a href=\"http://get.adobe.com/flashplayer/\">Get Flash Player</a></p>");
	
	
	                                } else {
	
	                                    //config has to be in a string and key and values have to be "quoted" - nightmare
	                                    // construct all the variables to pass to the player -
	                                    // tried to make this a proper json array, didn't work :(
	                                    // IE doesn't like double quotes here so ignore JSHint error
	                                    flashvars = "{'clip': {'provider': 'rtmp'}, 'playlist': [{'url':'" + splashImage + "', 'autoPlay': true}, {'url': '" + vidId.replace('vid_', '') + "/Hi_bandwidth', 'autoPlay': false, 'scaling': 'fit'}], 'plugins': {'rtmp': {'url': '//s1.city.ac.uk/js/flowplayer/flowplayer.rtmp-3.2.3.swf', 'netConnectionUrl': 'rtmp://media.city.ac.uk/flowplayer', 'objectEncoding': '0', 'proxyType': 'none' }, 'controls': {'url': 'flowplayer.controls.swf'} } }";
	
	                                    // initiate the player
	                                    swfobject.embedSWF(
	                                        "//s1.city.ac.uk/js/flowplayer/flowplayer-3.2.6.swf",
	                                        elId,
	                                        vidWidth,
	                                        vidHeight,
	                                        "9.0.0",
	                                        expressInstall,
	                                        {config: flashvars},
	                                        params,
	                                        false,
	                                        swfCallBack
	                                    );
	
	                                } //end has flash if
	
	                            });
	                        };
	
	                    if ($youtubeVids.length) {
	                        embedYoutube($youtubeVids);
	                    }
	                    if ($fmsVids.length) {
	                        yepnope({
	                            load: scripts.swfobject.src,
	                            callback: function () {
	                                embedFms($fmsVids);
	                            }
	                        });
	                    }
	
	                }, // end videos
	
	                /**
	                 * This is our yepnope filter
	                 *
	                 * splices in the version string we have set up in setVersion
	                 * prepends the correct s1 domain, where it hasn't been provided
	                 *
	                 * N.B. will fail if we have an s1 top level folder containing
	                 * dots (see comment below)
	                 *
	                 */
	                yepnopeFilter = function (resource) {
	
	                    var loc, lastItem;
	
	                    /* If we are loading in an absolute url, don't touch it
	                     * this is the regex which fails on a top level folder with dots
	                     *
	                     * matches:
	                     * http://www.external.com/scripts/script.js
	                     * www.external.com/scripts/script.js
	                     * absolute.with.many.sub.domains.domain.com/scripts/script.js
	                     * https://absoulte.with.many.sub.domains.domain.com/scripts/script.js
	                     *
	                     * doesn't match:
	                     * modules/test.js
	                     * lib/subdir/script.js
	                     * lib/subdir.123/script.js
	                     *
	                     * will match when we don't want to:
	                     * toplevel.with.dots/script.js
	                     * lib.v2/jquery/script.js
	                     *
	                     * I think it's an unlikely issue, but if anyone can tweak the regex
	                     * to prevent this please do.
	                     *
	                     */
	                    if (/^(https?:\/\/)?([^\/.]+\.)+[^\/]+\//.test(resource.url)) {
	                        return resource;
	                    }
	
	                    loc =
	
	                        //already contains s1? - don't add prefix
	                        ((/s1/.test(resource.url) ? "" : srcPrefix) +
	                        resource.url)
	
	                        //split for splicing
	                            .split("/");
	
	                    //splice in version
	                    lastItem = loc.length - 1;
	                    loc[lastItem] = version + loc[lastItem];
	
	                    resource.url = loc.join("/");
	
	                    // if on prod and we are loading a module/.js file
	                    // we want .min.js rather than .js
	                    if (/s1\.city/.test(resource.url) && !/js\/lib/.test(resource.url)) {
	
	                        resource.url = resource.url.replace(/js$/, "min.js");
	
	                    }
	
	                    return resource;
	
	                },
	
	                /**
	                 * Initialisation function, called immediately after CITY declaration below
	                 */
	                init = function () {
	
	                    debug("CITY ready (we are in " + document.compatMode + ")");
	
	                    yepnope.addFilter(yepnopeFilter);
	
	                    initPage();
	
	                    //// library home page opening times
	                    if ($('#library').length !== 0) {
	                        yepnope({
	                            load: 'modules/library/library.js',
	                            callback: function () {
	                                debug('loaded library datepicker');
	                            }
	                        });
	                    }
	
	                    // the following needs domready
	                    $(function () {
	
	                        // set up any videos on page
	                        videos();
	
	                        // mobile browser click delay fix
	                        //initFastClickt();
	
	                    });
	                };
	            /**
	             *  This literal defines what methods to make publicly accessible
	             *  outsite CITY
	             */
	            return {
	
	                init: init,
	                load: load,
	                debug: debug,
	                setVersion: setVersion,
	                searchAutoComplete: searchAutoComplete,
	                objectSize: objectSize,
	                getWindowWidth: getWindowWidth,
	                customAJAX: customAJAX,
	                imageCreditation: imageCreditation,
	                //this will be useful in modules
	                s1Server: srcPrefix
	            };
	
	        }(window)
	    ); //end CITY
	
	    window.CITY = CITY;
	
	    return CITY;
	}();


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    __webpack_require__(3);
	    __webpack_require__(5);
	    __webpack_require__(6);
	    __webpack_require__(7);
	
	    __webpack_require__(8)(window.jQuery);
	    __webpack_require__(9)(window.jQuery);
	    __webpack_require__(10)(window.jQuery);
	    __webpack_require__(12)(window.jQuery);
	    __webpack_require__(13)(window.jQuery);
	
	    return window.jQuery;
	}();

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery v1.8.2 jquery.com | jquery.org/license */
	(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,"function"=="function"&&__webpack_require__(4)&&__webpack_require__(4).jQuery&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return p}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))})(window);

/***/ },
/* 4 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;
	
	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 5 */
/***/ function(module, exports) {

	/*! jQuery UI - v1.9.2 - 2016-06-17
	 * http://jqueryui.com
	 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js
	 * Copyright jQuery Foundation and other contributors; Licensed MIT */
	
	(function(e,t){function i(t,i){var n,a,o,r=t.nodeName.toLowerCase();return"area"===r?(n=t.parentNode,a=n.name,t.href&&a&&"map"===n.nodeName.toLowerCase()?(o=e("img[usemap=#"+a+"]")[0],!!o&&s(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:"a"===r?t.href||i:i)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return"hidden"===e.css(this,"visibility")}).length}var n=0,a=/^ui-id-\d+$/;e.ui=e.ui||{},e.ui.version||(e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,i){return"number"==typeof t?this.each(function(){var s=this;setTimeout(function(){e(s).focus(),i&&i.call(s)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css("zIndex",i);if(this.length)for(var s,n,a=e(this[0]);a.length&&a[0]!==document;){if(s=a.css("position"),("absolute"===s||"relative"===s||"fixed"===s)&&(n=parseInt(a.css("zIndex"),10),!isNaN(n)&&0!==n))return n;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var s=e.attr(t,"tabindex"),n=isNaN(s);return(n||s>=0)&&i(t,!n)}}),e(function(){var t=document.body,i=t.appendChild(i=document.createElement("div"));i.offsetHeight,e.extend(i.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=100===i.offsetHeight,e.support.selectstart="onselectstart"in i,t.removeChild(i).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(i,s){function n(t,i,s,n){return e.each(a,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),n&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var a="Width"===s?["Left","Right"]:["Top","Bottom"],o=s.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+s]=function(i){return i===t?r["inner"+s].call(this):this.each(function(){e(this).css(o,n(this,i)+"px")})},e.fn["outer"+s]=function(t,i){return"number"!=typeof t?r["outer"+s].call(this,t):this.each(function(){e(this).css(o,n(this,t,!0,i)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=6===parseFloat(t[1],10)}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,i,s){var n,a=e.ui[t].prototype;for(n in s)a.plugins[n]=a.plugins[n]||[],a.plugins[n].push([i,s[n]])},call:function(e,t,i){var s,n=e.plugins[t];if(n&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(s=0;n.length>s;s++)e.options[n[s][0]]&&n[s][1].apply(e.element,i)}},contains:e.contains,hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return t[s]>0?!0:(t[s]=1,n=t[s]>0,t[s]=0,n)},isOverAxis:function(e,t,i){return e>t&&t+i>e},isOver:function(t,i,s,n,a,o){return e.ui.isOverAxis(t,s,a)&&e.ui.isOverAxis(i,n,o)}}))})(jQuery);(function(e,t){var i=0,s=Array.prototype.slice,n=e.cleanData;e.cleanData=function(t){for(var i,s=0;null!=(i=t[s]);s++)try{e(i).triggerHandler("remove")}catch(a){}n(t)},e.widget=function(i,s,n){var a,o,r,h,l=i.split(".")[0];i=i.split(".")[1],a=l+"-"+i,n||(n=s,s=e.Widget),e.expr[":"][a.toLowerCase()]=function(t){return!!e.data(t,a)},e[l]=e[l]||{},o=e[l][i],r=e[l][i]=function(e,i){return this._createWidget?(arguments.length&&this._createWidget(e,i),t):new r(e,i)},e.extend(r,o,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),h=new s,h.options=e.widget.extend({},h.options),e.each(n,function(t,i){e.isFunction(i)&&(n[t]=function(){var e=function(){return s.prototype[t].apply(this,arguments)},n=function(e){return s.prototype[t].apply(this,e)};return function(){var t,s=this._super,a=this._superApply;return this._super=e,this._superApply=n,t=i.apply(this,arguments),this._super=s,this._superApply=a,t}}())}),r.prototype=e.widget.extend(h,{widgetEventPrefix:o?h.widgetEventPrefix:i},n,{constructor:r,namespace:l,widgetName:i,widgetBaseClass:a,widgetFullName:a}),o?(e.each(o._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,r,i._proto)}),delete o._childConstructors):s._childConstructors.push(r),e.widget.bridge(i,r)},e.widget.extend=function(i){for(var n,a,o=s.call(arguments,1),r=0,h=o.length;h>r;r++)for(n in o[r])a=o[r][n],o[r].hasOwnProperty(n)&&a!==t&&(i[n]=e.isPlainObject(a)?e.isPlainObject(i[n])?e.widget.extend({},i[n],a):e.widget.extend({},a):a);return i},e.widget.bridge=function(i,n){var a=n.prototype.widgetFullName||i;e.fn[i]=function(o){var r="string"==typeof o,h=s.call(arguments,1),l=this;return o=!r&&h.length?e.widget.extend.apply(null,[o].concat(h)):o,r?this.each(function(){var s,n=e.data(this,a);return n?e.isFunction(n[o])&&"_"!==o.charAt(0)?(s=n[o].apply(n,h),s!==n&&s!==t?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):t):e.error("no such method '"+o+"' for "+i+" widget instance"):e.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method '"+o+"'")}):this.each(function(){var t=e.data(this,a);t?t.option(o||{})._init():e.data(this,a,new n(o,this))}),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,s){s=e(s||this.defaultElement||this)[0],this.element=e(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),s!==this&&(e.data(s,this.widgetName,this),e.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===s&&this.destroy()}}),this.document=e(s.style?s.ownerDocument:s.document||s),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(i,s){var n,a,o,r=i;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof i)if(r={},n=i.split("."),i=n.shift(),n.length){for(a=r[i]=e.widget.extend({},this.options[i]),o=0;n.length-1>o;o++)a[n[o]]=a[n[o]]||{},a=a[n[o]];if(i=n.pop(),s===t)return a[i]===t?null:a[i];a[i]=s}else{if(s===t)return this.options[i]===t?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var a,o=this;"boolean"!=typeof i&&(n=s,s=i,i=!1),n?(s=a=e(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,a=this.widget()),e.each(n,function(n,r){function h(){return i||o.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof r?o[r]:r).apply(o,arguments):t}"string"!=typeof r&&(h.guid=r.guid=r.guid||h.guid||e.guid++);var l=n.match(/^(\w+)\s*(.*)$/),u=l[1]+o.eventNamespace,d=l[2];d?a.delegate(d,u,h):s.bind(u,h)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var o,r=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),o=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&e.effects&&(e.effects.effect[r]||e.uiBackCompat!==!1&&e.effects[r])?s[t](n):r!==t&&s[r]?s[r](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e){var t=!1;e(document).mouseup(function(){t=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!t){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a="string"==typeof this.options.cancel&&i.target.nodeName?e(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===e.data(i.target,this.widgetName+".preventClickEvent")&&e.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return s._mouseMove(e)},this._mouseUpDelegate=function(e){return s._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),t=!0,!0)):!0}},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(e,t){function i(e,t,i){return[parseInt(e[0],10)*(c.test(e[0])?t/100:1),parseInt(e[1],10)*(c.test(e[1])?i/100:1)]}function s(t,i){return parseInt(e.css(t,i),10)||0}e.ui=e.ui||{};var n,a=Math.max,o=Math.abs,r=Math.round,h=/left|center|right/,l=/top|center|bottom/,u=/[\+\-]\d+%?/,d=/^\w+/,c=/%$/,p=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var i,s,a=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=a.children()[0];return e("body").append(a),i=o.offsetWidth,a.css("overflow","scroll"),s=o.offsetWidth,i===s&&(s=a[0].clientWidth),a.remove(),n=i-s},getScrollInfo:function(t){var i=t.isWindow?"":t.element.css("overflow-x"),s=t.isWindow?"":t.element.css("overflow-y"),n="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,a="scroll"===s||"auto"===s&&t.height<t.element[0].scrollHeight;return{width:n?e.position.scrollbarWidth():0,height:a?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),s=e.isWindow(i[0]);return{element:i,isWindow:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return p.apply(this,arguments);t=e.extend({},t);var n,c,f,m,g,v=e(t.of),_=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(_),y=v[0],x=(t.collision||"flip").split(" "),w={};return 9===y.nodeType?(c=v.width(),f=v.height(),m={top:0,left:0}):e.isWindow(y)?(c=v.width(),f=v.height(),m={top:v.scrollTop(),left:v.scrollLeft()}):y.preventDefault?(t.at="left top",c=f=0,m={top:y.pageY,left:y.pageX}):(c=v.outerWidth(),f=v.outerHeight(),m=v.offset()),g=e.extend({},m),e.each(["my","at"],function(){var e,i,s=(t[this]||"").split(" ");1===s.length&&(s=h.test(s[0])?s.concat(["center"]):l.test(s[0])?["center"].concat(s):["center","center"]),s[0]=h.test(s[0])?s[0]:"center",s[1]=l.test(s[1])?s[1]:"center",e=u.exec(s[0]),i=u.exec(s[1]),w[this]=[e?e[0]:0,i?i[0]:0],t[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===x.length&&(x[1]=x[0]),"right"===t.at[0]?g.left+=c:"center"===t.at[0]&&(g.left+=c/2),"bottom"===t.at[1]?g.top+=f:"center"===t.at[1]&&(g.top+=f/2),n=i(w.at,c,f),g.left+=n[0],g.top+=n[1],this.each(function(){var h,l,u=e(this),d=u.outerWidth(),p=u.outerHeight(),y=s(this,"marginLeft"),k=s(this,"marginTop"),D=d+y+s(this,"marginRight")+b.width,T=p+k+s(this,"marginBottom")+b.height,S=e.extend({},g),N=i(w.my,u.outerWidth(),u.outerHeight());"right"===t.my[0]?S.left-=d:"center"===t.my[0]&&(S.left-=d/2),"bottom"===t.my[1]?S.top-=p:"center"===t.my[1]&&(S.top-=p/2),S.left+=N[0],S.top+=N[1],e.support.offsetFractions||(S.left=r(S.left),S.top=r(S.top)),h={marginLeft:y,marginTop:k},e.each(["left","top"],function(i,s){e.ui.position[x[i]]&&e.ui.position[x[i]][s](S,{targetWidth:c,targetHeight:f,elemWidth:d,elemHeight:p,collisionPosition:h,collisionWidth:D,collisionHeight:T,offset:[n[0]+N[0],n[1]+N[1]],my:t.my,at:t.at,within:_,elem:u})}),e.fn.bgiframe&&u.bgiframe(),t.using&&(l=function(e){var i=m.left-S.left,s=i+c-d,n=m.top-S.top,r=n+f-p,h={target:{element:v,left:m.left,top:m.top,width:c,height:f},element:{element:u,left:S.left,top:S.top,width:d,height:p},horizontal:0>s?"left":i>0?"right":"center",vertical:0>r?"top":n>0?"bottom":"middle"};d>c&&c>o(i+s)&&(h.horizontal="center"),p>f&&f>o(n+r)&&(h.vertical="middle"),h.important=a(o(i),o(s))>a(o(n),o(r))?"horizontal":"vertical",t.using.call(this,e,h)}),u.offset(e.extend(S,{using:l}))})},e.ui.position={fit:{left:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollLeft:s.offset.left,o=s.width,r=e.left-t.collisionPosition.marginLeft,h=n-r,l=r+t.collisionWidth-o-n;t.collisionWidth>o?h>0&&0>=l?(i=e.left+h+t.collisionWidth-o-n,e.left+=h-i):e.left=l>0&&0>=h?n:h>l?n+o-t.collisionWidth:n:h>0?e.left+=h:l>0?e.left-=l:e.left=a(e.left-r,e.left)},top:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollTop:s.offset.top,o=t.within.height,r=e.top-t.collisionPosition.marginTop,h=n-r,l=r+t.collisionHeight-o-n;t.collisionHeight>o?h>0&&0>=l?(i=e.top+h+t.collisionHeight-o-n,e.top+=h-i):e.top=l>0&&0>=h?n:h>l?n+o-t.collisionHeight:n:h>0?e.top+=h:l>0?e.top-=l:e.top=a(e.top-r,e.top)}},flip:{left:function(e,t){var i,s,n=t.within,a=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=e.left-t.collisionPosition.marginLeft,u=l-h,d=l+t.collisionWidth-r-h,c="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+c+p+f+t.collisionWidth-r-a,(0>i||o(u)>i)&&(e.left+=c+p+f)):d>0&&(s=e.left-t.collisionPosition.marginLeft+c+p+f-h,(s>0||d>o(s))&&(e.left+=c+p+f))},top:function(e,t){var i,s,n=t.within,a=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=e.top-t.collisionPosition.marginTop,u=l-h,d=l+t.collisionHeight-r-h,c="top"===t.my[1],p=c?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,m=-2*t.offset[1];0>u?(s=e.top+p+f+m+t.collisionHeight-r-a,e.top+p+f+m>u&&(0>s||o(u)>s)&&(e.top+=p+f+m)):d>0&&(i=e.top-t.collisionPosition.marginTop+p+f+m-h,e.top+p+f+m>d&&(i>0||d>o(i))&&(e.top+=p+f+m))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,i,s,n,a,o=document.getElementsByTagName("body")[0],r=document.createElement("div");t=document.createElement(o?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in s)t.style[a]=s[a];t.appendChild(r),i=o||document.documentElement,i.insertBefore(t,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=e(r).offset().left,e.support.offsetFractions=n>10&&11>n,t.innerHTML="",i.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var i=e.fn.position;e.fn.position=function(s){if(!s||!s.offset)return i.call(this,s);var n=s.offset.split(" "),a=s.at.split(" ");return 1===n.length&&(n[1]=n[0]),/^\d/.test(n[0])&&(n[0]="+"+n[0]),/^\d/.test(n[1])&&(n[1]="+"+n[1]),1===a.length&&(/left|center|right/.test(a[0])?a[1]="center":(a[1]=a[0],a[0]="center")),i.call(this,e.extend(s,{at:a[0]+n[0]+" "+a[1]+n[1],offset:t}))}}(jQuery)})(jQuery);(function(e){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){"original"!=this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var i=this.options;return this.helper||i.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),i.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,i){if(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",t,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&"y"==this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"==this.options.axis||(this.helper[0].style.top=this.position.top+"px"),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(i=e.ui.ddmanager.drop(this,t)),this.dropped&&(i=this.dropped,this.dropped=!1);for(var s=this.element[0],n=!1;s&&(s=s.parentNode);)s==document&&(n=!0);if(!n&&"original"===this.options.helper)return!1;if("invalid"==this.options.revert&&!i||"valid"==this.options.revert&&i||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,i)){var a=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){a._trigger("stop",t)!==!1&&a._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var i=this.options.handle&&e(this.options.handle,this.element).length?!1:!0;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(i=!0)}),i},_createHelper:function(t){var i=this.options,s=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t])):"clone"==i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"==i.appendTo?this.element[0].parentNode:i.appendTo),s[0]==this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"==this.cssPosition&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&"html"==this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"==this.cssPosition){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;if("parent"==t.containment&&(t.containment=this.helper[0].parentNode),("document"==t.containment||"window"==t.containment)&&(this.containment=["document"==t.containment?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,"document"==t.containment?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,("document"==t.containment?0:e(window).scrollLeft())+e("document"==t.containment?document:window).width()-this.helperProportions.width-this.margins.left,("document"==t.containment?0:e(window).scrollTop())+(e("document"==t.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(t.containment)||t.containment.constructor==Array)t.containment.constructor==Array&&(this.containment=t.containment);else{var i=e(t.containment),s=i[0];if(!s)return;i.offset();var n="hidden"!=e(s).css("overflow");this.containment=[(parseInt(e(s).css("borderLeftWidth"),10)||0)+(parseInt(e(s).css("paddingLeft"),10)||0),(parseInt(e(s).css("borderTopWidth"),10)||0)+(parseInt(e(s).css("paddingTop"),10)||0),(n?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(e(s).css("borderLeftWidth"),10)||0)-(parseInt(e(s).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(n?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(e(s).css("borderTopWidth"),10)||0)-(parseInt(e(s).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i}},_convertPositionTo:function(t,i){i||(i=this.position);var s="absolute"==t?1:-1,n=(this.options,"absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent),a=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"==this.cssPosition?-this.scrollParent.scrollTop():a?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():a?0:n.scrollLeft())*s}},_generatePosition:function(t){var i=this.options,s="absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,n=/(html|body)/i.test(s[0].tagName),a=t.pageX,o=t.pageY;if(this.originalPosition){var r;if(this.containment){if(this.relative_container){var h=this.relative_container.offset();r=[this.containment[0]+h.left,this.containment[1]+h.top,this.containment[2]+h.left,this.containment[3]+h.top]}else r=this.containment;t.pageX-this.offset.click.left<r[0]&&(a=r[0]+this.offset.click.left),t.pageY-this.offset.click.top<r[1]&&(o=r[1]+this.offset.click.top),t.pageX-this.offset.click.left>r[2]&&(a=r[2]+this.offset.click.left),t.pageY-this.offset.click.top>r[3]&&(o=r[3]+this.offset.click.top)}if(i.grid){var l=i.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/i.grid[1])*i.grid[1]:this.originalPageY;o=r?l-this.offset.click.top<r[1]||l-this.offset.click.top>r[3]?l-this.offset.click.top<r[1]?l+i.grid[1]:l-i.grid[1]:l:l;var u=i.grid[0]?this.originalPageX+Math.round((a-this.originalPageX)/i.grid[0])*i.grid[0]:this.originalPageX;a=r?u-this.offset.click.left<r[0]||u-this.offset.click.left>r[2]?u-this.offset.click.left<r[0]?u+i.grid[0]:u-i.grid[0]:u:u}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"==this.cssPosition?-this.scrollParent.scrollTop():n?0:s.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():n?0:s.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]==this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,i,s){return s=s||this._uiHash(),e.ui.plugin.call(this,t,[i,s]),"drag"==t&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i){var s=e(this).data("draggable"),n=s.options,a=e.extend({},i,{item:s.element});s.sortables=[],e(n.connectToSortable).each(function(){var i=e.data(this,"sortable");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",t,a))})},stop:function(t,i){var s=e(this).data("draggable"),n=e.extend({},i,{item:s.element});e.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,"original"==s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,n))})},drag:function(t,i){var s=e(this).data("draggable"),n=this;e.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,e.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!=o&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(n).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",t),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",t),s.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(){var t=e("body"),i=e(this).data("draggable").options;t.css("cursor")&&(i._cursor=t.css("cursor")),t.css("cursor",i.cursor)},stop:function(){var t=e(this).data("draggable").options;t._cursor&&e("body").css("cursor",t._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(t,i){var s=e(this).data("draggable").options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(){var t=e(this).data("draggable");t.scrollParent[0]!=document&&"HTML"!=t.scrollParent[0].tagName&&(t.overflowOffset=t.scrollParent.offset())},drag:function(t){var i=e(this).data("draggable"),s=i.options,n=!1;i.scrollParent[0]!=document&&"HTML"!=i.scrollParent[0].tagName?(s.axis&&"x"==s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-t.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:t.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&"y"==s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-t.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:t.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&"x"==s.axis||(t.pageY-e(document).scrollTop()<s.scrollSensitivity?n=e(document).scrollTop(e(document).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<s.scrollSensitivity&&(n=e(document).scrollTop(e(document).scrollTop()+s.scrollSpeed))),s.axis&&"y"==s.axis||(t.pageX-e(document).scrollLeft()<s.scrollSensitivity?n=e(document).scrollLeft(e(document).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<s.scrollSensitivity&&(n=e(document).scrollLeft(e(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(i,t)}}),e.ui.plugin.add("draggable","snap",{start:function(){var t=e(this).data("draggable"),i=t.options;t.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var i=e(this),s=i.offset();this!=t.element[0]&&t.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(t,i){for(var s=e(this).data("draggable"),n=s.options,a=n.snapTolerance,o=i.offset.left,r=o+s.helperProportions.width,h=i.offset.top,l=h+s.helperProportions.height,u=s.snapElements.length-1;u>=0;u--){var d=s.snapElements[u].left,c=d+s.snapElements[u].width,p=s.snapElements[u].top,f=p+s.snapElements[u].height;if(o>d-a&&c+a>o&&h>p-a&&f+a>h||o>d-a&&c+a>o&&l>p-a&&f+a>l||r>d-a&&c+a>r&&h>p-a&&f+a>h||r>d-a&&c+a>r&&l>p-a&&f+a>l){if("inner"!=n.snapMode){var m=a>=Math.abs(p-l),g=a>=Math.abs(f-h),v=a>=Math.abs(d-r),_=a>=Math.abs(c-o);m&&(i.position.top=s._convertPositionTo("relative",{top:p-s.helperProportions.height,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d-s.helperProportions.width}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c}).left-s.margins.left)}var b=m||g||v||_;if("outer"!=n.snapMode){var m=a>=Math.abs(p-h),g=a>=Math.abs(f-l),v=a>=Math.abs(d-o),_=a>=Math.abs(c-r);m&&(i.position.top=s._convertPositionTo("relative",{top:p,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f-s.helperProportions.height,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c-s.helperProportions.width}).left-s.margins.left)}!s.snapElements[u].snapping&&(m||g||v||_||b)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=m||g||v||_||b}else s.snapElements[u].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=!1}}}),e.ui.plugin.add("draggable","stack",{start:function(){var t=e(this).data("draggable").options,i=e.makeArray(e(t.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});if(i.length){var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(t,i){var s=e(this).data("draggable").options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}})})(jQuery);(function(e){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,i=this.options;if(this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=i.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor==String){"all"==this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw");var s=this.handles.split(",");this.handles={};for(var n=0;s.length>n;n++){var a=e.trim(s[n]),o="ui-resizable-"+a,r=e('<div class="ui-resizable-handle '+o+'"></div>');r.css({zIndex:i.zIndex}),"se"==a&&r.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[a]=".ui-resizable-"+a,this.element.append(r)}}this._renderAxis=function(t){t=t||this.element;for(var i in this.handles){if(this.handles[i].constructor==String&&(this.handles[i]=e(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var s=e(this.handles[i],this.element),n=0;n=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth();var a=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");t.css(a,n),this._proportionallyResize()}e(this.handles[i]).length}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),i.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){i.disabled||(e(this).removeClass("ui-resizable-autohide"),t._handles.show())}).mouseleave(function(){i.disabled||t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var i=this.element;this.originalElement.css({position:i.css("position"),width:i.outerWidth(),height:i.outerHeight(),top:i.css("top"),left:i.css("left")}).insertAfter(i),i.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var i=!1;for(var s in this.handles)e(this.handles[s])[0]==t.target&&(i=!0);return!this.options.disabled&&i},_mouseStart:function(i){var s=this.options,n=this.element.position(),a=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(a.is(".ui-draggable")||/absolute/.test(a.css("position")))&&a.css({position:"absolute",top:n.top,left:n.left}),this._renderProxy();var o=t(this.helper.css("left")),r=t(this.helper.css("top"));s.containment&&(o+=e(s.containment).scrollLeft()||0,r+=e(s.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:r},this.size=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalPosition={left:o,top:r},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof s.aspectRatio?s.aspectRatio:this.originalSize.width/this.originalSize.height||1;var h=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor","auto"==h?this.axis+"-resize":h),a.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(e){var t=this.helper,i=(this.options,this.originalMousePosition),s=this.axis,n=e.pageX-i.left||0,a=e.pageY-i.top||0,o=this._change[s];if(!o)return!1;var r=o.apply(this,[e,n,a]);return this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(r=this._updateRatio(r,e)),r=this._respectSize(r,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(r),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var i=this.options,s=this;if(this._helper){var n=this._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:s.sizeDiff.height,r=a?0:s.sizeDiff.width,h={width:s.helper.width()-r,height:s.helper.height()-o},l=parseInt(s.element.css("left"),10)+(s.position.left-s.originalPosition.left)||null,u=parseInt(s.element.css("top"),10)+(s.position.top-s.originalPosition.top)||null;i.animate||this.element.css(e.extend(h,{top:u,left:l})),s.helper.height(s.size.height),s.helper.width(s.size.width),this._helper&&!i.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(e){this.options,this.offset=this.helper.offset(),i(e.left)&&(this.position.left=e.left),i(e.top)&&(this.position.top=e.top),i(e.height)&&(this.size.height=e.height),i(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=(this.options,this.position),s=this.size,n=this.axis;return i(e.height)?e.width=e.height*this.aspectRatio:i(e.width)&&(e.height=e.width/this.aspectRatio),"sw"==n&&(e.left=t.left+(s.width-e.width),e.top=null),"nw"==n&&(e.top=t.top+(s.height-e.height),e.left=t.left+(s.width-e.width)),e},_respectSize:function(e,t){var s=(this.helper,this._vBoundaries),n=(this._aspectRatio||t.shiftKey,this.axis),a=i(e.width)&&s.maxWidth&&s.maxWidth<e.width,o=i(e.height)&&s.maxHeight&&s.maxHeight<e.height,r=i(e.width)&&s.minWidth&&s.minWidth>e.width,h=i(e.height)&&s.minHeight&&s.minHeight>e.height;r&&(e.width=s.minWidth),h&&(e.height=s.minHeight),a&&(e.width=s.maxWidth),o&&(e.height=s.maxHeight);var l=this.originalPosition.left+this.originalSize.width,u=this.position.top+this.size.height,d=/sw|nw|w/.test(n),c=/nw|ne|n/.test(n);r&&d&&(e.left=l-s.minWidth),a&&d&&(e.left=l-s.maxWidth),h&&c&&(e.top=u-s.minHeight),o&&c&&(e.top=u-s.maxHeight);var p=!e.width&&!e.height;return p&&!e.left&&e.top?e.top=null:p&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){if(this.options,this._proportionallyResizeElements.length)for(var t=this.helper||this.element,i=0;this._proportionallyResizeElements.length>i;i++){var s=this._proportionallyResizeElements[i];if(!this.borderDif){var n=[s.css("borderTopWidth"),s.css("borderRightWidth"),s.css("borderBottomWidth"),s.css("borderLeftWidth")],a=[s.css("paddingTop"),s.css("paddingRight"),s.css("paddingBottom"),s.css("paddingLeft")];this.borderDif=e.map(n,function(e,t){var i=parseInt(e,10)||0,s=parseInt(a[t],10)||0;return i+s})}s.css({height:t.height()-this.borderDif[0]-this.borderDif[2]||0,width:t.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,i=this.options;if(this.elementOffset=t.offset(),this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var s=e.ui.ie6?1:0,n=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+n,height:this.element.outerHeight()+n,position:"absolute",left:this.elementOffset.left-s+"px",top:this.elementOffset.top-s+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=(this.options,this.originalSize),s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,i){var s=(this.options,this.originalSize),n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},sw:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,s]))},ne:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},nw:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,s]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!=t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).data("resizable"),i=t.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)})},resize:function(t,i){var s=e(this).data("resizable"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(t,s){e(t).each(function(){var t=e(this),n=e(this).data("resizable-alsoresize"),a={},o=s&&s.length?s:t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var i=(n[t]||0)+(r[t]||0);i&&i>=0&&(a[t]=i||null)}),t.css(a)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):e.each(n.alsoResize,function(e,t){h(e,t)})},stop:function(){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).data("resizable"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(h,u&&l?{top:u,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&&n.length&&e(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var i=e(this).data("resizable"),s=i.options,n=i.element,a=s.containment,o=a instanceof e?a.get(0):/parent/.test(a)?n.parent().get(0):a;if(o)if(i.containerElement=e(o),/document/.test(a)||a==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var r=e(o),h=[];e(["Top","Right","Left","Bottom"]).each(function(e,i){h[e]=t(r.css("padding"+i))}),i.containerOffset=r.offset(),i.containerPosition=r.position(),i.containerSize={height:r.innerHeight()-h[3],width:r.innerWidth()-h[1]};var l=i.containerOffset,u=i.containerSize.height,d=i.containerSize.width,c=e.ui.hasScroll(o,"left")?o.scrollWidth:d,p=e.ui.hasScroll(o)?o.scrollHeight:u;i.parentData={element:o,left:l.left,top:l.top,width:c,height:p}}},resize:function(t){var i=e(this).data("resizable"),s=i.options,n=(i.containerSize,i.containerOffset),a=(i.size,i.position),o=i._aspectRatio||t.shiftKey,r={top:0,left:0},h=i.containerElement;h[0]!=document&&/static/.test(h.css("position"))&&(r=n),a.left<(i._helper?n.left:0)&&(i.size.width=i.size.width+(i._helper?i.position.left-n.left:i.position.left-r.left),o&&(i.size.height=i.size.width/i.aspectRatio),i.position.left=s.helper?n.left:0),a.top<(i._helper?n.top:0)&&(i.size.height=i.size.height+(i._helper?i.position.top-n.top:i.position.top),o&&(i.size.width=i.size.height*i.aspectRatio),i.position.top=i._helper?n.top:0),i.offset.left=i.parentData.left+i.position.left,i.offset.top=i.parentData.top+i.position.top;var l=Math.abs((i._helper?i.offset.left-r.left:i.offset.left-r.left)+i.sizeDiff.width),u=Math.abs((i._helper?i.offset.top-r.top:i.offset.top-n.top)+i.sizeDiff.height),d=i.containerElement.get(0)==i.element.parent().get(0),c=/relative|absolute/.test(i.containerElement.css("position"));d&&c&&(l-=i.parentData.left),l+i.size.width>=i.parentData.width&&(i.size.width=i.parentData.width-l,o&&(i.size.height=i.size.width/i.aspectRatio)),u+i.size.height>=i.parentData.height&&(i.size.height=i.parentData.height-u,o&&(i.size.width=i.size.height*i.aspectRatio))},stop:function(){var t=e(this).data("resizable"),i=t.options,s=(t.position,t.containerOffset),n=t.containerPosition,a=t.containerElement,o=e(t.helper),r=o.offset(),h=o.outerWidth()-t.sizeDiff.width,l=o.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).data("resizable"),i=t.options,s=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t){var i=e(this).data("resizable"),s=i.options,n=i.size,a=i.originalSize,o=i.originalPosition,r=i.axis;s._aspectRatio||t.shiftKey,s.grid="number"==typeof s.grid?[s.grid,s.grid]:s.grid;var h=Math.round((n.width-a.width)/(s.grid[0]||1))*(s.grid[0]||1),l=Math.round((n.height-a.height)/(s.grid[1]||1))*(s.grid[1]||1);/^(se|s|e)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l):/^(ne)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l):/^(sw)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.left=o.left-h):(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l,i.position.left=o.left-h)}});var t=function(e){return parseInt(e,10)||0},i=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e){var t=0,i={},s={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="hide",s.height=s.paddingTop=s.paddingBottom=s.borderTopWidth=s.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var i=this.accordionId="ui-accordion-"+(this.element.attr("id")||++t),s=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(s.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),s.collapsible||s.active!==!1&&null!=s.active||(s.active=0),0>s.active&&(s.active+=this.headers.length),this.active=this._findActive(s.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(t){var s=e(this),n=s.attr("id"),a=s.next(),o=a.attr("id");n||(n=i+"-header-"+t,s.attr("id",n)),o||(o=i+"-panel-"+t,a.attr("id",o)),s.attr("aria-controls",o),a.attr("aria-labelledby",n)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(s.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?(this._activate(t),undefined):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||this.options.active!==!1||this._activate(0),"icons"===e&&(this._destroyIcons(),t&&this._createIcons()),"disabled"===e&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t),undefined)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,s=this.headers.length,n=this.headers.index(t.target),a=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:a=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[s-1]}a&&(e(t.target).attr("tabIndex",-1),e(a).attr("tabIndex",0),a.focus(),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,i,s=this.options.heightStyle,n=this.element.parent();"fill"===s?(e.support.minHeight||(i=n.css("overflow"),n.css("overflow","hidden")),t=n.height(),this.element.siblings(":visible").each(function(){var i=e(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(t-=i.outerHeight(!0))}),i&&n.css("overflow",i),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===s&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={};t&&(e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._on(this.headers,i))},_eventHandler:function(t){var i=this.options,s=this.active,n=e(t.currentTarget),a=n[0]===s[0],o=a&&i.collapsible,r=o?e():n.next(),h=s.next(),l={oldHeader:s,oldPanel:h,newHeader:o?e():n,newPanel:r};t.preventDefault(),a&&!i.collapsible||this._trigger("beforeActivate",t,l)===!1||(i.active=o?!1:this.headers.index(n),this.active=a?e():n,this._toggle(l),s.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),a||(n.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),n.next().addClass("ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,s=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,t):(s.hide(),i.show(),this._toggleComplete(t)),s.attr({"aria-expanded":"false","aria-hidden":"true"}),s.prev().attr("aria-selected","false"),i.length&&s.length?s.prev().attr("tabIndex",-1):i.length&&this.headers.filter(function(){return 0===e(this).attr("tabIndex")}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var a,o,r,h=this,l=0,u=e.length&&(!t.length||e.index()<t.index()),d=this.options.animate||{},c=u&&d.down||d,p=function(){h._toggleComplete(n)};return"number"==typeof c&&(r=c),"string"==typeof c&&(o=c),o=o||c.easing||d.easing,r=r||c.duration||d.duration,t.length?e.length?(a=e.show().outerHeight(),t.animate(i,{duration:r,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(s,{duration:r,easing:o,complete:p,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?l+=i.now:"content"!==h.options.heightStyle&&(i.now=Math.round(a-t.outerHeight()-l),l=0)}}),undefined):t.animate(i,r,o,p):e.animate(s,r,o,p)},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var i=t._create;t._create=function(){if(this.options.navigation){var t=this,s=this.element.find(this.options.header),n=s.next(),a=s.add(n).find("a").filter(this.options.navigationFilter)[0];a&&s.add(n).each(function(i){return e.contains(this,a)?(t.options.active=Math.floor(i/2),!1):undefined})}i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var i=t._create,s=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),i.call(this)},_setOption:function(e){("autoHeight"===e||"clearStyle"===e||"fillSpace"===e)&&(this.options.heightStyle=this._mergeHeightStyle()),s.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;return e.fillSpace?"fill":e.clearStyle?"content":e.autoHeight?"auto":undefined}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var i=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var i=t._findActive;t._findActive=function(e){return-1===e&&(e=!1),e&&"number"!=typeof e&&(e=this.headers.index(this.headers.filter(e)),-1===e&&(e=!1)),i.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var i=t._trigger;t._trigger=function(e,t,s){var n=i.apply(this,arguments);return n?("beforeActivate"===e?n=i.call(this,"changestart",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel}):"activate"===e&&(n=i.call(this,"change",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel})),n):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var i=t._create;t._create=function(){var e=this.options;null===e.animate&&(e.animate=e.animated?"slide"===e.animated?300:"bounceslide"===e.animated?{duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animated:!1),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e){var t=0;e.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,i,s;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return t=!0,s=!0,i=!0,undefined;t=!1,s=!1,i=!1;var a=e.ui.keyCode;switch(n.keyCode){case a.PAGE_UP:t=!0,this._move("previousPage",n);break;case a.PAGE_DOWN:t=!0,this._move("nextPage",n);break;case a.UP:t=!0,this._keyEvent("previous",n);break;case a.DOWN:t=!0,this._keyEvent("next",n);break;case a.ENTER:case a.NUMPAD_ENTER:this.menu.active&&(t=!0,n.preventDefault(),this.menu.select(n));break;case a.TAB:this.menu.active&&this.menu.select(n);break;case a.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(t)return t=!1,s.preventDefault(),undefined;if(!i){var n=e.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(e){return s?(s=!1,e.preventDefault(),undefined):(this._searchTimeout(e),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(e),this._change(e),undefined)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(s){s.target===t.element[0]||s.target===i||e.contains(i,s.target)||t.close()})})},menufocus:function(t,i){if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)}),undefined;var s=i.item.data("ui-autocomplete-item")||i.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:s})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value):this.liveRegion.text(s.value)},menuselect:function(e,t){var i=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),s=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger("select",e,{item:i})&&this._value(i.value),this.term=this._value(),this.close(e),this.selectedItem=i}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this.document.find(t||"body")[0]),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,i,s=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,s){s(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,n){s.xhr&&s.xhr.abort(),s.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){n(e)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger("search",t)!==!1?this._search(e):undefined},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,i=++t;return function(s){i===t&&e.__response(s),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var i=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(i,t),this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var s=this;e.each(i,function(e,i){s._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<a>").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[e](t),undefined):(this.search(null,t),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(e,t),t.preventDefault())}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var s=RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return s.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments),this.options.disabled||this.cancelSearch||(t=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.text(t))}})})(jQuery);(function(e){var t,i,s,n,a="ui-button ui-widget ui-state-default ui-corner-all",o="ui-state-hover ui-state-active ",r="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",h=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var i=t.name,s=t.form,n=e([]);return i&&(n=s?e(s).find("[name='"+i+"']"):e("[name='"+i+"']",t.ownerDocument).filter(function(){return!this.form})),n};e.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,h),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var o=this,r=this.options,u="checkbox"===this.type||"radio"===this.type,d=u?"":"ui-state-active",c="ui-state-focus";null===r.label&&(r.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(a).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){r.disabled||this===t&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){r.disabled||e(this).removeClass(d)}).bind("click"+this.eventNamespace,function(e){r.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){o.buttonElement.addClass(c)}).bind("blur"+this.eventNamespace,function(){o.buttonElement.removeClass(c)}),u&&(this.element.bind("change"+this.eventNamespace,function(){n||o.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){r.disabled||(n=!1,i=e.pageX,s=e.pageY)}).bind("mouseup"+this.eventNamespace,function(e){r.disabled||(i!==e.pageX||s!==e.pageY)&&(n=!0)})),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return r.disabled||n?!1:(e(this).toggleClass("ui-state-active"),o.buttonElement.attr("aria-pressed",o.element[0].checked),undefined)}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(r.disabled||n)return!1;e(this).addClass("ui-state-active"),o.buttonElement.attr("aria-pressed","true");var t=o.element[0];l(t).not(t).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return r.disabled?!1:(e(this).addClass("ui-state-active"),t=this,o.document.one("mouseup",function(){t=null}),undefined)}).bind("mouseup"+this.eventNamespace,function(){return r.disabled?!1:(e(this).removeClass("ui-state-active"),undefined)}).bind("keydown"+this.eventNamespace,function(t){return r.disabled?!1:((t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active"),undefined)}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",r.disabled),this._resetButton()},_determineButtonType:function(){var e,t,i;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button","checkbox"===this.type||"radio"===this.type?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(a+" "+o+" "+r).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){return this._super(e,t),"disabled"===e?(t?this.element.prop("disabled",!0):this.element.prop("disabled",!1),undefined):(this._resetButton(),undefined)},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),"radio"===this.type?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return this.options.label&&this.element.val(this.options.label),undefined;var t=this.buttonElement.removeClass(r),i=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),s=this.options.icons,n=s.primary&&s.secondary,a=[];s.primary||s.secondary?(this.options.text&&a.push("ui-button-text-icon"+(n?"s":s.primary?"-primary":"-secondary")),s.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+s.primary+"'></span>"),s.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+s.secondary+"'></span>"),this.options.text||(a.push(n?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(i)))):a.push("ui-button-text-only"),t.addClass(a.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){"disabled"===e&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t="rtl"===this.element.css("direction");this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).removeClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).addClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var i in t)(null==t[i]||t[i]==undefined)&&(e[i]=t[i]);return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline="div"==nodeName||"span"==nodeName;target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),"input"==nodeName?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var i=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:i,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var i=$(e);t.append=$([]),t.trigger=$([]),i.hasClass(this.markerClassName)||(this._attachments(i,t),i.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,t){var i=this._get(t,"appendText"),s=this._get(t,"isRTL");t.append&&t.append.remove(),i&&(t.append=$('<span class="'+this._appendClass+'">'+i+"</span>"),e[s?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var n=this._get(t,"showOn");if(("focus"==n||"both"==n)&&e.focus(this._showDatepicker),"button"==n||"both"==n){var a=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:a,title:a}):$('<button type="button"></button>').addClass(this._triggerClass).html(""==o?a:$("<img/>").attr({src:o,alt:a,title:a}))),e[s?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),i=this._get(e,"dateFormat");if(i.match(/[DM]/)){var s=function(e){for(var t=0,i=0,s=0;e.length>s;s++)e[s].length>t&&(t=e[s].length,i=s);return i};t.setMonth(s(this._get(e,i.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(s(this._get(e,i.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var i=$(e);i.hasClass(this.markerClassName)||(i.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block"))},_dialogDatepicker:function(e,t,i,s,n){var a=this._dialogInst;if(!a){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),a=this._dialogInst=this._newInst(this._dialogInput,!1),a.settings={},$.data(this._dialogInput[0],PROP_NAME,a)}if(extendRemove(a.settings,s||{}),t=t&&t.constructor==Date?this._formatDate(a,t):t,this._dialogInput.val(t),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,!this._pos){var r=document.documentElement.clientWidth,h=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[r/2-100+l,h/2-150+u]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),a.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,a),this},_destroyDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),"input"==s?(i.append.remove(),i.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"==s||"span"==s)&&t.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!1,i.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})}},_disableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!0,i.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e}},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,i){var s=this._getInst(e);if(2==arguments.length&&"string"==typeof t)return"defaults"==t?$.extend({},$.datepicker._defaults):s?"all"==t?$.extend({},s.settings):this._get(s,t):null;var n=t||{};if("string"==typeof t&&(n={},n[t]=i),s){this._curInst==s&&this._hideDatepicker();var a=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(s,"min"),r=this._getMinMaxDate(s,"max");extendRemove(s.settings,n),null!==o&&n.dateFormat!==undefined&&n.minDate===undefined&&(s.settings.minDate=this._formatDate(s,o)),null!==r&&n.dateFormat!==undefined&&n.maxDate===undefined&&(s.settings.maxDate=this._formatDate(s,r)),this._attachments($(e),s),this._autoSize(s),this._setDate(s,a),this._updateAlternate(s),this._updateDatepicker(s)}},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),i=!0,s=t.dpDiv.is(".ui-datepicker-rtl");if(t._keyEvent=!0,$.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),i=!1;break;case 13:var n=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);n[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,n[0]);var a=$.datepicker._get(t,"onSelect");if(a){var o=$.datepicker._formatDate(t);a.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),i=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),i=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?1:-1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),i=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?-1:1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),i=e.ctrlKey||e.metaKey;break;default:i=!1}else 36==e.keyCode&&e.ctrlKey?$.datepicker._showDatepicker(this):i=!1;i&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var i=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),s=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var i=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));i&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(s){$.datepicker.log(s)}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!=e.nodeName.toLowerCase()&&(e=$("input",e.parentNode)[0]),!$.datepicker._isDisabledDatepicker(e)&&$.datepicker._lastInput!=e){var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var i=$.datepicker._get(t,"beforeShow"),s=i?i.apply(e,[e,t]):{};if(s!==!1){extendRemove(t.settings,s),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var n=!1;$(e).parents().each(function(){return n|="fixed"==$(this).css("position"),!n});var a={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};if($.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),a=$.datepicker._checkOffset(t,a,n),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":n?"fixed":"absolute",display:"none",left:a.left+"px",top:a.top+"px"}),!t.inline){var o=$.datepicker._get(t,"showAnim"),r=$.datepicker._get(t,"duration"),h=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(e.length){var i=$.datepicker._getBorders(t.dpDiv);e.css({left:-i[0],top:-i[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),r,h):t.dpDiv[o||"show"](o?r:null,h),o&&r||h(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}}}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i=e.dpDiv.find("iframe.ui-datepicker-cover");i.length&&i.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var s=this._getNumberOfMonths(e),n=s[1],a=17;if(e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!=s[0]||1!=s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus(),e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,i){var s=e.dpDiv.outerWidth(),n=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,r=document.documentElement.clientWidth+(i?0:$(document).scrollLeft()),h=document.documentElement.clientHeight+(i?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?s-a:0,t.left-=i&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=i&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+s>r&&r>s?Math.abs(t.left+s-r):0),t.top-=Math.min(t.top,t.top+n>h&&h>n?Math.abs(n+o):0),t},_findPos:function(e){for(var t=this._getInst(e),i=this._get(t,"isRTL");e&&("hidden"==e.type||1!=e.nodeType||$.expr.filters.hidden(e));)e=e[i?"previousSibling":"nextSibling"];var s=$(e).offset();return[s.left,s.top]},_hideDatepicker:function(e){var t=this._curInst;if(t&&(!e||t==$.data(e,PROP_NAME))&&this._datepickerShowing){var i=this._get(t,"showAnim"),s=this._get(t,"duration"),n=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[i]||$.effects[i])?t.dpDiv.hide(i,$.datepicker._get(t,"showOptions"),s,n):t.dpDiv["slideDown"==i?"slideUp":"fadeIn"==i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1;var a=this._get(t,"onClose");a&&a.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if($.datepicker._curInst){var t=$(e.target),i=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&0==t.parents("#"+$.datepicker._mainDivId).length&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=i)&&$.datepicker._hideDatepicker()}},_adjustDate:function(e,t,i){var s=$(e),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,t+("M"==i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(e){var t=$(e),i=this._getInst(t[0]);if(this._get(i,"gotoCurrent")&&i.currentDay)i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear;else{var s=new Date;i.selectedDay=s.getDate(),i.drawMonth=i.selectedMonth=s.getMonth(),i.drawYear=i.selectedYear=s.getFullYear()}this._notifyChange(i),this._adjustDate(t)},_selectMonthYear:function(e,t,i){var s=$(e),n=this._getInst(s[0]);n["selected"+("M"==i?"Month":"Year")]=n["draw"+("M"==i?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(e,t,i,s){var n=$(e);if(!$(s).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(n[0])){var a=this._getInst(n[0]);a.selectedDay=a.currentDay=$("a",s).html(),a.selectedMonth=a.currentMonth=t,a.selectedYear=a.currentYear=i,this._selectDate(e,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear))}},_clearDate:function(e){var t=$(e);this._getInst(t[0]),this._selectDate(t,"")},_selectDate:function(e,t){var i=$(e),s=this._getInst(i[0]);t=null!=t?t:this._formatDate(s),s.input&&s.input.val(t),this._updateAlternate(s);var n=this._get(s,"onSelect");n?n.apply(s.input?s.input[0]:null,[t,s]):s.input&&s.input.trigger("change"),s.inline?this._updateDatepicker(s):(this._hideDatepicker(),this._lastInput=s.input[0],"object"!=typeof s.input[0]&&s.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e));$(t).each(function(){$(this).val(n)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var i=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((i-t)/864e5)/7)+1},parseDate:function(e,t,i){if(null==e||null==t)throw"Invalid arguments";if(t="object"==typeof t?""+t:t+"",""==t)return null;var s=(i?i.shortYearCutoff:null)||this._defaults.shortYearCutoff;s="string"!=typeof s?s:(new Date).getFullYear()%100+parseInt(s,10);for(var n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=-1,l=-1,u=-1,d=-1,c=!1,p=function(t){var i=e.length>_+1&&e.charAt(_+1)==t;return i&&_++,i},f=function(e){var i=p(e),s="@"==e?14:"!"==e?20:"y"==e&&i?4:"o"==e?3:2,n=RegExp("^\\d{1,"+s+"}"),a=t.substring(v).match(n);if(!a)throw"Missing number at position "+v;return v+=a[0].length,parseInt(a[0],10)},m=function(e,i,s){var n=$.map(p(e)?s:i,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),a=-1;if($.each(n,function(e,i){var s=i[1];return t.substr(v,s.length).toLowerCase()==s.toLowerCase()?(a=i[0],v+=s.length,!1):undefined}),-1!=a)return a+1;throw"Unknown name at position "+v},g=function(){if(t.charAt(v)!=e.charAt(_))throw"Unexpected literal at position "+v;v++},v=0,_=0;e.length>_;_++)if(c)"'"!=e.charAt(_)||p("'")?g():c=!1;else switch(e.charAt(_)){case"d":u=f("d");break;case"D":m("D",n,a);break;case"o":d=f("o");break;case"m":l=f("m");break;case"M":l=m("M",o,r);break;case"y":h=f("y");break;case"@":var y=new Date(f("@"));h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"!":var y=new Date((f("!")-this._ticksTo1970)/1e4);h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"'":p("'")?g():c=!0;break;default:g()}if(t.length>v){var b=t.substr(v);if(!/^\s+/.test(b))throw"Extra/unparsed characters found in date: "+b}if(-1==h?h=(new Date).getFullYear():100>h&&(h+=(new Date).getFullYear()-(new Date).getFullYear()%100+(s>=h?0:-100)),d>-1)for(l=1,u=d;;){var x=this._getDaysInMonth(h,l-1);if(x>=u)break;l++,u-=x}var y=this._daylightSavingAdjust(new Date(h,l-1,u));if(y.getFullYear()!=h||y.getMonth()+1!=l||y.getDate()!=u)throw"Invalid date";return y},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,n=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,r=function(t){var i=e.length>c+1&&e.charAt(c+1)==t;return i&&c++,i},h=function(e,t,i){var s=""+t;if(r(e))for(;i>s.length;)s="0"+s;return s},l=function(e,t,i,s){return r(e)?s[t]:i[t]},u="",d=!1;if(t)for(var c=0;e.length>c;c++)if(d)"'"!=e.charAt(c)||r("'")?u+=e.charAt(c):d=!1;else switch(e.charAt(c)){case"d":u+=h("d",t.getDate(),2);break;case"D":u+=l("D",t.getDay(),s,n);break;case"o":u+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=h("m",t.getMonth()+1,2);break;case"M":u+=l("M",t.getMonth(),a,o);break;case"y":u+=r("y")?t.getFullYear():(10>t.getYear()%100?"0":"")+t.getYear()%100;break;case"@":u+=t.getTime();break;case"!":u+=1e4*t.getTime()+this._ticksTo1970;break;case"'":r("'")?u+="'":d=!0;break;default:u+=e.charAt(c)}return u},_possibleChars:function(e){for(var t="",i=!1,s=function(t){var i=e.length>n+1&&e.charAt(n+1)==t;return i&&n++,i},n=0;e.length>n;n++)if(i)"'"!=e.charAt(n)||s("'")?t+=e.charAt(n):i=!1;else switch(e.charAt(n)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":s("'")?t+="'":i=!0;break;default:t+=e.charAt(n)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!=e.lastVal){var i,s,n=this._get(e,"dateFormat"),a=e.lastVal=e.input?e.input.val():null;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,a,o)||s}catch(r){this.log(r),a=t?"":a}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=a?i.getDate():0,e.currentMonth=a?i.getMonth():0,e.currentYear=a?i.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,i){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},n=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(i){}for(var s=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,n=s.getFullYear(),a=s.getMonth(),o=s.getDate(),r=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=r.exec(t);h;){switch(h[2]||"d"){case"d":case"D":o+=parseInt(h[1],10);break;case"w":case"W":o+=7*parseInt(h[1],10);break;case"m":case"M":a+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a));break;case"y":case"Y":n+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a))}h=r.exec(t)}return new Date(n,a,o)},a=null==t||""===t?i:"string"==typeof t?n(t):"number"==typeof t?isNaN(t)?i:s(t):new Date(t.getTime());return a=a&&"Invalid Date"==""+a?i:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var s=!t,n=e.selectedMonth,a=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),n==e.selectedMonth&&a==e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(s?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""==e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),i="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(i)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var i=this._get(e,"isRTL"),s=this._get(e,"showButtonPanel"),n=this._get(e,"hideIfNoPrevNext"),a=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),r=this._get(e,"showCurrentAtPos"),h=this._get(e,"stepMonths"),l=1!=o[0]||1!=o[1],u=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),d=this._getMinMaxDate(e,"min"),c=this._getMinMaxDate(e,"max"),p=e.drawMonth-r,f=e.drawYear;if(0>p&&(p+=12,f--),c){var m=this._daylightSavingAdjust(new Date(c.getFullYear(),c.getMonth()-o[0]*o[1]+1,c.getDate()));for(m=d&&d>m?d:m;this._daylightSavingAdjust(new Date(f,p,1))>m;)p--,0>p&&(p=11,f--)}e.drawMonth=p,e.drawYear=f;var g=this._get(e,"prevText");g=a?this.formatDate(g,this._daylightSavingAdjust(new Date(f,p-h,1)),this._getFormatConfig(e)):g;var v=this._canAdjustMonth(e,-1,f,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>":n?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>",_=this._get(e,"nextText");_=a?this.formatDate(_,this._daylightSavingAdjust(new Date(f,p+h,1)),this._getFormatConfig(e)):_;var y=this._canAdjustMonth(e,1,f,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>":n?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>",b=this._get(e,"currentText"),x=this._get(e,"gotoCurrent")&&e.currentDay?u:t;b=a?this.formatDate(b,x,this._getFormatConfig(e)):b;var w=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",k=s?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(i?w:"")+(this._isInRange(e,x)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+b+"</button>":"")+(i?"":w)+"</div>":"",D=parseInt(this._get(e,"firstDay"),10);D=isNaN(D)?0:D;var T=this._get(e,"showWeek"),S=this._get(e,"dayNames");this._get(e,"dayNamesShort");var M=this._get(e,"dayNamesMin"),N=this._get(e,"monthNames"),C=this._get(e,"monthNamesShort"),P=this._get(e,"beforeShowDay"),A=this._get(e,"showOtherMonths"),I=this._get(e,"selectOtherMonths");this._get(e,"calculateWeek")||this.iso8601Week;for(var H=this._getDefaultDate(e),z="",F=0;o[0]>F;F++){var E="";this.maxRows=4;for(var O=0;o[1]>O;O++){var W=this._daylightSavingAdjust(new Date(f,p,e.selectedDay)),j=" ui-corner-all",L="";if(l){if(L+='<div class="ui-datepicker-group',o[1]>1)switch(O){case 0:L+=" ui-datepicker-group-first",j=" ui-corner-"+(i?"right":"left");break;case o[1]-1:L+=" ui-datepicker-group-last",j=" ui-corner-"+(i?"left":"right");break;default:L+=" ui-datepicker-group-middle",j=""}L+='">'}L+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+j+'">'+(/all|left/.test(j)&&0==F?i?y:v:"")+(/all|right/.test(j)&&0==F?i?v:y:"")+this._generateMonthYearHeader(e,p,f,d,c,F>0||O>0,N,C)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";for(var R=T?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"",Y=0;7>Y;Y++){var B=(Y+D)%7;R+="<th"+((Y+D+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+S[B]+'">'+M[B]+"</span></th>"}L+=R+"</tr></thead><tbody>";var J=this._getDaysInMonth(f,p);f==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,J));var K=(this._getFirstDayOfMonth(f,p)-D+7)%7,V=Math.ceil((K+J)/7),U=l?this.maxRows>V?this.maxRows:V:V;this.maxRows=U;for(var q=this._daylightSavingAdjust(new Date(f,p,1-K)),Q=0;U>Q;Q++){L+="<tr>";for(var G=T?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(q)+"</td>":"",Y=0;7>Y;Y++){var X=P?P.apply(e.input?e.input[0]:null,[q]):[!0,""],Z=q.getMonth()!=p,et=Z&&!I||!X[0]||d&&d>q||c&&q>c;G+='<td class="'+((Y+D+6)%7>=5?" ui-datepicker-week-end":"")+(Z?" ui-datepicker-other-month":"")+(q.getTime()==W.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==q.getTime()&&H.getTime()==W.getTime()?" "+this._dayOverClass:"")+(et?" "+this._unselectableClass+" ui-state-disabled":"")+(Z&&!A?"":" "+X[1]+(q.getTime()==u.getTime()?" "+this._currentClass:"")+(q.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+(Z&&!A||!X[2]?"":' title="'+X[2]+'"')+(et?"":' data-handler="selectDay" data-event="click" data-month="'+q.getMonth()+'" data-year="'+q.getFullYear()+'"')+">"+(Z&&!A?"&#xa0;":et?'<span class="ui-state-default">'+q.getDate()+"</span>":'<a class="ui-state-default'+(q.getTime()==t.getTime()?" ui-state-highlight":"")+(q.getTime()==u.getTime()?" ui-state-active":"")+(Z?" ui-priority-secondary":"")+'" href="#">'+q.getDate()+"</a>")+"</td>",q.setDate(q.getDate()+1),q=this._daylightSavingAdjust(q)
	}L+=G+"</tr>"}p++,p>11&&(p=0,f++),L+="</tbody></table>"+(l?"</div>"+(o[0]>0&&O==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),E+=L}z+=E}return z+=k+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,z},_generateMonthYearHeader:function(e,t,i,s,n,a,o,r){var h=this._get(e,"changeMonth"),l=this._get(e,"changeYear"),u=this._get(e,"showMonthAfterYear"),d='<div class="ui-datepicker-title">',c="";if(a||!h)c+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=s&&s.getFullYear()==i,f=n&&n.getFullYear()==i;c+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var m=0;12>m;m++)(!p||m>=s.getMonth())&&(!f||n.getMonth()>=m)&&(c+='<option value="'+m+'"'+(m==t?' selected="selected"':"")+">"+r[m]+"</option>");c+="</select>"}if(u||(d+=c+(!a&&h&&l?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",a||!l)d+='<span class="ui-datepicker-year">'+i+"</span>";else{var g=this._get(e,"yearRange").split(":"),v=(new Date).getFullYear(),_=function(e){var t=e.match(/c[+-].*/)?i+parseInt(e.substring(1),10):e.match(/[+-].*/)?v+parseInt(e,10):parseInt(e,10);return isNaN(t)?v:t},y=_(g[0]),b=Math.max(y,_(g[1]||""));for(y=s?Math.max(y,s.getFullYear()):y,b=n?Math.min(b,n.getFullYear()):b,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';b>=y;y++)e.yearshtml+='<option value="'+y+'"'+(y==i?' selected="selected"':"")+">"+y+"</option>";e.yearshtml+="</select>",d+=e.yearshtml,e.yearshtml=null}return d+=this._get(e,"yearSuffix"),u&&(d+=(!a&&h&&l?"":"&#xa0;")+c),d+="</div>"},_adjustInstDate:function(e,t,i){var s=e.drawYear+("Y"==i?t:0),n=e.drawMonth+("M"==i?t:0),a=Math.min(e.selectedDay,this._getDaysInMonth(s,n))+("D"==i?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(s,n,a)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),("M"==i||"Y"==i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max"),n=i&&i>t?i:t;return n=s&&n>s?s:n},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,s){var n=this._getNumberOfMonths(e),a=this._daylightSavingAdjust(new Date(i,s+(0>t?t:n[0]*n[1]),1));return 0>t&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(e,a)},_isInRange:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max");return(!i||t.getTime()>=i.getTime())&&(!s||t.getTime()<=s.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,s){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var n=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(s,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),n,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!=e&&"getDate"!=e&&"widget"!=e?"option"==e&&2==arguments.length&&"string"==typeof arguments[1]?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){"string"==typeof e?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$})(jQuery);(function(e,t){var i="ui-dialog ui-widget ui-widget-content ui-corner-all ",s={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},n={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),"string"!=typeof this.originalTitle&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var s,n,a,o,r,h=this,l=this.options,u=l.title||"&#160;";s=(this.uiDialog=e("<div>")).addClass(i+l.dialogClass).css({display:"none",outline:0,zIndex:l.zIndex}).attr("tabIndex",-1).keydown(function(t){l.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(h.close(t),t.preventDefault())}).mousedown(function(e){h.moveToTop(!1,e)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),n=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){s.focus()}).prependTo(s),a=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),h.close(e)}).appendTo(n),(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(l.closeText).appendTo(a),o=e("<span>").uniqueId().addClass("ui-dialog-title").html(u).prependTo(n),r=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(r),s.attr({role:"dialog","aria-labelledby":o.attr("id")}),n.find("*").add(n).disableSelection(),this._hoverable(a),this._focusable(a),l.draggable&&e.fn.draggable&&this._makeDraggable(),l.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(l.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(i){if(l.modal&&i.keyCode===e.ui.keyCode.TAB){var n=e(":tabbable",s),a=n.filter(":first"),o=n.filter(":last");return i.target!==o[0]||i.shiftKey?i.target===a[0]&&i.shiftKey?(o.focus(1),!1):t:(a.focus(1),!1)}}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var i,s,n=this;if(this._isOpen&&!1!==this._trigger("beforeClose",t))return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(i=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(s=e(this).css("z-index"),isNaN(s)||(i=Math.max(i,s)))}),e.ui.dialog.maxZ=i),this},isOpen:function(){return this._isOpen},moveToTop:function(t,i){var s,n=this.options;return n.modal&&!t||!n.stack&&!n.modal?this._trigger("focus",i):(n.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=n.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),s={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(s),this._trigger("focus",i),this)},open:function(){if(!this._isOpen){var t,i=this.options,s=this.uiDialog;return this._size(),this._position(i.position),s.show(i.show),this.overlay=i.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=s)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this}},_createButtons:function(t){var i=this,s=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),"object"==typeof t&&null!==t&&e.each(t,function(){return!(s=!0)}),s?(e.each(t,function(t,s){var n,a;s=e.isFunction(s)?{click:s,text:t}:s,s=e.extend({type:"button"},s),a=s.click,s.click=function(){a.apply(i.element[0],arguments)},n=e("<button></button>",s).appendTo(i.uiButtonSet),e.fn.button&&n.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){e(this).addClass("ui-dialog-dragging"),i._trigger("dragStart",s,t(n))},drag:function(e,s){i._trigger("drag",e,t(s))},stop:function(n,a){s.position=[a.position.left-i.document.scrollLeft(),a.position.top-i.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),i._trigger("dragStop",n,t(a)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(i){function s(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}i=i===t?this.options.resizable:i;var n=this,a=this.options,o=this.uiDialog.css("position"),r="string"==typeof i?i:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:a.maxWidth,maxHeight:a.maxHeight,minWidth:a.minWidth,minHeight:this._minHeight(),handles:r,start:function(t,i){e(this).addClass("ui-dialog-resizing"),n._trigger("resizeStart",t,s(i))},resize:function(e,t){n._trigger("resize",e,s(t))},stop:function(t,i){e(this).removeClass("ui-dialog-resizing"),a.height=e(this).height(),a.width=e(this).width(),n._trigger("resizeStop",t,s(i)),e.ui.dialog.overlay.resize()}}).css("position",o).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var i,s=[],n=[0,0];t?(("string"==typeof t||"object"==typeof t&&"0"in t)&&(s=t.split?t.split(" "):[t[0],t[1]],1===s.length&&(s[1]=s[0]),e.each(["left","top"],function(e,t){+s[e]===s[e]&&(n[e]=s[e],s[e]=t)}),t={my:s[0]+(0>n[0]?n[0]:"+"+n[0])+" "+s[1]+(0>n[1]?n[1]:"+"+n[1]),at:s.join(" ")}),t=e.extend({},e.ui.dialog.prototype.options.position,t)):t=e.ui.dialog.prototype.options.position,i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var i=this,a={},o=!1;e.each(t,function(e,t){i._setOption(e,t),e in s&&(o=!0),e in n&&(a[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",a)},_setOption:function(t,s){var n,a,o=this.uiDialog;switch(t){case"buttons":this._createButtons(s);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+s);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(i+s);break;case"disabled":s?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":n=o.is(":data(draggable)"),n&&!s&&o.draggable("destroy"),!n&&s&&this._makeDraggable();break;case"position":this._position(s);break;case"resizable":a=o.is(":data(resizable)"),a&&!s&&o.resizable("destroy"),a&&"string"==typeof s&&o.resizable("option","handles",s),a||s===!1||this._makeResizable(s);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(s||"&#160;"))}this._super(t,s)},_size:function(){var t,i,s,n=this.options,a=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),i=Math.max(0,n.minHeight-t),"auto"===n.height?e.support.minHeight?this.element.css({minHeight:i,height:"auto"}):(this.uiDialog.show(),s=this.element.css("height","auto").height(),a||this.uiDialog.hide(),this.element.height(Math.max(s,i))):this.element.height(Math.max(n.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(i){0===this.instances.length&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(i){return e(i.target).zIndex()<e.ui.dialog.overlay.maxZ?!1:t})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var s=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(t){var n=e.ui.dialog.overlay.instances;0!==n.length&&n[n.length-1]===s&&i.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(i.close(t),t.preventDefault())}),s.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&s.bgiframe(),this.instances.push(s),s},destroy:function(t){var i=e.inArray(t,this.instances),s=0;-1!==i&&this.oldInstances.push(this.instances.splice(i,1)[0]),0===this.instances.length&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){s=Math.max(s,this.css("z-index"))}),this.maxZ=s},height:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),i>t?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),i=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),i>t?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e){var t=!1;e.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(i){var s=e(i.target).closest(".ui-menu-item");!t&&s.not(".ui-state-disabled").length&&(t=!0,this.select(i),s.has(".ui-menu").length?this.expand(i):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var i=e(t.currentTarget);i.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,i)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,i)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(i){e(i.target).closest(".ui-menu").length||this.collapseAll(i),t=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function i(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var s,n,a,o,r,h=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:h=!1,n=this.previousFilter||"",a=String.fromCharCode(t.keyCode),o=!1,clearTimeout(this.filterTimer),a===n?o=!0:a=n+a,r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())}),s=o&&-1!==s.index(this.active.next())?this.active.nextAll(".ui-menu-item"):s,s.length||(a=String.fromCharCode(t.keyCode),r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())})),s.length?(this.focus(t,s),s.length>1?(this.previousFilter=a,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}h&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,i=this.options.icons.submenu,s=this.element.find(this.options.menus);s.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),s=t.prev("a"),n=e("<span>").addClass("ui-menu-icon ui-icon "+i).data("ui-menu-submenu-carat",!0);s.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",s.attr("id"))}),t=s.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var i,s;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),s=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=t.children(".ui-menu"),i.length&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,s,n,a,o,r;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,n=t.offset().top-this.activeMenu.offset().top-i-s,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=t.height(),0>n?this.activeMenu.scrollTop(a+n):n+r>o&&this.activeMenu.scrollTop(a+n-o+r))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active}))},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(e)},this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(t),this.activeMenu=s},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var s;this.active&&(s="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.children(".ui-menu-item")[t]()),this.focus(i,s)},nextPage:function(t){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=e(this),0>i.offset().top-s-n}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())),undefined):(this.next(t),undefined)},previousPage:function(t){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-s+n>0}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())),undefined):(this.next(t),undefined)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)}})})(jQuery);

/***/ },
/* 6 */
/***/ function(module, exports) {

	/*
	 * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
	 * http://benalman.com/projects/jquery-bbq-plugin/
	 * 
	 * Copyright (c) 2010 "Cowboy" Ben Alman
	 * Dual licensed under the MIT and GPL licenses.
	 * http://benalman.com/about/license/
	 */
	(function ($, p) {
	    var i, m = Array.prototype.slice, r = decodeURIComponent, a = $.param, c, l, v, b = $.bbq = $.bbq || {}, q, u, j, e = $.event.special, d = "hashchange", A = "querystring", D = "fragment", y = "elemUrlAttr", g = "location", k = "href", t = "src", x = /^.*\?|#.*$/g, w = /^.*\#/, h, C = {};
	
	    function E(F) {
	        return typeof F === "string"
	    }
	
	    function B(G) {
	        var F = m.call(arguments, 1);
	        return function () {
	            return G.apply(this, F.concat(m.call(arguments)))
	        }
	    }
	
	    function n(F) {
	        return F.replace(/^[^#]*#?(.*)$/, "$1")
	    }
	
	    function o(F) {
	        return F.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/, "$1")
	    }
	
	    function f(H, M, F, I, G) {
	        var O, L, K, N, J;
	        if (I !== i) {
	            K = F.match(H ? /^([^#]*)\#?(.*)$/ : /^([^#?]*)\??([^#]*)(#?.*)/);
	            J = K[3] || "";
	            if (G === 2 && E(I)) {
	                L = I.replace(H ? w : x, "")
	            } else {
	                N = l(K[2]);
	                I = E(I) ? l[H ? D : A](I) : I;
	                L = G === 2 ? I : G === 1 ? $.extend({}, I, N) : $.extend({}, N, I);
	                L = a(L);
	                if (H) {
	                    L = L.replace(h, r)
	                }
	            }
	            O = K[1] + (H ? "#" : L || !K[1] ? "?" : "") + L + J
	        } else {
	            O = M(F !== i ? F : p[g][k])
	        }
	        return O
	    }
	
	    a[A] = B(f, 0, o);
	    a[D] = c = B(f, 1, n);
	    c.noEscape = function (G) {
	        G = G || "";
	        var F = $.map(G.split(""), encodeURIComponent);
	        h = new RegExp(F.join("|"), "g")
	    };
	    c.noEscape(",/");
	    $.deparam = l = function (I, F) {
	        var H = {}, G = {"true": !0, "false": !1, "null": null};
	        $.each(I.replace(/\+/g, " ").split("&"), function (L, Q) {
	            var K = Q.split("="), P = r(K[0]), J, O = H, M = 0, R = P.split("]["), N = R.length - 1;
	            if (/\[/.test(R[0]) && /\]$/.test(R[N])) {
	                R[N] = R[N].replace(/\]$/, "");
	                R = R.shift().split("[").concat(R);
	                N = R.length - 1
	            } else {
	                N = 0
	            }
	            if (K.length === 2) {
	                J = r(K[1]);
	                if (F) {
	                    J = J && !isNaN(J) ? +J : J === "undefined" ? i : G[J] !== i ? G[J] : J
	                }
	                if (N) {
	                    for (; M <= N; M++) {
	                        P = R[M] === "" ? O.length : R[M];
	                        O = O[P] = M < N ? O[P] || (R[M + 1] && isNaN(R[M + 1]) ? {} : []) : J
	                    }
	                } else {
	                    if ($.isArray(H[P])) {
	                        H[P].push(J)
	                    } else {
	                        if (H[P] !== i) {
	                            H[P] = [H[P], J]
	                        } else {
	                            H[P] = J
	                        }
	                    }
	                }
	            } else {
	                if (P) {
	                    H[P] = F ? i : ""
	                }
	            }
	        });
	        return H
	    };
	    function z(H, F, G) {
	        if (F === i || typeof F === "boolean") {
	            G = F;
	            F = a[H ? D : A]()
	        } else {
	            F = E(F) ? F.replace(H ? w : x, "") : F
	        }
	        return l(F, G)
	    }
	
	    l[A] = B(z, 0);
	    l[D] = v = B(z, 1);
	    $[y] || ($[y] = function (F) {
	        return $.extend(C, F)
	    })({a: k, base: k, iframe: t, img: t, input: t, form: "action", link: k, script: t});
	    j = $[y];
	    function s(I, G, H, F) {
	        if (!E(H) && typeof H !== "object") {
	            F = H;
	            H = G;
	            G = i
	        }
	        return this.each(function () {
	            var L = $(this), J = G || j()[(this.nodeName || "").toLowerCase()] || "", K = J && L.attr(J) || "";
	            L.attr(J, a[I](K, H, F))
	        })
	    }
	
	    $.fn[A] = B(s, A);
	    $.fn[D] = B(s, D);
	    b.pushState = q = function (I, F) {
	        if (E(I) && /^#/.test(I) && F === i) {
	            F = 2
	        }
	        var H = I !== i, G = c(p[g][k], H ? I : {}, H ? F : 2);
	        p[g][k] = G + (/#/.test(G) ? "" : "#")
	    };
	    b.getState = u = function (F, G) {
	        return F === i || typeof F === "boolean" ? v(F) : v(G)[F]
	    };
	    b.removeState = function (F) {
	        var G = {};
	        if (F !== i) {
	            G = u();
	            $.each($.isArray(F) ? F : arguments, function (I, H) {
	                delete G[H]
	            })
	        }
	        q(G, 2)
	    };
	    e[d] = $.extend(e[d], {
	        add: function (F) {
	            var H;
	
	            function G(J) {
	                var I = J[D] = c();
	                J.getState = function (K, L) {
	                    return K === i || typeof K === "boolean" ? l(I, K) : l(I, L)[K]
	                };
	                H.apply(this, arguments)
	            }
	
	            if ($.isFunction(F)) {
	                H = F;
	                return G
	            } else {
	                H = F.handler;
	                F.handler = G
	            }
	        }
	    })
	})(jQuery, window);
	/*
	 * jQuery hashchange event - v1.2 - 2/11/2010
	 * http://benalman.com/projects/jquery-hashchange-plugin/
	 * 
	 * Copyright (c) 2010 "Cowboy" Ben Alman
	 * Dual licensed under the MIT and GPL licenses.
	 * http://benalman.com/about/license/
	 */
	(function ($, i, b) {
	    var j, k = $.event.special, c = "location", d = "hashchange", l = "href", f = $.browser, g = document.documentMode, h = f.msie && (g === b || g < 8), e = "on" + d in i && !h;
	
	    function a(m) {
	        m = m || i[c][l];
	        return m.replace(/^[^#]*#?(.*)$/, "$1")
	    }
	
	    $[d + "Delay"] = 100;
	    k[d] = $.extend(k[d], {
	        setup: function () {
	            if (e) {
	                return false
	            }
	            $(j.start)
	        }, teardown: function () {
	            if (e) {
	                return false
	            }
	            $(j.stop)
	        }
	    });
	    j = (function () {
	        var m = {}, r, n, o, q;
	
	        function p() {
	            o = q = function (s) {
	                return s
	            };
	            if (h) {
	                n = $('<iframe src="javascript:0"/>').hide().insertAfter("body")[0].contentWindow;
	                q = function () {
	                    return a(n.document[c][l])
	                };
	                o = function (u, s) {
	                    if (u !== s) {
	                        var t = n.document;
	                        t.open().close();
	                        t[c].hash = "#" + u
	                    }
	                };
	                o(a())
	            }
	        }
	
	        m.start = function () {
	            if (r) {
	                return
	            }
	            var t = a();
	            o || p();
	            (function s() {
	                var v = a(), u = q(t);
	                if (v !== t) {
	                    o(t = v, u);
	                    $(i).trigger(d)
	                } else {
	                    if (u !== t) {
	                        i[c][l] = i[c][l].replace(/#.*/, "") + "#" + u
	                    }
	                }
	                r = setTimeout(s, $[d + "Delay"])
	            })()
	        };
	        m.stop = function () {
	            if (!n) {
	                r && clearTimeout(r);
	                r = 0
	            }
	        };
	        return m
	    })()
	})(jQuery, window);

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * bxSlider v4.2.11
	 * Copyright 2013-2015 Steven Wanderski
	 * Written while drinking Belgian ales and listening to jazz
	 * Licensed under MIT (http://opensource.org/licenses/MIT)
	 */
	
	;(function($) {
	
	  var defaults = {
	
	    // GENERAL
	    mode: 'horizontal',
	    slideSelector: '',
	    infiniteLoop: true,
	    hideControlOnEnd: false,
	    speed: 500,
	    easing: null,
	    slideMargin: 0,
	    startSlide: 0,
	    randomStart: false,
	    captions: false,
	    ticker: false,
	    tickerHover: false,
	    adaptiveHeight: false,
	    adaptiveHeightSpeed: 500,
	    video: false,
	    useCSS: true,
	    preloadImages: 'visible',
	    responsive: true,
	    slideZIndex: 50,
	    wrapperClass: 'bx-wrapper',
	
	    // TOUCH
	    touchEnabled: true,
	    swipeThreshold: 50,
	    oneToOneTouch: true,
	    preventDefaultSwipeX: true,
	    preventDefaultSwipeY: false,
	
	    // ACCESSIBILITY
	    ariaLive: true,
	    ariaHidden: true,
	
	    // KEYBOARD
	    keyboardEnabled: false,
	
	    // PAGER
	    pager: true,
	    pagerType: 'full',
	    pagerShortSeparator: ' / ',
	    pagerSelector: null,
	    buildPager: null,
	    pagerCustom: null,
	
	    // CONTROLS
	    controls: true,
	    nextText: 'Next',
	    prevText: 'Prev',
	    nextSelector: null,
	    prevSelector: null,
	    autoControls: false,
	    startText: 'Start',
	    stopText: 'Stop',
	    autoControlsCombine: false,
	    autoControlsSelector: null,
	
	    // AUTO
	    auto: false,
	    pause: 4000,
	    autoStart: true,
	    autoDirection: 'next',
	    stopAutoOnClick: false,
	    autoHover: false,
	    autoDelay: 0,
	    autoSlideForOnePage: false,
	
	    // CAROUSEL
	    minSlides: 1,
	    maxSlides: 1,
	    moveSlides: 0,
	    slideWidth: 0,
	    shrinkItems: false,
	
	    // CALLBACKS
	    onSliderLoad: function() { return true; },
	    onSlideBefore: function() { return true; },
	    onSlideAfter: function() { return true; },
	    onSlideNext: function() { return true; },
	    onSlidePrev: function() { return true; },
	    onSliderResize: function() { return true; }
	  };
	
	  $.fn.bxSlider = function(options) {
	
	    if (this.length === 0) {
	      return this;
	    }
	
	    // support multiple elements
	    if (this.length > 1) {
	      this.each(function() {
	        $(this).bxSlider(options);
	      });
	      return this;
	    }
	
	    // create a namespace to be used throughout the plugin
	    var slider = {},
	    // set a reference to our slider element
	    el = this,
	    // get the original window dimens (thanks a lot IE)
	    windowWidth = $(window).width(),
	    windowHeight = $(window).height();
	
	    // Return if slider is already initialized
	    if ($(el).data('bxSlider')) { return; }
	
	    /**
	     * ===================================================================================
	     * = PRIVATE FUNCTIONS
	     * ===================================================================================
	     */
	
	    /**
	     * Initializes namespace settings to be used throughout plugin
	     */
	    var init = function() {
	      // Return if slider is already initialized
	      if ($(el).data('bxSlider')) { return; }
	      // merge user-supplied options with the defaults
	      slider.settings = $.extend({}, defaults, options);
	      // parse slideWidth setting
	      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);
	      // store the original children
	      slider.children = el.children(slider.settings.slideSelector);
	      // check if actual number of slides is less than minSlides / maxSlides
	      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }
	      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }
	      // if random start, set the startSlide setting to random number
	      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }
	      // store active slide information
	      slider.active = { index: slider.settings.startSlide };
	      // store if the slider is in carousel mode (displaying / moving multiple slides)
	      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;
	      // if carousel, force preloadImages = 'all'
	      if (slider.carousel) { slider.settings.preloadImages = 'all'; }
	      // calculate the min / max width thresholds based on min / max number of slides
	      // used to setup and update carousel slides dimensions
	      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);
	      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
	      // store the current state of the slider (if currently animating, working is true)
	      slider.working = false;
	      // initialize the controls object
	      slider.controls = {};
	      // initialize an auto interval
	      slider.interval = null;
	      // determine which property to use for transitions
	      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';
	      // determine if hardware acceleration can be used
	      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {
	        // create our test div element
	        var div = document.createElement('div'),
	        // css transition properties
	        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
	        // test for each property
	        for (var i = 0; i < props.length; i++) {
	          if (div.style[props[i]] !== undefined) {
	            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();
	            slider.animProp = '-' + slider.cssPrefix + '-transform';
	            return true;
	          }
	        }
	        return false;
	      }());
	      // if vertical mode always make maxSlides and minSlides equal
	      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }
	      // save original style data
	      el.data('origStyle', el.attr('style'));
	      el.children(slider.settings.slideSelector).each(function() {
	        $(this).data('origStyle', $(this).attr('style'));
	      });
	
	      // perform all DOM / CSS modifications
	      setup();
	    };
	
	    /**
	     * Performs all DOM and CSS modifications
	     */
	    var setup = function() {
	      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)
	
	      // wrap el in a wrapper
	      el.wrap('<div class="' + slider.settings.wrapperClass + '"><div class="bx-viewport"></div></div>');
	      // store a namespace reference to .bx-viewport
	      slider.viewport = el.parent();
	
	      // add aria-live if the setting is enabled and ticker mode is disabled
	      if (slider.settings.ariaLive && !slider.settings.ticker) {
	        slider.viewport.attr('aria-live', 'polite');
	      }
	      // add a loading div to display while images are loading
	      slider.loader = $('<div class="bx-loading" />');
	      slider.viewport.prepend(slider.loader);
	      // set el to a massive width, to hold any needed slides
	      // also strip any margin and padding from el
	      el.css({
	        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',
	        position: 'relative'
	      });
	      // if using CSS, add the easing property
	      if (slider.usingCSS && slider.settings.easing) {
	        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);
	      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)
	      } else if (!slider.settings.easing) {
	        slider.settings.easing = 'swing';
	      }
	      // make modifications to the viewport (.bx-viewport)
	      slider.viewport.css({
	        width: '100%',
	        overflow: 'hidden',
	        position: 'relative'
	      });
	      slider.viewport.parent().css({
	        maxWidth: getViewportMaxWidth()
	      });
	      // apply css to all slider children
	      slider.children.css({
	        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',
	        listStyle: 'none',
	        position: 'relative'
	      });
	      // apply the calculated width after the float is applied to prevent scrollbar interference
	      slider.children.css('width', getSlideWidth());
	      // if slideMargin is supplied, add the css
	      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }
	      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }
	      // if "fade" mode, add positioning and z-index CSS
	      if (slider.settings.mode === 'fade') {
	        slider.children.css({
	          position: 'absolute',
	          zIndex: 0,
	          display: 'none'
	        });
	        // prepare the z-index on the showing element
	        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});
	      }
	      // create an element to contain all slider controls (pager, start / stop, etc)
	      slider.controls.el = $('<div class="bx-controls" />');
	      // if captions are requested, add them
	      if (slider.settings.captions) { appendCaptions(); }
	      // check if startSlide is last slide
	      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;
	      // if video is true, set up the fitVids plugin
	      if (slider.settings.video) { el.fitVids(); }
	      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }
	      // only check for control addition if not in "ticker" mode
	      if (!slider.settings.ticker) {
	        // if controls are requested, add them
	        if (slider.settings.controls) { appendControls(); }
	        // if auto is true, and auto controls are requested, add them
	        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }
	        // if pager is requested, add it
	        if (slider.settings.pager) { appendPager(); }
	        // if any control option is requested, add the controls wrapper
	        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }
	      // if ticker mode, do not allow a pager
	      } else {
	        slider.settings.pager = false;
	      }
	      loadElements(preloadSelector, start);
	    };
	
	    var loadElements = function(selector, callback) {
	      var total = selector.find('img:not([src=""]), iframe').length,
	      count = 0;
	      if (total === 0) {
	        callback();
	        return;
	      }
	      selector.find('img:not([src=""]), iframe').each(function() {
	        $(this).one('load error', function() {
	          if (++count === total) { callback(); }
	        }).each(function() {
	          if (this.complete) { $(this).trigger('load'); }
	        });
	      });
	    };
	
	    /**
	     * Start the slider
	     */
	    var start = function() {
	      // if infinite loop, prepare additional slides
	      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {
	        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,
	        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),
	        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');
	        if (slider.settings.ariaHidden) {
	          sliceAppend.attr('aria-hidden', true);
	          slicePrepend.attr('aria-hidden', true);
	        }
	        el.append(sliceAppend).prepend(slicePrepend);
	      }
	      // remove the loading DOM element
	      slider.loader.remove();
	      // set the left / top position of "el"
	      setSlidePosition();
	      // if "vertical" mode, always use adaptiveHeight to prevent odd behavior
	      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }
	      // set the viewport height
	      slider.viewport.height(getViewportHeight());
	      // make sure everything is positioned just right (same as a window resize)
	      el.redrawSlider();
	      // onSliderLoad callback
	      slider.settings.onSliderLoad.call(el, slider.active.index);
	      // slider has been fully initialized
	      slider.initialized = true;
	      // bind the resize call to the window
	      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }
	      // if auto is true and has more than 1 page, start the show
	      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }
	      // if ticker is true, start the ticker
	      if (slider.settings.ticker) { initTicker(); }
	      // if pager is requested, make the appropriate pager link active
	      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }
	      // check for any updates to the controls (like hideControlOnEnd updates)
	      if (slider.settings.controls) { updateDirectionControls(); }
	      // if touchEnabled is true, setup the touch events
	      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }
	      // if keyboardEnabled is true, setup the keyboard events
	      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {
	        $(document).keydown(keyPress);
	      }
	    };
	
	    /**
	     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value
	     */
	    var getViewportHeight = function() {
	      var height = 0;
	      // first determine which children (slides) should be used in our height calculation
	      var children = $();
	      // if mode is not "vertical" and adaptiveHeight is false, include all children
	      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {
	        children = slider.children;
	      } else {
	        // if not carousel, return the single active child
	        if (!slider.carousel) {
	          children = slider.children.eq(slider.active.index);
	        // if carousel, return a slice of children
	        } else {
	          // get the individual slide index
	          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();
	          // add the current slide to the children
	          children = slider.children.eq(currentIndex);
	          // cycle through the remaining "showing" slides
	          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {
	            // if looped back to the start
	            if (currentIndex + i >= slider.children.length) {
	              children = children.add(slider.children.eq(i - 1));
	            } else {
	              children = children.add(slider.children.eq(currentIndex + i));
	            }
	          }
	        }
	      }
	      // if "vertical" mode, calculate the sum of the heights of the children
	      if (slider.settings.mode === 'vertical') {
	        children.each(function(index) {
	          height += $(this).outerHeight();
	        });
	        // add user-supplied margins
	        if (slider.settings.slideMargin > 0) {
	          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);
	        }
	      // if not "vertical" mode, calculate the max height of the children
	      } else {
	        height = Math.max.apply(Math, children.map(function() {
	          return $(this).outerHeight(false);
	        }).get());
	      }
	
	      if (slider.viewport.css('box-sizing') === 'border-box') {
	        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +
	              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));
	      } else if (slider.viewport.css('box-sizing') === 'padding-box') {
	        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));
	      }
	
	      return height;
	    };
	
	    /**
	     * Returns the calculated width to be used for the outer wrapper / viewport
	     */
	    var getViewportMaxWidth = function() {
	      var width = '100%';
	      if (slider.settings.slideWidth > 0) {
	        if (slider.settings.mode === 'horizontal') {
	          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
	        } else {
	          width = slider.settings.slideWidth;
	        }
	      }
	      return width;
	    };
	
	    /**
	     * Returns the calculated width to be applied to each slide
	     */
	    var getSlideWidth = function() {
	      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width
	      wrapWidth      = slider.viewport.width();    // get the current viewport width
	      // if slide width was not supplied, or is larger than the viewport use the viewport width
	      if (slider.settings.slideWidth === 0 ||
	        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||
	        slider.settings.mode === 'vertical') {
	        newElWidth = wrapWidth;
	      // if carousel, use the thresholds to determine the width
	      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {
	        if (wrapWidth > slider.maxThreshold) {
	          return newElWidth;
	        } else if (wrapWidth < slider.minThreshold) {
	          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;
	        } else if (slider.settings.shrinkItems) {
	          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);
	        }
	      }
	      return newElWidth;
	    };
	
	    /**
	     * Returns the number of slides currently visible in the viewport (includes partially visible slides)
	     */
	    var getNumberSlidesShowing = function() {
	      var slidesShowing = 1,
	      childWidth = null;
	      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {
	        // if viewport is smaller than minThreshold, return minSlides
	        if (slider.viewport.width() < slider.minThreshold) {
	          slidesShowing = slider.settings.minSlides;
	        // if viewport is larger than maxThreshold, return maxSlides
	        } else if (slider.viewport.width() > slider.maxThreshold) {
	          slidesShowing = slider.settings.maxSlides;
	        // if viewport is between min / max thresholds, divide viewport width by first child width
	        } else {
	          childWidth = slider.children.first().width() + slider.settings.slideMargin;
	          slidesShowing = Math.floor((slider.viewport.width() +
	            slider.settings.slideMargin) / childWidth);
	        }
	      // if "vertical" mode, slides showing will always be minSlides
	      } else if (slider.settings.mode === 'vertical') {
	        slidesShowing = slider.settings.minSlides;
	      }
	      return slidesShowing;
	    };
	
	    /**
	     * Returns the number of pages (one full viewport of slides is one "page")
	     */
	    var getPagerQty = function() {
	      var pagerQty = 0,
	      breakPoint = 0,
	      counter = 0;
	      // if moveSlides is specified by the user
	      if (slider.settings.moveSlides > 0) {
	        if (slider.settings.infiniteLoop) {
	          pagerQty = Math.ceil(slider.children.length / getMoveBy());
	        } else {
	          // when breakpoint goes above children length, counter is the number of pages
	          while (breakPoint < slider.children.length) {
	            ++pagerQty;
	            breakPoint = counter + getNumberSlidesShowing();
	            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();
	          }
	        }
	      // if moveSlides is 0 (auto) divide children length by sides showing, then round up
	      } else {
	        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());
	      }
	      return pagerQty;
	    };
	
	    /**
	     * Returns the number of individual slides by which to shift the slider
	     */
	    var getMoveBy = function() {
	      // if moveSlides was set by the user and moveSlides is less than number of slides showing
	      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {
	        return slider.settings.moveSlides;
	      }
	      // if moveSlides is 0 (auto)
	      return getNumberSlidesShowing();
	    };
	
	    /**
	     * Sets the slider's (el) left or top position
	     */
	    var setSlidePosition = function() {
	      var position, lastChild, lastShowingIndex;
	      // if last slide, not infinite loop, and number of children is larger than specified maxSlides
	      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {
	        if (slider.settings.mode === 'horizontal') {
	          // get the last child's position
	          lastChild = slider.children.last();
	          position = lastChild.position();
	          // set the left position
	          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);
	        } else if (slider.settings.mode === 'vertical') {
	          // get the last showing index's position
	          lastShowingIndex = slider.children.length - slider.settings.minSlides;
	          position = slider.children.eq(lastShowingIndex).position();
	          // set the top position
	          setPositionProperty(-position.top, 'reset', 0);
	        }
	      // if not last slide
	      } else {
	        // get the position of the first showing slide
	        position = slider.children.eq(slider.active.index * getMoveBy()).position();
	        // check for last slide
	        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }
	        // set the respective position
	        if (position !== undefined) {
	          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
	          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
	        }
	      }
	    };
	
	    /**
	     * Sets the el's animating property position (which in turn will sometimes animate el).
	     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.
	     *
	     * @param value (int)
	     *  - the animating property's value
	     *
	     * @param type (string) 'slide', 'reset', 'ticker'
	     *  - the type of instance for which the function is being
	     *
	     * @param duration (int)
	     *  - the amount of time (in ms) the transition should occupy
	     *
	     * @param params (array) optional
	     *  - an optional parameter containing any variables that need to be passed in
	     */
	    var setPositionProperty = function(value, type, duration, params) {
	      var animateObj, propValue;
	      // use CSS transform
	      if (slider.usingCSS) {
	        // determine the translate3d value
	        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';
	        // add the CSS transition-duration
	        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');
	        if (type === 'slide') {
	          // set the property value
	          el.css(slider.animProp, propValue);
	          if (duration !== 0) {
	            // bind a callback method - executes when CSS transition completes
	            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
	              //make sure it's the correct one
	              if (!$(e.target).is(el)) { return; }
	              // unbind the callback
	              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
	              updateAfterSlideTransition();
	            });
	          } else { //duration = 0
	            updateAfterSlideTransition();
	          }
	        } else if (type === 'reset') {
	          el.css(slider.animProp, propValue);
	        } else if (type === 'ticker') {
	          // make the transition use 'linear'
	          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');
	          el.css(slider.animProp, propValue);
	          if (duration !== 0) {
	            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
	              //make sure it's the correct one
	              if (!$(e.target).is(el)) { return; }
	              // unbind the callback
	              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
	              // reset the position
	              setPositionProperty(params.resetValue, 'reset', 0);
	              // start the loop again
	              tickerLoop();
	            });
	          } else { //duration = 0
	            setPositionProperty(params.resetValue, 'reset', 0);
	            tickerLoop();
	          }
	        }
	      // use JS animate
	      } else {
	        animateObj = {};
	        animateObj[slider.animProp] = value;
	        if (type === 'slide') {
	          el.animate(animateObj, duration, slider.settings.easing, function() {
	            updateAfterSlideTransition();
	          });
	        } else if (type === 'reset') {
	          el.css(slider.animProp, value);
	        } else if (type === 'ticker') {
	          el.animate(animateObj, duration, 'linear', function() {
	            setPositionProperty(params.resetValue, 'reset', 0);
	            // run the recursive loop after animation
	            tickerLoop();
	          });
	        }
	      }
	    };
	
	    /**
	     * Populates the pager with proper amount of pages
	     */
	    var populatePager = function() {
	      var pagerHtml = '',
	      linkContent = '',
	      pagerQty = getPagerQty();
	      // loop through each pager item
	      for (var i = 0; i < pagerQty; i++) {
	        linkContent = '';
	        // if a buildPager function is supplied, use it to get pager link value, else use index + 1
	        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {
	          linkContent = slider.settings.buildPager(i);
	          slider.pagerEl.addClass('bx-custom-pager');
	        } else {
	          linkContent = i + 1;
	          slider.pagerEl.addClass('bx-default-pager');
	        }
	        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;
	        // add the markup to the string
	        pagerHtml += '<div class="bx-pager-item"><a href="" data-slide-index="' + i + '" class="bx-pager-link">' + linkContent + '</a></div>';
	      }
	      // populate the pager element with pager links
	      slider.pagerEl.html(pagerHtml);
	    };
	
	    /**
	     * Appends the pager to the controls element
	     */
	    var appendPager = function() {
	      if (!slider.settings.pagerCustom) {
	        // create the pager DOM element
	        slider.pagerEl = $('<div class="bx-pager" />');
	        // if a pager selector was supplied, populate it with the pager
	        if (slider.settings.pagerSelector) {
	          $(slider.settings.pagerSelector).html(slider.pagerEl);
	        // if no pager selector was supplied, add it after the wrapper
	        } else {
	          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);
	        }
	        // populate the pager
	        populatePager();
	      } else {
	        slider.pagerEl = $(slider.settings.pagerCustom);
	      }
	      // assign the pager click binding
	      slider.pagerEl.on('click touchend', 'a', clickPagerBind);
	    };
	
	    /**
	     * Appends prev / next controls to the controls element
	     */
	    var appendControls = function() {
	      slider.controls.next = $('<a class="bx-next" href="">' + slider.settings.nextText + '</a>');
	      slider.controls.prev = $('<a class="bx-prev" href="">' + slider.settings.prevText + '</a>');
	      // bind click actions to the controls
	      slider.controls.next.bind('click touchend', clickNextBind);
	      slider.controls.prev.bind('click touchend', clickPrevBind);
	      // if nextSelector was supplied, populate it
	      if (slider.settings.nextSelector) {
	        $(slider.settings.nextSelector).append(slider.controls.next);
	      }
	      // if prevSelector was supplied, populate it
	      if (slider.settings.prevSelector) {
	        $(slider.settings.prevSelector).append(slider.controls.prev);
	      }
	      // if no custom selectors were supplied
	      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {
	        // add the controls to the DOM
	        slider.controls.directionEl = $('<div class="bx-controls-direction" />');
	        // add the control elements to the directionEl
	        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);
	        // slider.viewport.append(slider.controls.directionEl);
	        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);
	      }
	    };
	
	    /**
	     * Appends start / stop auto controls to the controls element
	     */
	    var appendControlsAuto = function() {
	      slider.controls.start = $('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + slider.settings.startText + '</a></div>');
	      slider.controls.stop = $('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + slider.settings.stopText + '</a></div>');
	      // add the controls to the DOM
	      slider.controls.autoEl = $('<div class="bx-controls-auto" />');
	      // bind click actions to the controls
	      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);
	      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);
	      // if autoControlsCombine, insert only the "start" control
	      if (slider.settings.autoControlsCombine) {
	        slider.controls.autoEl.append(slider.controls.start);
	      // if autoControlsCombine is false, insert both controls
	      } else {
	        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);
	      }
	      // if auto controls selector was supplied, populate it with the controls
	      if (slider.settings.autoControlsSelector) {
	        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);
	      // if auto controls selector was not supplied, add it after the wrapper
	      } else {
	        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);
	      }
	      // update the auto controls
	      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');
	    };
	
	    /**
	     * Appends image captions to the DOM
	     */
	    var appendCaptions = function() {
	      // cycle through each child
	      slider.children.each(function(index) {
	        // get the image title attribute
	        var title = $(this).find('img:first').attr('title');
	        // append the caption
	        if (title !== undefined && ('' + title).length) {
	          $(this).append('<div class="bx-caption"><span>' + title + '</span></div>');
	        }
	      });
	    };
	
	    /**
	     * Click next binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickNextBind = function(e) {
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) { return; }
	      // if auto show is running, stop it
	      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      el.goToNextSlide();
	    };
	
	    /**
	     * Click prev binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickPrevBind = function(e) {
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) { return; }
	      // if auto show is running, stop it
	      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      el.goToPrevSlide();
	    };
	
	    /**
	     * Click start binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickStartBind = function(e) {
	      el.startAuto();
	      e.preventDefault();
	    };
	
	    /**
	     * Click stop binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickStopBind = function(e) {
	      el.stopAuto();
	      e.preventDefault();
	    };
	
	    /**
	     * Click pager binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickPagerBind = function(e) {
	      var pagerLink, pagerIndex;
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) {
	        return;
	      }
	      // if auto show is running, stop it
	      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      pagerLink = $(e.currentTarget);
	      if (pagerLink.attr('data-slide-index') !== undefined) {
	        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));
	        // if clicked pager link is not active, continue with the goToSlide call
	        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }
	      }
	    };
	
	    /**
	     * Updates the pager links with an active class
	     *
	     * @param slideIndex (int)
	     *  - index of slide to make active
	     */
	    var updatePagerActive = function(slideIndex) {
	      // if "short" pager type
	      var len = slider.children.length; // nb of children
	      if (slider.settings.pagerType === 'short') {
	        if (slider.settings.maxSlides > 1) {
	          len = Math.ceil(slider.children.length / slider.settings.maxSlides);
	        }
	        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);
	        return;
	      }
	      // remove all pager active classes
	      slider.pagerEl.find('a').removeClass('active');
	      // apply the active class for all pagers
	      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });
	    };
	
	    /**
	     * Performs needed actions after a slide transition
	     */
	    var updateAfterSlideTransition = function() {
	      // if infinite loop is true
	      if (slider.settings.infiniteLoop) {
	        var position = '';
	        // first slide
	        if (slider.active.index === 0) {
	          // set the new position
	          position = slider.children.eq(0).position();
	        // carousel, last slide
	        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {
	          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();
	        // last slide
	        } else if (slider.active.index === slider.children.length - 1) {
	          position = slider.children.eq(slider.children.length - 1).position();
	        }
	        if (position) {
	          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
	          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
	        }
	      }
	      // declare that the transition is complete
	      slider.working = false;
	      // onSlideAfter callback
	      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
	    };
	
	    /**
	     * Updates the auto controls state (either active, or combined switch)
	     *
	     * @param state (string) "start", "stop"
	     *  - the new state of the auto show
	     */
	    var updateAutoControls = function(state) {
	      // if autoControlsCombine is true, replace the current control with the new state
	      if (slider.settings.autoControlsCombine) {
	        slider.controls.autoEl.html(slider.controls[state]);
	      // if autoControlsCombine is false, apply the "active" class to the appropriate control
	      } else {
	        slider.controls.autoEl.find('a').removeClass('active');
	        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');
	      }
	    };
	
	    /**
	     * Updates the direction controls (checks if either should be hidden)
	     */
	    var updateDirectionControls = function() {
	      if (getPagerQty() === 1) {
	        slider.controls.prev.addClass('disabled');
	        slider.controls.next.addClass('disabled');
	      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {
	        // if first slide
	        if (slider.active.index === 0) {
	          slider.controls.prev.addClass('disabled');
	          slider.controls.next.removeClass('disabled');
	        // if last slide
	        } else if (slider.active.index === getPagerQty() - 1) {
	          slider.controls.next.addClass('disabled');
	          slider.controls.prev.removeClass('disabled');
	        // if any slide in the middle
	        } else {
	          slider.controls.prev.removeClass('disabled');
	          slider.controls.next.removeClass('disabled');
	        }
	      }
	    };
	
	    /**
	     * Initializes the auto process
	     */
	    var initAuto = function() {
	      // if autoDelay was supplied, launch the auto show using a setTimeout() call
	      if (slider.settings.autoDelay > 0) {
	        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);
	      // if autoDelay was not supplied, start the auto show normally
	      } else {
	        el.startAuto();
	
	        //add focus and blur events to ensure its running if timeout gets paused
	        $(window).focus(function() {
	          el.startAuto();
	        }).blur(function() {
	          el.stopAuto();
	        });
	      }
	      // if autoHover is requested
	      if (slider.settings.autoHover) {
	        // on el hover
	        el.hover(function() {
	          // if the auto show is currently playing (has an active interval)
	          if (slider.interval) {
	            // stop the auto show and pass true argument which will prevent control update
	            el.stopAuto(true);
	            // create a new autoPaused value which will be used by the relative "mouseout" event
	            slider.autoPaused = true;
	          }
	        }, function() {
	          // if the autoPaused value was created be the prior "mouseover" event
	          if (slider.autoPaused) {
	            // start the auto show and pass true argument which will prevent control update
	            el.startAuto(true);
	            // reset the autoPaused value
	            slider.autoPaused = null;
	          }
	        });
	      }
	    };
	
	    /**
	     * Initializes the ticker process
	     */
	    var initTicker = function() {
	      var startPosition = 0,
	      position, transform, value, idx, ratio, property, newSpeed, totalDimens;
	      // if autoDirection is "next", append a clone of the entire slider
	      if (slider.settings.autoDirection === 'next') {
	        el.append(slider.children.clone().addClass('bx-clone'));
	      // if autoDirection is "prev", prepend a clone of the entire slider, and set the left position
	      } else {
	        el.prepend(slider.children.clone().addClass('bx-clone'));
	        position = slider.children.first().position();
	        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
	      }
	      setPositionProperty(startPosition, 'reset', 0);
	      // do not allow controls in ticker mode
	      slider.settings.pager = false;
	      slider.settings.controls = false;
	      slider.settings.autoControls = false;
	      // if autoHover is requested
	      if (slider.settings.tickerHover) {
	        if (slider.usingCSS) {
	          idx = slider.settings.mode === 'horizontal' ? 4 : 5;
	          slider.viewport.hover(function() {
	            transform = el.css('-' + slider.cssPrefix + '-transform');
	            value = parseFloat(transform.split(',')[idx]);
	            setPositionProperty(value, 'reset', 0);
	          }, function() {
	            totalDimens = 0;
	            slider.children.each(function(index) {
	              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
	            });
	            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
	            ratio = slider.settings.speed / totalDimens;
	            // determine which property to use
	            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
	            // calculate the new speed
	            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));
	            tickerLoop(newSpeed);
	          });
	        } else {
	          // on el hover
	          slider.viewport.hover(function() {
	            el.stop();
	          }, function() {
	            // calculate the total width of children (used to calculate the speed ratio)
	            totalDimens = 0;
	            slider.children.each(function(index) {
	              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
	            });
	            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
	            ratio = slider.settings.speed / totalDimens;
	            // determine which property to use
	            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
	            // calculate the new speed
	            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));
	            tickerLoop(newSpeed);
	          });
	        }
	      }
	      // start the ticker loop
	      tickerLoop();
	    };
	
	    /**
	     * Runs a continuous loop, news ticker-style
	     */
	    var tickerLoop = function(resumeSpeed) {
	      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,
	      position = {left: 0, top: 0},
	      reset = {left: 0, top: 0},
	      animateProperty, resetValue, params;
	
	      // if "next" animate left position to last child, then reset left to 0
	      if (slider.settings.autoDirection === 'next') {
	        position = el.find('.bx-clone').first().position();
	      // if "prev" animate left position to 0, then reset left to first non-clone child
	      } else {
	        reset = slider.children.first().position();
	      }
	      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
	      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;
	      params = {resetValue: resetValue};
	      setPositionProperty(animateProperty, 'ticker', speed, params);
	    };
	
	    /**
	     * Check if el is on screen
	     */
	    var isOnScreen = function(el) {
	      var win = $(window),
	      viewport = {
	        top: win.scrollTop(),
	        left: win.scrollLeft()
	      },
	      bounds = el.offset();
	
	      viewport.right = viewport.left + win.width();
	      viewport.bottom = viewport.top + win.height();
	      bounds.right = bounds.left + el.outerWidth();
	      bounds.bottom = bounds.top + el.outerHeight();
	
	      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));
	    };
	
	    /**
	     * Initializes keyboard events
	     */
	    var keyPress = function(e) {
	      var activeElementTag = document.activeElement.tagName.toLowerCase(),
	      tagFilters = 'input|textarea',
	      p = new RegExp(activeElementTag,['i']),
	      result = p.exec(tagFilters);
	
	      if (result == null && isOnScreen(el)) {
	        if (e.keyCode === 39) {
	          clickNextBind(e);
	          return false;
	        } else if (e.keyCode === 37) {
	          clickPrevBind(e);
	          return false;
	        }
	      }
	    };
	
	    /**
	     * Initializes touch events
	     */
	    var initTouch = function() {
	      // initialize object to contain all touch values
	      slider.touch = {
	        start: {x: 0, y: 0},
	        end: {x: 0, y: 0}
	      };
	      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);
	
	      //for browsers that have implemented pointer events and fire a click after
	      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not
	      slider.viewport.on('click', '.bxslider a', function(e) {
	        if (slider.viewport.hasClass('click-disabled')) {
	          e.preventDefault();
	          slider.viewport.removeClass('click-disabled');
	        }
	      });
	    };
	
	    /**
	     * Event handler for "touchstart"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchStart = function(e) {
	      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls
	      slider.controls.el.addClass('disabled');
	
	      if (slider.working) {
	        e.preventDefault();
	        slider.controls.el.removeClass('disabled');
	      } else {
	        // record the original position when touch starts
	        slider.touch.originalPos = el.position();
	        var orig = e.originalEvent,
	        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];
	        // record the starting touch x, y coordinates
	        slider.touch.start.x = touchPoints[0].pageX;
	        slider.touch.start.y = touchPoints[0].pageY;
	
	        if (slider.viewport.get(0).setPointerCapture) {
	          slider.pointerId = orig.pointerId;
	          slider.viewport.get(0).setPointerCapture(slider.pointerId);
	        }
	        // bind a "touchmove" event to the viewport
	        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);
	        // bind a "touchend" event to the viewport
	        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);
	        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);
	      }
	    };
	
	    /**
	     * Cancel Pointer for Windows Phone
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onPointerCancel = function(e) {
	      /* onPointerCancel handler is needed to deal with situations when a touchend
	      doesn't fire after a touchstart (this happens on windows phones only) */
	      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);
	
	      //remove handlers
	      slider.controls.el.removeClass('disabled');
	      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);
	      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);
	      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);
	      if (slider.viewport.get(0).releasePointerCapture) {
	        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
	      }
	    };
	
	    /**
	     * Event handler for "touchmove"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchMove = function(e) {
	      var orig = e.originalEvent,
	      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
	      // if scrolling on y axis, do not prevent default
	      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),
	      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),
	      value = 0,
	      change = 0;
	
	      // x axis swipe
	      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {
	        e.preventDefault();
	      // y axis swipe
	      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {
	        e.preventDefault();
	      }
	      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {
	        // if horizontal, drag along x axis
	        if (slider.settings.mode === 'horizontal') {
	          change = touchPoints[0].pageX - slider.touch.start.x;
	          value = slider.touch.originalPos.left + change;
	        // if vertical, drag along y axis
	        } else {
	          change = touchPoints[0].pageY - slider.touch.start.y;
	          value = slider.touch.originalPos.top + change;
	        }
	        setPositionProperty(value, 'reset', 0);
	      }
	    };
	
	    /**
	     * Event handler for "touchend"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchEnd = function(e) {
	      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);
	      //enable slider controls as soon as user stops interacing with slides
	      slider.controls.el.removeClass('disabled');
	      var orig    = e.originalEvent,
	      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
	      value       = 0,
	      distance    = 0;
	      // record end x, y positions
	      slider.touch.end.x = touchPoints[0].pageX;
	      slider.touch.end.y = touchPoints[0].pageY;
	      // if fade mode, check if absolute x distance clears the threshold
	      if (slider.settings.mode === 'fade') {
	        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);
	        if (distance >= slider.settings.swipeThreshold) {
	          if (slider.touch.start.x > slider.touch.end.x) {
	            el.goToNextSlide();
	          } else {
	            el.goToPrevSlide();
	          }
	          el.stopAuto();
	        }
	      // not fade mode
	      } else {
	        // calculate distance and el's animate property
	        if (slider.settings.mode === 'horizontal') {
	          distance = slider.touch.end.x - slider.touch.start.x;
	          value = slider.touch.originalPos.left;
	        } else {
	          distance = slider.touch.end.y - slider.touch.start.y;
	          value = slider.touch.originalPos.top;
	        }
	        // if not infinite loop and first / last slide, do not attempt a slide transition
	        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {
	          setPositionProperty(value, 'reset', 200);
	        } else {
	          // check if distance clears threshold
	          if (Math.abs(distance) >= slider.settings.swipeThreshold) {
	            if (distance < 0) {
	              el.goToNextSlide();
	            } else {
	              el.goToPrevSlide();
	            }
	            el.stopAuto();
	          } else {
	            // el.animate(property, 200);
	            setPositionProperty(value, 'reset', 200);
	          }
	        }
	      }
	      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);
	      if (slider.viewport.get(0).releasePointerCapture) {
	        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
	      }
	    };
	
	    /**
	     * Window resize event callback
	     */
	    var resizeWindow = function(e) {
	      // don't do anything if slider isn't initialized.
	      if (!slider.initialized) { return; }
	      // Delay if slider working.
	      if (slider.working) {
	        window.setTimeout(resizeWindow, 10);
	      } else {
	        // get the new window dimens (again, thank you IE)
	        var windowWidthNew = $(window).width(),
	        windowHeightNew = $(window).height();
	        // make sure that it is a true window resize
	        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements
	        // are resized. Can you just die already?*
	        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {
	          // set the new window dimens
	          windowWidth = windowWidthNew;
	          windowHeight = windowHeightNew;
	          // update all dynamic elements
	          el.redrawSlider();
	          // Call user resize handler
	          slider.settings.onSliderResize.call(el, slider.active.index);
	        }
	      }
	    };
	
	    /**
	     * Adds an aria-hidden=true attribute to each element
	     *
	     * @param startVisibleIndex (int)
	     *  - the first visible element's index
	     */
	    var applyAriaHiddenAttributes = function(startVisibleIndex) {
	      var numberOfSlidesShowing = getNumberSlidesShowing();
	      // only apply attributes if the setting is enabled and not in ticker mode
	      if (slider.settings.ariaHidden && !slider.settings.ticker) {
	        // add aria-hidden=true to all elements
	        slider.children.attr('aria-hidden', 'true');
	        // get the visible elements and change to aria-hidden=false
	        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');
	      }
	    };
	
	    /**
	     * Returns index according to present page range
	     *
	     * @param slideOndex (int)
	     *  - the desired slide index
	     */
	    var setSlideIndex = function(slideIndex) {
	      if (slideIndex < 0) {
	        if (slider.settings.infiniteLoop) {
	          return getPagerQty() - 1;
	        }else {
	          //we don't go to undefined slides
	          return slider.active.index;
	        }
	      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)
	      } else if (slideIndex >= getPagerQty()) {
	        if (slider.settings.infiniteLoop) {
	          return 0;
	        } else {
	          //we don't move to undefined pages
	          return slider.active.index;
	        }
	      // set active index to requested slide
	      } else {
	        return slideIndex;
	      }
	    };
	
	    /**
	     * ===================================================================================
	     * = PUBLIC FUNCTIONS
	     * ===================================================================================
	     */
	
	    /**
	     * Performs slide transition to the specified slide
	     *
	     * @param slideIndex (int)
	     *  - the destination slide's index (zero-based)
	     *
	     * @param direction (string)
	     *  - INTERNAL USE ONLY - the direction of travel ("prev" / "next")
	     */
	    el.goToSlide = function(slideIndex, direction) {
	      // onSlideBefore, onSlideNext, onSlidePrev callbacks
	      // Allow transition canceling based on returned value
	      var performTransition = true,
	      moveBy = 0,
	      position = {left: 0, top: 0},
	      lastChild = null,
	      lastShowingIndex, eq, value, requestEl;
	      // store the old index
	      slider.oldIndex = slider.active.index;
	      //set new index
	      slider.active.index = setSlideIndex(slideIndex);
	
	      // if plugin is currently in motion, ignore request
	      if (slider.working || slider.active.index === slider.oldIndex) { return; }
	      // declare that plugin is in motion
	      slider.working = true;
	
	      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
	
	      // If transitions canceled, reset and return
	      if (typeof (performTransition) !== 'undefined' && !performTransition) {
	        slider.active.index = slider.oldIndex; // restore old index
	        slider.working = false; // is not in motion
	        return;
	      }
	
	      if (direction === 'next') {
	        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
	        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
	          performTransition = false;
	        }
	      } else if (direction === 'prev') {
	        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
	        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
	          performTransition = false;
	        }
	      }
	
	      // check if last slide
	      slider.active.last = slider.active.index >= getPagerQty() - 1;
	      // update the pager with active class
	      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }
	      // // check for direction control update
	      if (slider.settings.controls) { updateDirectionControls(); }
	      // if slider is set to mode: "fade"
	      if (slider.settings.mode === 'fade') {
	        // if adaptiveHeight is true and next height is different from current height, animate to the new height
	        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
	          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
	        }
	        // fade out the visible child and reset its z-index value
	        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});
	        // fade in the newly requested slide
	        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {
	          $(this).css('zIndex', slider.settings.slideZIndex);
	          updateAfterSlideTransition();
	        });
	      // slider mode is not "fade"
	      } else {
	        // if adaptiveHeight is true and next height is different from current height, animate to the new height
	        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
	          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
	        }
	        // if carousel and not infinite loop
	        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {
	          if (slider.settings.mode === 'horizontal') {
	            // get the last child position
	            lastChild = slider.children.eq(slider.children.length - 1);
	            position = lastChild.position();
	            // calculate the position of the last slide
	            moveBy = slider.viewport.width() - lastChild.outerWidth();
	          } else {
	            // get last showing index position
	            lastShowingIndex = slider.children.length - slider.settings.minSlides;
	            position = slider.children.eq(lastShowingIndex).position();
	          }
	          // horizontal carousel, going previous while on first slide (infiniteLoop mode)
	        } else if (slider.carousel && slider.active.last && direction === 'prev') {
	          // get the last child position
	          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);
	          lastChild = el.children('.bx-clone').eq(eq);
	          position = lastChild.position();
	        // if infinite loop and "Next" is clicked on the last slide
	        } else if (direction === 'next' && slider.active.index === 0) {
	          // get the last clone position
	          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();
	          slider.active.last = false;
	        // normal non-zero requests
	        } else if (slideIndex >= 0) {
	          //parseInt is applied to allow floats for slides/page
	          requestEl = slideIndex * parseInt(getMoveBy());
	          position = slider.children.eq(requestEl).position();
	        }
	
	        /* If the position doesn't exist
	         * (e.g. if you destroy the slider on a next click),
	         * it doesn't throw an error.
	         */
	        if (typeof (position) !== 'undefined') {
	          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;
	          // plugin values to be animated
	          setPositionProperty(value, 'slide', slider.settings.speed);
	        } else {
	          slider.working = false;
	        }
	      }
	      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
	    };
	
	    /**
	     * Transitions to the next slide in the show
	     */
	    el.goToNextSlide = function() {
	      // if infiniteLoop is false and last page is showing, disregard call
	      if (!slider.settings.infiniteLoop && slider.active.last) { return; }
	      var pagerIndex = parseInt(slider.active.index) + 1;
	      el.goToSlide(pagerIndex, 'next');
	    };
	
	    /**
	     * Transitions to the prev slide in the show
	     */
	    el.goToPrevSlide = function() {
	      // if infiniteLoop is false and last page is showing, disregard call
	      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }
	      var pagerIndex = parseInt(slider.active.index) - 1;
	      el.goToSlide(pagerIndex, 'prev');
	    };
	
	    /**
	     * Starts the auto show
	     *
	     * @param preventControlUpdate (boolean)
	     *  - if true, auto controls state will not be updated
	     */
	    el.startAuto = function(preventControlUpdate) {
	      // if an interval already exists, disregard call
	      if (slider.interval) { return; }
	      // create an interval
	      slider.interval = setInterval(function() {
	        if (slider.settings.autoDirection === 'next') {
	          el.goToNextSlide();
	        } else {
	          el.goToPrevSlide();
	        }
	      }, slider.settings.pause);
	      // if auto controls are displayed and preventControlUpdate is not true
	      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }
	    };
	
	    /**
	     * Stops the auto show
	     *
	     * @param preventControlUpdate (boolean)
	     *  - if true, auto controls state will not be updated
	     */
	    el.stopAuto = function(preventControlUpdate) {
	      // if no interval exists, disregard call
	      if (!slider.interval) { return; }
	      // clear the interval
	      clearInterval(slider.interval);
	      slider.interval = null;
	      // if auto controls are displayed and preventControlUpdate is not true
	      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }
	    };
	
	    /**
	     * Returns current slide index (zero-based)
	     */
	    el.getCurrentSlide = function() {
	      return slider.active.index;
	    };
	
	    /**
	     * Returns current slide element
	     */
	    el.getCurrentSlideElement = function() {
	      return slider.children.eq(slider.active.index);
	    };
	
	    /**
	     * Returns a slide element
	     * @param index (int)
	     *  - The index (zero-based) of the element you want returned.
	     */
	    el.getSlideElement = function(index) {
	      return slider.children.eq(index);
	    };
	
	    /**
	     * Returns number of slides in show
	     */
	    el.getSlideCount = function() {
	      return slider.children.length;
	    };
	
	    /**
	     * Return slider.working variable
	     */
	    el.isWorking = function() {
	      return slider.working;
	    };
	
	    /**
	     * Update all dynamic slider elements
	     */
	    el.redrawSlider = function() {
	      // resize all children in ratio to new screen size
	      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());
	      // adjust the height
	      slider.viewport.css('height', getViewportHeight());
	      // update the slide position
	      if (!slider.settings.ticker) { setSlidePosition(); }
	      // if active.last was true before the screen resize, we want
	      // to keep it last no matter what screen size we end on
	      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }
	      // if the active index (page) no longer exists due to the resize, simply set the index as last
	      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }
	      // if a pager is being displayed and a custom pager is not being used, update it
	      if (slider.settings.pager && !slider.settings.pagerCustom) {
	        populatePager();
	        updatePagerActive(slider.active.index);
	      }
	      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
	    };
	
	    /**
	     * Destroy the current instance of the slider (revert everything back to original state)
	     */
	    el.destroySlider = function() {
	      // don't do anything if slider has already been destroyed
	      if (!slider.initialized) { return; }
	      slider.initialized = false;
	      $('.bx-clone', this).remove();
	      slider.children.each(function() {
	        if ($(this).data('origStyle') !== undefined) {
	          $(this).attr('style', $(this).data('origStyle'));
	        } else {
	          $(this).removeAttr('style');
	        }
	      });
	      if ($(this).data('origStyle') !== undefined) {
	        this.attr('style', $(this).data('origStyle'));
	      } else {
	        $(this).removeAttr('style');
	      }
	      $(this).unwrap().unwrap();
	      if (slider.controls.el) { slider.controls.el.remove(); }
	      if (slider.controls.next) { slider.controls.next.remove(); }
	      if (slider.controls.prev) { slider.controls.prev.remove(); }
	      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }
	      $('.bx-caption', this).remove();
	      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }
	      clearInterval(slider.interval);
	      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }
	      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }
	      //remove self reference in data
	      $(this).removeData('bxSlider');
	    };
	
	    /**
	     * Reload the slider (revert all DOM changes, and re-initialize)
	     */
	    el.reloadSlider = function(settings) {
	      if (settings !== undefined) { options = settings; }
	      el.destroySlider();
	      init();
	      //store reference to self in order to access public functions later
	      $(el).data('bxSlider', this);
	    };
	
	    init();
	
	    $(el).data('bxSlider', this);
	
	    // returns the current jQuery object
	    return this;
	  };
	
	})(jQuery);


/***/ },
/* 8 */
/***/ function(module, exports) {

	/*
	 * jQuery plugin to wrap elements
	 *
	 * http://jsbin.com/idize
	 *
	 */
	
	module.exports = function ($) {
	
	    $.fn.wrapChildren = function (options) {
	
	        options = $.extend({
	            childElem: undefined,
	            sets: 1,
	            wrapper: 'div'
	        }, options || {});
	
	        if (options.childElem === undefined) {
	            return this;
	        } else {
	            return this.each(function () {
	                var elems = $(this).children(options.childElem);
	                var arr = [];
	
	                elems.each(function (i, value) {
	                    arr.push(value);
	                    if (((i + 1) % options.sets === 0) || (i === elems.length - 1)) {
	                        var set = $(arr);
	                        arr = [];
	                        set.wrapAll(document.createElement(options.wrapper));
	                    }
	                });
	            });
	        }
	    }
	
	};


/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = function ($) {
	    var pageDropdowns = [];
	    var closePageDropdowns = function (except) {
	        for (var i = 0; i < pageDropdowns.length; i++) {
	            pageDropdowns[i].each(function () {
	                var pageDropdown = $(this);
	                if (!except || except.length != 1 || pageDropdown.get(0) != except.get(0)) {
	                    pageDropdown.removeClass('active');
	                }
	            });
	        }
	    };
	
	    $('body').click(function () {
	        closePageDropdowns(null);
	    });
	
	    var init = function (dropdowns, opt) {
	        var _opt = $.extend({changeListeners: [], isMenu: false}, opt);
	
	        pageDropdowns.push(dropdowns);
	
	        dropdowns.each(function () {
	            var dropdown = $(this);
	            dropdown.data('dropdown-options', _opt);
	
	            dropdown.find('a.display').click(function () {
	                dropdown.toggleClass('active');
	                closePageDropdowns(dropdown);
	                return false;
	            });
	
	            if (opt && opt.values) {
	                setOptions(dropdown, opt.values);
	            }
	
	            if (opt && opt.initialValue) {
	                select(dropdown, opt.initialValue);
	            }
	            initOptions(dropdown, true);
	        });
	    };
	
	    var optionValue = function (dropdown, key) {
	        var opt = dropdown.data('dropdown-options');
	        return opt ? opt[key] : null;
	    };
	
	    var invokeOptionExt = function (dropdown, fkey, a, b, c) {
	        var f = optionValue(dropdown, fkey);
	        if (f) {
	            f(a, b, c);
	        }
	    };
	
	    var initOptions = function (dropdown, readInputValue) {
	        var options = dropdown.find('.options > a');
	        dropdown.toggleClass('disabled', options.length < 2);
	        if (!dropdown.data('dropdown-options').isMenu) {
	            options.click(function () {
	                selectAndNotify(dropdown, $(this).attr('data-value'));
	                closePageDropdowns(dropdown);
	                return false;
	            });
	
	            if (readInputValue) {
	                var v = dropdown.find('input:hidden').val();
	                if (typeof v !== 'undefined') {
	                    select(dropdown, v);
	                }
	            }
	        }
	    };
	
	    var fireOnSelect = function (dropdown) {
	        var opt = dropdown.data('dropdown-options');
	        for (var i = 0; i < opt.changeListeners.length; i++) {
	            opt.changeListeners[i]();
	        }
	    };
	
	    var selectAndNotify = function (dropdown, value) {
	        select(dropdown, value);
	        fireOnSelect(dropdown);
	        invokeOptionExt(dropdown, 'onselect', value);
	    };
	
	    var select = function (dropdown, value) {
	        var link = dropdown.find('a[data-value="' + value + '"]');
	        dropdown.find('a.display span').html(link.html());
	        link.addClass('selected');
	        dropdown.find('a[data-value!="' + value + '"]').removeClass('selected');
	        dropdown.removeClass('active');
	        dropdown.find('input:hidden').val(value);
	    };
	
	    var setOptions = function (dropdown, options, selectedKey) {
	        var optionsContainer = dropdown.find('.options');
	        optionsContainer.empty();
	        var selected = null;
	        for (var i = 0; i < options.length; i++) {
	            var o = options[i];
	            var isSelected = o[0] == selectedKey;
	            if (isSelected) {
	                selected = o;
	            }
	
	            $('<a href="#"></a>').attr('data-value', o[0]).html(o[1]).toggleClass('selected', isSelected).appendTo(optionsContainer);
	        }
	
	        if (selected) {
	            dropdown.find('a.display span').html(selected[1]);
	        }
	
	        initOptions(dropdown, false);
	    };
	
	    var value = function (dropdown) {
	        return dropdown.find('.options a.selected').attr('data-value');
	    };
	
	    var addChangeListener = function (dropdowns, listener) {
	        dropdowns.each(function () {
	            var dropdown = $(this);
	            var opt = dropdown.data('dropdown-options');
	            opt.changeListeners.push(listener);
	            dropdown.data('dropdown-options', opt);
	        });
	    };
	
	    $.fn.cityDropdown = function (opt, p1, p2) {
	        if (typeof opt === 'string') {
	            switch (opt) {
	                case 'disable':
	                    break;
	                case 'enable':
	                    break;
	                case 'select':
	                    select(this, p1);
	                    break;
	                case 'setOptions':
	                    setOptions(this, p1, p2);
	                    break;
	                case 'value':
	                    return value(this);
	                case 'change':
	                    return addChangeListener(this, p1);
	                default:
	                    break;
	            }
	        } else {
	            init(this, opt);
	        }
	        return this;
	    };
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function ($) {
	
	    var scrollTo = __webpack_require__(11),
	
	        init = function (widgets) {
	            var w = $(window),
	                map = {};
	
	            widgets.each(function () {
	                var widget = $(this),
	                    contentPanels = widget.find(">div >.content-panel"),
	
	                    id = widget.attr('id') || 'tab',
	                    activate = function (anchor) {
	                        var match = (anchor.attr('href') || '').match(/^#(.+)$/),
	                            newHeader = anchor.parent("h2");
	                        if (match) {
	                            var params = {},
	                                isTab = anchor.parent('li').length > 0,
	                                alreadySelected = !isTab && anchor.closest('.tab-panel').hasClass('selected'),
	                                contentPanel = anchor.closest('.tab-panel').find('.panel-content');
	
	                            params[id] = alreadySelected ? null : match[1];
	                            select(widget, params[id] || false);
	
	                            if (!$.isEmptyObject(newHeader.offset())) {
	                                $('html:not(:animated), body:not(:animated)').animate({scrollTop: newHeader.offset().top}, 'slow');
	                            }
	
	                            contentPanels.removeAttr('tabindex');
	
	                            if (anchor.parent().hasClass('accordion-toogle')) {
	                                contentPanel.attr('tabindex', '0');
	                                contentPanel.focus();
	                            } else {
	                                anchor.focus();
	                            }
	
	                            $.bbq.pushState(params);
	                        }
	                    };
	
	                $('a[href^="#' + id + '="]').each(function () {
	                    var anchor = $(this),
	                        match = anchor.attr('href').match(/#([a-zA-Z0-9]+)=[a-zA-Z0-9]+/);
	
	                    if (match) {
	                        anchor.click(function () {
	                            $('html, body').animate({
	                                scrollTop: $('#' + id).offset().top
	                            }, 200);
	                        });
	                    }
	                });
	
	                map[id] = widget;
	
	                widget.find('>ul a, >.tab-panel >.accordion-toogle a').click(function (e) {
	                    activate($(this));
	                    e.preventDefault();
	                }).keydown(function (e) {
	                    if (e.which === 37) {
	                        activate($(this).parent().prev().children('a'));
	                    } else if (e.which === 39) {
	                        activate($(this).parent().next().children('a'));
	                    }
	                });
	            });
	
	            w.on('hashchange', function () {
	                var params = $.bbq.getState();
	                for (var id in map) {
	                    if (map.hasOwnProperty(id)) {
	                        select(map[id], params[id] || false);
	                    }
	                }
	            });
	
	            w.trigger("hashchange");
	        },
	
	        select = function (widget, id) {
	            widget.find('>.tab-panel.default').removeClass('default');
	            widget.find('>ul .selected, >.tab-panel.selected').removeClass('selected');
	
	            if (id) {
	                var hash = '#' + id;
	
	                widget.find('>ul a[href="' + hash + '"]').addClass('selected');
	                widget.find(hash).addClass('selected');
	            } else {
	                widget.find('>ul li').first().find('a').addClass('selected');
	                widget.find('>.tab-panel').first().addClass('default');
	            }
	        };
	
	
	    $.fn.accordionTabs = function (opt) {
	        init(this, opt);
	        return this;
	    };
	};


/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = function (element) {
	    'use strict';
	
	    if (element && !$.isEmptyObject(element.offset())) {
	        $('html:not(:animated), body:not(:animated)').animate({scrollTop: Math.max(0, element.offset().top - 85)}, 'slow');
	    }
	};


/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = function ($) {
	    var access = false,
	
	        init = function (videoContainers, opt) {
	            videoContainers.not('[data-video-id-ready]').each(function () {
	                var container = $(this).attr('data-video-id-ready', 1),
	                    imgGroup = container.find('.youtube-preview'),
	                    iframeId = container.attr('data-video-iframe-id'),
	                    anchor = imgGroup.children('a'),
	                    clickable = anchor.length > 0 ? anchor : imgGroup,
	
	                    load = function () {
	                        var mode = access == 'youku' && container.attr('data-youku-id') ? 'youku' : 'youtube',
	                            src;
	
	                        if (mode === 'youtube') {
	                            src = 'https://www.youtube.com/embed/' + container.attr('data-video-id') +
	                                '?rel=0&autoplay=1&wmode=transparent&controls=' + opt.controls +
	                                '&showinfo=' + opt.showInfo;
	                            if (opt.autoPlay) {
	                                src += '&enablejsapi=1&version=3'
	                            }
	                        } else {
	                            src = 'http://player.youku.com/embed/' + container.attr('data-youku-id');
	                            if (opt.autoPlay) {
	                                src += '&autoplay=1'
	                            }
	                        }
	
	                        var iframe = $('<iframe></iframe>').attr('id', iframeId).attr('src', src).attr('frameborder', 0);
	                        if (opt.allowFullscreen) {
	                            iframe.attr('allowfullscreen', 1);
	                        }
	                        iframe.appendTo(container);
	                        if (opt.callback) {
	                            opt.callback();
	                        }
	                        if (mode === 'youtube' && opt.autoPlay && typeof YT !== 'undefined') {
	                            new YT.Player(iframeId, {
	                                events: {
	                                    'onReady': function (event) {
	                                        event.target.playVideo();
	                                        setTimeout(function () {
	                                            iframe.focus();
	                                        }, 100);
	                                    }
	                                }
	                            });
	                        }
	
	                    };
	
	                clickable.bind('click', function (e) {
	                    e.preventDefault();
	
	                    clickable.unbind().click(function (e) {
	                        e.preventDefault();
	                    });
	
	
	                    if (access === false) {
	                        var test = new Image();
	                        test.onload = function () {
	                            access = 'youtube';
	                            load();
	                        };
	                        test.onerror = function () {
	                            access = 'youku';
	                            load();
	                        };
	                        test.src = "http://youtube.com/favicon.ico";
	                    } else {
	                        load();
	                    }
	                });
	            });
	        };
	
	    $.fn.videoPreview = function (opt) {
	        init(this, $.extend({
	            autoPlay: true,
	            allowFullscreen: false,
	            controls: 2,
	            showInfo: 1
	        }, opt));
	        return this;
	    };
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * from:
	 * http://stackoverflow.com/questions/11803215/how-to-include-multiple-js-files-using-jquery-getscript-method
	 * */
	module.exports = function ($) {
	    var jsPath = __webpack_require__(14);
	
	    $.getMultiJsScripts = function (list, cb, forceXdomain) {
	        var path = jsPath(),
	            i = 0,
	            fetch = function() {
	                if (i < list.length) {
	                    $.ajax({
	                        url: path + list[i++],
	                        dataType: "script",
	                        success: fetch,
	                        cache: false,
	                        crossDomain: forceXdomain || false
	                    });
	                } else {
	                    cb();
	                }
	            };
	
	        fetch();
	    };
	
	};


/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = function () {
	    var path = null;
	    $('script[src]').each(function () {
	        var src = $(this).attr('src'),
	            match = src.match(/(.+\/)([0-9]+\.)?CITY_R\.(min\.)?js(\?v=[0-9]+)?$/);
	
	        if (match) {
	            path = match[1];
	            return false;
	        }
	    });
	
	    return path;
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Sends a message to the browser console (Gecko, Webkit) or into the <body> (IE)
	 * @param {String} message: the message to print out
	 */
	
	module.exports = function (message) {
	
	    var debug = function (message) {
	            if (debug.debugLevel > 0 || location.search.match("debug")) {
	                try {
	                    //for Safari, Chrome, Firefox(w/ firebug)
	                    w.console.log(message);
	                } catch (e) {
	                    try {
	                        //for Opera
	                        opera.postError.apply(opera, message);
	                    } catch (e1) {
	                    }
	                }
	            }
	        };
	
	    debug.debugLevel = 0;
	
	    return debug;
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Custom AJAX Method
	 *
	 * // Success
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .done(
	 *     function(data)) {
	 *         doSomething();
	 *     }
	 * );
	 *
	 * // Failure
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .fail(
	 *     function(xhr, status, err)) {
	 *         console.log(status, err);
	 *     }
	 * );
	 *
	 * // Success or Failure
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .then(
	 *     function(data)) {
	 *         doSomething();
	 *     },
	 *     function(xhr, status, err) {
	 *         console.log(status, err);
	 *     }
	 * );
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function(inputURL, inputData, inputType) {
	        var promise = $.ajax({
	            url: inputURL,
	            data: inputData,
	            type: (inputType ? inputType : 'get')
	        })
	        .done( function(responseData, status, xhr) {
	            // Pre-determined Logic for Success
	            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
	            // console.log('Success');
	        })
	        .fail( function(xhr, status, err) {
	            // Pre-determined Logic for Failure
	            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
	            // console.log('Failure');
	        });
	        return promise;
	    };
	
	}();


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * returns true if the viewport size has changed -
	 * useful in responsive layout, see
	 * snook.ca/archives/javascript/ie6_fires_onresize
	 */
	module.exports = function (w) {
	
	    return function () {
	
	        var debug = __webpack_require__(15),
	            changed = false,
	            docEl = w.document.documentElement,
	            coolOff = 20, //further calls within this window get
	        //the same return value
	            now = Date.now ? Date.now() : (function () {
	                return new Date().valueOf();
	            }());
	
	        //set up a holder object (if it doesn't exist)
	        w.viewport = w.viewport || {};
	
	        //these need zeroing before we begin (if not already set)
	        w.viewport.dimensions = w.viewport.dimensions || {height: null, width: null};
	
	        //need to handle the situation where many calls to this
	        //function happen in quick succession
	        if (w.viewport.timeStamp && now - w.viewport.timeStamp < coolOff) {
	            debug("within window, returning " + w.viewport.storedResult);
	            return w.viewport.storedResult;
	        }
	
	        //store the time of this call
	        w.viewport.timeStamp = now;
	
	        //have we changed viewport size?
	        if (w.viewport.dimensions.width !== docEl.clientWidth ||
	            w.viewport.dimensions.height !== docEl.clientHeight) {
	            changed = true;
	        }
	
	        //store new dimensions
	        w.viewport.dimensions.height = docEl.clientHeight;
	        w.viewport.dimensions.width = docEl.clientWidth;
	
	        //store this result in case of a re-call within coolOff
	        w.viewport.storedResult = changed;
	
	        debug("viewport changed: " + changed);
	
	        return changed;
	    }
	}(window);


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a image Gallery
	 *
	 * @param {Object} a jquery object representing a single instance of a gallery
	 * @param {Boolean} true if the gallery is in a widget, false if in main content body
	 * @return {Object || Undefined} returns the galleria jQuery object if
	 * successful else undefined - for instance if $gallery is not a jQuery object
	 *
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	
	        state = 'not-loaded',
	        queue = [],
	
	
	        create = function (gallery, options) {
	            var root = gallery.attr("id").replace("gallery-", ""),
	                galleryInner = gallery.find(".gallery-inner");
	
	            $.getJSON("/apis/galleries/galleria-json?root=" + root, function (data) {
	                //remove loader
	                gallery.find('span.loading').hide();
	                gallery.css("opacity", "1");
	                options.data_source = data;
	                galleryInner.galleria(options);
	            });
	
	            return galleryInner;
	        },
	
	
	        loadComplete = function () {
	            //get id of root from id of gallery div
	            state = 'loaded';
	            for (var i = 0; i < queue.length; i++) {
	                create(queue[i].gallery, queue[i].options);
	            }
	            queue = [];
	        },
	
	
	        request = function (gallery) {
	            var galleryInner = gallery && gallery.find(".gallery-inner");
	
	            if (!galleryInner || galleryInner.length === 0) {
	                debug("no gallery found");
	            } else {
	
	                var galleriaOptions = {
	                    height: 0.5625,
	                    lightbox: galleryInner.hasClass("lightbox"),
	                    maxScaleRatio: 1,
	                    preload: 2,
	                    showInfo: galleryInner.hasClass("caption"),
	                    imageCrop: false,
	                    debug: false,
	                    extend: function (/* defined but not used: options */) {
	
	                        if ("city" === gallery.attr("data-theme")) {
	                            gallery.prepend($("<div/>", {
	                                "class": "cg-caption"
	                            }));
	
	                            /*loadstart is triggered every time galleria loads an image*/
	                            this.bind("loadstart", function (e) {
	                                var data = this._data[e.index],
	                                //caption is refound here as it needs to be scoped to this gallery
	                                    caption = gallery.find(".cg-caption");
	
	                                if (data.m_caption) {
	                                    caption.html(data.m_caption);
	                                } else {
	                                    caption.html("&nbsp;");
	                                }
	                            });
	
	                        }
	                    }
	                };
	
	
	                if (state === 'loaded') {
	                    create(gallery, galleriaOptions);
	                } else {
	                    if (state === 'not-loaded') {
	                        state = 'loading';
	                        $.getMultiJsScripts([
	                            "lib/jquery/plugins/galleria/galleria-1.4.2/galleria-1.4.2.min.js",
	                            "lib/jquery/plugins/galleria/galleria-1.4.2/themes/classic/galleria.classic.city.min.js"
	                        ], loadComplete, true);
	                    }
	
	                    gallery.prepend($('<div class="loading"><div class="loading__icon"><i class="fa fa-refresh fa-spin"></i></div></span>'));
	                    queue.push({gallery: gallery, options: galleriaOptions});
	                }
	            }
	        };
	
	
	    return request;
	}();


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * sets up a carousel on a page
	 * @param carouselObj : Object
	 *
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15);
	
	    return function ($carouselObj) {
	        if ($carouselObj.length !== 0) {
	            $carouselObj.append($('#main-carousel-slides').html());
	
	            var numSlides = $carouselObj.children().length,
	                $promoWrapper = $carouselObj.parents("#promo-wrapper"),
	                overrideControls = numSlides > 1 ? {} : {
	                    auto: false,
	                    autoControls: false,
	                    touchEnabled: false,
	                    controls: false,
	                    pager: false
	                },
	                // options for the home carousel
	                sliderOptions = ($promoWrapper.attr("data-carousel-type") !== "home") ? {} : {
	                    autoHover: true,
	                    touchEnabled: true,
	                    preventDefaultSwipeX: true,
	                    preventDefaultSwipeY: false,
	                    buildPager: function (index) {
	                        return '<span class="fa fa-circle" aria-hidden="true"></span><span class="sr-only">Go to slide ' + (index + 1) + '</span>';
	                    },
	                    startText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-play"></span><span class="sr-only">Play slides</span>',
	                    stopText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-pause"></span><span class="sr-only">Stop slides</span>',
	                    prevText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-left"></span><span class="sr-only">Previous slide</span>',
	                    nextText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-right"></span><span class="sr-only">Next slide</span>'
	                },
	                clearingOptions = ($promoWrapper.attr("data-carousel-type") !== "clearing") ? {} : {
	                    auto: false,
	                    controls: false,
	                    pager: false,
	                    autoControls: false,
	                    autoStart: false
	                },
	                initSlider = function () {
	                    var options = $.extend({
	                        auto: true,
	                        autoControls: true,
	                        pause: 15000,
	                        autoHover: true,
	                        touchEnabled: false,
	                        preventDefaultSwipeX: false,
	                        preventDefaultSwipeY: false,
	                        startText: "<span class=\"visuallyhidden\">Start slider</span><span class=\"fa fa-play\"></span>",
	                        stopText: "<span class=\"visuallyhidden\">Pause slider</span><span class=\"fa fa-pause\"></span>",
	                        nextText: "<span class=\"visuallyhidden\">Next slide</span><span class=\"fa fa-caret-right\"></span>",
	                        prevText: "<span class=\"visuallyhidden\">Previous slide</span><span class=\"fa fa-caret-left\"></span>",
	                        controls: true,
	                        adaptiveHeight: true,
	                        onSliderLoad: function (e) {
	                            if (numSlides < 2) {
	                                $promoWrapper.addClass("promo-wrapper--single");
	                            }
	                        }
	                    }, sliderOptions, overrideControls, clearingOptions);
	
	                    $promoWrapper.removeClass("carousel-loading");
	                    $promoWrapper.find(".loading-fa-icon").remove();
	                    $promoWrapper.find(".bxslider").show();
	                    $carouselObj.bxSlider(options);
	                    $promoWrapper.find(".bx-controls").show();
	                };
	
	            //set up slider
	            if (numSlides > 0) {
	                debug("more than 0 slides, need carousel. NumSlides =" + numSlides);
	                initSlider($carouselObj);
	            }
	        }
	    };
	}();


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * gets window width
	 * @param: {Object} - window object
	 * @return: {Number} - window width
	 */
	module.exports = function () {
	    var $ = __webpack_require__(2);
	
	    return function (w) {
	        return Math.round($(w).width());
	    };
	}();

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Initialise Dropdowns
	 */
	module.exports = function () {
	    "use strict";
	
	    var $ = __webpack_require__(2);
	    var contentWrapper = $(".city-health__container");
	    var loading        = $(".city-health__loading");
	    var form           = $(".city-health__form");
	    var inputs         = form.find("input");
	
	    var fixPagination = function() {
	        $(".city-health__pagination--all a").click( function(e) {
	            e.preventDefault();
	            var page = $(this).attr("href").split("result_314729_result_page=")[1];
	            reload({
	                "result_314729_result_page": page
	            })
	        });
	        $(".city-health__pagination--filtered a").click( function(e) {
	            e.preventDefault();
	            var page = $(this).attr("href").split("current_result_page=")[1].split("&")[0];
	            reload({
	                "current_result_page": page
	            })
	        });
	    }
	
	    var reload = function(fixedParams) {
	        var params = $.extend({t: new Date().getTime()}, fixedParams);
	
	        inputs.each(function () {
	            var input = $(this);
	            var name = input.attr("name");
	            var value = input.val();
	
	            if (name && name.length > 0 && value && value.length > 0) {
	                params[name] = value;
	            }
	        });
	
	        contentWrapper.css("display", "none");
	        loading.css("display", "inline-block");
	
	        $.get("//www.city.ac.uk/api/city-health-courses/_nocache", params, function(data) { })
	            .done( function(data) {
	                contentWrapper.html(data);
	            })
	            .always( function(data) {
	                contentWrapper.css("display", "block");
	                loading.css("display", "none");
	                fixPagination();
	            });
	    };
	
	    return function() {
	        $(".city-health__form .dropdown-select").cityDropdown({
	            "onselect": function() {
	                reload();
	            }
	        });
	        fixPagination();
	    };
	
	}();


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * creates dynamic google maps
	 * @return: Undefined
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        onLoad = function (dynamicMap) {
	            var iii,
	                currentMarker,
	                marker,
	                centerMarker,
	                gmap,
	                labelBox,
	                infoWindow,
	                gmapData,
	                userMapCenter,
	                locationRootNode = dynamicMap.attr("data-locations-node"),
	                computedSize = new google.maps.Size(36, 43),
	                infoWindowOffSet = new google.maps.Size(0, -30),
	                gmapColourOptions = [
	                    {
	                        featureType: "landscape",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 65
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "poi",
	                        stylers: [
	                            {
	                                saturation: -40
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.highway",
	                        stylers: [
	                            {
	                                saturation: -80
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.arterial",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.local",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "transit",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "administrative.province",
	                        stylers: [
	                            {
	                                visibility: "off"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "water",
	                        elementType: "labels",
	                        stylers: [
	                            {
	                                visibility: "on"
	                            },
	                            {
	                                lightness: -10
	                            },
	                            {
	                                saturation: 10
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "water",
	                        elementType: "geometry",
	                        stylers: [
	                            {
	                                lightness: -10
	                            },
	                            {
	                                saturation: 10
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "transit.station",
	                        stylers: [
	                            {
	                                saturation: 30
	                            },
	                            {
	                                lightness: -10
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    }
	                ],
	                attachClickEvent = function (map, marker, labeledBox, description) {
	
	                    // on click on a marker, set the content of infowindow and open it
	                    //also center the map on that marker
	                    google.maps.event.addListener(marker, "click", function () {
	                        infoWindow.setContent("<span class=\"marker-description\">" + description + "<\/span>");
	                        infoWindow.setPosition(marker.position);
	                        infoWindow.open(map);
	                        map.panTo(marker.position);
	                    });
	                },
	                placeCenterMarker = function (map, marker) {
	                    // the marker for the center of the map
	                    centerMarker = new google.maps.Marker({
	                        icon: {
	                            url: marker.icon
	                        },
	                        map: map,
	                        visible: true,
	                        position: new google.maps.LatLng(marker.latitude, marker.longitude),
	                        title: marker.name
	                    });
	
	                    centerMarker.setZIndex(180);
	
	                    google.maps.event.addListener(centerMarker, "click", function () {
	                        infoWindow.setContent("<span class=\"marker-title\">" + centerMarker.title + "<\/span><span class=\"marker-description\">" + marker.description + "<\/span>");
	                        infoWindow.setPosition(centerMarker.position);
	                        infoWindow.open(map);
	                    });
	                },
	                placeAllMarker = function (markers) {
	                    for (iii = 0; iii < markers.length; iii++) {
	
	                        currentMarker = markers[iii];
	
	                        // define a new marker
	                        marker = new google.maps.Marker({
	                            icon: {
	                                url: currentMarker.icon
	                            },
	                            map: gmap,
	                            visible: true,
	                            position: new google.maps.LatLng(currentMarker.latitude, currentMarker.longitude),
	                            title: currentMarker.name
	                        });
	
	                        // set a label for each marker
	                        // uses google map plugin
	                        labelBox = new InfoBox({
	                            content: marker.title,
	                            position: marker.position,
	                            pane: "mapPane",
	                            closeBoxURL: "",
	                            disableAutoPan: true,
	                            boxStyle: {
	                                width: "auto"
	                            }
	                        });
	
	                        labelBox.open(gmap);
	                        attachClickEvent(gmap, marker, labelBox, (currentMarker.description + "&nbsp;"));
	                    }
	                };
	
	            // call the google maps location api in matrix to get the data on the markers and the initial map parameters
	            $.ajax({
	                url: "//www.city.ac.uk/api/google-map-locations?root=" + locationRootNode,
	                dataType: "json"
	            }).done(function (data) {
	                if (data !== null) {
	
	                    // map and markers data
	                    gmapData = data;
	
	                    // create the map
	                    gmap = new google.maps.Map(document.getElementById("dynamic-gmap"), {
	                        scrollwheel: false,
	                        streetViewControl: false,
	                        zoom: gmapData.loadOptions.zoom,
	                        center: new google.maps.LatLng(gmapData.loadOptions.latitude, gmapData.loadOptions.longitude),
	                        styles: gmapColourOptions
	                    });
	
	                    // create a new info window
	                    infoWindow = new google.maps.InfoWindow({pixelOffset: infoWindowOffSet});
	
	                    // create all the markers except the central one
	                    // add a label to each of them
	                    placeAllMarker(gmapData.markers);
	
	                    // add a marker for the center of the map
	                    placeCenterMarker(gmap, gmapData.centerMarker);
	
	                    // on resizing the map, make sure we keep the current center position
	                    google.maps.event.addDomListener(window, "resize", function () {
	                        userMapCenter = gmap.getCenter();
	                        google.maps.event.trigger(gmap, "resize");
	                        gmap.setCenter(userMapCenter);
	                    });
	
	                }
	            });
	        };
	
	    return function (dynamicMap) {
	        if (dynamicMap.length > 0) {
	            $.getMultiJsScripts(['lib/google/map/infobox-packed-1.1.9.js'], onLoad.bind(null, dynamicMap));
	        }
	    };
	
	}();

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2);
	
	    return function (azListings) {
	
	        azListings.each(function () {
	            var me = $(this),
	                letters = me.find('.letter-list a'),
	                letterGroups = me.find('.letter-group'),
	
	                select = function (anchor) {
	                    letters.filter('[href!="' + anchor + '"]').removeClass('selected');
	                    letters.filter('[href="' + anchor + '"]').addClass('selected');
	
	
	                    if (anchor) {
	                        var name = anchor.substr(1);
	
	                        letterGroups.filter('[name!="' + name + '"]').addClass('unselected').removeClass('selected');
	                        letterGroups.filter('[name="' + name + '"]').removeClass('unselected').addClass('selected');
	                    } else {
	                        letterGroups.removeClass('unselected').removeClass('selected');
	                    }
	                };
	
	
	            letterGroups.find('.go-up').click(function (e) {
	                    e.preventDefault();
	                    select(false);
	                })
	                .children('span').html('Show all').end()
	                .children('i').removeClass('fa-arrow-circle-o-up').addClass('fa-reply');
	
	            letters.click(function (e) {
	                select($(this).attr('href'));
	                e.preventDefault();
	            });
	        });
	    };
	}();


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $('.image-accordion label').click(function () {
	            var labelTarget = $(this).attr('for');
	            $('#' + labelTarget).blur();
	            $('#' + labelTarget).focus();
	        });
	        $('.image-accordion input[type="radio"]').change(function () {
	            var radioInput = $(this);
	            $('.image-accordion input[type="radio"]').removeClass('checked');
	            if (this.checked) {
	                radioInput.addClass('checked');
	            }
	        });
	    };
	}();


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Init see more widget
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var widgets = $(".see-more");
	
	        widgets.each(function () {
	            var widget = $(this);
	            var toggle = widget.find('.see-more__toggle');
	            var toggleLabel = toggle.find('.see-more__toggle__label');
	            if (toggleLabel.length === 0) {
	                toggleLabel = toggle;
	            }
	
	            var content = widget.find('.see-more__content');
	            var showText = toggle.html();
	            var hideText = toggle.attr('data-hide-text') || 'Hide';
	            toggle.click(function (e) {
	                e.preventDefault();
	                if (widget.hasClass('see-more--active')) {
	                    toggleLabel.html(showText);
	                    widget.removeClass('see-more--active');
	                    content.slideUp();
	                } else {
	                    widget.addClass('see-more--active');
	                    toggleLabel.html(hideText);
	                    content.slideDown();
	                }
	            });
	        });
	    };
	
	}();


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toggle Visibility of Image Credit Component
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var $credits = $(".image-credit"),
	            $creditItems = $(".credits-items"),
	            $scpCreditsTitle = $(".credits-title"),
	            creditButtonClass = ".image-credit__button",
	
	            toggleImageCredit = function(node) {
	                var state = node.attr("aria-pressed") === "true" ? "false" : "true";
	                node.attr("aria-pressed", state);
	                node.parent().attr("aria-expanded", state);
	            };
	
	        $credits.each(function () {
	            $(this).find(creditButtonClass).click(function(event) {
	                event.preventDefault();
	                toggleImageCredit($(this));
	            });
	        });
	
	        $scpCreditsTitle.on("click", function () {
	            $(this).toggleClass("credits-title--active")
	                .next(".credits-items").toggleClass("sr-only");
	        });
	    };
	
	}();


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for browsers that don't understand placeholder attribute
	
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        Modernizr = window.Modernizr;
	
	
	    return function () {
	        if (Modernizr && !Modernizr.input.placeholder) {
	            var inputs = $("[placeholder]");
	
	            inputs.focus(function () {
	                var input = $(this);
	                if (input.val() === input.attr("placeholder")) {
	                    input.val("");
	                    input.removeClass("placeholder");
	                }
	            }).blur(function () {
	                var input = $(this);
	                if (input.val() === "" || input.val() === input.attr("placeholder")) {
	                    input.addClass("placeholder");
	                    input.val(input.attr("placeholder"));
	                }
	            }).blur();
	
	            inputs.parents("form").submit(function () {
	                $(this).find("[placeholder]").each(function () {
	                    var input = $(this);
	                    if (input.val() === input.attr("placeholder")) {
	                        input.val("");
	                    }
	                });
	            });
	        }
	    };
	
	}();

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $('.image-carousel').each(function () {
	            var carousel = $(this);
	            var slides = carousel.children();
	            slides.each(function (i) {
	                $(this).attr('data-index', i);
	            }).wrapAll('<div></div>');
	
	            var updateActive = function (slideElement, oldIndex, newIndex) {
	                carousel.find('.image-carouse__item--active').removeClass('image-carouse__item--active');
	                carousel.find('.image-carouse__item[data-index="' + newIndex + '"]').addClass('image-carouse__item--active')
	            };
	
	            var slider = null;
	
	            var options = {
	                controls: true,
	                touchEnabled: true,
	                preventDefaultSwipeX: true,
	                preventDefaultSwipeY: false,
	                nextText: '<span><span class="sr-only">Go to next slide</span><span class="fa fa-chevron-right" aria-hidden="true"></span></span>',
	                prevText: '<span><span class="sr-only">Go to previous slide</span><span class="fa fa-chevron-left" aria-hidden="true"></span></span>',
	                pager: false,
	                moveSlides: 1,
	                slideWidth: 0,
	                firstSlideMargin: 0,
	                onSlideBefore: updateActive,
	                onSlideAfter: updateActive,
	                onSliderLoad: function (currentIndex) {
	                    carousel.find('.bx-controls a').attr('role', 'button');
	
	                    if (parseInt(carousel.find('.image-carouse__item').css('width')) !== options.slideWidth) {
	                        setTimeout(update, 0);
	                    } else {
	                        carousel.find('.image-carouse__item[data-index="' + currentIndex + '"]').addClass('image-carouse__item--active');
	                        carousel.find('.image-carouse__item').css({
	                            'margin-left': options.firstSlideMargin + 'px',
	                            'margin-right': (-options.firstSlideMargin) + 'px'
	                        });
	                    }
	                }
	            };
	
	            var update = function () {
	                var width = carousel.width();
	                if (Modernizr.mq('(min-width: 600px)')) {
	                    options.maxSlides = 2;
	                    options.slideWidth = Math.round(.5 * (20 + width));
	                    options.firstSlideMargin = .25 * width - 5;
	                } else {
	                    options.maxSlides = 1;
	                    options.slideWidth = width;
	                    options.firstSlideMargin = 0;
	                }
	
	
	                if (slider === null) {
	                    slider = carousel.children().bxSlider(options);
	                } else {
	                    slider.reloadSlider(options);
	                }
	            };
	
	            $(window).resize(update);
	        });
	    };
	}();


/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function () {
	    'use strict';
	
	    var initWhiteCards = function () {
	        if ($(window).width() < 600) {
	            $('.white-card').each(function () {
	                var box = $(this),
	                    content = box.find('.white-card__content');
	
	                if (content.height() > 200) {
	                    content.addClass('white-card__content--read-more');
	                    var button = $('<div class="white-card__read-more">' +
	                        '<div class="white-card__read-more__bg"></div>' +
	                        '<a  href="#"><span>read more</span></a>' +
	                        '</div>')
	                        .click(function (e) {
	                            content.removeClass('white-card__content--read-more');
	                            button.remove();
	                            e.preventDefault();
	                        }).appendTo(box);
	                }
	            });
	        }
	
	        $('.white-card .embed-container').videoPreview({allowFullscreen: true});
	    };
	
	    return initWhiteCards;
	}();

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * adds autocomplete functionality to the main search bar, using jQuery UI
	 * @param: {Object} form - jQuery object for form to run autoSuggest on
	 * @param: {Object} input - jQuery object for input elements to run autoSuggest on
	 * @param: {String} collection - the name of the Funnelback collection to query
	 * @retun: {Undefined}
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2),
	
	        arrayDuplicateZapper = function (myArray) {
	            var myUniqueArray = [];
	            $.each(myArray, function (i, el) {
	                if ($.inArray(el, myUniqueArray) === -1) myUniqueArray.push(el);
	            });
	            return myUniqueArray;
	        };
	
	    return function (form, input, collection) {
	        input.autocomplete({
	
	            source: function (request, response) {
	                var fbcollection = collection || "main-all";
	                $.ajax({
	                    url: "/fb/suggest.json?collection=" + fbcollection + "&fmt=json",
	                    dataType: "json",
	                    data: {
	                        partial_query: request.term
	                    },
	                    success: function (data) {
	                        data = arrayDuplicateZapper(data);
	                        response($.map(data, function (item) {
	                            return {
	                                label: item
	                            };
	                        }));
	                    }
	                }); //end $.ajax
	
	            }, //end source function
	
	            minLength: 2,
	            delay: 20,
	
	            //when you have selected something
	            "select": function (event, ui) {
	                //close the drop down
	                //need to create a dummy assignment, to please jslint
	                //close is still performed
	                var c = this.close;
	                //make sure on click the selected value replaces the type value
	                $(this).val(ui.item.value);
	                form.submit();
	            },
	
	            //show the drop down
	            open: function () {
	                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
	            },
	
	            //close the drop down
	            close: function () {
	                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
	            }
	
	        });
	    };
	
	}();


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    var $ = __webpack_require__(2),
	
	        screenWidth = -1,
	        inMd = true,
	        slider = null,
	        $w = $(window),
	
	        updateNewsSlider = function () {
	            var $homeNews = $('.news-events-strip__news'),
	                width = Math.round($w.width());
	
	            if (width !== screenWidth) {
	                screenWidth = width;
	
	                var newInMd = screenWidth >= 850;
	                if (newInMd !== inMd) {
	                    inMd = newInMd;
	
	                    if (inMd) {
	                        slider.destroySlider();
	                        setTimeout(function () {
	                            $homeNews.addClass('row').attr('style', '').children().addClass('col-xs-24 col-md-8').css('width', '');
	                        }, 0);
	                        slider = null;
	                    } else {
	                        slider = $homeNews.removeClass('row').children().removeClass('col-xs-24 col-md-8').end().bxSlider({
	                            autoHover: true,
	                            touchEnabled: true,
	                            preventDefaultSwipeX: true,
	                            preventDefaultSwipeY: false,
	                            adaptiveHeight: true,
	                            pager: false,
	                            autoControls: false,
	                            controls: true,
	                            prevText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-left"></i>',
	                            nextText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-right"></i>'
	                        });
	                    }
	                }
	            }
	        };
	
	    return function () {
	        $w.resize(updateNewsSlider);
	        updateNewsSlider();
	    };
	}();


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    var Cookies = __webpack_require__(33);
	
	    return function ($) {
	        if (!Cookies.get('cookienoticeshown')) {
	            Cookies.set('cookienoticeshown', '1', {expires: 365});
	
	            $('.cookie-notice').show();
	
	            $('.cookie-notice__dismiss button').click(function (event) {
	                event.preventDefault();
	                $('.cookie-notice').fadeOut('fast');
	            });
	        }
	    };
	}();


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * JavaScript Cookie v2.1.0
	 * https://github.com/js-cookie/js-cookie
	 *
	 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
	 * Released under the MIT license
	 */
	(function (factory) {
		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof exports === 'object') {
			module.exports = factory();
		} else {
			var _OldCookies = window.Cookies;
			var api = window.Cookies = factory();
			api.noConflict = function () {
				window.Cookies = _OldCookies;
				return api;
			};
		}
	}(function () {
		function extend () {
			var i = 0;
			var result = {};
			for (; i < arguments.length; i++) {
				var attributes = arguments[ i ];
				for (var key in attributes) {
					result[key] = attributes[key];
				}
			}
			return result;
		}
	
		function init (converter) {
			function api (key, value, attributes) {
				var result;
	
				// Write
	
				if (arguments.length > 1) {
					attributes = extend({
						path: '/'
					}, api.defaults, attributes);
	
					if (typeof attributes.expires === 'number') {
						var expires = new Date();
						expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
						attributes.expires = expires;
					}
	
					try {
						result = JSON.stringify(value);
						if (/^[\{\[]/.test(result)) {
							value = result;
						}
					} catch (e) {}
	
					if (!converter.write) {
						value = encodeURIComponent(String(value))
							.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
					} else {
						value = converter.write(value, key);
					}
	
					key = encodeURIComponent(String(key));
					key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
					key = key.replace(/[\(\)]/g, escape);
	
					return (document.cookie = [
						key, '=', value,
						attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
						attributes.path    && '; path=' + attributes.path,
						attributes.domain  && '; domain=' + attributes.domain,
						attributes.secure ? '; secure' : ''
					].join(''));
				}
	
				// Read
	
				if (!key) {
					result = {};
				}
	
				// To prevent the for loop in the first place assign an empty array
				// in case there are no cookies at all. Also prevents odd result when
				// calling "get()"
				var cookies = document.cookie ? document.cookie.split('; ') : [];
				var rdecode = /(%[0-9A-Z]{2})+/g;
				var i = 0;
	
				for (; i < cookies.length; i++) {
					var parts = cookies[i].split('=');
					var name = parts[0].replace(rdecode, decodeURIComponent);
					var cookie = parts.slice(1).join('=');
	
					if (cookie.charAt(0) === '"') {
						cookie = cookie.slice(1, -1);
					}
	
					try {
						cookie = converter.read ?
							converter.read(cookie, name) : converter(cookie, name) ||
							cookie.replace(rdecode, decodeURIComponent);
	
						if (this.json) {
							try {
								cookie = JSON.parse(cookie);
							} catch (e) {}
						}
	
						if (key === name) {
							result = cookie;
							break;
						}
	
						if (!key) {
							result[name] = cookie;
						}
					} catch (e) {}
				}
	
				return result;
			}
	
			api.get = api.set = api;
			api.getJSON = function () {
				return api.apply({
					json: true
				}, [].slice.call(arguments));
			};
			api.defaults = {};
	
			api.remove = function (key, attributes) {
				api(key, '', extend(attributes, {
					expires: -1
				}));
			};
	
			api.withConverter = init;
	
			return api;
		}
	
		return init(function () {});
	}));


/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    var $menuWrapper = $(".primary-menu-wrapper"),
	        $menuToggle  = $(".primary-menu-toggle"),
	        $menu        = $(".primary-menu"),
	
	        updateToggleLink = function (toggle, isOpen) {
	            toggle.toggleClass("primary-menu__item-toggle--open", isOpen);
	            toggle.attr('aria-expanded', isOpen ? 'true' : 'false');
	        },
	
	        buildMenu = function () {
	            $menu.find("li:has(ul)")
	                 .addClass("primary-menu__item--branch")
	                 .children(".primary-menu__item-interior")
	                 .each(function(index) {
	                     $ariaLabel = "show or hide items under " + $(this).find(".primary-menu__item-text").text();
	                     $(this).append("<a class='primary-menu__item-toggle' href='#' aria-label='" + $ariaLabel + "'></a>");
	                 });
	
	            $menuToggle.attr("aria-label", $menuToggle.find(".primary-menu-toggle__section-name").text() + " menu");
	        },
	
	        highlightCurrentPage = function () {
	            var pathname = (window.location.pathname).replace("/_nocache", "").replace("/_recache", "");
	            $(".primary-menu .primary-menu__item-link[href$='" + pathname  + "']").addClass("primary-menu__item-link--selected");
	        },
	
	        openCurrentSubmenus = function () {
	            $menu.find(".primary-menu__submenu").each(function(index) {
	                if ($(this).find(".primary-menu__item-link--selected").length > 0) {
	                    $(this).show();
	                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), true);
	                }
	                else {
	                    $(this).hide();
	                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), false);
	                }
	            });
	        },
	
	        openSubmenu = function ($toggle) {
	            updateToggleLink($toggle, true);
	            $toggle.parent(".primary-menu__item-interior").next().slideDown("fast", function() {
	                closeSameLevelSubmenus($toggle);
	            });
	        },
	
	        closeSameLevelSubmenus = function ($toggle) {
	            var $siblingBranches = $toggle.closest(".primary-menu__item--branch").siblings(".primary-menu__item--branch");
	
	            $.each($siblingBranches, function(index) {
	                if ($(this).find(".primary-menu__item-link--selected").length <= 0) {
	                    updateToggleLink($(this).find(".primary-menu__item-toggle"), false);
	                    $(this).find(".primary-menu__submenu").slideUp("medium");
	                }
	            });
	        },
	
	        closeSubmenu = function ($toggle) {
	            var $enclosingMenuItem = $toggle.closest(".primary-menu__item--branch");
	
	            if ($enclosingMenuItem.find(".primary-menu__item-link--selected").length > 0) {
	                updateToggleLink($toggle, false);
	                $toggle.parent(".primary-menu__item-interior").next().slideUp("fast");
	            }
	            else {
	                updateToggleLink($enclosingMenuItem.find(".primary-menu__item-toggle"), false);
	                $enclosingMenuItem.find(".primary-menu__submenu").slideUp("fast");
	            }
	        },
	
	        initMenu = function () {
	            buildMenu();
	            highlightCurrentPage();
	
	            $menuToggle.attr('aria-expanded', 'false').click(function() {
	                if ($menu.is(":hidden")) {
	                    openCurrentSubmenus();
	                }
	
	                var setOpen = !$menuToggle.hasClass("primary-menu-toggle--open");
	
	                $menuToggle.toggleClass("primary-menu-toggle--open", setOpen);
	                $menuToggle.attr('aria-expanded', setOpen ? 'true' : 'false');
	
	                $menu.slideToggle("fast");
	                return false;
	            });
	
	            $(".primary-menu__item-toggle").click(function() {
	                if ($(this).hasClass("primary-menu__item-toggle--open")) {
	                    closeSubmenu($(this));
	                }
	                else {
	                    openSubmenu($(this));
	                }
	                return false;
	            });
	        };
	
	    return initMenu();
	};
	


/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    var
	        $globalNavToggler = $(".global-nav__toggle"),
	        $headerSearch = $(".header__search"),
	        $headerSearchToggler = $(".header__search__toggle"),
	        $globalNavWrapper = $(".global-nav__wrapper"),
	        $globalNavDropToggler = $(".global-nav__menu-item__toggle"),
	        $utilNav = $(".header__util__audience__button-link"),
	        $body = $('body'),
	        $compactWidth = 748,
	        $stickyHeaderScrollThreshold = 70,
	        $lastScrollTop = 0,
	        $window = $(window),
	
	
	        closeMenus = function () {
	            $(".header__util__item--active").removeClass("header__util__item--active");
	            $(".global-nav__menu-item--active").removeClass("global-nav__menu-item--active");
	            $globalNavDropToggler.attr('aria-expanded', 'false');
	            $utilNav.attr('aria-expanded', 'false');
	        },
	
	        toggleMobileGlobalMenu = function (openMenu) {
	            var openSearch = openMenu === 'search' && !$headerSearch.hasClass("header__search--active");
	            var openNav = openMenu === 'nav' && !$globalNavWrapper.hasClass("global-nav__wrapper--active");
	
	            $globalNavWrapper.toggleClass("global-nav__wrapper--active", openNav);
	            $globalNavToggler.attr('aria-expanded', openNav ? 'true' : 'false');
	
	            $headerSearch.toggleClass("header__search--active", openSearch);
	            $headerSearchToggler.attr('aria-expanded', openSearch ? 'true' : 'false');
	        },
	
	        initSkipLinks = function () {
	            $('#skip-to-query').click(function () {
	                setTimeout(function () {
	                    toggleMobileGlobalMenu('search');
	                    $('#query').focus();
	                }, 25);
	            });
	            $('#skip-to-accessibility').click(function () {
	                setTimeout(function () {
	                    $('#accessibility').focus();
	                }, 25);
	            });
	        },
	
	
	        updateTabNavigation = function () {
	            if ($window.width() > $compactWidth) {
	                $(".global-nav__menu-item__link").each(function() {
	                    if ($(this).siblings(".global-nav__menu-item__toggle").length) {
	                        $(this).attr("tabindex", -1);
	                    }
	                });
	            }
	            else {
	                $(".global-nav__menu-item__link").removeAttr("tabindex");
	            }
	        },
	
	        updateScrollDown = function () {
	            var $newScrollTop = $(this).scrollTop();
	            $body.toggleClass('scroll-down', ($newScrollTop > $stickyHeaderScrollThreshold) && ($newScrollTop < $lastScrollTop));
	            $lastScrollTop = $newScrollTop;
	        },
	
	        init = function () {
	
	            initSkipLinks();
	
	            /**
	             * Update classname depending on scroll position
	             */
	            $window.scroll(updateScrollDown);
	            updateScrollDown();
	
	            /**
	             * With JS enabled, links going to other pages should not be reachable through the tab key,
	             * as opposed to toggle links - except when menu is in compact view.
	             */
	            $window.resize(updateTabNavigation);
	            updateTabNavigation();
	
	            closeMenus();
	
	            $utilNav.on("click", function (e) {
	                var
	                    that = $(this),
	                    parent = that.parent("li"),
	                    targetIsActive = parent.hasClass("header__util__item--active");
	
	                closeMenus();
	                if (!targetIsActive) {
	                    parent.addClass("header__util__item--active");
	                    that.attr('aria-expanded', 'true');
	                }
	
	
	                e.preventDefault();
	                e.stopPropagation();
	                return false;
	            });
	
	            $body.click(function () {
	                closeMenus();
	            });
	
	            /**
	             * Not perfect as it relies on keyup instead of keydown
	             */
	            $body.keyup(function (e) {
	                if (e.keyCode === 9 &&
	                    $('.header__util__item--active,.global-nav__menu-item--active').length > 0 && !$(e.target).is('.header__util__item--active,.header__util__item--active *, .global-nav__menu-item--active, .global-nav__menu-item--active *')) {
	                    closeMenus();
	                }
	            });
	
	            $globalNavDropToggler.on("click", function (e) {
	                var
	                    that = $(this),
	                    parent = that.parents(".global-nav__menu-item"),
	                    targetIsActive = parent.hasClass("global-nav__menu-item--active");
	
	                closeMenus();
	                if (!targetIsActive) {
	                    parent.addClass("global-nav__menu-item--active");
	                    that.attr('aria-expanded', 'true');
	                }
	
	
	                e.preventDefault();
	                e.stopPropagation();
	                return false;
	            });
	
	            toggleMobileGlobalMenu('none');
	            $globalNavToggler.on("click", function (e) {
	                e.preventDefault();
	                toggleMobileGlobalMenu('nav');
	            });
	
	            $headerSearchToggler.on("click", function (e) {
	                e.preventDefault();
	                toggleMobileGlobalMenu('search');
	            });
	        };
	
	    return init();
	};
	


/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    init = function () {
	
	        $(".link--goto").click(function() {
	            $('html,body').scrollTop(0);
	            return false;
	        });
	    };
	
	    return init();
	};
	


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Init see popup
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var anchors = $("a[data-popup-dialog]");
	
	        anchors.each(function () {
	            var anchor = $(this);
	
	            anchor.click(function (e) {
	            e.preventDefault();
	            var link = $(e.currentTarget).attr('href');
	
	            $('#'+anchor.attr('data-popup-dialog')).dialog({
	                modal: true,
	                title: anchor.attr('title'),
	                width: 800,
	                height: 500,
	                draggable: false,
	                resizable: false,
	                buttons: [
	                    {
	                        text: "Cancel",
	                        click: function() {
	                            $( this ).dialog( "close" );
	                        }
	                    },
	                    {
	                        text: "Accept",
	                        click: function() {
	                            window.location = link;
	                            $( this ).dialog( "close" );
	                        }
	                    }
	                ]
	
	            });
	        });
	    });
	  };
	
	}();


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $(".responsive-table").each(function() {
	            var thetable = $(this);
	            thetable.find("tbody td").each(function() {
	                $(this).attr("data-th", thetable.find("thead th:nth-child("+($(this).index()+1)+")").text());
	            });
	        });
	    };
	}();


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        $('.cyclic-popup-item__title').click(function() {
	            var clickedItemLink = $(this);
	            var clickedItem     = $(this).closest('.cyclic-popup-item');
	            var popupGroup      = clickedItemLink.closest(".cyclic-popup-group");
	            var allPopupItems   = popupGroup.children('.cyclic-popup-item');
	            var currentIndex    = 0;
	            var noOfPopupItems  = allPopupItems.length;
	
	            allPopupItems.each(function(index, value) {
	                if ($(this).get(0) === clickedItem.get(0)) {
	                    currentIndex = index;
	                }
	            });
	
	            function getWidth() {
	                var width = $(window).width() * 0.9;
	
	                if (width > 500) {
	                    width = 500;
	                }
	                return width;
	            }
	
	            function getNextItem(reverse) {
	                if (reverse == false) {
	                    if (currentIndex == noOfPopupItems - 1) {
	                        currentIndex = 0;
	                    }
	                    else {
	                        currentIndex++;
	                    }
	                }
	                else {
	                    if (currentIndex == 0) {
	                        currentIndex = noOfPopupItems - 1;
	                    }
	                    else {
	                        currentIndex--;
	                    }
	                }
	
	                var nextItem = allPopupItems.get(currentIndex);
	                return nextItem;
	            }
	
	            function setDialogButtons() {
	                if (noOfPopupItems > 1) {
	                    var buttonsToSet = [
	                        {
	                            text: 'PREVIOUS',
	                            click: function() {
	                                $(this).html($(getNextItem(true)).find('.cyclic-popup-item__detail').html());
	                            }
	                        },
	                        {
	                            text: 'NEXT',
	                            click: function() {
	                                $(this).html($(getNextItem(false)).find('.cyclic-popup-item__detail').html());
	                            }
	                        }
	                    ];
	
	                    $('.ui-dialog-content').dialog('option', 'buttons', buttonsToSet);
	                }
	            }
	
	            $('<div></div>').dialog({
	                modal: true,
	                draggable: false,
	                resizable: false,
	                width: getWidth(),
	
	                close: function() {
	                    $(this).dialog('destroy')
	                },
	
	                create:function() {
	                    $(this).closest('.ui-dialog').addClass('cyclic-popup');
	                    $(this).html(clickedItem.find('.cyclic-popup-item__detail').html());
	                    setDialogButtons();
	                },
	
	                open:function () {
	                    if (noOfPopupItems > 1) {
	                        $(this).parent().find('button:nth-child(2)').focus();
	                    }
	                    else {
	                        $(this).parent().find('.ui-dialog-titlebar-close').focus();
	                    }
	                }
	            });
	
	            $(window).resize(function() {
	                $('.ui-dialog-content').dialog('option', 'position', 'center');
	                $('.ui-dialog-content').dialog('option', 'width', getWidth());
	            });
	
	            $('.ui-widget-overlay').click(function(){
	                $('div:ui-dialog:visible').dialog('close');
	            });
	
	            return false;
	        });
	    };
	}();


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2);
	
	    $(function () {
	        if (typeof CITY_OPTIONS !== 'undefined' && CITY_OPTIONS.defer) {
	            for (var i = 0; i < CITY_OPTIONS.defer.length; i++) {
	                CITY_OPTIONS.defer[i]();
	            }
	        }
	    });
	};


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * creates and adds a function as the default error handler for jQuery ajax operations
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        webService = "//webapps.city.ac.uk/matrix/services/jQueryError.php",
	
	        notify = function (event, jqXHR, ajaxSettings, errorThrown) {
	
	            //insert an "image" which has a web service as the src,
	            //the web service sends email to ucs-webteam
	            $("<img />", {
	                src: webService + "?u=" + escape(document.location.href) + "&s=" +
	                escape(ajaxSettings.url) + "&t=" + ajaxSettings.type + "&e=" + escape(errorThrown),
	                style: "display: none"
	            }).appendTo("#footer");
	
	        };
	
	    //register this as a global ajax event handler
	    $(function () {
	        $(document).ajaxError(notify);
	    });
	};


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    "use strict";
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	
	        createGallery = __webpack_require__(18),
	        downloadFileTypes = __webpack_require__(43),
	        viewportChanged = __webpack_require__(17),
	        /**
	         * object to hold google maps markers
	         */
	        googleMapsMarkers = {},
	
	        /**
	         * overlay pane for map
	         */
	        mapOverlayPane = null,
	        /**
	         *
	         * What needs to happen after a bxslider carousel has finished loading:
	         * 1. inject controls into @widget. finds default bxslider controls, replace with font awesome icons and append in widget
	         * 2. add scrollable class to widget content
	         * 3. remove loading spinner
	         * @param jQuery widget: a jquery wrapped .widget (needed for widget controls)
	         * @param string middleButtonText: what to write on the middle button (defaults to "All") (needed for widget controls)
	         * @param string allLink: the "all" middle button href (needed for widget controls)
	         */
	        afterBxSliderLoaded = function (widget, allLink, middleButtonText) {
	
	            var leftWidgetButton = "<i class=\" fa fa-caret-left\"></i>",
	                rightWidgetButton = "<i class=\" fa fa-caret-right\"></i>",
	            // carousel controls
	                previousButton = widget.find(".bx-prev"),
	                nextButton = widget.find(".bx-next"),
	                inputMiddleButtonText = middleButtonText ? middleButtonText : "All";
	
	            previousButton.empty().append(leftWidgetButton);
	            nextButton.empty().append(rightWidgetButton);
	            //add the "all" button between previous and next buttons if it is needed
	            if (allLink) {
	                previousButton.after("<a href=\"" + allLink + "\" class=\"bx-all\" >" + inputMiddleButtonText + "</a>");
	            }
	            widget.find(".bx-controls-direction").appendTo(widget);
	            widget.children('h2').addClass('controls-direction');
	
	            //add class
	            widget.find(".widget-content").addClass("scrollable");
	
	            //remove widget loading spinner
	            widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	
	        },
	
	        /**
	         * news widget
	         */
	        initNews = function () {
	
	            var newsWidget = $("#news-widget"),
	                newsList = newsWidget.find("#news-results"),
	                allLink = "//www.city.ac.uk/news",
	                showAmount = 3;
	
	            //reformat the content into column sizes based on determined size, if there are more than showAmount items
	            if ($("#news-results > .article").size() > showAmount) {
	                //set up sortable
	                newsList.wrapChildren({
	                    childElem: ".article",
	                    sets: showAmount
	                });
	                //launch bxslider
	                newsList.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded(newsWidget, allLink);
	                    }
	                });
	            }
	            else {
	                //remove widget loading spinner, case where the carousel isn't needed
	                newsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	        },
	
	        /**
	         * events widget
	         */
	        initEvents = function () {
	
	            var eventsWidget = $("#events-widget"),
	                eventsList = $("#events-results"),
	                allLink = "//www.city.ac.uk/events",
	                showAmount = 3;
	
	            //click anywhere on event
	            $(".vevent", eventsList).click(function () {
	                window.location = $(this).find("a").attr("href");
	                return false;
	            });
	
	            if ($("#events-results > .vevent").size() > showAmount) {
	                //sort the children into groups of showAmount
	                eventsList.wrapChildren({
	                    childElem: ".event",
	                    sets: showAmount
	                });
	                eventsList.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded(eventsWidget, allLink);
	                    }
	                });
	            }
	            else {
	                //remove widget loading spinner, case where the carousel isn't needed
	                eventsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	
	        },//end initEvents
	
	        initFlickr = function () {
	
	            var $widget = $("#flickr-widget"),
	                $slideWrapper = $widget.find("ul"),
	                loadedOtherPics,
	                bxSliderCallback = function () {
	
	                    debug("flickr callback...");
	
	                    $(".widget-content", $widget).each(function () {
	
	                        //find the ul
	                        var firstdiv = $("ul div:first-child", this),
	                        //ul = $("ul", this), defined not used
	                            thisJq = $(this),
	                            height = firstdiv.height(),
	                            width = firstdiv.width();
	
	                        //add classes
	                        thisJq.addClass("scrollable");
	
	                        //add css to .widget-content
	                        thisJq.stop().animate({
	                            "min-height": height
	                        });
	                        thisJq.css("width", width);
	
	                        //remove loading icon when the content is ready
	                        $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	
	                    });
	
	                    afterBxSliderLoaded($widget);
	
	                };
	
	            //attach an event to init the rest of the pics
	            $widget.mouseenter(function () {
	
	                //we only want to run this once
	                if (loadedOtherPics) {
	                    return;
	                }
	
	                loadedOtherPics = true;
	
	                //translate all the span.imageurl"s into actual images
	                //(saves some rendering time)
	                $("a .imageurl", $widget).each(function () {
	
	                    var thisJq = $(this),
	                        text = thisJq.text(),
	                        imgTag = "<img src=\"" + text + "\" alt=\"\">";
	
	                    thisJq.parent().text("").prepend(imgTag);
	
	                });
	
	                $("p .imageurl", $widget).each(function () {
	                    var thisJq = $(this),
	                        text = thisJq.text(),
	                        styleAttr = "background-image: url(" + text + ");";
	
	                    thisJq.parent().attr("style", styleAttr);
	                    thisJq.remove();
	
	                });
	
	            });
	
	            //set up scrollable
	            $slideWrapper.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                minSlides: 1,
	                maxSlides: 4,
	                slideWidth: 330,
	                slideMargin: 0,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initFlickr
	
	        /**
	         * courses widget
	         */
	        initCourses = function () {
	
	            var $widget = $("#courses-widget"),
	                widgetContent = $widget.find(".widget-content");
	
	            widgetContent.accordion({
	                heightStyle: "content",
	                collapsible: true,
	                active: false,
	                animate: false,
	                icons: {
	                    "header": "ui-icon-triangle-1-s",
	                    "headerSelected": "ui-icon-triangle-1-n"
	                },
	                create: function () {
	                    afterBxSliderLoaded($widget);
	                }
	            });
	
	        },//end initCourses
	
	        /**
	         * testimonials widget
	         */
	        initTestimonials = function () {
	            var $testimonialsWidget = $("#testimonials-widget"),
	                widgetContent = $testimonialsWidget.find(".widget-content"),
	                testimonialsList = widgetContent.find("ul"),
	                bxSliderCallback;
	
	            //check there is more than 1 testimonials and if so, start the carousel
	            if ($("li", testimonialsList).length < 2) {
	                debug("Less than 2 testimonials, no need for carousel");
	                $testimonialsWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($testimonialsWidget);
	                $testimonialsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            testimonialsList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                slideMargin: 10,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initTestimonials
	
	        /**
	         * profiles widget
	         */
	        initProfiles = function () {
	
	            var $profilesWidget = $("#profiles-widget"),
	                widgetContent = $profilesWidget.find(".widget-content"),
	                profilesList = widgetContent.find("ul"),
	                bxSliderCallback;//end vars
	
	            //check there is more than 1 testimonials and if so, start the carousel
	            if ($("li", profilesList).length < 2) {
	                debug("Less than 2 testimonials, no need for carousel");
	                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($profilesWidget);
	                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            profilesList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end profilesWidgets
	
	        /**
	         * spotlight on research widget
	         */
	        initSpotlightResearch = function () {
	
	            var $spotlightResearchWidget = $("#spotlight-research-widget"),
	                widgetContent = $spotlightResearchWidget.find(".widget-content"),
	                spotlightResearchList = widgetContent.find("ul"),
	                bxSliderCallback;//end vars
	
	            //check there is more than 1 spotlight on research items and if so, start the carousel
	            if ($("li", spotlightResearchList).length < 2) {
	                debug("Less than 2 spotlight on research, no need for carousel");
	                $spotlightResearchWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($spotlightResearchWidget);
	                $spotlightResearchWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            spotlightResearchList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initSpotlightResearch
	
	        /**
	         * RSS widget
	         */
	        initRss = function () {
	
	            var $widget = $("#rss-widget"),
	                widgetContent = $widget.find(".widget-content"),
	                items = widgetContent.find(".items"); //end vars
	
	            if (items.children().length > 1) {
	                //load up bxslider
	                items.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded($widget);
	                    }
	                });
	
	            } else {
	                //don't load the bxslider carousel , just show widget
	                $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	
	        },
	
	        /**
	         * Call to action widget
	         */
	        initCallToAction = function () {
	
	            var start_date = $("#start_date").val(),
	                end_date = $("#end_date").val(),
	                sd = new Date(),
	                ed = new Date(),
	                cd,
	                splitDate = function (dt, idt) {
	
	                    var dateArray = dt.split("/"),
	                        endofArray = dateArray[2].split(" ");
	
	                    idt.setFullYear(endofArray[0]);
	                    idt.setMonth(dateArray[1] - 1);
	                    idt.setDate(dateArray[0]);
	
	                    return idt;
	
	                };
	
	            sd = splitDate(start_date, sd);
	            ed = splitDate(end_date, ed);
	
	            //current date
	            cd = new Date();
	
	            if (ed >= cd && sd <= cd) {
	
	                //Show the on date
	                $("#content_on_date").attr("class", "widget-content cta-widget-show");
	                $("#content_out_of_date").attr("class", "cta-widget-hide");
	
	            } else {
	
	                //Show out of date
	                $("#content_out_of_date").attr("class", "widget-content cta-widget-show");
	                $("#content_on_date").attr("class", "cta-widget-hide");
	            }
	
	        },
	
	        /**
	         * initiates an image gallery widget
	         *
	         * @return {object || undefined} returns the galleria jQuery object if
	         * successful else undefined - for instance if $gallery is not a jQuery object
	         *
	         */
	        initGallery = function () {
	
	            var $gallery = $("#gallery-widget .gallery");
	            return createGallery($gallery, true);
	
	        },
	
	        initFreeText = function () {
	            $("div.free-text a").unbind("click").click(function () {
	            });
	        },
	
	        /**
	         * The master widget initialiser, calls all the other init{map,events...} functions
	         */
	        initWidgets = function () {
	
	            var widgets = {
	                    "events": {
	                        f: initEvents
	                    },
	                    "news": {
	                        f: initNews
	                    },
	                    "flickr": {
	                        f: initFlickr
	                    },
	                    "courses": {
	                        f: initCourses
	                    },
	                    "testimonials": {
	                        f: initTestimonials
	                    },
	                    "rss": {
	                        f: initRss
	                    },
	                    "gallery": {
	                        f: initGallery
	                    },
	                    "cta": {
	                        f: initCallToAction
	                    },
	                    "freetext": {
	                        f: initFreeText
	                    },
	                    "profiles": {
	                        f: initProfiles
	                    },
	                    "spotlight-research": {
	                        f: initSpotlightResearch
	                    }
	                },
	
	                id;
	
	
	            //loop through each widget type and init if present
	            for (id in widgets) {
	                if (widgets.hasOwnProperty(id)) {
	                    //bail here if the widget is not present
	                    if ($("#" + id + "-widget").length === 0) {
	                        debug("no " + id + " widget");
	                    } else if (typeof widgets[id].f !== "function") {
	                        debug("can't find init func of " + id + " widget");
	                    } else {
	                        //run the init
	                        debug("running init func of " + id + " widget");
	                        widgets[id].f.apply();
	                    }
	                }
	            }
	        };
	
	    return initWidgets;
	
	}();


/***/ },
/* 43 */
/***/ function(module, exports) {

	/**
	 * used for detecting download filetypes by extension
	 */
	
	module.exports = ["doc", "docx", "xls", "xlsx", "ppt", "pptx", "pps", "ppsx",
	    "pdf", "jpg", "png", "gif", "zip", "txt", "rtf", "mp3"];

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        viewportChanged = __webpack_require__(17),
	        getWindowWidth = __webpack_require__(20),
	
	        bindMegaDdEvents = __webpack_require__(45),
	
	        $window = $(window),
	        $body = $("body"),
	
	        $globalNav = $body.find("#global-nav1"),
	        $navLis = $globalNav.children("li"),
	        $megaLinks = $globalNav.find(".mega"),
	        $drops = $globalNav.find(".drop"),
	
	
	        $responsiveTogglers = $(".responsive-toggler"),
	        $togglees = $(".toggle"),
	        $utilNav = $("#util-nav"),
	
	        breakpoints = __webpack_require__(46),
	
	        onResize = function () {
	            if (viewportChanged()) {
	                var newWidth = getWindowWidth(window);
	
	                if (newWidth >= breakpoints.wide) {
	                    //big to small?
	                    $body.addClass("screen-wide").removeClass("screen-thin screen-medium");
	
	                    // if this is the first time going to desktop size,
	                    // we need to bind the event handlers
	                    bindMegaDdEvents($megaLinks, $navLis, $drops);
	
	                    // close any openers which were open before width change
	                    $responsiveTogglers.removeClass("active");
	                    $togglees.removeClass("active");
	                    $utilNav.removeClass("hidden");
	
	                } else if (newWidth >= breakpoints.medium) {
	                    //small to big?
	                    $body.addClass("screen-medium").removeClass("screen-thin screen-wide");
	                    $utilNav.addClass("hidden");
	                    $drops.removeClass("active").hide();
	                    $navLis.removeClass("active");
	                } else {
	                    $body.addClass("screen-thin").removeClass("screen-medium screen-wide");
	                }
	            }
	        },
	
	        init = function () {
	            $window.resize(onResize);
	            $window.resize();
	
	            // attach click events on mobile navigation togglers
	            $responsiveTogglers.on("click", function (e) {
	
	                var $self = $(this),
	                    $toggle = $self.next(".toggle");
	
	                e.preventDefault();
	                $self.toggleClass("active");
	                $toggle.toggleClass("active");
	            });
	
	            // init the global navigation drop downs
	            $drops.hide();
	
	            if (getWindowWidth(window) < breakpoints.wide) {
	                $utilNav.children("li").clone().appendTo($globalNav);
	            }
	        };
	
	    return init;
	}();

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	
	
	    // we only need this stuff on a desktop sized browser
	    var $ = __webpack_require__(2),
	        $body = $('body'),
	        $query = $("#search #query"),
	
	        breakpoints = __webpack_require__(46),
	
	        boundDropEvents = false,
	
	        bindMegaDdEvents = function ($megaLinks, $navLis, $drops) {
	            if (!boundDropEvents) {
	
	                //attach click, keydown and focus handler
	                $megaLinks.on("click keydown focus", function (e) {
	
	                    var $target = $(this),
	                        $li = $target.closest("li"),
	                        $drop = $li.find(".drop");
	
	                    // if we have bound the event, but are now on smaller width we don't want to
	                    // show the mega dropdown
	                    if (CITY.getWindowWidth(window) < breakpoints.desktop) {
	                        return;
	                    }
	
	                    //what type of event was fired?
	                    if (e.type === "keydown" && e.keyCode !== 13) {
	                        //if a keypress event but button hit wasn't enter
	                        return;
	                    }
	
	                    if (e.type === "focus") {
	                        //always kill all drop downs when a megaLink receives focus then drop out of fn
	                        $navLis.removeClass("active");
	                        $drops.hide().removeClass("active");
	                        return;
	                    }
	
	                    //if we are here then the event is either a click or "enter" keypress
	
	                    //remove all active class from all other links
	                    $navLis.not($li[0]).removeClass("active");
	                    $drops.not($drop[0]).hide().removeClass("active");
	                    $li.toggleClass("active");
	                    $drop.toggleClass("active");
	                    $drop.show();
	                    e.preventDefault();
	                    e.stopPropagation();
	
	                });
	
	                // on blur of last mega link (search input query will be focussed), close
	                // any open drop down
	                $query.on("focus", function () {
	                    $navLis.removeClass("active");
	                    $drops.hide().removeClass("active");
	                });
	
	                //don't propogate clicks inside mega menus
	                $drops.on("click", function (e) {
	                    e.stopPropagation();
	                });
	
	                //close any open mega menus when page is clicked
	                $body.on("click", function () {
	                    $drops.removeClass("active").hide();
	                    $navLis.removeClass("active");
	                });
	
	                boundDropEvents = true;
	            }
	        };
	
	    return bindMegaDdEvents;
	}();


/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = {
	    "thin": 480,
	    "medium": 768,
	    "wide": 980
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        sliders = [
	            __webpack_require__(48),
	            __webpack_require__(49)
	        ],
	
	        create = function (data) {
	            var $carouselWrapper = $(data.id),
	                $carousel = $carouselWrapper.find(".bxslider"),
	                slideCount = $carousel.children().length;
	
	            $carouselWrapper.removeClass("carousel-loading");
	            if (slideCount > 1) {
	                $carousel.bxSlider(data.options(slideCount));
	            }
	        },
	
	        init = function () {
	            for (var i = 0; i < sliders.length; i++) {
	                create(sliders[i]);
	            }
	        };
	
	    return init;
	}();

/***/ },
/* 48 */
/***/ function(module, exports) {

	module.exports = {
	    id: '#profiles-carousel',
	    options: function () {
	        return {
	            auto: false,
	            autoControls: false,
	            controls: true,
	            pager: true,
	            infiniteLoop: false,
	            responsive: true,
	            slideWidth: 330,
	            slideMargin: 0,
	            adaptiveHeight: false,
	            hideControlOnEnd: true,
	            maxSlides: 1,
	            prevText: "<i class=\"fa fa-angle-left\"></i>",
	            nextText: "<i class=\"fa fa-angle-right\"></i>"
	        };
	    }
	};

/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = {
	    id: '#statistic-carousel',
	    options: function (n) {
	        return {
	            auto: false,
	            autoControls: false,
	            controls: true,
	            pager: false,
	            infiniteLoop: false,
	            responsive: true,
	            slideWidth: 300,
	            slideMargin: 60,
	            adaptiveHeight: true,
	            hideControlOnEnd: true,
	            minSlides: 1,
	            moveSlides: 1,
	            maxSlides: (n >= 3) ? 3 : 2,
	            prevText: "<i class=\" fa fa-caret-left\"></i>",
	            nextText: "<i class=\" fa fa-caret-right\"></i>"
	        };
	    }
	};

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgYTMwZDJjYzBhYmJhZGEzMTllNGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkubWluLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9hbWQtb3B0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9qcXVlcnkvbGliL2pxdWVyeS11aS5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkuYmEtYmJxLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9+L2J4c2xpZGVyL2Rpc3QvanF1ZXJ5LmJ4c2xpZGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2pxdWVyeS9qcXVlcnkuaWRpemUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS5jaXR5ZHJvcGRvd24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS5hY2NvcmRpb24tdGFicy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvdXRpbHMvc2Nyb2xsLXRvLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2pxdWVyeS9qcXVlcnkueW91dHViZXByZXZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS5tdWx0aXNjcmlwdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanF1ZXJ5L2pzLXBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3V0aWxzL2RlYnVnLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2N1c3RvbS1hamF4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL3ZpZXdwb3J0LWNoYW5nZWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvY3JlYXRlLWdhbGxlcnkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvY3JlYXRlLXNsaWRlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9nZXQtd2luZG93LXdpZHRoLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtZHJvcGRvd25zLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtZHluYW1pYy1tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvYXotbGlzdGluZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbWFnZS1hY2NvcmRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvaW5pdC1zZWUtbW9yZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbWFnZS1jcmVkaXRhdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9wbGFjZWhvbGRlci1mYWxsYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LWltYWdlLWNhcm91c2VsLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtd2hpdGUtY2FyZHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3Mvc2VhcmNoLWF1dG9jb21wbGV0ZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LW5ld3MtZXZlbnRzLXN0cmlwLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy91dGlscy9pbml0LWNvb2tpZS1ub3RpY2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9qcy1jb29raWUvc3JjL2pzLmNvb2tpZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9oZWFkZXItcHJpbWFyeS1uYXYuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvaGVhZGVyLW5hdnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZnVuY3MvZm9vdGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL2Z1bmNzL3BvcHVwLWRpYWxvZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9yZXNwb25zaXZlLXRhYmxlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9jeWNsaWMtcG9wdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vZGVmZXJyZWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vanMtZXJyb3Itbm90aWZpZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vd2lkZ2V0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9mdW5jcy9kb3dubG9hZC1maWxlLXR5cGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tYWluL29uLXJlc2l6ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvYmluZC1tZWdhLWV2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvYnJlYWtwb2ludHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvcHJvZmlsZXMtY2Fyb3VzZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvc3RhdC1jYXJvdXNlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7QUNyQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQ2JBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFpQjs7QUFFakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBMkIsT0FBTztBQUNsQyw0QkFBMkIsT0FBTztBQUNsQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjs7QUFFckIsa0JBQWlCOztBQUVqQjtBQUNBO0FBQ0Esa0JBQWlCOzs7QUFHakI7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQSxzQkFBcUI7O0FBRXJCOztBQUVBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLDhCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQXlCO0FBQ3pCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjs7QUFFckI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBcUI7O0FBRXJCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMLEVBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBSztBQUNMO0FBQ0EsbUJBQWtCOztBQUVsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTCxFQUFDLGtCOzs7Ozs7QUM3UEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBOEIsYUFBYSxFQUFFO0FBQzdDLGdDQUErQixhQUFhLEVBQUU7QUFDOUMsK0JBQThCLGFBQWEsRUFBRTtBQUM3Qyw4QkFBNkIsYUFBYSxFQUFFO0FBQzVDLDhCQUE2QixhQUFhLEVBQUU7QUFDNUMsaUNBQWdDLGFBQWE7QUFDN0M7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxvQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFpQyxRQUFROztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBbUMsUUFBUTtBQUMzQztBQUNBLG9DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQStELG9EQUFvRDtBQUNuSCxnRUFBK0Qsb0RBQW9EO0FBQ25IO0FBQ0EseUNBQXdDLGlGQUFpRjtBQUN6SDtBQUNBLHdCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSw2QkFBNEIsdUNBQXVDO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXVCLGtCQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBLGlEQUFnRCx1REFBdUQ7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUEyRTs7QUFFM0U7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxzRkFBcUYsaUVBQWlFO0FBQ3RKLG9GQUFtRixrRUFBa0U7QUFDcko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0EsNkRBQTRELHNEQUFzRDtBQUNsSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFxQyxrQkFBa0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsbUNBQWtDLGNBQWM7QUFDaEQsK0VBQThFLG1DQUFtQztBQUNqSDtBQUNBO0FBQ0E7QUFDQSx3Q0FBdUMsa0JBQWtCO0FBQ3pEO0FBQ0Esb0VBQW1FLHNCQUFzQjtBQUN6RjtBQUNBLHFDQUFvQyxlQUFlO0FBQ25EO0FBQ0EsaUdBQWdHLDJDQUEyQztBQUMzSTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBa0MsWUFBWTtBQUM5QyxVQUFTO0FBQ1QsK0JBQThCLHlCQUF5QjtBQUN2RCxVQUFTO0FBQ1QsUUFBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBZ0QsdUNBQXVDO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF1Qyx3Q0FBd0M7QUFDL0U7QUFDQSw2SEFBNEgsWUFBWTtBQUN4STtBQUNBLG9DQUFtQyxjQUFjO0FBQ2pEO0FBQ0EsbUNBQWtDLCtDQUErQztBQUNqRjtBQUNBLHNDQUFxQywyQkFBMkI7QUFDaEU7QUFDQSxxRUFBb0UsYUFBYTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBcUIsb0NBQW9DO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0EsVUFBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSx5REFBd0QsMkJBQTJCO0FBQ25GO0FBQ0E7QUFDQSx1REFBc0QsaURBQWlEO0FBQ3ZHLDBEQUF5RCxnREFBZ0Q7QUFDekc7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXdDLFFBQVE7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiLFlBQVcsT0FBTztBQUNsQjtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYixZQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBVztBQUNYLFVBQVM7QUFDVDtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQixjQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBb0QsUUFBUTtBQUM1RDtBQUNBLHFFQUFvRSxlQUFlO0FBQ25GO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFvRCxRQUFRO0FBQzVEO0FBQ0EscUVBQW9FLGVBQWU7QUFDbkY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxZQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLFFBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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QTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNERBQTJEO0FBQzNELDhCQUE2QixFQUFFO0FBQy9COztBQUVBLFVBQVMsb0JBQW9CO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSTtBQUNKOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsNEJBQTJCO0FBQzNCLEVBQUM7Ozs7Ozs7QUNoSkQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBa0I7O0FBRWxCO0FBQ0EsVUFBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxVQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYTtBQUNiLFVBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2IsVUFBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2IsVUFBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhO0FBQ2I7O0FBRUE7QUFDQTs7Ozs7Ozs7QUN0R0E7O0FBRUE7QUFDQTtBQUNB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QTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLGtCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0EsMEVBQXlFOztBQUV6RTtBQUNBOztBQUVBLGtCQUFpQjs7QUFFakIsY0FBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhOztBQUViLFVBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGNBQWE7O0FBRWIsVUFBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWE7O0FBRWIsVUFBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBaUM7O0FBRWpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFhOztBQUViLFVBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0NBQWlDOztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYTs7QUFFYixVQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzREFBcUQ7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFpQjs7QUFFakIsY0FBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQSxVQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGNBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQSxxQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsVUFBUzs7QUFFVDtBQUNBO0FBQ0EsY0FBYTtBQUNiLFVBQVM7O0FBRVQ7QUFDQSxvRUFBbUUsY0FBYztBQUNqRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBLHNCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxrQkFBaUI7O0FBRWpCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBcUI7QUFDckI7QUFDQSxzQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsRUFBQzs7Ozs7OztBQ3ZoQkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkQ7Ozs7OztBQ0xBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFVBQVM7O0FBRVQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFDLEc7Ozs7OztBQzdFRDs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0Esa0JBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFpQjs7QUFFakI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBQzs7Ozs7OztBQzlFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FDSkE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFTOztBQUVUO0FBQ0EsNEJBQTJCLG9CQUFvQjtBQUMvQztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFDLEc7Ozs7OztBQzNCRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEc7Ozs7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHIiwiZmlsZSI6IkNJVFlfUi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogd2VicGFjay9ib290c3RyYXAgYTMwZDJjYzBhYmJhZGEzMTllNGNcbiAqKi8iLCJcbnZhciBDSVRZID0gcmVxdWlyZSgnLi9tYWluJyksXG4gICAgZGVmZXJyZWQgPSByZXF1aXJlKCcuL2RlZmVycmVkJyksXG4gICAgaW5pdEpzRmFpbHVyZU5vdGlmaWVyID0gcmVxdWlyZSgnLi9qcy1lcnJvci1ub3RpZmllcicpLFxuICAgIGluaXRXaWRnZXRzID0gcmVxdWlyZSgnLi93aWRnZXRzJyksXG4gICAgaW5pdE9uUmVzaXplID0gcmVxdWlyZSgnLi9vbi1yZXNpemUnKSxcbiAgICBpbml0Q3VzdG9tU2xpZGVycyA9IHJlcXVpcmUoJy4vY3VzdG9tLXNsaWRlcnMnKTtcblxuQ0lUWS5pbml0KCk7XG5pbml0SnNGYWlsdXJlTm90aWZpZXIoKTtcbmRlZmVycmVkKCk7XG5pbml0T25SZXNpemUoKTtcbmluaXRXaWRnZXRzKCk7XG5pbml0Q3VzdG9tU2xpZGVycygpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4vanF1ZXJ5JyksXG4gICAgICAgIGRlYnVnID0gcmVxdWlyZSgnLi4vdXRpbHMvZGVidWcnKSxcbiAgICAgICAgY3VzdG9tQUpBWCA9IHJlcXVpcmUoJy4vZnVuY3MvY3VzdG9tLWFqYXgnKSxcbiAgICAgICAgdmlld3BvcnRDaGFuZ2VkID0gcmVxdWlyZSgnLi9mdW5jcy92aWV3cG9ydC1jaGFuZ2VkJyksXG4gICAgICAgIGNyZWF0ZUdhbGxlcnkgPSByZXF1aXJlKCcuL2Z1bmNzL2NyZWF0ZS1nYWxsZXJ5JyksXG4gICAgICAgIGNyZWF0ZVNsaWRlciA9IHJlcXVpcmUoJy4vZnVuY3MvY3JlYXRlLXNsaWRlcicpLFxuICAgICAgICBnZXRXaW5kb3dXaWR0aCA9IHJlcXVpcmUoJy4vZnVuY3MvZ2V0LXdpbmRvdy13aWR0aCcpLFxuICAgICAgICBpbml0RHJvcGRvd25zID0gcmVxdWlyZSgnLi9mdW5jcy9pbml0LWRyb3Bkb3ducycpLFxuICAgICAgICBpbml0RHluYW1pY0dtYXAgPSByZXF1aXJlKCcuL2Z1bmNzL2luaXQtZHluYW1pYy1tYXAnKSxcbiAgICAgICAgaW5pdEF6TGlzdGluZyA9IHJlcXVpcmUoJy4vZnVuY3MvYXotbGlzdGluZycpLFxuICAgICAgICBpbWFnZUFjY29yZGlvbiA9IHJlcXVpcmUoJy4vZnVuY3MvaW1hZ2UtYWNjb3JkaW9uJyksXG4gICAgICAgIGluaXRTZWVNb3JlID0gcmVxdWlyZSgnLi9mdW5jcy9pbml0LXNlZS1tb3JlJyksXG4gICAgICAgIGltYWdlQ3JlZGl0YXRpb24gPSByZXF1aXJlKCcuL2Z1bmNzL2ltYWdlLWNyZWRpdGF0aW9uJyksXG4gICAgICAgIGluaXRQbGFjZWhvbGRlckhhbGxiYWNrID0gcmVxdWlyZSgnLi9mdW5jcy9wbGFjZWhvbGRlci1mYWxsYmFjaycpLFxuICAgICAgICBpbml0SW1hZ2VDYXJvdXNlbCA9IHJlcXVpcmUoJy4vZnVuY3MvaW5pdC1pbWFnZS1jYXJvdXNlbCcpLFxuICAgICAgICBpbml0V2hpdGVDYXJkcyA9IHJlcXVpcmUoJy4vZnVuY3MvaW5pdC13aGl0ZS1jYXJkcycpLFxuICAgICAgICBzZWFyY2hBdXRvQ29tcGxldGUgPSByZXF1aXJlKCcuL2Z1bmNzL3NlYXJjaC1hdXRvY29tcGxldGUnKSxcbiAgICAgICAgaW5pdE5ld3NFdmVudHNTdHJpcCA9IHJlcXVpcmUoXCIuL2Z1bmNzL2luaXQtbmV3cy1ldmVudHMtc3RyaXBcIiksXG4gICAgICAgIGluaXRDb29raWVOb3RpY2UgPSByZXF1aXJlKCcuLi91dGlscy9pbml0LWNvb2tpZS1ub3RpY2UnKSxcbiAgICAgICAgaGVhZGVyUHJpbWFyeU5hdiA9IHJlcXVpcmUoJy4vZnVuY3MvaGVhZGVyLXByaW1hcnktbmF2JyksXG4gICAgICAgIGhlYWRlck5hdnMgPSByZXF1aXJlKCcuL2Z1bmNzL2hlYWRlci1uYXZzJyksXG4gICAgICAgIGZvb3RlciA9IHJlcXVpcmUoJy4vZnVuY3MvZm9vdGVyJyksXG4gICAgICAgIHBvcHVwRGlhbG9nID0gcmVxdWlyZSgnLi9mdW5jcy9wb3B1cC1kaWFsb2cnKSxcbiAgICAgICAgc2Nyb2xsVG8gPSByZXF1aXJlKCcuLi91dGlscy9zY3JvbGwtdG8nKSxcbiAgICAgICAgcmVzcG9uc2l2ZVRhYmxlcyA9IHJlcXVpcmUoJy4vZnVuY3MvcmVzcG9uc2l2ZS10YWJsZXMnKSxcbiAgICAgICAgY3ljbGljUG9wdXAgPSByZXF1aXJlKCcuL2Z1bmNzL2N5Y2xpYy1wb3B1cCcpO1xuXG4gICAgLyoqXG4gICAgICogVGhlIG1haW4gQ0lUWSB3cmFwcGVyIG9iamVjdFxuICAgICAqIEB2ZXJzaW9uICRSZXZpc2lvbjogNjI5MSAkICgkRGF0ZTogMjAxMi0wOS0wNSAxNjowNjozMCArMDEwMCAoV2VkLCAwNSBTZXAgMjAxMikgJClcbiAgICAgKiBAYXV0aG9yIENpdHkgV2ViIFRlYW1cbiAgICAgKi9cbiAgICB2YXIgQ0lUWSA9IChmdW5jdGlvbiAodykge1xuXG4gICAgICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBUaGUgb2JqZWN0IHRvIGhvbGQgYWxsIGxvYWRhYmxlIHNjcmlwdHMsIGFkZCBhbiBvYmplY3QgaGVyZSB0byBhbGxvdyBpdCdzIGxvYWRpbmcgaW4gYSBwYWdlXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogRWFjaCBjaGlsZCBvYmplY3QgaGFzIHRocmVlIHByb3BlcnRpZXM6XG4gICAgICAgICAgICAgKiAgIGRlc2NyaXB0aW9uOiBhIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBzY3JpcHRcbiAgICAgICAgICAgICAqICAgICAgICAgICBzcmM6IHRoZSBmaWxlbmFtZSBvZiB0aGUgc2NyaXB0XG4gICAgICAgICAgICAgKiAgICAgICBbYXN5bmNdOiBXaGV0aGVyIHRvIGxvYWQgdGhlIHNjcmlwdCBhc3luY2hyb25vdXNseSAoYXNzdW1lZCBmYWxzZSB1bmxlc3MgZ2l2ZW4pXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogQHZhciBPYmplY3RcbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdmFyIHNjcmlwdHMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGdvb2dsZU1hcHNBcGk6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcImdvb2dsZSBtYXBzIGFwaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBcImh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9QUl6YVN5QzJ0TXBJN0ZGbmxJak52TzBWclRQSWhmR0F2UWhBZnIwJnNlbnNvcj1mYWxzZVwiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGZsb3dwbGF5ZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcImluY2x1ZGUgZmxvd3BsYXllciBmb3IgcGFnZXMgd2l0aCB2aWRlb3NcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogXCJsaWIvZmxvd3BsYXllci9mbG93cGxheWVyLTMuMi40Lm1pbi5qc1wiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGZsb3dwbGF5ZXJFbWJlZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiRW1iZWQgY29kZSBmb3IgZmxvd3BsYXllclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBcImxpYi9mbG93cGxheWVyL2Zsb3dwbGF5ZXIuZW1iZWQtMy4wLjMubWluLmpzXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc3dmb2JqZWN0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJzd2ZvYmplY3QgZm9yIHlvdXR1YmUgdmlkZW8ocylcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogXCJsaWIvc3dmb2JqZWN0L3N3Zm9iamVjdC5qc1wiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGhpZ2hjaGFydHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkpRdWVyeSBjaGFydGluZyBwbHVnaW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogXCJsaWIvanF1ZXJ5L3BsdWdpbnMvaGlnaGNoYXJ0cy9oaWdoY2hhcnRzLTQtMS00LmpzXCJcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgalZlY3Rvck1hcDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwialF1ZXJ5IHBsdWdpbiBmb3IgU1ZHIHdvcmxkIG1hcFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBcImxpYi9qcXVlcnkvcGx1Z2lucy92ZWN0b3ItbWFwL2pxdWVyeS52ZWN0b3ItbWFwLm1pbi5qc1wiXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHdvcmxkTWFwOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJtYXAgc3ZnXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM6IFwibGliL2pxdWVyeS9wbHVnaW5zL3ZlY3Rvci1tYXAvd29ybGQtZW4uanNcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBidWlsZGluZ1RoZVZpc2lvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiYnVpbGRpbmcgdGhlIHZpc2lvbiBzcGVjaWZpYyBzY3JpcHRzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM6IFwiYnVpbGRpbmdUaGVWaXNpb24uanNcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBsaWJyYXJ5OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJsaWJyYXJ5IHNpdGUgc2NyaXB0c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBcImxpYnJhcnkuanNcIlxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiQ29tcHV0ZXIgUm9vbSBzaXRlIHNjcmlwdHNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogXCJsb2NhdGlvbi5qc1wiXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgICAgICAgICAgICAqIEdMT0JBTCBWQVJJQUJMRVNcbiAgICAgICAgICAgICAgICAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogVGhlIGxvY2F0aW9uIG9mIGV4dGVybmFsIHNjcmlwdHMgKHdpdGggdHJhaWxpbmcgc2xhc2gpXG4gICAgICAgICAgICAgICAgICogQHZhciBTdHJpbmdcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBzcmNQcmVmaXggPSBcIi8vXCIgKyBkb2N1bWVudC5sb2NhdGlvbi5ob3N0bmFtZS5yZXBsYWNlKC93d3d8aW50cmFuZXQvLCBcInMxXCIpLnJlcGxhY2UoXCJjYXNzLlwiLCBcIlwiKS5yZXBsYWNlKFwiY2l0eXNwb3J0Lm9yZy51a1wiLCBcImNpdHkuYWMudWtcIikgKyBcIi9jaXR5ci9qcy9cIixcblxuXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogVGhlIHZlcnNpb24gbnVtYmVyIHRvIHByZXBlbmQgdG8gdGhlIGZpbGUgbmFtZSwgc2V0IGluIHBhZ2VcbiAgICAgICAgICAgICAgICAgKiBAdmFyIFN0cmluZ1xuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHZlcnNpb24gPSB3LmNpdHlWZXJzaW9uIHx8IFwiMTIzNDU2Nzg5LlwiLFxuXG5cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBMYXp5bG9hZCBmdW5jdGlvbiwgaW5qZWN0cyBhIDxzY3JpcHQ+IGVsZW1lbnQgaW50byB0aGUgcGFnZSBoZWFkXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKiBub3cgcHJveGllcyB0byB5ZXBub3BlXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0ganNIYW5kbGU6IFRoZSBPYmplY3QgZnJvbSBDSVRZLnNjcmlwdHMgdG8gbG9hZFxuICAgICAgICAgICAgICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjYWxsYmFjazogVGhlIG5hbWUgb2YgdGhlIGNhbGxiYWNrIHRvIGJlIGV4ZWN1dGVkIGFmdGVyIHRoaXMgc2NyaXB0IGhhcyBsb2FkZWRcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBsb2FkID0gZnVuY3Rpb24gKGpzSGFuZGxlLCBjYWxsYmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAgIC8vd29yayBvdXQgZnVsbCBwYXRoXG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXRoID0gKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNjcmlwdCA9IHNjcmlwdHNbanNIYW5kbGVdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoL15odHRwcz86XFwvXFwvLy50ZXN0KHNjcmlwdC5zcmMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNjcmlwdC5zcmM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzcmNQcmVmaXggK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICgvcGx1Z2luc3xsaWIvLnRlc3Qoc2NyaXB0LnNyYykgPyBcIlwiIDogXCJtb2R1bGVzL1wiKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NyaXB0LnNyYztcblxuICAgICAgICAgICAgICAgICAgICB9KCkpO1xuXG4gICAgICAgICAgICAgICAgICAgIHllcG5vcGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9hZDogcGF0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFja1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBzZXRWZXJzaW9uID0gZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICAgICAgdmVyc2lvbiA9IHY7XG4gICAgICAgICAgICAgICAgfSxcblxuXG4gICAgICAgICAgICAgICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAgICAgICAgICAgICAqIFVTRUZVTCBHTE9CQUwgRlVOQ1RJT05TXG4gICAgICAgICAgICAgICAgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogU3R1ZmYgbmVlZGVkIG9uIGV2ZXJ5cGFnZSAtIGV4cGxvcmUgY2l0eSwgbG9naW4gZXRjLlxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIGluaXRQYWdlID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciAkYm9keSA9ICQoXCJib2R5XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJGZvcm0gPSAkYm9keS5maW5kKFwiI3NlYXJjaCwgI2hlYWRlcl9fc2VhcmNoX19mb3JtXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHNlYXJjaEZvcm0gPSAkYm9keS5maW5kKFwiLnNlYXJjaC1mb3JtW2RhdGEtYXV0b2NvbXBsZXRlLXN0YXR1cyE9J29mZiddXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHNlYXJjaEZvcm1RdWVyeSA9ICRzZWFyY2hGb3JtLmZpbmQoXCIuc2VhcmNoLWZvcm1fX3F1ZXJ5XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHF1ZXJ5ID0gJGZvcm0uZmluZChcIiNxdWVyeVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4Rm9ybSA9ICQoXCIjZmItcXVlcnlmb3JtXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXhRdWVyeSA9ICQoXCIjc2VhcmNoLXF1ZXJ5XCIsIGluZGV4Rm9ybSksXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hQYWdlQXV0b0NvbXBsZXRlQ29sbGVjdGlvbiA9ICRib2R5LmF0dHIoXCJpZFwiKSA9PT0gXCJpbnRyYW5ldFwiID8gXCJpbnRyYW5ldFwiIDogXCJtYWluLWFsbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgJGdhbGxlcmllcyA9ICQoXCIjY29udGVudFwiKS5maW5kKFwiLmdhbGxlcnlcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBhekxpc3RpbmdzID0gJCgnLmF6LXNpbmdsZS1wYWdlJyksXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGVDb2xsZWN0aW9uID0gJHNlYXJjaEZvcm0uYXR0cihcImRhdGEtY29sbGVjdGlvblwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5hdmlnYXRpb25cblxuICAgICAgICAgICAgICAgICAgICAgICAgJHByaW1hcnlOYXYgPSAkKFwiI3ByaW1hcnktbmF2XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHNlY29uZGFyeU5hdiA9ICQoXCIjc2Vjb25kYXJ5LW5hdlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRzZWNvbmRhcnlOYXZMaXMgPSAkKFwiI3NlY29uZGFyeS1uYXYgPiBsaVwiKSxcblxuICAgICAgICAgICAgICAgICAgICAgICAgJGNhcm91c2VsT2JqID0gJChcIiNwcm9tby1hcmVhXCIpLCAvL2Nhcm91c2VsIGNvbnRhaW5lclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVUkgZWxlbWVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgICRhY2NvcmRpb25zID0gJGJvZHkuZmluZChcIi5hY2NvcmRpb25cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAkcmVzcG9uc2l2ZVRhYnMgPSAkYm9keS5maW5kKFwiLnJlc3BvbnNpdmUtdGFic1wiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG1pc2MuXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50VXJsID0gJHByaW1hcnlOYXYuZGF0YSgndXJsJykgfHwgJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RpZnlTZWNOYXYgPSBjdXJyZW50VXJsLmluZGV4T2YoJy9teS1jb3VudHJ5LycpIDwgMDtcbiAgICAgICAgICAgICAgICAgICAgLy9lbmQgaW5pdFBhZ2UgdmFyc1xuXG5cbiAgICAgICAgICAgICAgICAgICAgLy8gc3ZnIGZhbGxiYWNrXG4gICAgICAgICAgICAgICAgICAgIGlmICghTW9kZXJuaXpyLnN2Zykge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCgnI2hlYWRlcl9fbG9nbyBpbWcnKS5hdHRyKCdzcmMnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQodGhpcykuYXR0cignc3JjJykucmVwbGFjZSgnLnN2ZycsICcucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlclByaW1hcnlOYXYoKTtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyTmF2cygpO1xuICAgICAgICAgICAgICAgICAgICBmb290ZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgJHJlc3BvbnNpdmVUYWJzLmFjY29yZGlvblRhYnMoKTtcbiAgICAgICAgICAgICAgICAgICAgaW5pdERyb3Bkb3ducygpO1xuICAgICAgICAgICAgICAgICAgICBpbml0QXpMaXN0aW5nKGF6TGlzdGluZ3MpO1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUFjY29yZGlvbigpO1xuICAgICAgICAgICAgICAgICAgICBpbml0U2VlTW9yZSgpO1xuICAgICAgICAgICAgICAgICAgICBpbml0V2hpdGVDYXJkcygpO1xuICAgICAgICAgICAgICAgICAgICBpbml0TmV3c0V2ZW50c1N0cmlwKCk7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZVNsaWRlcigkY2Fyb3VzZWxPYmopO1xuICAgICAgICAgICAgICAgICAgICBpbml0UGxhY2Vob2xkZXJIYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICBpbml0SW1hZ2VDYXJvdXNlbCgpO1xuICAgICAgICAgICAgICAgICAgICBpbml0Q29va2llTm90aWNlKCQpO1xuICAgICAgICAgICAgICAgICAgICBwb3B1cERpYWxvZygpO1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlVGFibGVzKCk7XG4gICAgICAgICAgICAgICAgICAgIGN5Y2xpY1BvcHVwKCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gd2FpdCBmb3IgdGhlIERPTSB0byBiZSBtb2RpZmllZCBiZWZvcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gdHJhdmVyc2luZyBmb3IgSW1hZ2UgQ3JlZGl0c1xuICAgICAgICAgICAgICAgICAgICBpbWFnZUNyZWRpdGF0aW9uKCk7XG5cblxuICAgICAgICAgICAgICAgICAgICAkZ2FsbGVyaWVzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlR2FsbGVyeSgkKHRoaXMpKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9zb21lIGhlbHBlciBzdHVmZiB0byBzdHlsZSBwcmltYXJ5IG5hdmlnYXRpb25cblxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFVybC5pbmRleE9mKCcvL3d3dy5jaXR5LmFjLnVrL25ld3MnKSA+PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkc2Vjb25kYXJ5TmF2LmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChtb2RpZnlTZWNOYXYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFkZCBzZWNvbmRhcnktbmF2LXNpYmxpbmdzIHRvIHNlY29uZGFyeS1uYXYgb25seSBpZiB3ZSBoYXZlIHNvbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKFwib2wjc2Vjb25kYXJ5LW5hdiA+IGxpOmxhc3QgPiBhXCIpLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJvbCNzZWNvbmRhcnktbmF2LXNpYmxpbmdzXCIpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBsaW5rIHRvIHRoaXMgcGFnZSBpc24ndCBpbiBzZWNvbmRhcnktbmF2LXNpYmxpbmdzLCBqdXN0IGFkZCB0aGUgc2libGluZ3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChcIm9sI3NlY29uZGFyeS1uYXYtc2libGluZ3MgYVwiKS5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaHJlZlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnRvQXJyYXkoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluZGV4T2YoJChcIm9sI3NlY29uZGFyeS1uYXYgPiBsaTpsYXN0ID4gYVwiKVswXS5ocmVmKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcIm9sI3NlY29uZGFyeS1uYXZcIikuYXBwZW5kKCQoXCI8bGk+XCIpLmh0bWwoJChcIm9sI3NlY29uZGFyeS1uYXYtc2libGluZ3NcIikpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBvdGhlcndpc2UgcmVwbGFjZSB0aGUgc2Vjb25kYXJ5IG5hdiBjb21wbGV0ZWx5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJvbCNzZWNvbmRhcnktbmF2ID4gbGk6bGFzdFwiKS5lbXB0eSgpLmFwcGVuZCgkKFwib2wjc2Vjb25kYXJ5LW5hdi1zaWJsaW5nc1wiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwib2wjcHJpbWFyeS1uYXYgbGksIG9sI3NlY29uZGFyeS1uYXYgbGlcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCJvbCNwcmltYXJ5LW5hdiBhW2hyZWY9XFxcIlwiICsgY3VycmVudFVybCArIFwiXFxcIl0sIG9sI3NlY29uZGFyeS1uYXYgYVtocmVmPVxcXCJcIiArIGN1cnJlbnRVcmwgKyBcIlxcXCJdXCIpLnBhcmVudChcImxpXCIpLmFkZENsYXNzKFwic2VsZWN0ZWRcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkcHJpbWFyeU5hdi5maW5kKFwiLmN1cnJlbnRcIikubGVuZ3RoID09PSAwICYmICRzZWNvbmRhcnlOYXYuZmluZChcIi5zZWxlY3RlZFwiKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3dlIGFyZSBvbiB0aGUgaG9tZSBwYWdlIG9mIHRoZSBzZWN0aW9uIHNvIGhpZGUgc2Vjb25kYXJ5IG5hdiBhbmQgYWRkIGhlbHBlciBjbGFzc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWNvbmRhcnlOYXYuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwcmltYXJ5TmF2LmFkZENsYXNzKFwidG9wLWxldmVsXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2hpZGUgc2Vjb25kYXJ5IGxldmVsIGlmIGVtcHR5XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHNlY29uZGFyeU5hdkxpcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2Vjb25kYXJ5TmF2LmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9zZWNvbmRhcnkgbmF2IGlzIGRlZmluaXRlbHkgc2hvd2luZywgYWRkIHNvbWUgY2xhc3NlcyB0byBoZWxwIHN0eWxpbmdcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgd2UgaGF2ZSBzZWNvbmRhcnktbmF2LXNpYmxpbmdzIHRoZSBwcmV2b3VzIGxpIGVsZW1lbnQgd2lsbCBiZSB0aGUgcGFyZW50IGZyb20gb25lIGxldmVsIHVwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZS5nLiBodHRwOi8vd3d3LmNpdHkuYWMudWsvYXJ0cy1zb2NpYWwtc2NpZW5jZXMvam91cm5hbGlzbS9zdHVkZW50LXdvcmsvY2l0eS1qb3VybmFsaXNtLXN0dWRlbnQtYnlsaW5lcy9qYW51YXJ5LTIwMTIvdGVzdC1sZXZlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIjc2Vjb25kYXJ5LW5hdi1zaWJsaW5nc1wiKS5wYXJlbnQoKS5wcmV2KFwibGlcIikuYWRkQ2xhc3MoXCJlbmRcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBXaGVuIHRoZSBjdXJyZW50IHBhZ2UgaXMgcGFydCBvZiB0aGUgYnJlYWRjcnVtYiBpdHMgcHJldmlvdXMgc2libGluZyByZWd1aXJlcyBhIGNsYXNzIG9mIFwic2VsZWN0ZWQtam9pblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2Ugb25seSB3YW50IHRoaXMgdG8gaGFwcGVuIG9uIGRpcmVjdCBjaGlsZHJlbiBvZiAkc2Vjb25kYXJ5TmF2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZS5nIGh0dHA6Ly93d3cuY2l0eS5hYy51ay9hcnRzLXNvY2lhbC1zY2llbmNlcy9qb3VybmFsaXNtL3N0dWRlbnQtd29yay9jaXR5LWpvdXJuYWxpc20tc3R1ZGVudC1ieWxpbmVzL2phbnVhcnktMjAxMlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzZWNvbmRhcnlOYXYuZmluZChcIj4gbGkuc2VsZWN0ZWRcIikucHJldigpLmFkZENsYXNzKFwic2VsZWN0ZWQtam9pblwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkc2Vjb25kYXJ5TmF2LmZpbmQoXCIuc2VsZWN0ZWRcIikubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vYWRkIGEgY2xhc3Mgb2YgXCIucGFyZW50XCIgdG8gYWN0aXZlIGVsZW1lbnQgaW4gcHJpbWFyeSBuYXYgc28gd2UgY2FuIHVuLWJvbGQgaXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHByaW1hcnlOYXYuZmluZChcIi5jdXJyZW50XCIpLmFkZENsYXNzKFwicGFyZW50XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIGluaXRhbGlzZSBhbnkgYWNjb3JkaW9ucyBmb3VuZFxuICAgICAgICAgICAgICAgICAgICAkYWNjb3JkaW9ucy5hY2NvcmRpb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0U3R5bGU6IFwiY29udGVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sbGFwc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaGVhZGVyXCI6IFwidWktaWNvbi10cmlhbmdsZS0xLXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImhlYWRlclNlbGVjdGVkXCI6IFwidWktaWNvbi10cmlhbmdsZS0xLW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2YXRlOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVG8odWkubmV3SGVhZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9zZXQgdXAgYXV0b2NvbXBsZXRlIG9uIHNlYXJjaCBib3hcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoQXV0b0NvbXBsZXRlKCRmb3JtLCAkcXVlcnksIHNlYXJjaFBhZ2VBdXRvQ29tcGxldGVDb2xsZWN0aW9uKTtcblxuICAgICAgICAgICAgICAgICAgICAvL3NldCB1cCBhdXRvY29tcGxldGUgb24gc2VhcmNoIGJveCBvbiBtYWluIHNlYXJjaCBwYWdlXG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZShpbmRleEZvcm0sIGluZGV4UXVlcnksIHNlYXJjaFBhZ2VBdXRvQ29tcGxldGVDb2xsZWN0aW9uKTtcblxuICAgICAgICAgICAgICAgICAgICAvL3NldCB1cCBhdXRvY29tcGxldGUgb24gc2VhcmNoIGJveCBvbiBpbnRyYW5ldCBtYWluIHNlYXJjaCBwYWdlXG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZSgkc2VhcmNoRm9ybSwgJHNlYXJjaEZvcm1RdWVyeSwgYXV0b0NvbXBsZXRlQ29sbGVjdGlvbik7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gY2F0Y2ggYW55IHZpZGVvcyB0aGF0IGhhdmUgYmVlbiBtYW51YWxseSBpbnB1dFxuICAgICAgICAgICAgICAgICAgICAkKFwiaWZyYW1lW3NyYyo9J3lvdXR1YmUnXVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRlbGVtZW50ID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRXaWR0aCA9ICRlbGVtZW50Lm91dGVyV2lkdGgoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcGFyZW50ID0gJGVsZW1lbnQucGFyZW50KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRvbid0IGRvdWJsZSB3cmFwIGFuIGlmcmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKFwiZW1iZWQtY29udGFpbmVyXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZm9yIGVsYXN0aWMgb2JqZWN0cywgd2UgbmVlZCAyICghKSB3cmFwcGVyc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRlbGVtZW50LndyYXAoXCI8ZGl2IGNsYXNzPVxcXCJlbWJlZC13cmFwcGVyXFxcIiBzdHlsZT1cXFwid2lkdGg6XCIgKyB2aWRXaWR0aCArIFwicHhcXFwiPjxkaXYgY2xhc3M9XFxcImVtYmVkLWNvbnRhaW5lclxcXCI+PC9kaXY+PC9kaXY+XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGluaXREeW5hbWljR21hcCgkKFwiI2R5bmFtaWMtZ21hcFwiKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gaGlkZS9zaG93IGZ1bmN0aW9uYWxpdHkgZm9yIHVuaXQgbGlzdHMgKGV4YW1wbGUgb24gc3ViamVjdCBhcmVhIHBhZ2VzKVxuICAgICAgICAgICAgICAgICAgICAkKFwiLnVuaXQtbGlzdHMgLnVuaXQtbGlzdHMtdGl0bGVcIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnRzKFwiLnVuaXQtbGlzdHNcIikudG9nZ2xlQ2xhc3MoXCJ1bml0LWxpc3RzLWV4cGFuZGVkXCIpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAvL2hpZGUvc2hvdyBvdGhlciBhbW91bnQgYW5kIHBhc3MgdGhlIGNvcnJlY3QgdmFsdWUgb24gQ2l0eSBGdXR1cmUgRnVuZCBwYWdlXG4gICAgICAgICAgICAgICAgICAgIGlmICgkKFwiI2Z1dHVyZS1mdW5kLWZvcm1zXCIpLmxlbmd0aCA9PT0gMSB8fCAkKFwiI3JhY2luZy1mb3JtXCIpLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJChcIiNjZmYtcmVndWxhci1kb25hdGlvbiBpbnB1dFt0eXBlPXJhZGlvXVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudEVsZW1lbnQgPSAkKHRoaXMpLnBhcmVudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuZG9uYXRlLWFwcGVhbFwiKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudEVsZW1lbnQuZmluZChcIi5kb25hdGlvbi1vdGhlci1vcHRpb25cIikuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRFbGVtZW50LmZpbmQoXCIuZG9uYXRpb24tb3RoZXItYW1vdW50XCIpLnNob3coKS5maW5kKFwiaW5wdXRcIikuYXR0cihcIm5hbWVcIiwgXCJyZWd1bGFyX2Ftb3VudFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnQuZmluZChcIi5kb25hdGlvbi1vdGhlci1hbW91bnRcIikuaGlkZSgpLmZpbmQoXCJpbnB1dFwiKS5hdHRyKFwibmFtZVwiLCBcIlwiKS5hdHRyKFwidmFsdWVcIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiI2NmZi1zaW5nbGUtZG9uYXRpb24gaW5wdXRbdHlwZT1yYWRpb11cIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRFbGVtZW50ID0gJCh0aGlzKS5wYXJlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50RWxlbWVudC5maW5kKFwiLmRvbmF0aW9uLW90aGVyLW9wdGlvblwiKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudEVsZW1lbnQuZmluZChcIi5kb25hdGlvbi1vdGhlci1hbW91bnRcIikuc2hvdygpLmZpbmQoXCJpbnB1dFwiKS5hdHRyKFwibmFtZVwiLCBcInRmYV9BbW91bnR5b3V3aXNodG9kXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50RWxlbWVudC5maW5kKFwiLmRvbmF0aW9uLW90aGVyLWFtb3VudFwiKS5oaWRlKCkuZmluZChcImlucHV0XCIpLmF0dHIoXCJuYW1lXCIsIFwiXCIpLmF0dHIoXCJ2YWx1ZVwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICQoJy5tZWRpYS1yaWJib24gLmVtYmVkLWNvbnRhaW5lcicpLnZpZGVvUHJldmlldyh7c2hvd0luZm86IDB9KTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLndpZGdldC1jb250ZW50IC5lbWJlZC1jb250YWluZXInKS52aWRlb1ByZXZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLmludGVybmF0aW9uYWwtbG9uZG9uIC5lbWJlZC1jb250YWluZXInKS52aWRlb1ByZXZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnNvY2lhbC13YWxsIC5lbWJlZC1jb250YWluZXInKS52aWRlb1ByZXZpZXcoKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLmVtYmVkLWNvbnRhaW5lci5lbWJlZC1jb250YWluZXItLWRlZmF1bHQteXQtcHJldmlldycpLnZpZGVvUHJldmlldygpO1xuXG4gICAgICAgICAgICAgICAgfSwvL2VuZCBpbml0UGFnZVxuXG5cbiAgICAgICAgICAgICAgICBvYmplY3RTaXplID0gZnVuY3Rpb24gKG9iamVjdCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBzaXplID0gMCwga2V5O1xuXG4gICAgICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9iamVjdC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZSArPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNpemU7XG5cbiAgICAgICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICogRmluZHMgYW55IHZpZCBpbWFnZXMgb24gYSBwYWdlIGFuZCByZXBsYWNlcyB0aGVtIHdpdGggZWl0aGVyIGEgWW91VHViZSBpZnJhbWUgb3IgU1dGT2JqZWN0IGZvciBGTVMgdmlkc1xuICAgICAgICAgICAgICAgICAqIEByZXR1cm46IFVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHZpZGVvcyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgJHlvdXR1YmVWaWRzID0gJChcImltZy55b3V0dWJlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJGZtc1ZpZHMgPSAkKFwiaW1nLmZtc1wiKSxcblxuICAgICAgICAgICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIFJlcGxhY2VzIGFuIGltYWdlIGVsZW1lbnQgd2l0aCBZb3VUdWJlIGlGcmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICogQHBhcmFtOiB7T2JqZWN0fSA6ICRlbCAtIGpRdWVyeSBvYmplY3QgZm9yIHlvdVR1YmUgaW1hZ2VzIHRvIGJlIHJlcGxhY2VkXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBAcmV0dW46IHtVbmRlZmluZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgIGVtYmVkWW91dHViZSA9IGZ1bmN0aW9uICgkeW91dHViZVZpZHMpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICR5b3V0dWJlVmlkcy5lYWNoKGZ1bmN0aW9uIChpLCBlbCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkZWwgPSAkKGVsKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZFdpZHRoID0gNTAwLCAvLyBkZWZhdWx0IHdpZHRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQgPSAzMjAsIC8vIGRlZmF1bHQgaGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0lEID0gJGVsLmF0dHIoXCJpZFwiKS5yZXBsYWNlKFwidmlkX1wiLCBcIlwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZWwucmVwbGFjZVdpdGgoXCI8ZGl2IGNsYXNzPVxcXCJlbWJlZC13cmFwcGVyXFxcIj48ZGl2IGNsYXNzPVxcXCJlbWJlZC1jb250YWluZXJcXFwiPjxpZnJhbWUgaGVpZ2h0PVwiICsgdmlkSGVpZ2h0ICsgXCIgd2lkdGg9IFwiICsgdmlkV2lkdGggKyBcIiBzcmM9XFxcIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1wiICsgdmlkZW9JRCArIFwiP3JlbD0wJndtb2RlPXRyYW5zcGFyZW50XFxcIiBmcmFtZWJvcmRlcj0nMCcgYWxsb3dmdWxsc2NyZWVuPjwvaWZyYW1lPjwvZGl2PjwvZGl2PlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8qXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBSZXBsYWNlcyBhbiBpbWFnZSBlbGVtZW50IHdpdGggU1dGIE9iamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgICogQHBhcmFtOiB7T2JqZWN0fSA6ICRlbCAtIGpRdWVyeSBvYmplY3QgZm9yIGFsbCBmbXMgaW1hZ2VzIHRvIGJlIHJlcGxhY2VkXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiBAcmV0dW46IHtVbmRlZmluZWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgIGVtYmVkRm1zID0gZnVuY3Rpb24gKCRmbXNWaWRzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3BsYXNoSW1hZ2VzID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNzU3RhbmRhcmQ6IFwiLy9zMS5jaXR5LmFjLnVrL2kvZmxvd3BsYXllci1jYXNzLmpwZz92PTgxMDVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Fzc1JldGluYTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0eVN0YW5kYXJkOiBcIi8vczEuY2l0eS5hYy51ay9pL2Zsb3dwbGF5ZXItY2l0eS5qcGc/dj04MTA1XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdHlSZW50aW5hOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmbXNWaWRzLmVhY2goZnVuY3Rpb24gKGksIGVsKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyICRlbCA9ICQoZWwpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkV2lkdGggPSA2ODcsIC8vZGVmYXVsdCB3aWR0aFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkSGVpZ2h0ID0gNDE5LCAvLyBkZWZhdWx0IGhlaWdodFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxJZCA9ICRlbC5hdHRyKFwiaWRcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRJZCA9IGVsSWQucmVwbGFjZShcInZpZF9cIiwgXCJcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzSW5zdGFsbCA9IFwiLy9zMS5jaXR5LmFjLnVrL2pzL3N3Zm9iamVjdC9leHByZXNzSW5zdGFsbC5zd2ZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXNodGFyZ2V0dmVyc2lvbiA9IFwiOS4wLjI4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGFzaHZhcnMgPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93U2NyaXB0QWNjZXNzOiBcImFsd2F5c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93ZnVsbHNjcmVlbjogXCJ0cnVlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd21vZGU6IFwidHJhbnNwYXJlbnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcInZpZHBsYXllclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB2aWRJZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwbGFzaEltYWdlID0gQ0lUWS5pc0Nhc3MgPyBzcGxhc2hJbWFnZXMuY2Fzc1N0YW5kYXJkIDogc3BsYXNoSW1hZ2VzLmNpdHlTdGFuZGFyZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3ZkNhbGxCYWNrID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKGUucmVmKS53cmFwKFwiPGRpdiBjbGFzcz1cXFwiZW1iZWQtd3JhcHBlclxcXCIgc3R5bGU9XFxcIndpZHRoOlwiICsgdmlkV2lkdGggKyBcInB4XFxcIj48ZGl2IGNsYXNzPVxcXCJlbWJlZC1jb250YWluZXJcXFwiPjwvZGl2PjwvZGl2PlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pZiB2aWRlbyBpcyBpbmNsdWRlZCBpbiB0aGUgY291cnNlIGRlc2NyaXB0aW9uIGRpdiBvZiBhIGNvdXJzZSBOIHBhZ2UsIHdpZHRoIG5lZWRzIHRvIGJlIDQxOVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGVsLnBhcmVudHMoXCIuY291cnNlLWRlc2NyaXB0aW9uXCIpLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkV2lkdGggPSA0MTk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL3ZpZHMgaGF2ZSBkaWZmZXJlbnQgc2l6ZXMgZGVwZW5kaW5nIG9uIHRoZSBzaXplIG9mIHRoZSBjb250ZW50IGRpdiBhbmQgaWYgdGhleSBhcmUgd2lkZXNjcmVlbiBvbiBzcXVhcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRlbC5oYXNDbGFzcyhcIndpZGVzY3JlZW5cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZEhlaWdodCA9IHZpZFdpZHRoICogMC42MTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZFdpZHRoID0gNTAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkSGVpZ2h0ID0gMzIwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzd2ZvYmplY3QuaGFzRmxhc2hQbGF5ZXJWZXJzaW9uKGZsYXNodGFyZ2V0dmVyc2lvbikpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9leHBsYWluIHdoeSB0aGVyZSBpcyBubyB2aWRlb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGVsLmFmdGVyKFwiPHAgY2xhc3M9XFxcIm5vdGljZS1tZXNzYWdlXFxcIj48aSBjbGFzcz1cXFwiZmEgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGVcXFwiIHN0eWxlPVxcXCJjb2xvciA6ICNDQ0NDMDBcXFwiPjwvaT4gWW91IG5lZWQgdG8gaGF2ZSBmbGFzaCBwbGF5ZXIgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXNodGFyZ2V0dmVyc2lvbiArIFwiIG9yIGdyZWF0ZXIgaW5zdGFsbGVkIHRvIHNlZSB0aGUgdmlkZW8uPC9wPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxwPjxhIGhyZWY9XFxcImh0dHA6Ly9nZXQuYWRvYmUuY29tL2ZsYXNocGxheWVyL1xcXCI+R2V0IEZsYXNoIFBsYXllcjwvYT48L3A+XCIpO1xuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jb25maWcgaGFzIHRvIGJlIGluIGEgc3RyaW5nIGFuZCBrZXkgYW5kIHZhbHVlcyBoYXZlIHRvIGJlIFwicXVvdGVkXCIgLSBuaWdodG1hcmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnN0cnVjdCBhbGwgdGhlIHZhcmlhYmxlcyB0byBwYXNzIHRvIHRoZSBwbGF5ZXIgLVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdHJpZWQgdG8gbWFrZSB0aGlzIGEgcHJvcGVyIGpzb24gYXJyYXksIGRpZG4ndCB3b3JrIDooXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJRSBkb2Vzbid0IGxpa2UgZG91YmxlIHF1b3RlcyBoZXJlIHNvIGlnbm9yZSBKU0hpbnQgZXJyb3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsYXNodmFycyA9IFwieydjbGlwJzogeydwcm92aWRlcic6ICdydG1wJ30sICdwbGF5bGlzdCc6IFt7J3VybCc6J1wiICsgc3BsYXNoSW1hZ2UgKyBcIicsICdhdXRvUGxheSc6IHRydWV9LCB7J3VybCc6ICdcIiArIHZpZElkLnJlcGxhY2UoJ3ZpZF8nLCAnJykgKyBcIi9IaV9iYW5kd2lkdGgnLCAnYXV0b1BsYXknOiBmYWxzZSwgJ3NjYWxpbmcnOiAnZml0J31dLCAncGx1Z2lucyc6IHsncnRtcCc6IHsndXJsJzogJy8vczEuY2l0eS5hYy51ay9qcy9mbG93cGxheWVyL2Zsb3dwbGF5ZXIucnRtcC0zLjIuMy5zd2YnLCAnbmV0Q29ubmVjdGlvblVybCc6ICdydG1wOi8vbWVkaWEuY2l0eS5hYy51ay9mbG93cGxheWVyJywgJ29iamVjdEVuY29kaW5nJzogJzAnLCAncHJveHlUeXBlJzogJ25vbmUnIH0sICdjb250cm9scyc6IHsndXJsJzogJ2Zsb3dwbGF5ZXIuY29udHJvbHMuc3dmJ30gfSB9XCI7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGluaXRpYXRlIHRoZSBwbGF5ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3Zm9iamVjdC5lbWJlZFNXRihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIi8vczEuY2l0eS5hYy51ay9qcy9mbG93cGxheWVyL2Zsb3dwbGF5ZXItMy4yLjYuc3dmXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRXaWR0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWRIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI5LjAuMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3NJbnN0YWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjb25maWc6IGZsYXNodmFyc30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3ZkNhbGxCYWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gLy9lbmQgaGFzIGZsYXNoIGlmXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCR5b3V0dWJlVmlkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVtYmVkWW91dHViZSgkeW91dHViZVZpZHMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmICgkZm1zVmlkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllcG5vcGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQ6IHNjcmlwdHMuc3dmb2JqZWN0LnNyYyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWJlZEZtcygkZm1zVmlkcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH0sIC8vIGVuZCB2aWRlb3NcblxuICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAqIFRoaXMgaXMgb3VyIHllcG5vcGUgZmlsdGVyXG4gICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgKiBzcGxpY2VzIGluIHRoZSB2ZXJzaW9uIHN0cmluZyB3ZSBoYXZlIHNldCB1cCBpbiBzZXRWZXJzaW9uXG4gICAgICAgICAgICAgICAgICogcHJlcGVuZHMgdGhlIGNvcnJlY3QgczEgZG9tYWluLCB3aGVyZSBpdCBoYXNuJ3QgYmVlbiBwcm92aWRlZFxuICAgICAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgICAgICogTi5CLiB3aWxsIGZhaWwgaWYgd2UgaGF2ZSBhbiBzMSB0b3AgbGV2ZWwgZm9sZGVyIGNvbnRhaW5pbmdcbiAgICAgICAgICAgICAgICAgKiBkb3RzIChzZWUgY29tbWVudCBiZWxvdylcbiAgICAgICAgICAgICAgICAgKlxuICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHllcG5vcGVGaWx0ZXIgPSBmdW5jdGlvbiAocmVzb3VyY2UpIHtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgbG9jLCBsYXN0SXRlbTtcblxuICAgICAgICAgICAgICAgICAgICAvKiBJZiB3ZSBhcmUgbG9hZGluZyBpbiBhbiBhYnNvbHV0ZSB1cmwsIGRvbid0IHRvdWNoIGl0XG4gICAgICAgICAgICAgICAgICAgICAqIHRoaXMgaXMgdGhlIHJlZ2V4IHdoaWNoIGZhaWxzIG9uIGEgdG9wIGxldmVsIGZvbGRlciB3aXRoIGRvdHNcbiAgICAgICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgICAgICogbWF0Y2hlczpcbiAgICAgICAgICAgICAgICAgICAgICogaHR0cDovL3d3dy5leHRlcm5hbC5jb20vc2NyaXB0cy9zY3JpcHQuanNcbiAgICAgICAgICAgICAgICAgICAgICogd3d3LmV4dGVybmFsLmNvbS9zY3JpcHRzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAgICAgKiBhYnNvbHV0ZS53aXRoLm1hbnkuc3ViLmRvbWFpbnMuZG9tYWluLmNvbS9zY3JpcHRzL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAgICAgKiBodHRwczovL2Fic291bHRlLndpdGgubWFueS5zdWIuZG9tYWlucy5kb21haW4uY29tL3NjcmlwdHMvc2NyaXB0LmpzXG4gICAgICAgICAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgICAgICAgICAqIGRvZXNuJ3QgbWF0Y2g6XG4gICAgICAgICAgICAgICAgICAgICAqIG1vZHVsZXMvdGVzdC5qc1xuICAgICAgICAgICAgICAgICAgICAgKiBsaWIvc3ViZGlyL3NjcmlwdC5qc1xuICAgICAgICAgICAgICAgICAgICAgKiBsaWIvc3ViZGlyLjEyMy9zY3JpcHQuanNcbiAgICAgICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgICAgICogd2lsbCBtYXRjaCB3aGVuIHdlIGRvbid0IHdhbnQgdG86XG4gICAgICAgICAgICAgICAgICAgICAqIHRvcGxldmVsLndpdGguZG90cy9zY3JpcHQuanNcbiAgICAgICAgICAgICAgICAgICAgICogbGliLnYyL2pxdWVyeS9zY3JpcHQuanNcbiAgICAgICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgICAgICogSSB0aGluayBpdCdzIGFuIHVubGlrZWx5IGlzc3VlLCBidXQgaWYgYW55b25lIGNhbiB0d2VhayB0aGUgcmVnZXhcbiAgICAgICAgICAgICAgICAgICAgICogdG8gcHJldmVudCB0aGlzIHBsZWFzZSBkby5cbiAgICAgICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGlmICgvXihodHRwcz86XFwvXFwvKT8oW15cXC8uXStcXC4pK1teXFwvXStcXC8vLnRlc3QocmVzb3VyY2UudXJsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbG9jID1cblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9hbHJlYWR5IGNvbnRhaW5zIHMxPyAtIGRvbid0IGFkZCBwcmVmaXhcbiAgICAgICAgICAgICAgICAgICAgICAgICgoL3MxLy50ZXN0KHJlc291cmNlLnVybCkgPyBcIlwiIDogc3JjUHJlZml4KSArXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZS51cmwpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vc3BsaXQgZm9yIHNwbGljaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNwbGl0KFwiL1wiKTtcblxuICAgICAgICAgICAgICAgICAgICAvL3NwbGljZSBpbiB2ZXJzaW9uXG4gICAgICAgICAgICAgICAgICAgIGxhc3RJdGVtID0gbG9jLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgICAgIGxvY1tsYXN0SXRlbV0gPSB2ZXJzaW9uICsgbG9jW2xhc3RJdGVtXTtcblxuICAgICAgICAgICAgICAgICAgICByZXNvdXJjZS51cmwgPSBsb2Muam9pbihcIi9cIik7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgb24gcHJvZCBhbmQgd2UgYXJlIGxvYWRpbmcgYSBtb2R1bGUvLmpzIGZpbGVcbiAgICAgICAgICAgICAgICAgICAgLy8gd2Ugd2FudCAubWluLmpzIHJhdGhlciB0aGFuIC5qc1xuICAgICAgICAgICAgICAgICAgICBpZiAoL3MxXFwuY2l0eS8udGVzdChyZXNvdXJjZS51cmwpICYmICEvanNcXC9saWIvLnRlc3QocmVzb3VyY2UudXJsKSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvdXJjZS51cmwgPSByZXNvdXJjZS51cmwucmVwbGFjZSgvanMkLywgXCJtaW4uanNcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZTtcblxuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgKiBJbml0aWFsaXNhdGlvbiBmdW5jdGlvbiwgY2FsbGVkIGltbWVkaWF0ZWx5IGFmdGVyIENJVFkgZGVjbGFyYXRpb24gYmVsb3dcbiAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICBpbml0ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIGRlYnVnKFwiQ0lUWSByZWFkeSAod2UgYXJlIGluIFwiICsgZG9jdW1lbnQuY29tcGF0TW9kZSArIFwiKVwiKTtcblxuICAgICAgICAgICAgICAgICAgICB5ZXBub3BlLmFkZEZpbHRlcih5ZXBub3BlRmlsdGVyKTtcblxuICAgICAgICAgICAgICAgICAgICBpbml0UGFnZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vLy8gbGlicmFyeSBob21lIHBhZ2Ugb3BlbmluZyB0aW1lc1xuICAgICAgICAgICAgICAgICAgICBpZiAoJCgnI2xpYnJhcnknKS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHllcG5vcGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQ6ICdtb2R1bGVzL2xpYnJhcnkvbGlicmFyeS5qcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoJ2xvYWRlZCBsaWJyYXJ5IGRhdGVwaWNrZXInKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBmb2xsb3dpbmcgbmVlZHMgZG9tcmVhZHlcbiAgICAgICAgICAgICAgICAgICAgJChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNldCB1cCBhbnkgdmlkZW9zIG9uIHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvcygpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBtb2JpbGUgYnJvd3NlciBjbGljayBkZWxheSBmaXhcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaW5pdEZhc3RDbGlja3QoKTtcblxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiAgVGhpcyBsaXRlcmFsIGRlZmluZXMgd2hhdCBtZXRob2RzIHRvIG1ha2UgcHVibGljbHkgYWNjZXNzaWJsZVxuICAgICAgICAgICAgICogIG91dHNpdGUgQ0lUWVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZXR1cm4ge1xuXG4gICAgICAgICAgICAgICAgaW5pdDogaW5pdCxcbiAgICAgICAgICAgICAgICBsb2FkOiBsb2FkLFxuICAgICAgICAgICAgICAgIGRlYnVnOiBkZWJ1ZyxcbiAgICAgICAgICAgICAgICBzZXRWZXJzaW9uOiBzZXRWZXJzaW9uLFxuICAgICAgICAgICAgICAgIHNlYXJjaEF1dG9Db21wbGV0ZTogc2VhcmNoQXV0b0NvbXBsZXRlLFxuICAgICAgICAgICAgICAgIG9iamVjdFNpemU6IG9iamVjdFNpemUsXG4gICAgICAgICAgICAgICAgZ2V0V2luZG93V2lkdGg6IGdldFdpbmRvd1dpZHRoLFxuICAgICAgICAgICAgICAgIGN1c3RvbUFKQVg6IGN1c3RvbUFKQVgsXG4gICAgICAgICAgICAgICAgaW1hZ2VDcmVkaXRhdGlvbjogaW1hZ2VDcmVkaXRhdGlvbixcbiAgICAgICAgICAgICAgICAvL3RoaXMgd2lsbCBiZSB1c2VmdWwgaW4gbW9kdWxlc1xuICAgICAgICAgICAgICAgIHMxU2VydmVyOiBzcmNQcmVmaXhcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgfSh3aW5kb3cpXG4gICAgKTsgLy9lbmQgQ0lUWVxuXG4gICAgd2luZG93LkNJVFkgPSBDSVRZO1xuXG4gICAgcmV0dXJuIENJVFk7XG59KCk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vbWFpbi5qc1xuICoqIG1vZHVsZSBpZCA9IDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgcmVxdWlyZSgnLi9saWIvanF1ZXJ5Lm1pbicpO1xuICAgIHJlcXVpcmUoJy4vbGliL2pxdWVyeS11aS5taW4nKTtcbiAgICByZXF1aXJlKCcuL2xpYi9qcXVlcnkuYmEtYmJxLm1pbicpO1xuICAgIHJlcXVpcmUoJ2J4c2xpZGVyL2Rpc3QvanF1ZXJ5LmJ4c2xpZGVyLmpzJyk7XG5cbiAgICByZXF1aXJlKCcuL2pxdWVyeS5pZGl6ZScpKHdpbmRvdy5qUXVlcnkpO1xuICAgIHJlcXVpcmUoJy4vanF1ZXJ5LmNpdHlkcm9wZG93bicpKHdpbmRvdy5qUXVlcnkpO1xuICAgIHJlcXVpcmUoJy4vanF1ZXJ5LmFjY29yZGlvbi10YWJzJykod2luZG93LmpRdWVyeSk7XG4gICAgcmVxdWlyZSgnLi9qcXVlcnkueW91dHViZXByZXZpZXcnKSh3aW5kb3cualF1ZXJ5KTtcbiAgICByZXF1aXJlKCcuL2pxdWVyeS5tdWx0aXNjcmlwdHMnKSh3aW5kb3cualF1ZXJ5KTtcblxuICAgIHJldHVybiB3aW5kb3cualF1ZXJ5O1xufSgpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9qcXVlcnkvaW5kZXguanNcbiAqKiBtb2R1bGUgaWQgPSAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKiEgalF1ZXJ5IHYxLjguMiBqcXVlcnkuY29tIHwganF1ZXJ5Lm9yZy9saWNlbnNlICovXG4oZnVuY3Rpb24oYSxiKXtmdW5jdGlvbiBHKGEpe3ZhciBiPUZbYV09e307cmV0dXJuIHAuZWFjaChhLnNwbGl0KHMpLGZ1bmN0aW9uKGEsYyl7YltjXT0hMH0pLGJ9ZnVuY3Rpb24gSihhLGMsZCl7aWYoZD09PWImJmEubm9kZVR5cGU9PT0xKXt2YXIgZT1cImRhdGEtXCIrYy5yZXBsYWNlKEksXCItJDFcIikudG9Mb3dlckNhc2UoKTtkPWEuZ2V0QXR0cmlidXRlKGUpO2lmKHR5cGVvZiBkPT1cInN0cmluZ1wiKXt0cnl7ZD1kPT09XCJ0cnVlXCI/ITA6ZD09PVwiZmFsc2VcIj8hMTpkPT09XCJudWxsXCI/bnVsbDorZCtcIlwiPT09ZD8rZDpILnRlc3QoZCk/cC5wYXJzZUpTT04oZCk6ZH1jYXRjaChmKXt9cC5kYXRhKGEsYyxkKX1lbHNlIGQ9Yn1yZXR1cm4gZH1mdW5jdGlvbiBLKGEpe3ZhciBiO2ZvcihiIGluIGEpe2lmKGI9PT1cImRhdGFcIiYmcC5pc0VtcHR5T2JqZWN0KGFbYl0pKWNvbnRpbnVlO2lmKGIhPT1cInRvSlNPTlwiKXJldHVybiExfXJldHVybiEwfWZ1bmN0aW9uIGJhKCl7cmV0dXJuITF9ZnVuY3Rpb24gYmIoKXtyZXR1cm4hMH1mdW5jdGlvbiBiaChhKXtyZXR1cm4hYXx8IWEucGFyZW50Tm9kZXx8YS5wYXJlbnROb2RlLm5vZGVUeXBlPT09MTF9ZnVuY3Rpb24gYmkoYSxiKXtkbyBhPWFbYl07d2hpbGUoYSYmYS5ub2RlVHlwZSE9PTEpO3JldHVybiBhfWZ1bmN0aW9uIGJqKGEsYixjKXtiPWJ8fDA7aWYocC5pc0Z1bmN0aW9uKGIpKXJldHVybiBwLmdyZXAoYSxmdW5jdGlvbihhLGQpe3ZhciBlPSEhYi5jYWxsKGEsZCxhKTtyZXR1cm4gZT09PWN9KTtpZihiLm5vZGVUeXBlKXJldHVybiBwLmdyZXAoYSxmdW5jdGlvbihhLGQpe3JldHVybiBhPT09Yj09PWN9KTtpZih0eXBlb2YgYj09XCJzdHJpbmdcIil7dmFyIGQ9cC5ncmVwKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGEubm9kZVR5cGU9PT0xfSk7aWYoYmUudGVzdChiKSlyZXR1cm4gcC5maWx0ZXIoYixkLCFjKTtiPXAuZmlsdGVyKGIsZCl9cmV0dXJuIHAuZ3JlcChhLGZ1bmN0aW9uKGEsZCl7cmV0dXJuIHAuaW5BcnJheShhLGIpPj0wPT09Y30pfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWJsLnNwbGl0KFwifFwiKSxjPWEuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO2lmKGMuY3JlYXRlRWxlbWVudCl3aGlsZShiLmxlbmd0aCljLmNyZWF0ZUVsZW1lbnQoYi5wb3AoKSk7cmV0dXJuIGN9ZnVuY3Rpb24gYkMoYSxiKXtyZXR1cm4gYS5nZXRFbGVtZW50c0J5VGFnTmFtZShiKVswXXx8YS5hcHBlbmRDaGlsZChhLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudChiKSl9ZnVuY3Rpb24gYkQoYSxiKXtpZihiLm5vZGVUeXBlIT09MXx8IXAuaGFzRGF0YShhKSlyZXR1cm47dmFyIGMsZCxlLGY9cC5fZGF0YShhKSxnPXAuX2RhdGEoYixmKSxoPWYuZXZlbnRzO2lmKGgpe2RlbGV0ZSBnLmhhbmRsZSxnLmV2ZW50cz17fTtmb3IoYyBpbiBoKWZvcihkPTAsZT1oW2NdLmxlbmd0aDtkPGU7ZCsrKXAuZXZlbnQuYWRkKGIsYyxoW2NdW2RdKX1nLmRhdGEmJihnLmRhdGE9cC5leHRlbmQoe30sZy5kYXRhKSl9ZnVuY3Rpb24gYkUoYSxiKXt2YXIgYztpZihiLm5vZGVUeXBlIT09MSlyZXR1cm47Yi5jbGVhckF0dHJpYnV0ZXMmJmIuY2xlYXJBdHRyaWJ1dGVzKCksYi5tZXJnZUF0dHJpYnV0ZXMmJmIubWVyZ2VBdHRyaWJ1dGVzKGEpLGM9Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLGM9PT1cIm9iamVjdFwiPyhiLnBhcmVudE5vZGUmJihiLm91dGVySFRNTD1hLm91dGVySFRNTCkscC5zdXBwb3J0Lmh0bWw1Q2xvbmUmJmEuaW5uZXJIVE1MJiYhcC50cmltKGIuaW5uZXJIVE1MKSYmKGIuaW5uZXJIVE1MPWEuaW5uZXJIVE1MKSk6Yz09PVwiaW5wdXRcIiYmYnYudGVzdChhLnR5cGUpPyhiLmRlZmF1bHRDaGVja2VkPWIuY2hlY2tlZD1hLmNoZWNrZWQsYi52YWx1ZSE9PWEudmFsdWUmJihiLnZhbHVlPWEudmFsdWUpKTpjPT09XCJvcHRpb25cIj9iLnNlbGVjdGVkPWEuZGVmYXVsdFNlbGVjdGVkOmM9PT1cImlucHV0XCJ8fGM9PT1cInRleHRhcmVhXCI/Yi5kZWZhdWx0VmFsdWU9YS5kZWZhdWx0VmFsdWU6Yz09PVwic2NyaXB0XCImJmIudGV4dCE9PWEudGV4dCYmKGIudGV4dD1hLnRleHQpLGIucmVtb3ZlQXR0cmlidXRlKHAuZXhwYW5kbyl9ZnVuY3Rpb24gYkYoYSl7cmV0dXJuIHR5cGVvZiBhLmdldEVsZW1lbnRzQnlUYWdOYW1lIT1cInVuZGVmaW5lZFwiP2EuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpOnR5cGVvZiBhLnF1ZXJ5U2VsZWN0b3JBbGwhPVwidW5kZWZpbmVkXCI/YS5xdWVyeVNlbGVjdG9yQWxsKFwiKlwiKTpbXX1mdW5jdGlvbiBiRyhhKXtidi50ZXN0KGEudHlwZSkmJihhLmRlZmF1bHRDaGVja2VkPWEuY2hlY2tlZCl9ZnVuY3Rpb24gYlkoYSxiKXtpZihiIGluIGEpcmV0dXJuIGI7dmFyIGM9Yi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStiLnNsaWNlKDEpLGQ9YixlPWJXLmxlbmd0aDt3aGlsZShlLS0pe2I9YldbZV0rYztpZihiIGluIGEpcmV0dXJuIGJ9cmV0dXJuIGR9ZnVuY3Rpb24gYlooYSxiKXtyZXR1cm4gYT1ifHxhLHAuY3NzKGEsXCJkaXNwbGF5XCIpPT09XCJub25lXCJ8fCFwLmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKX1mdW5jdGlvbiBiJChhLGIpe3ZhciBjLGQsZT1bXSxmPTAsZz1hLmxlbmd0aDtmb3IoO2Y8ZztmKyspe2M9YVtmXTtpZighYy5zdHlsZSljb250aW51ZTtlW2ZdPXAuX2RhdGEoYyxcIm9sZGRpc3BsYXlcIiksYj8oIWVbZl0mJmMuc3R5bGUuZGlzcGxheT09PVwibm9uZVwiJiYoYy5zdHlsZS5kaXNwbGF5PVwiXCIpLGMuc3R5bGUuZGlzcGxheT09PVwiXCImJmJaKGMpJiYoZVtmXT1wLl9kYXRhKGMsXCJvbGRkaXNwbGF5XCIsY2MoYy5ub2RlTmFtZSkpKSk6KGQ9YkgoYyxcImRpc3BsYXlcIiksIWVbZl0mJmQhPT1cIm5vbmVcIiYmcC5fZGF0YShjLFwib2xkZGlzcGxheVwiLGQpKX1mb3IoZj0wO2Y8ZztmKyspe2M9YVtmXTtpZighYy5zdHlsZSljb250aW51ZTtpZighYnx8Yy5zdHlsZS5kaXNwbGF5PT09XCJub25lXCJ8fGMuc3R5bGUuZGlzcGxheT09PVwiXCIpYy5zdHlsZS5kaXNwbGF5PWI/ZVtmXXx8XCJcIjpcIm5vbmVcIn1yZXR1cm4gYX1mdW5jdGlvbiBiXyhhLGIsYyl7dmFyIGQ9YlAuZXhlYyhiKTtyZXR1cm4gZD9NYXRoLm1heCgwLGRbMV0tKGN8fDApKSsoZFsyXXx8XCJweFwiKTpifWZ1bmN0aW9uIGNhKGEsYixjLGQpe3ZhciBlPWM9PT0oZD9cImJvcmRlclwiOlwiY29udGVudFwiKT80OmI9PT1cIndpZHRoXCI/MTowLGY9MDtmb3IoO2U8NDtlKz0yKWM9PT1cIm1hcmdpblwiJiYoZis9cC5jc3MoYSxjK2JWW2VdLCEwKSksZD8oYz09PVwiY29udGVudFwiJiYoZi09cGFyc2VGbG9hdChiSChhLFwicGFkZGluZ1wiK2JWW2VdKSl8fDApLGMhPT1cIm1hcmdpblwiJiYoZi09cGFyc2VGbG9hdChiSChhLFwiYm9yZGVyXCIrYlZbZV0rXCJXaWR0aFwiKSl8fDApKTooZis9cGFyc2VGbG9hdChiSChhLFwicGFkZGluZ1wiK2JWW2VdKSl8fDAsYyE9PVwicGFkZGluZ1wiJiYoZis9cGFyc2VGbG9hdChiSChhLFwiYm9yZGVyXCIrYlZbZV0rXCJXaWR0aFwiKSl8fDApKTtyZXR1cm4gZn1mdW5jdGlvbiBjYihhLGIsYyl7dmFyIGQ9Yj09PVwid2lkdGhcIj9hLm9mZnNldFdpZHRoOmEub2Zmc2V0SGVpZ2h0LGU9ITAsZj1wLnN1cHBvcnQuYm94U2l6aW5nJiZwLmNzcyhhLFwiYm94U2l6aW5nXCIpPT09XCJib3JkZXItYm94XCI7aWYoZDw9MHx8ZD09bnVsbCl7ZD1iSChhLGIpO2lmKGQ8MHx8ZD09bnVsbClkPWEuc3R5bGVbYl07aWYoYlEudGVzdChkKSlyZXR1cm4gZDtlPWYmJihwLnN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGV8fGQ9PT1hLnN0eWxlW2JdKSxkPXBhcnNlRmxvYXQoZCl8fDB9cmV0dXJuIGQrY2EoYSxiLGN8fChmP1wiYm9yZGVyXCI6XCJjb250ZW50XCIpLGUpK1wicHhcIn1mdW5jdGlvbiBjYyhhKXtpZihiU1thXSlyZXR1cm4gYlNbYV07dmFyIGI9cChcIjxcIithK1wiPlwiKS5hcHBlbmRUbyhlLmJvZHkpLGM9Yi5jc3MoXCJkaXNwbGF5XCIpO2IucmVtb3ZlKCk7aWYoYz09PVwibm9uZVwifHxjPT09XCJcIil7Ykk9ZS5ib2R5LmFwcGVuZENoaWxkKGJJfHxwLmV4dGVuZChlLmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIikse2ZyYW1lQm9yZGVyOjAsd2lkdGg6MCxoZWlnaHQ6MH0pKTtpZighYkp8fCFiSS5jcmVhdGVFbGVtZW50KWJKPShiSS5jb250ZW50V2luZG93fHxiSS5jb250ZW50RG9jdW1lbnQpLmRvY3VtZW50LGJKLndyaXRlKFwiPCFkb2N0eXBlIGh0bWw+PGh0bWw+PGJvZHk+XCIpLGJKLmNsb3NlKCk7Yj1iSi5ib2R5LmFwcGVuZENoaWxkKGJKLmNyZWF0ZUVsZW1lbnQoYSkpLGM9YkgoYixcImRpc3BsYXlcIiksZS5ib2R5LnJlbW92ZUNoaWxkKGJJKX1yZXR1cm4gYlNbYV09YyxjfWZ1bmN0aW9uIGNpKGEsYixjLGQpe3ZhciBlO2lmKHAuaXNBcnJheShiKSlwLmVhY2goYixmdW5jdGlvbihiLGUpe2N8fGNlLnRlc3QoYSk/ZChhLGUpOmNpKGErXCJbXCIrKHR5cGVvZiBlPT1cIm9iamVjdFwiP2I6XCJcIikrXCJdXCIsZSxjLGQpfSk7ZWxzZSBpZighYyYmcC50eXBlKGIpPT09XCJvYmplY3RcIilmb3IoZSBpbiBiKWNpKGErXCJbXCIrZStcIl1cIixiW2VdLGMsZCk7ZWxzZSBkKGEsYil9ZnVuY3Rpb24gY3ooYSl7cmV0dXJuIGZ1bmN0aW9uKGIsYyl7dHlwZW9mIGIhPVwic3RyaW5nXCImJihjPWIsYj1cIipcIik7dmFyIGQsZSxmLGc9Yi50b0xvd2VyQ2FzZSgpLnNwbGl0KHMpLGg9MCxpPWcubGVuZ3RoO2lmKHAuaXNGdW5jdGlvbihjKSlmb3IoO2g8aTtoKyspZD1nW2hdLGY9L15cXCsvLnRlc3QoZCksZiYmKGQ9ZC5zdWJzdHIoMSl8fFwiKlwiKSxlPWFbZF09YVtkXXx8W10sZVtmP1widW5zaGlmdFwiOlwicHVzaFwiXShjKX19ZnVuY3Rpb24gY0EoYSxjLGQsZSxmLGcpe2Y9Znx8Yy5kYXRhVHlwZXNbMF0sZz1nfHx7fSxnW2ZdPSEwO3ZhciBoLGk9YVtmXSxqPTAsaz1pP2kubGVuZ3RoOjAsbD1hPT09Y3Y7Zm9yKDtqPGsmJihsfHwhaCk7aisrKWg9aVtqXShjLGQsZSksdHlwZW9mIGg9PVwic3RyaW5nXCImJighbHx8Z1toXT9oPWI6KGMuZGF0YVR5cGVzLnVuc2hpZnQoaCksaD1jQShhLGMsZCxlLGgsZykpKTtyZXR1cm4obHx8IWgpJiYhZ1tcIipcIl0mJihoPWNBKGEsYyxkLGUsXCIqXCIsZykpLGh9ZnVuY3Rpb24gY0IoYSxjKXt2YXIgZCxlLGY9cC5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnN8fHt9O2ZvcihkIGluIGMpY1tkXSE9PWImJigoZltkXT9hOmV8fChlPXt9KSlbZF09Y1tkXSk7ZSYmcC5leHRlbmQoITAsYSxlKX1mdW5jdGlvbiBjQyhhLGMsZCl7dmFyIGUsZixnLGgsaT1hLmNvbnRlbnRzLGo9YS5kYXRhVHlwZXMsaz1hLnJlc3BvbnNlRmllbGRzO2ZvcihmIGluIGspZiBpbiBkJiYoY1trW2ZdXT1kW2ZdKTt3aGlsZShqWzBdPT09XCIqXCIpai5zaGlmdCgpLGU9PT1iJiYoZT1hLm1pbWVUeXBlfHxjLmdldFJlc3BvbnNlSGVhZGVyKFwiY29udGVudC10eXBlXCIpKTtpZihlKWZvcihmIGluIGkpaWYoaVtmXSYmaVtmXS50ZXN0KGUpKXtqLnVuc2hpZnQoZik7YnJlYWt9aWYoalswXWluIGQpZz1qWzBdO2Vsc2V7Zm9yKGYgaW4gZCl7aWYoIWpbMF18fGEuY29udmVydGVyc1tmK1wiIFwiK2pbMF1dKXtnPWY7YnJlYWt9aHx8KGg9Zil9Zz1nfHxofWlmKGcpcmV0dXJuIGchPT1qWzBdJiZqLnVuc2hpZnQoZyksZFtnXX1mdW5jdGlvbiBjRChhLGIpe3ZhciBjLGQsZSxmLGc9YS5kYXRhVHlwZXMuc2xpY2UoKSxoPWdbMF0saT17fSxqPTA7YS5kYXRhRmlsdGVyJiYoYj1hLmRhdGFGaWx0ZXIoYixhLmRhdGFUeXBlKSk7aWYoZ1sxXSlmb3IoYyBpbiBhLmNvbnZlcnRlcnMpaVtjLnRvTG93ZXJDYXNlKCldPWEuY29udmVydGVyc1tjXTtmb3IoO2U9Z1srK2pdOylpZihlIT09XCIqXCIpe2lmKGghPT1cIipcIiYmaCE9PWUpe2M9aVtoK1wiIFwiK2VdfHxpW1wiKiBcIitlXTtpZighYylmb3IoZCBpbiBpKXtmPWQuc3BsaXQoXCIgXCIpO2lmKGZbMV09PT1lKXtjPWlbaCtcIiBcIitmWzBdXXx8aVtcIiogXCIrZlswXV07aWYoYyl7Yz09PSEwP2M9aVtkXTppW2RdIT09ITAmJihlPWZbMF0sZy5zcGxpY2Uoai0tLDAsZSkpO2JyZWFrfX19aWYoYyE9PSEwKWlmKGMmJmFbXCJ0aHJvd3NcIl0pYj1jKGIpO2Vsc2UgdHJ5e2I9YyhiKX1jYXRjaChrKXtyZXR1cm57c3RhdGU6XCJwYXJzZXJlcnJvclwiLGVycm9yOmM/azpcIk5vIGNvbnZlcnNpb24gZnJvbSBcIitoK1wiIHRvIFwiK2V9fX1oPWV9cmV0dXJue3N0YXRlOlwic3VjY2Vzc1wiLGRhdGE6Yn19ZnVuY3Rpb24gY0woKXt0cnl7cmV0dXJuIG5ldyBhLlhNTEh0dHBSZXF1ZXN0fWNhdGNoKGIpe319ZnVuY3Rpb24gY00oKXt0cnl7cmV0dXJuIG5ldyBhLkFjdGl2ZVhPYmplY3QoXCJNaWNyb3NvZnQuWE1MSFRUUFwiKX1jYXRjaChiKXt9fWZ1bmN0aW9uIGNVKCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtjTj1ifSwwKSxjTj1wLm5vdygpfWZ1bmN0aW9uIGNWKGEsYil7cC5lYWNoKGIsZnVuY3Rpb24oYixjKXt2YXIgZD0oY1RbYl18fFtdKS5jb25jYXQoY1RbXCIqXCJdKSxlPTAsZj1kLmxlbmd0aDtmb3IoO2U8ZjtlKyspaWYoZFtlXS5jYWxsKGEsYixjKSlyZXR1cm59KX1mdW5jdGlvbiBjVyhhLGIsYyl7dmFyIGQsZT0wLGY9MCxnPWNTLmxlbmd0aCxoPXAuRGVmZXJyZWQoKS5hbHdheXMoZnVuY3Rpb24oKXtkZWxldGUgaS5lbGVtfSksaT1mdW5jdGlvbigpe3ZhciBiPWNOfHxjVSgpLGM9TWF0aC5tYXgoMCxqLnN0YXJ0VGltZStqLmR1cmF0aW9uLWIpLGQ9MS0oYy9qLmR1cmF0aW9ufHwwKSxlPTAsZj1qLnR3ZWVucy5sZW5ndGg7Zm9yKDtlPGY7ZSsrKWoudHdlZW5zW2VdLnJ1bihkKTtyZXR1cm4gaC5ub3RpZnlXaXRoKGEsW2osZCxjXSksZDwxJiZmP2M6KGgucmVzb2x2ZVdpdGgoYSxbal0pLCExKX0saj1oLnByb21pc2Uoe2VsZW06YSxwcm9wczpwLmV4dGVuZCh7fSxiKSxvcHRzOnAuZXh0ZW5kKCEwLHtzcGVjaWFsRWFzaW5nOnt9fSxjKSxvcmlnaW5hbFByb3BlcnRpZXM6YixvcmlnaW5hbE9wdGlvbnM6YyxzdGFydFRpbWU6Y058fGNVKCksZHVyYXRpb246Yy5kdXJhdGlvbix0d2VlbnM6W10sY3JlYXRlVHdlZW46ZnVuY3Rpb24oYixjLGQpe3ZhciBlPXAuVHdlZW4oYSxqLm9wdHMsYixjLGoub3B0cy5zcGVjaWFsRWFzaW5nW2JdfHxqLm9wdHMuZWFzaW5nKTtyZXR1cm4gai50d2VlbnMucHVzaChlKSxlfSxzdG9wOmZ1bmN0aW9uKGIpe3ZhciBjPTAsZD1iP2oudHdlZW5zLmxlbmd0aDowO2Zvcig7YzxkO2MrKylqLnR3ZWVuc1tjXS5ydW4oMSk7cmV0dXJuIGI/aC5yZXNvbHZlV2l0aChhLFtqLGJdKTpoLnJlamVjdFdpdGgoYSxbaixiXSksdGhpc319KSxrPWoucHJvcHM7Y1goayxqLm9wdHMuc3BlY2lhbEVhc2luZyk7Zm9yKDtlPGc7ZSsrKXtkPWNTW2VdLmNhbGwoaixhLGssai5vcHRzKTtpZihkKXJldHVybiBkfXJldHVybiBjVihqLGspLHAuaXNGdW5jdGlvbihqLm9wdHMuc3RhcnQpJiZqLm9wdHMuc3RhcnQuY2FsbChhLGopLHAuZngudGltZXIocC5leHRlbmQoaSx7YW5pbTpqLHF1ZXVlOmoub3B0cy5xdWV1ZSxlbGVtOmF9KSksai5wcm9ncmVzcyhqLm9wdHMucHJvZ3Jlc3MpLmRvbmUoai5vcHRzLmRvbmUsai5vcHRzLmNvbXBsZXRlKS5mYWlsKGoub3B0cy5mYWlsKS5hbHdheXMoai5vcHRzLmFsd2F5cyl9ZnVuY3Rpb24gY1goYSxiKXt2YXIgYyxkLGUsZixnO2ZvcihjIGluIGEpe2Q9cC5jYW1lbENhc2UoYyksZT1iW2RdLGY9YVtjXSxwLmlzQXJyYXkoZikmJihlPWZbMV0sZj1hW2NdPWZbMF0pLGMhPT1kJiYoYVtkXT1mLGRlbGV0ZSBhW2NdKSxnPXAuY3NzSG9va3NbZF07aWYoZyYmXCJleHBhbmRcImluIGcpe2Y9Zy5leHBhbmQoZiksZGVsZXRlIGFbZF07Zm9yKGMgaW4gZiljIGluIGF8fChhW2NdPWZbY10sYltjXT1lKX1lbHNlIGJbZF09ZX19ZnVuY3Rpb24gY1koYSxiLGMpe3ZhciBkLGUsZixnLGgsaSxqLGssbD10aGlzLG09YS5zdHlsZSxuPXt9LG89W10scT1hLm5vZGVUeXBlJiZiWihhKTtjLnF1ZXVlfHwoaj1wLl9xdWV1ZUhvb2tzKGEsXCJmeFwiKSxqLnVucXVldWVkPT1udWxsJiYoai51bnF1ZXVlZD0wLGs9ai5lbXB0eS5maXJlLGouZW1wdHkuZmlyZT1mdW5jdGlvbigpe2oudW5xdWV1ZWR8fGsoKX0pLGoudW5xdWV1ZWQrKyxsLmFsd2F5cyhmdW5jdGlvbigpe2wuYWx3YXlzKGZ1bmN0aW9uKCl7ai51bnF1ZXVlZC0tLHAucXVldWUoYSxcImZ4XCIpLmxlbmd0aHx8ai5lbXB0eS5maXJlKCl9KX0pKSxhLm5vZGVUeXBlPT09MSYmKFwiaGVpZ2h0XCJpbiBifHxcIndpZHRoXCJpbiBiKSYmKGMub3ZlcmZsb3c9W20ub3ZlcmZsb3csbS5vdmVyZmxvd1gsbS5vdmVyZmxvd1ldLHAuY3NzKGEsXCJkaXNwbGF5XCIpPT09XCJpbmxpbmVcIiYmcC5jc3MoYSxcImZsb2F0XCIpPT09XCJub25lXCImJighcC5zdXBwb3J0LmlubGluZUJsb2NrTmVlZHNMYXlvdXR8fGNjKGEubm9kZU5hbWUpPT09XCJpbmxpbmVcIj9tLmRpc3BsYXk9XCJpbmxpbmUtYmxvY2tcIjptLnpvb209MSkpLGMub3ZlcmZsb3cmJihtLm92ZXJmbG93PVwiaGlkZGVuXCIscC5zdXBwb3J0LnNocmlua1dyYXBCbG9ja3N8fGwuZG9uZShmdW5jdGlvbigpe20ub3ZlcmZsb3c9Yy5vdmVyZmxvd1swXSxtLm92ZXJmbG93WD1jLm92ZXJmbG93WzFdLG0ub3ZlcmZsb3dZPWMub3ZlcmZsb3dbMl19KSk7Zm9yKGQgaW4gYil7Zj1iW2RdO2lmKGNQLmV4ZWMoZikpe2RlbGV0ZSBiW2RdO2lmKGY9PT0ocT9cImhpZGVcIjpcInNob3dcIikpY29udGludWU7by5wdXNoKGQpfX1nPW8ubGVuZ3RoO2lmKGcpe2g9cC5fZGF0YShhLFwiZnhzaG93XCIpfHxwLl9kYXRhKGEsXCJmeHNob3dcIix7fSkscT9wKGEpLnNob3coKTpsLmRvbmUoZnVuY3Rpb24oKXtwKGEpLmhpZGUoKX0pLGwuZG9uZShmdW5jdGlvbigpe3ZhciBiO3AucmVtb3ZlRGF0YShhLFwiZnhzaG93XCIsITApO2ZvcihiIGluIG4pcC5zdHlsZShhLGIsbltiXSl9KTtmb3IoZD0wO2Q8ZztkKyspZT1vW2RdLGk9bC5jcmVhdGVUd2VlbihlLHE/aFtlXTowKSxuW2VdPWhbZV18fHAuc3R5bGUoYSxlKSxlIGluIGh8fChoW2VdPWkuc3RhcnQscSYmKGkuZW5kPWkuc3RhcnQsaS5zdGFydD1lPT09XCJ3aWR0aFwifHxlPT09XCJoZWlnaHRcIj8xOjApKX19ZnVuY3Rpb24gY1ooYSxiLGMsZCxlKXtyZXR1cm4gbmV3IGNaLnByb3RvdHlwZS5pbml0KGEsYixjLGQsZSl9ZnVuY3Rpb24gYyQoYSxiKXt2YXIgYyxkPXtoZWlnaHQ6YX0sZT0wO2I9Yj8xOjA7Zm9yKDtlPDQ7ZSs9Mi1iKWM9YlZbZV0sZFtcIm1hcmdpblwiK2NdPWRbXCJwYWRkaW5nXCIrY109YTtyZXR1cm4gYiYmKGQub3BhY2l0eT1kLndpZHRoPWEpLGR9ZnVuY3Rpb24gZGEoYSl7cmV0dXJuIHAuaXNXaW5kb3coYSk/YTphLm5vZGVUeXBlPT09OT9hLmRlZmF1bHRWaWV3fHxhLnBhcmVudFdpbmRvdzohMX12YXIgYyxkLGU9YS5kb2N1bWVudCxmPWEubG9jYXRpb24sZz1hLm5hdmlnYXRvcixoPWEualF1ZXJ5LGk9YS4kLGo9QXJyYXkucHJvdG90eXBlLnB1c2gsaz1BcnJheS5wcm90b3R5cGUuc2xpY2UsbD1BcnJheS5wcm90b3R5cGUuaW5kZXhPZixtPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG89U3RyaW5nLnByb3RvdHlwZS50cmltLHA9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IHAuZm4uaW5pdChhLGIsYyl9LHE9L1tcXC0rXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVtcXC0rXT9cXGQrfCkvLnNvdXJjZSxyPS9cXFMvLHM9L1xccysvLHQ9L15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nLHU9L14oPzpbXiM8XSooPFtcXHdcXFddKz4pW14+XSokfCMoW1xcd1xcLV0qKSQpLyx2PS9ePChcXHcrKVxccypcXC8/Pig/OjxcXC9cXDE+fCkkLyx3PS9eW1xcXSw6e31cXHNdKiQvLHg9Lyg/Ol58OnwsKSg/OlxccypcXFspKy9nLHk9L1xcXFwoPzpbXCJcXFxcXFwvYmZucnRdfHVbXFxkYS1mQS1GXXs0fSkvZyx6PS9cIlteXCJcXFxcXFxyXFxuXSpcInx0cnVlfGZhbHNlfG51bGx8LT8oPzpcXGRcXGQqXFwufClcXGQrKD86W2VFXVtcXC0rXT9cXGQrfCkvZyxBPS9eLW1zLS8sQj0vLShbXFxkYS16XSkvZ2ksQz1mdW5jdGlvbihhLGIpe3JldHVybihiK1wiXCIpLnRvVXBwZXJDYXNlKCl9LEQ9ZnVuY3Rpb24oKXtlLmFkZEV2ZW50TGlzdGVuZXI/KGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixELCExKSxwLnJlYWR5KCkpOmUucmVhZHlTdGF0ZT09PVwiY29tcGxldGVcIiYmKGUuZGV0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIixEKSxwLnJlYWR5KCkpfSxFPXt9O3AuZm49cC5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOnAsaW5pdDpmdW5jdGlvbihhLGMsZCl7dmFyIGYsZyxoLGk7aWYoIWEpcmV0dXJuIHRoaXM7aWYoYS5ub2RlVHlwZSlyZXR1cm4gdGhpcy5jb250ZXh0PXRoaXNbMF09YSx0aGlzLmxlbmd0aD0xLHRoaXM7aWYodHlwZW9mIGE9PVwic3RyaW5nXCIpe2EuY2hhckF0KDApPT09XCI8XCImJmEuY2hhckF0KGEubGVuZ3RoLTEpPT09XCI+XCImJmEubGVuZ3RoPj0zP2Y9W251bGwsYSxudWxsXTpmPXUuZXhlYyhhKTtpZihmJiYoZlsxXXx8IWMpKXtpZihmWzFdKXJldHVybiBjPWMgaW5zdGFuY2VvZiBwP2NbMF06YyxpPWMmJmMubm9kZVR5cGU/Yy5vd25lckRvY3VtZW50fHxjOmUsYT1wLnBhcnNlSFRNTChmWzFdLGksITApLHYudGVzdChmWzFdKSYmcC5pc1BsYWluT2JqZWN0KGMpJiZ0aGlzLmF0dHIuY2FsbChhLGMsITApLHAubWVyZ2UodGhpcyxhKTtnPWUuZ2V0RWxlbWVudEJ5SWQoZlsyXSk7aWYoZyYmZy5wYXJlbnROb2RlKXtpZihnLmlkIT09ZlsyXSlyZXR1cm4gZC5maW5kKGEpO3RoaXMubGVuZ3RoPTEsdGhpc1swXT1nfXJldHVybiB0aGlzLmNvbnRleHQ9ZSx0aGlzLnNlbGVjdG9yPWEsdGhpc31yZXR1cm4hY3x8Yy5qcXVlcnk/KGN8fGQpLmZpbmQoYSk6dGhpcy5jb25zdHJ1Y3RvcihjKS5maW5kKGEpfXJldHVybiBwLmlzRnVuY3Rpb24oYSk/ZC5yZWFkeShhKTooYS5zZWxlY3RvciE9PWImJih0aGlzLnNlbGVjdG9yPWEuc2VsZWN0b3IsdGhpcy5jb250ZXh0PWEuY29udGV4dCkscC5tYWtlQXJyYXkoYSx0aGlzKSl9LHNlbGVjdG9yOlwiXCIsanF1ZXJ5OlwiMS44LjJcIixsZW5ndGg6MCxzaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RofSx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIGsuY2FsbCh0aGlzKX0sZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhPT1udWxsP3RoaXMudG9BcnJheSgpOmE8MD90aGlzW3RoaXMubGVuZ3RoK2FdOnRoaXNbYV19LHB1c2hTdGFjazpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9cC5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksYSk7cmV0dXJuIGQucHJldk9iamVjdD10aGlzLGQuY29udGV4dD10aGlzLmNvbnRleHQsYj09PVwiZmluZFwiP2Quc2VsZWN0b3I9dGhpcy5zZWxlY3RvcisodGhpcy5zZWxlY3Rvcj9cIiBcIjpcIlwiKStjOmImJihkLnNlbGVjdG9yPXRoaXMuc2VsZWN0b3IrXCIuXCIrYitcIihcIitjK1wiKVwiKSxkfSxlYWNoOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHAuZWFjaCh0aGlzLGEsYil9LHJlYWR5OmZ1bmN0aW9uKGEpe3JldHVybiBwLnJlYWR5LnByb21pc2UoKS5kb25lKGEpLHRoaXN9LGVxOmZ1bmN0aW9uKGEpe3JldHVybiBhPSthLGE9PT0tMT90aGlzLnNsaWNlKGEpOnRoaXMuc2xpY2UoYSxhKzEpfSxmaXJzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKDApfSxsYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpfSxzbGljZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnB1c2hTdGFjayhrLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxcInNsaWNlXCIsay5jYWxsKGFyZ3VtZW50cykuam9pbihcIixcIikpfSxtYXA6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHAubWFwKHRoaXMsZnVuY3Rpb24oYixjKXtyZXR1cm4gYS5jYWxsKGIsYyxiKX0pKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcihudWxsKX0scHVzaDpqLHNvcnQ6W10uc29ydCxzcGxpY2U6W10uc3BsaWNlfSxwLmZuLmluaXQucHJvdG90eXBlPXAuZm4scC5leHRlbmQ9cC5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgYSxjLGQsZSxmLGcsaD1hcmd1bWVudHNbMF18fHt9LGk9MSxqPWFyZ3VtZW50cy5sZW5ndGgsaz0hMTt0eXBlb2YgaD09XCJib29sZWFuXCImJihrPWgsaD1hcmd1bWVudHNbMV18fHt9LGk9MiksdHlwZW9mIGghPVwib2JqZWN0XCImJiFwLmlzRnVuY3Rpb24oaCkmJihoPXt9KSxqPT09aSYmKGg9dGhpcywtLWkpO2Zvcig7aTxqO2krKylpZigoYT1hcmd1bWVudHNbaV0pIT1udWxsKWZvcihjIGluIGEpe2Q9aFtjXSxlPWFbY107aWYoaD09PWUpY29udGludWU7ayYmZSYmKHAuaXNQbGFpbk9iamVjdChlKXx8KGY9cC5pc0FycmF5KGUpKSk/KGY/KGY9ITEsZz1kJiZwLmlzQXJyYXkoZCk/ZDpbXSk6Zz1kJiZwLmlzUGxhaW5PYmplY3QoZCk/ZDp7fSxoW2NdPXAuZXh0ZW5kKGssZyxlKSk6ZSE9PWImJihoW2NdPWUpfXJldHVybiBofSxwLmV4dGVuZCh7bm9Db25mbGljdDpmdW5jdGlvbihiKXtyZXR1cm4gYS4kPT09cCYmKGEuJD1pKSxiJiZhLmpRdWVyeT09PXAmJihhLmpRdWVyeT1oKSxwfSxpc1JlYWR5OiExLHJlYWR5V2FpdDoxLGhvbGRSZWFkeTpmdW5jdGlvbihhKXthP3AucmVhZHlXYWl0Kys6cC5yZWFkeSghMCl9LHJlYWR5OmZ1bmN0aW9uKGEpe2lmKGE9PT0hMD8tLXAucmVhZHlXYWl0OnAuaXNSZWFkeSlyZXR1cm47aWYoIWUuYm9keSlyZXR1cm4gc2V0VGltZW91dChwLnJlYWR5LDEpO3AuaXNSZWFkeT0hMDtpZihhIT09ITAmJi0tcC5yZWFkeVdhaXQ+MClyZXR1cm47ZC5yZXNvbHZlV2l0aChlLFtwXSkscC5mbi50cmlnZ2VyJiZwKGUpLnRyaWdnZXIoXCJyZWFkeVwiKS5vZmYoXCJyZWFkeVwiKX0saXNGdW5jdGlvbjpmdW5jdGlvbihhKXtyZXR1cm4gcC50eXBlKGEpPT09XCJmdW5jdGlvblwifSxpc0FycmF5OkFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGEpe3JldHVybiBwLnR5cGUoYSk9PT1cImFycmF5XCJ9LGlzV2luZG93OmZ1bmN0aW9uKGEpe3JldHVybiBhIT1udWxsJiZhPT1hLndpbmRvd30saXNOdW1lcmljOmZ1bmN0aW9uKGEpe3JldHVybiFpc05hTihwYXJzZUZsb2F0KGEpKSYmaXNGaW5pdGUoYSl9LHR5cGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PW51bGw/U3RyaW5nKGEpOkVbbS5jYWxsKGEpXXx8XCJvYmplY3RcIn0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihhKXtpZighYXx8cC50eXBlKGEpIT09XCJvYmplY3RcInx8YS5ub2RlVHlwZXx8cC5pc1dpbmRvdyhhKSlyZXR1cm4hMTt0cnl7aWYoYS5jb25zdHJ1Y3RvciYmIW4uY2FsbChhLFwiY29uc3RydWN0b3JcIikmJiFuLmNhbGwoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsXCJpc1Byb3RvdHlwZU9mXCIpKXJldHVybiExfWNhdGNoKGMpe3JldHVybiExfXZhciBkO2ZvcihkIGluIGEpO3JldHVybiBkPT09Ynx8bi5jYWxsKGEsZCl9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24oYSl7dmFyIGI7Zm9yKGIgaW4gYSlyZXR1cm4hMTtyZXR1cm4hMH0sZXJyb3I6ZnVuY3Rpb24oYSl7dGhyb3cgbmV3IEVycm9yKGEpfSxwYXJzZUhUTUw6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO3JldHVybiFhfHx0eXBlb2YgYSE9XCJzdHJpbmdcIj9udWxsOih0eXBlb2YgYj09XCJib29sZWFuXCImJihjPWIsYj0wKSxiPWJ8fGUsKGQ9di5leGVjKGEpKT9bYi5jcmVhdGVFbGVtZW50KGRbMV0pXTooZD1wLmJ1aWxkRnJhZ21lbnQoW2FdLGIsYz9udWxsOltdKSxwLm1lcmdlKFtdLChkLmNhY2hlYWJsZT9wLmNsb25lKGQuZnJhZ21lbnQpOmQuZnJhZ21lbnQpLmNoaWxkTm9kZXMpKSl9LHBhcnNlSlNPTjpmdW5jdGlvbihiKXtpZighYnx8dHlwZW9mIGIhPVwic3RyaW5nXCIpcmV0dXJuIG51bGw7Yj1wLnRyaW0oYik7aWYoYS5KU09OJiZhLkpTT04ucGFyc2UpcmV0dXJuIGEuSlNPTi5wYXJzZShiKTtpZih3LnRlc3QoYi5yZXBsYWNlKHksXCJAXCIpLnJlcGxhY2UoeixcIl1cIikucmVwbGFjZSh4LFwiXCIpKSlyZXR1cm4obmV3IEZ1bmN0aW9uKFwicmV0dXJuIFwiK2IpKSgpO3AuZXJyb3IoXCJJbnZhbGlkIEpTT046IFwiK2IpfSxwYXJzZVhNTDpmdW5jdGlvbihjKXt2YXIgZCxlO2lmKCFjfHx0eXBlb2YgYyE9XCJzdHJpbmdcIilyZXR1cm4gbnVsbDt0cnl7YS5ET01QYXJzZXI/KGU9bmV3IERPTVBhcnNlcixkPWUucGFyc2VGcm9tU3RyaW5nKGMsXCJ0ZXh0L3htbFwiKSk6KGQ9bmV3IEFjdGl2ZVhPYmplY3QoXCJNaWNyb3NvZnQuWE1MRE9NXCIpLGQuYXN5bmM9XCJmYWxzZVwiLGQubG9hZFhNTChjKSl9Y2F0Y2goZil7ZD1ifXJldHVybighZHx8IWQuZG9jdW1lbnRFbGVtZW50fHxkLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwicGFyc2VyZXJyb3JcIikubGVuZ3RoKSYmcC5lcnJvcihcIkludmFsaWQgWE1MOiBcIitjKSxkfSxub29wOmZ1bmN0aW9uKCl7fSxnbG9iYWxFdmFsOmZ1bmN0aW9uKGIpe2ImJnIudGVzdChiKSYmKGEuZXhlY1NjcmlwdHx8ZnVuY3Rpb24oYil7YS5ldmFsLmNhbGwoYSxiKX0pKGIpfSxjYW1lbENhc2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVwbGFjZShBLFwibXMtXCIpLnJlcGxhY2UoQixDKX0sbm9kZU5hbWU6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09Yi50b0xvd2VyQ2FzZSgpfSxlYWNoOmZ1bmN0aW9uKGEsYyxkKXt2YXIgZSxmPTAsZz1hLmxlbmd0aCxoPWc9PT1ifHxwLmlzRnVuY3Rpb24oYSk7aWYoZCl7aWYoaCl7Zm9yKGUgaW4gYSlpZihjLmFwcGx5KGFbZV0sZCk9PT0hMSlicmVha31lbHNlIGZvcig7ZjxnOylpZihjLmFwcGx5KGFbZisrXSxkKT09PSExKWJyZWFrfWVsc2UgaWYoaCl7Zm9yKGUgaW4gYSlpZihjLmNhbGwoYVtlXSxlLGFbZV0pPT09ITEpYnJlYWt9ZWxzZSBmb3IoO2Y8ZzspaWYoYy5jYWxsKGFbZl0sZixhW2YrK10pPT09ITEpYnJlYWs7cmV0dXJuIGF9LHRyaW06byYmIW8uY2FsbChcIu+7v8KgXCIpP2Z1bmN0aW9uKGEpe3JldHVybiBhPT1udWxsP1wiXCI6by5jYWxsKGEpfTpmdW5jdGlvbihhKXtyZXR1cm4gYT09bnVsbD9cIlwiOihhK1wiXCIpLnJlcGxhY2UodCxcIlwiKX0sbWFrZUFycmF5OmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1ifHxbXTtyZXR1cm4gYSE9bnVsbCYmKGM9cC50eXBlKGEpLGEubGVuZ3RoPT1udWxsfHxjPT09XCJzdHJpbmdcInx8Yz09PVwiZnVuY3Rpb25cInx8Yz09PVwicmVnZXhwXCJ8fHAuaXNXaW5kb3coYSk/ai5jYWxsKGQsYSk6cC5tZXJnZShkLGEpKSxkfSxpbkFycmF5OmZ1bmN0aW9uKGEsYixjKXt2YXIgZDtpZihiKXtpZihsKXJldHVybiBsLmNhbGwoYixhLGMpO2Q9Yi5sZW5ndGgsYz1jP2M8MD9NYXRoLm1heCgwLGQrYyk6YzowO2Zvcig7YzxkO2MrKylpZihjIGluIGImJmJbY109PT1hKXJldHVybiBjfXJldHVybi0xfSxtZXJnZTpmdW5jdGlvbihhLGMpe3ZhciBkPWMubGVuZ3RoLGU9YS5sZW5ndGgsZj0wO2lmKHR5cGVvZiBkPT1cIm51bWJlclwiKWZvcig7ZjxkO2YrKylhW2UrK109Y1tmXTtlbHNlIHdoaWxlKGNbZl0hPT1iKWFbZSsrXT1jW2YrK107cmV0dXJuIGEubGVuZ3RoPWUsYX0sZ3JlcDpmdW5jdGlvbihhLGIsYyl7dmFyIGQsZT1bXSxmPTAsZz1hLmxlbmd0aDtjPSEhYztmb3IoO2Y8ZztmKyspZD0hIWIoYVtmXSxmKSxjIT09ZCYmZS5wdXNoKGFbZl0pO3JldHVybiBlfSxtYXA6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlLGYsZz1bXSxoPTAsaT1hLmxlbmd0aCxqPWEgaW5zdGFuY2VvZiBwfHxpIT09YiYmdHlwZW9mIGk9PVwibnVtYmVyXCImJihpPjAmJmFbMF0mJmFbaS0xXXx8aT09PTB8fHAuaXNBcnJheShhKSk7aWYoailmb3IoO2g8aTtoKyspZT1jKGFbaF0saCxkKSxlIT1udWxsJiYoZ1tnLmxlbmd0aF09ZSk7ZWxzZSBmb3IoZiBpbiBhKWU9YyhhW2ZdLGYsZCksZSE9bnVsbCYmKGdbZy5sZW5ndGhdPWUpO3JldHVybiBnLmNvbmNhdC5hcHBseShbXSxnKX0sZ3VpZDoxLHByb3h5OmZ1bmN0aW9uKGEsYyl7dmFyIGQsZSxmO3JldHVybiB0eXBlb2YgYz09XCJzdHJpbmdcIiYmKGQ9YVtjXSxjPWEsYT1kKSxwLmlzRnVuY3Rpb24oYSk/KGU9ay5jYWxsKGFyZ3VtZW50cywyKSxmPWZ1bmN0aW9uKCl7cmV0dXJuIGEuYXBwbHkoYyxlLmNvbmNhdChrLmNhbGwoYXJndW1lbnRzKSkpfSxmLmd1aWQ9YS5ndWlkPWEuZ3VpZHx8cC5ndWlkKyssZik6Yn0sYWNjZXNzOmZ1bmN0aW9uKGEsYyxkLGUsZixnLGgpe3ZhciBpLGo9ZD09bnVsbCxrPTAsbD1hLmxlbmd0aDtpZihkJiZ0eXBlb2YgZD09XCJvYmplY3RcIil7Zm9yKGsgaW4gZClwLmFjY2VzcyhhLGMsayxkW2tdLDEsZyxlKTtmPTF9ZWxzZSBpZihlIT09Yil7aT1oPT09YiYmcC5pc0Z1bmN0aW9uKGUpLGomJihpPyhpPWMsYz1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIGkuY2FsbChwKGEpLGMpfSk6KGMuY2FsbChhLGUpLGM9bnVsbCkpO2lmKGMpZm9yKDtrPGw7aysrKWMoYVtrXSxkLGk/ZS5jYWxsKGFba10sayxjKGFba10sZCkpOmUsaCk7Zj0xfXJldHVybiBmP2E6aj9jLmNhbGwoYSk6bD9jKGFbMF0sZCk6Z30sbm93OmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9fSkscC5yZWFkeS5wcm9taXNlPWZ1bmN0aW9uKGIpe2lmKCFkKXtkPXAuRGVmZXJyZWQoKTtpZihlLnJlYWR5U3RhdGU9PT1cImNvbXBsZXRlXCIpc2V0VGltZW91dChwLnJlYWR5LDEpO2Vsc2UgaWYoZS5hZGRFdmVudExpc3RlbmVyKWUuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixELCExKSxhLmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIscC5yZWFkeSwhMSk7ZWxzZXtlLmF0dGFjaEV2ZW50KFwib25yZWFkeXN0YXRlY2hhbmdlXCIsRCksYS5hdHRhY2hFdmVudChcIm9ubG9hZFwiLHAucmVhZHkpO3ZhciBjPSExO3RyeXtjPWEuZnJhbWVFbGVtZW50PT1udWxsJiZlLmRvY3VtZW50RWxlbWVudH1jYXRjaChmKXt9YyYmYy5kb1Njcm9sbCYmZnVuY3Rpb24gZygpe2lmKCFwLmlzUmVhZHkpe3RyeXtjLmRvU2Nyb2xsKFwibGVmdFwiKX1jYXRjaChhKXtyZXR1cm4gc2V0VGltZW91dChnLDUwKX1wLnJlYWR5KCl9fSgpfX1yZXR1cm4gZC5wcm9taXNlKGIpfSxwLmVhY2goXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0XCIuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKGEsYil7RVtcIltvYmplY3QgXCIrYitcIl1cIl09Yi50b0xvd2VyQ2FzZSgpfSksYz1wKGUpO3ZhciBGPXt9O3AuQ2FsbGJhY2tzPWZ1bmN0aW9uKGEpe2E9dHlwZW9mIGE9PVwic3RyaW5nXCI/RlthXXx8RyhhKTpwLmV4dGVuZCh7fSxhKTt2YXIgYyxkLGUsZixnLGgsaT1bXSxqPSFhLm9uY2UmJltdLGs9ZnVuY3Rpb24oYil7Yz1hLm1lbW9yeSYmYixkPSEwLGg9Znx8MCxmPTAsZz1pLmxlbmd0aCxlPSEwO2Zvcig7aSYmaDxnO2grKylpZihpW2hdLmFwcGx5KGJbMF0sYlsxXSk9PT0hMSYmYS5zdG9wT25GYWxzZSl7Yz0hMTticmVha31lPSExLGkmJihqP2oubGVuZ3RoJiZrKGouc2hpZnQoKSk6Yz9pPVtdOmwuZGlzYWJsZSgpKX0sbD17YWRkOmZ1bmN0aW9uKCl7aWYoaSl7dmFyIGI9aS5sZW5ndGg7KGZ1bmN0aW9uIGQoYil7cC5lYWNoKGIsZnVuY3Rpb24oYixjKXt2YXIgZT1wLnR5cGUoYyk7ZT09PVwiZnVuY3Rpb25cIiYmKCFhLnVuaXF1ZXx8IWwuaGFzKGMpKT9pLnB1c2goYyk6YyYmYy5sZW5ndGgmJmUhPT1cInN0cmluZ1wiJiZkKGMpfSl9KShhcmd1bWVudHMpLGU/Zz1pLmxlbmd0aDpjJiYoZj1iLGsoYykpfXJldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gaSYmcC5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbihhLGIpe3ZhciBjO3doaWxlKChjPXAuaW5BcnJheShiLGksYykpPi0xKWkuc3BsaWNlKGMsMSksZSYmKGM8PWcmJmctLSxjPD1oJiZoLS0pfSksdGhpc30saGFzOmZ1bmN0aW9uKGEpe3JldHVybiBwLmluQXJyYXkoYSxpKT4tMX0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gaT1bXSx0aGlzfSxkaXNhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIGk9aj1jPWIsdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4haX0sbG9jazpmdW5jdGlvbigpe3JldHVybiBqPWIsY3x8bC5kaXNhYmxlKCksdGhpc30sbG9ja2VkOmZ1bmN0aW9uKCl7cmV0dXJuIWp9LGZpcmVXaXRoOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGI9Ynx8W10sYj1bYSxiLnNsaWNlP2Iuc2xpY2UoKTpiXSxpJiYoIWR8fGopJiYoZT9qLnB1c2goYik6ayhiKSksdGhpc30sZmlyZTpmdW5jdGlvbigpe3JldHVybiBsLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKSx0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhZH19O3JldHVybiBsfSxwLmV4dGVuZCh7RGVmZXJyZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9W1tcInJlc29sdmVcIixcImRvbmVcIixwLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLFwicmVzb2x2ZWRcIl0sW1wicmVqZWN0XCIsXCJmYWlsXCIscC5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSxcInJlamVjdGVkXCJdLFtcIm5vdGlmeVwiLFwicHJvZ3Jlc3NcIixwLkNhbGxiYWNrcyhcIm1lbW9yeVwiKV1dLGM9XCJwZW5kaW5nXCIsZD17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gY30sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIGUuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSx0aGVuOmZ1bmN0aW9uKCl7dmFyIGE9YXJndW1lbnRzO3JldHVybiBwLkRlZmVycmVkKGZ1bmN0aW9uKGMpe3AuZWFjaChiLGZ1bmN0aW9uKGIsZCl7dmFyIGY9ZFswXSxnPWFbYl07ZVtkWzFdXShwLmlzRnVuY3Rpb24oZyk/ZnVuY3Rpb24oKXt2YXIgYT1nLmFwcGx5KHRoaXMsYXJndW1lbnRzKTthJiZwLmlzRnVuY3Rpb24oYS5wcm9taXNlKT9hLnByb21pc2UoKS5kb25lKGMucmVzb2x2ZSkuZmFpbChjLnJlamVjdCkucHJvZ3Jlc3MoYy5ub3RpZnkpOmNbZitcIldpdGhcIl0odGhpcz09PWU/Yzp0aGlzLFthXSl9OmNbZl0pfSksYT1udWxsfSkucHJvbWlzZSgpfSxwcm9taXNlOmZ1bmN0aW9uKGEpe3JldHVybiBhIT1udWxsP3AuZXh0ZW5kKGEsZCk6ZH19LGU9e307cmV0dXJuIGQucGlwZT1kLnRoZW4scC5lYWNoKGIsZnVuY3Rpb24oYSxmKXt2YXIgZz1mWzJdLGg9ZlszXTtkW2ZbMV1dPWcuYWRkLGgmJmcuYWRkKGZ1bmN0aW9uKCl7Yz1ofSxiW2FeMV1bMl0uZGlzYWJsZSxiWzJdWzJdLmxvY2spLGVbZlswXV09Zy5maXJlLGVbZlswXStcIldpdGhcIl09Zy5maXJlV2l0aH0pLGQucHJvbWlzZShlKSxhJiZhLmNhbGwoZSxlKSxlfSx3aGVuOmZ1bmN0aW9uKGEpe3ZhciBiPTAsYz1rLmNhbGwoYXJndW1lbnRzKSxkPWMubGVuZ3RoLGU9ZCE9PTF8fGEmJnAuaXNGdW5jdGlvbihhLnByb21pc2UpP2Q6MCxmPWU9PT0xP2E6cC5EZWZlcnJlZCgpLGc9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBmdW5jdGlvbihkKXtiW2FdPXRoaXMsY1thXT1hcmd1bWVudHMubGVuZ3RoPjE/ay5jYWxsKGFyZ3VtZW50cyk6ZCxjPT09aD9mLm5vdGlmeVdpdGgoYixjKTotLWV8fGYucmVzb2x2ZVdpdGgoYixjKX19LGgsaSxqO2lmKGQ+MSl7aD1uZXcgQXJyYXkoZCksaT1uZXcgQXJyYXkoZCksaj1uZXcgQXJyYXkoZCk7Zm9yKDtiPGQ7YisrKWNbYl0mJnAuaXNGdW5jdGlvbihjW2JdLnByb21pc2UpP2NbYl0ucHJvbWlzZSgpLmRvbmUoZyhiLGosYykpLmZhaWwoZi5yZWplY3QpLnByb2dyZXNzKGcoYixpLGgpKTotLWV9cmV0dXJuIGV8fGYucmVzb2x2ZVdpdGgoaixjKSxmLnByb21pc2UoKX19KSxwLnN1cHBvcnQ9ZnVuY3Rpb24oKXt2YXIgYixjLGQsZixnLGgsaSxqLGssbCxtLG49ZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO24uc2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIsXCJ0XCIpLG4uaW5uZXJIVE1MPVwiICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+XCIsYz1uLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSxkPW4uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJhXCIpWzBdLGQuc3R5bGUuY3NzVGV4dD1cInRvcDoxcHg7ZmxvYXQ6bGVmdDtvcGFjaXR5Oi41XCI7aWYoIWN8fCFjLmxlbmd0aClyZXR1cm57fTtmPWUuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKSxnPWYuYXBwZW5kQ2hpbGQoZS5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpKSxoPW4uZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKVswXSxiPXtsZWFkaW5nV2hpdGVzcGFjZTpuLmZpcnN0Q2hpbGQubm9kZVR5cGU9PT0zLHRib2R5OiFuLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidGJvZHlcIikubGVuZ3RoLGh0bWxTZXJpYWxpemU6ISFuLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibGlua1wiKS5sZW5ndGgsc3R5bGU6L3RvcC8udGVzdChkLmdldEF0dHJpYnV0ZShcInN0eWxlXCIpKSxocmVmTm9ybWFsaXplZDpkLmdldEF0dHJpYnV0ZShcImhyZWZcIik9PT1cIi9hXCIsb3BhY2l0eTovXjAuNS8udGVzdChkLnN0eWxlLm9wYWNpdHkpLGNzc0Zsb2F0OiEhZC5zdHlsZS5jc3NGbG9hdCxjaGVja09uOmgudmFsdWU9PT1cIm9uXCIsb3B0U2VsZWN0ZWQ6Zy5zZWxlY3RlZCxnZXRTZXRBdHRyaWJ1dGU6bi5jbGFzc05hbWUhPT1cInRcIixlbmN0eXBlOiEhZS5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKS5lbmN0eXBlLGh0bWw1Q2xvbmU6ZS5jcmVhdGVFbGVtZW50KFwibmF2XCIpLmNsb25lTm9kZSghMCkub3V0ZXJIVE1MIT09XCI8Om5hdj48LzpuYXY+XCIsYm94TW9kZWw6ZS5jb21wYXRNb2RlPT09XCJDU1MxQ29tcGF0XCIsc3VibWl0QnViYmxlczohMCxjaGFuZ2VCdWJibGVzOiEwLGZvY3VzaW5CdWJibGVzOiExLGRlbGV0ZUV4cGFuZG86ITAsbm9DbG9uZUV2ZW50OiEwLGlubGluZUJsb2NrTmVlZHNMYXlvdXQ6ITEsc2hyaW5rV3JhcEJsb2NrczohMSxyZWxpYWJsZU1hcmdpblJpZ2h0OiEwLGJveFNpemluZ1JlbGlhYmxlOiEwLHBpeGVsUG9zaXRpb246ITF9LGguY2hlY2tlZD0hMCxiLm5vQ2xvbmVDaGVja2VkPWguY2xvbmVOb2RlKCEwKS5jaGVja2VkLGYuZGlzYWJsZWQ9ITAsYi5vcHREaXNhYmxlZD0hZy5kaXNhYmxlZDt0cnl7ZGVsZXRlIG4udGVzdH1jYXRjaChvKXtiLmRlbGV0ZUV4cGFuZG89ITF9IW4uYWRkRXZlbnRMaXN0ZW5lciYmbi5hdHRhY2hFdmVudCYmbi5maXJlRXZlbnQmJihuLmF0dGFjaEV2ZW50KFwib25jbGlja1wiLG09ZnVuY3Rpb24oKXtiLm5vQ2xvbmVFdmVudD0hMX0pLG4uY2xvbmVOb2RlKCEwKS5maXJlRXZlbnQoXCJvbmNsaWNrXCIpLG4uZGV0YWNoRXZlbnQoXCJvbmNsaWNrXCIsbSkpLGg9ZS5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksaC52YWx1ZT1cInRcIixoLnNldEF0dHJpYnV0ZShcInR5cGVcIixcInJhZGlvXCIpLGIucmFkaW9WYWx1ZT1oLnZhbHVlPT09XCJ0XCIsaC5zZXRBdHRyaWJ1dGUoXCJjaGVja2VkXCIsXCJjaGVja2VkXCIpLGguc2V0QXR0cmlidXRlKFwibmFtZVwiLFwidFwiKSxuLmFwcGVuZENoaWxkKGgpLGk9ZS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksaS5hcHBlbmRDaGlsZChuLmxhc3RDaGlsZCksYi5jaGVja0Nsb25lPWkuY2xvbmVOb2RlKCEwKS5jbG9uZU5vZGUoITApLmxhc3RDaGlsZC5jaGVja2VkLGIuYXBwZW5kQ2hlY2tlZD1oLmNoZWNrZWQsaS5yZW1vdmVDaGlsZChoKSxpLmFwcGVuZENoaWxkKG4pO2lmKG4uYXR0YWNoRXZlbnQpZm9yKGsgaW57c3VibWl0OiEwLGNoYW5nZTohMCxmb2N1c2luOiEwfSlqPVwib25cIitrLGw9aiBpbiBuLGx8fChuLnNldEF0dHJpYnV0ZShqLFwicmV0dXJuO1wiKSxsPXR5cGVvZiBuW2pdPT1cImZ1bmN0aW9uXCIpLGJbaytcIkJ1YmJsZXNcIl09bDtyZXR1cm4gcChmdW5jdGlvbigpe3ZhciBjLGQsZixnLGg9XCJwYWRkaW5nOjA7bWFyZ2luOjA7Ym9yZGVyOjA7ZGlzcGxheTpibG9jaztvdmVyZmxvdzpoaWRkZW47XCIsaT1lLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYm9keVwiKVswXTtpZighaSlyZXR1cm47Yz1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYy5zdHlsZS5jc3NUZXh0PVwidmlzaWJpbGl0eTpoaWRkZW47Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDtwb3NpdGlvbjpzdGF0aWM7dG9wOjA7bWFyZ2luLXRvcDoxcHhcIixpLmluc2VydEJlZm9yZShjLGkuZmlyc3RDaGlsZCksZD1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYy5hcHBlbmRDaGlsZChkKSxkLmlubmVySFRNTD1cIjx0YWJsZT48dHI+PHRkPjwvdGQ+PHRkPnQ8L3RkPjwvdHI+PC90YWJsZT5cIixmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJ0ZFwiKSxmWzBdLnN0eWxlLmNzc1RleHQ9XCJwYWRkaW5nOjA7bWFyZ2luOjA7Ym9yZGVyOjA7ZGlzcGxheTpub25lXCIsbD1mWzBdLm9mZnNldEhlaWdodD09PTAsZlswXS5zdHlsZS5kaXNwbGF5PVwiXCIsZlsxXS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiLGIucmVsaWFibGVIaWRkZW5PZmZzZXRzPWwmJmZbMF0ub2Zmc2V0SGVpZ2h0PT09MCxkLmlubmVySFRNTD1cIlwiLGQuc3R5bGUuY3NzVGV4dD1cImJveC1zaXppbmc6Ym9yZGVyLWJveDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjFweDtib3JkZXI6MXB4O2Rpc3BsYXk6YmxvY2s7d2lkdGg6NHB4O21hcmdpbi10b3A6MSU7cG9zaXRpb246YWJzb2x1dGU7dG9wOjElO1wiLGIuYm94U2l6aW5nPWQub2Zmc2V0V2lkdGg9PT00LGIuZG9lc05vdEluY2x1ZGVNYXJnaW5JbkJvZHlPZmZzZXQ9aS5vZmZzZXRUb3AhPT0xLGEuZ2V0Q29tcHV0ZWRTdHlsZSYmKGIucGl4ZWxQb3NpdGlvbj0oYS5nZXRDb21wdXRlZFN0eWxlKGQsbnVsbCl8fHt9KS50b3AhPT1cIjElXCIsYi5ib3hTaXppbmdSZWxpYWJsZT0oYS5nZXRDb21wdXRlZFN0eWxlKGQsbnVsbCl8fHt3aWR0aDpcIjRweFwifSkud2lkdGg9PT1cIjRweFwiLGc9ZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGcuc3R5bGUuY3NzVGV4dD1kLnN0eWxlLmNzc1RleHQ9aCxnLnN0eWxlLm1hcmdpblJpZ2h0PWcuc3R5bGUud2lkdGg9XCIwXCIsZC5zdHlsZS53aWR0aD1cIjFweFwiLGQuYXBwZW5kQ2hpbGQoZyksYi5yZWxpYWJsZU1hcmdpblJpZ2h0PSFwYXJzZUZsb2F0KChhLmdldENvbXB1dGVkU3R5bGUoZyxudWxsKXx8e30pLm1hcmdpblJpZ2h0KSksdHlwZW9mIGQuc3R5bGUuem9vbSE9XCJ1bmRlZmluZWRcIiYmKGQuaW5uZXJIVE1MPVwiXCIsZC5zdHlsZS5jc3NUZXh0PWgrXCJ3aWR0aDoxcHg7cGFkZGluZzoxcHg7ZGlzcGxheTppbmxpbmU7em9vbToxXCIsYi5pbmxpbmVCbG9ja05lZWRzTGF5b3V0PWQub2Zmc2V0V2lkdGg9PT0zLGQuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIsZC5zdHlsZS5vdmVyZmxvdz1cInZpc2libGVcIixkLmlubmVySFRNTD1cIjxkaXY+PC9kaXY+XCIsZC5maXJzdENoaWxkLnN0eWxlLndpZHRoPVwiNXB4XCIsYi5zaHJpbmtXcmFwQmxvY2tzPWQub2Zmc2V0V2lkdGghPT0zLGMuc3R5bGUuem9vbT0xKSxpLnJlbW92ZUNoaWxkKGMpLGM9ZD1mPWc9bnVsbH0pLGkucmVtb3ZlQ2hpbGQobiksYz1kPWY9Zz1oPWk9bj1udWxsLGJ9KCk7dmFyIEg9Lyg/Olxce1tcXHNcXFNdKlxcfXxcXFtbXFxzXFxTXSpcXF0pJC8sST0vKFtBLVpdKS9nO3AuZXh0ZW5kKHtjYWNoZTp7fSxkZWxldGVkSWRzOltdLHV1aWQ6MCxleHBhbmRvOlwialF1ZXJ5XCIrKHAuZm4uanF1ZXJ5K01hdGgucmFuZG9tKCkpLnJlcGxhY2UoL1xcRC9nLFwiXCIpLG5vRGF0YTp7ZW1iZWQ6ITAsb2JqZWN0OlwiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwXCIsYXBwbGV0OiEwfSxoYXNEYXRhOmZ1bmN0aW9uKGEpe3JldHVybiBhPWEubm9kZVR5cGU/cC5jYWNoZVthW3AuZXhwYW5kb11dOmFbcC5leHBhbmRvXSwhIWEmJiFLKGEpfSxkYXRhOmZ1bmN0aW9uKGEsYyxkLGUpe2lmKCFwLmFjY2VwdERhdGEoYSkpcmV0dXJuO3ZhciBmLGcsaD1wLmV4cGFuZG8saT10eXBlb2YgYz09XCJzdHJpbmdcIixqPWEubm9kZVR5cGUsaz1qP3AuY2FjaGU6YSxsPWo/YVtoXTphW2hdJiZoO2lmKCghbHx8IWtbbF18fCFlJiYha1tsXS5kYXRhKSYmaSYmZD09PWIpcmV0dXJuO2x8fChqP2FbaF09bD1wLmRlbGV0ZWRJZHMucG9wKCl8fHAuZ3VpZCsrOmw9aCksa1tsXXx8KGtbbF09e30sanx8KGtbbF0udG9KU09OPXAubm9vcCkpO2lmKHR5cGVvZiBjPT1cIm9iamVjdFwifHx0eXBlb2YgYz09XCJmdW5jdGlvblwiKWU/a1tsXT1wLmV4dGVuZChrW2xdLGMpOmtbbF0uZGF0YT1wLmV4dGVuZChrW2xdLmRhdGEsYyk7cmV0dXJuIGY9a1tsXSxlfHwoZi5kYXRhfHwoZi5kYXRhPXt9KSxmPWYuZGF0YSksZCE9PWImJihmW3AuY2FtZWxDYXNlKGMpXT1kKSxpPyhnPWZbY10sZz09bnVsbCYmKGc9ZltwLmNhbWVsQ2FzZShjKV0pKTpnPWYsZ30scmVtb3ZlRGF0YTpmdW5jdGlvbihhLGIsYyl7aWYoIXAuYWNjZXB0RGF0YShhKSlyZXR1cm47dmFyIGQsZSxmLGc9YS5ub2RlVHlwZSxoPWc/cC5jYWNoZTphLGk9Zz9hW3AuZXhwYW5kb106cC5leHBhbmRvO2lmKCFoW2ldKXJldHVybjtpZihiKXtkPWM/aFtpXTpoW2ldLmRhdGE7aWYoZCl7cC5pc0FycmF5KGIpfHwoYiBpbiBkP2I9W2JdOihiPXAuY2FtZWxDYXNlKGIpLGIgaW4gZD9iPVtiXTpiPWIuc3BsaXQoXCIgXCIpKSk7Zm9yKGU9MCxmPWIubGVuZ3RoO2U8ZjtlKyspZGVsZXRlIGRbYltlXV07aWYoIShjP0s6cC5pc0VtcHR5T2JqZWN0KShkKSlyZXR1cm59fWlmKCFjKXtkZWxldGUgaFtpXS5kYXRhO2lmKCFLKGhbaV0pKXJldHVybn1nP3AuY2xlYW5EYXRhKFthXSwhMCk6cC5zdXBwb3J0LmRlbGV0ZUV4cGFuZG98fGghPWgud2luZG93P2RlbGV0ZSBoW2ldOmhbaV09bnVsbH0sX2RhdGE6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBwLmRhdGEoYSxiLGMsITApfSxhY2NlcHREYXRhOmZ1bmN0aW9uKGEpe3ZhciBiPWEubm9kZU5hbWUmJnAubm9EYXRhW2Eubm9kZU5hbWUudG9Mb3dlckNhc2UoKV07cmV0dXJuIWJ8fGIhPT0hMCYmYS5nZXRBdHRyaWJ1dGUoXCJjbGFzc2lkXCIpPT09Yn19KSxwLmZuLmV4dGVuZCh7ZGF0YTpmdW5jdGlvbihhLGMpe3ZhciBkLGUsZixnLGgsaT10aGlzWzBdLGo9MCxrPW51bGw7aWYoYT09PWIpe2lmKHRoaXMubGVuZ3RoKXtrPXAuZGF0YShpKTtpZihpLm5vZGVUeXBlPT09MSYmIXAuX2RhdGEoaSxcInBhcnNlZEF0dHJzXCIpKXtmPWkuYXR0cmlidXRlcztmb3IoaD1mLmxlbmd0aDtqPGg7aisrKWc9ZltqXS5uYW1lLGcuaW5kZXhPZihcImRhdGEtXCIpfHwoZz1wLmNhbWVsQ2FzZShnLnN1YnN0cmluZyg1KSksSihpLGcsa1tnXSkpO3AuX2RhdGEoaSxcInBhcnNlZEF0dHJzXCIsITApfX1yZXR1cm4ga31yZXR1cm4gdHlwZW9mIGE9PVwib2JqZWN0XCI/dGhpcy5lYWNoKGZ1bmN0aW9uKCl7cC5kYXRhKHRoaXMsYSl9KTooZD1hLnNwbGl0KFwiLlwiLDIpLGRbMV09ZFsxXT9cIi5cIitkWzFdOlwiXCIsZT1kWzFdK1wiIVwiLHAuYWNjZXNzKHRoaXMsZnVuY3Rpb24oYyl7aWYoYz09PWIpcmV0dXJuIGs9dGhpcy50cmlnZ2VySGFuZGxlcihcImdldERhdGFcIitlLFtkWzBdXSksaz09PWImJmkmJihrPXAuZGF0YShpLGEpLGs9SihpLGEsaykpLGs9PT1iJiZkWzFdP3RoaXMuZGF0YShkWzBdKTprO2RbMV09Yyx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1wKHRoaXMpO2IudHJpZ2dlckhhbmRsZXIoXCJzZXREYXRhXCIrZSxkKSxwLmRhdGEodGhpcyxhLGMpLGIudHJpZ2dlckhhbmRsZXIoXCJjaGFuZ2VEYXRhXCIrZSxkKX0pfSxudWxsLGMsYXJndW1lbnRzLmxlbmd0aD4xLG51bGwsITEpKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7cC5yZW1vdmVEYXRhKHRoaXMsYSl9KX19KSxwLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2lmKGEpcmV0dXJuIGI9KGJ8fFwiZnhcIikrXCJxdWV1ZVwiLGQ9cC5fZGF0YShhLGIpLGMmJighZHx8cC5pc0FycmF5KGMpP2Q9cC5fZGF0YShhLGIscC5tYWtlQXJyYXkoYykpOmQucHVzaChjKSksZHx8W119LGRlcXVldWU6ZnVuY3Rpb24oYSxiKXtiPWJ8fFwiZnhcIjt2YXIgYz1wLnF1ZXVlKGEsYiksZD1jLmxlbmd0aCxlPWMuc2hpZnQoKSxmPXAuX3F1ZXVlSG9va3MoYSxiKSxnPWZ1bmN0aW9uKCl7cC5kZXF1ZXVlKGEsYil9O2U9PT1cImlucHJvZ3Jlc3NcIiYmKGU9Yy5zaGlmdCgpLGQtLSksZSYmKGI9PT1cImZ4XCImJmMudW5zaGlmdChcImlucHJvZ3Jlc3NcIiksZGVsZXRlIGYuc3RvcCxlLmNhbGwoYSxnLGYpKSwhZCYmZiYmZi5lbXB0eS5maXJlKCl9LF9xdWV1ZUhvb2tzOmZ1bmN0aW9uKGEsYil7dmFyIGM9YitcInF1ZXVlSG9va3NcIjtyZXR1cm4gcC5fZGF0YShhLGMpfHxwLl9kYXRhKGEsYyx7ZW1wdHk6cC5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKS5hZGQoZnVuY3Rpb24oKXtwLnJlbW92ZURhdGEoYSxiK1wicXVldWVcIiwhMCkscC5yZW1vdmVEYXRhKGEsYywhMCl9KX0pfX0pLHAuZm4uZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihhLGMpe3ZhciBkPTI7cmV0dXJuIHR5cGVvZiBhIT1cInN0cmluZ1wiJiYoYz1hLGE9XCJmeFwiLGQtLSksYXJndW1lbnRzLmxlbmd0aDxkP3AucXVldWUodGhpc1swXSxhKTpjPT09Yj90aGlzOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPXAucXVldWUodGhpcyxhLGMpO3AuX3F1ZXVlSG9va3ModGhpcyxhKSxhPT09XCJmeFwiJiZiWzBdIT09XCJpbnByb2dyZXNzXCImJnAuZGVxdWV1ZSh0aGlzLGEpfSl9LGRlcXVldWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3AuZGVxdWV1ZSh0aGlzLGEpfSl9LGRlbGF5OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9cC5meD9wLmZ4LnNwZWVkc1thXXx8YTphLGI9Ynx8XCJmeFwiLHRoaXMucXVldWUoYixmdW5jdGlvbihiLGMpe3ZhciBkPXNldFRpbWVvdXQoYixhKTtjLnN0b3A9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZCl9fSl9LGNsZWFyUXVldWU6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucXVldWUoYXx8XCJmeFwiLFtdKX0scHJvbWlzZTpmdW5jdGlvbihhLGMpe3ZhciBkLGU9MSxmPXAuRGVmZXJyZWQoKSxnPXRoaXMsaD10aGlzLmxlbmd0aCxpPWZ1bmN0aW9uKCl7LS1lfHxmLnJlc29sdmVXaXRoKGcsW2ddKX07dHlwZW9mIGEhPVwic3RyaW5nXCImJihjPWEsYT1iKSxhPWF8fFwiZnhcIjt3aGlsZShoLS0pZD1wLl9kYXRhKGdbaF0sYStcInF1ZXVlSG9va3NcIiksZCYmZC5lbXB0eSYmKGUrKyxkLmVtcHR5LmFkZChpKSk7cmV0dXJuIGkoKSxmLnByb21pc2UoYyl9fSk7dmFyIEwsTSxOLE89L1tcXHRcXHJcXG5dL2csUD0vXFxyL2csUT0vXig/OmJ1dHRvbnxpbnB1dCkkL2ksUj0vXig/OmJ1dHRvbnxpbnB1dHxvYmplY3R8c2VsZWN0fHRleHRhcmVhKSQvaSxTPS9eYSg/OnJlYXwpJC9pLFQ9L14oPzphdXRvZm9jdXN8YXV0b3BsYXl8YXN5bmN8Y2hlY2tlZHxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZHxzZWxlY3RlZCkkL2ksVT1wLnN1cHBvcnQuZ2V0U2V0QXR0cmlidXRlO3AuZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHAuYWNjZXNzKHRoaXMscC5hdHRyLGEsYixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtwLnJlbW92ZUF0dHIodGhpcyxhKX0pfSxwcm9wOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHAuYWNjZXNzKHRoaXMscC5wcm9wLGEsYixhcmd1bWVudHMubGVuZ3RoPjEpfSxyZW1vdmVQcm9wOmZ1bmN0aW9uKGEpe3JldHVybiBhPXAucHJvcEZpeFthXXx8YSx0aGlzLmVhY2goZnVuY3Rpb24oKXt0cnl7dGhpc1thXT1iLGRlbGV0ZSB0aGlzW2FdfWNhdGNoKGMpe319KX0sYWRkQ2xhc3M6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGg7aWYocC5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cCh0aGlzKS5hZGRDbGFzcyhhLmNhbGwodGhpcyxiLHRoaXMuY2xhc3NOYW1lKSl9KTtpZihhJiZ0eXBlb2YgYT09XCJzdHJpbmdcIil7Yj1hLnNwbGl0KHMpO2ZvcihjPTAsZD10aGlzLmxlbmd0aDtjPGQ7YysrKXtlPXRoaXNbY107aWYoZS5ub2RlVHlwZT09PTEpaWYoIWUuY2xhc3NOYW1lJiZiLmxlbmd0aD09PTEpZS5jbGFzc05hbWU9YTtlbHNle2Y9XCIgXCIrZS5jbGFzc05hbWUrXCIgXCI7Zm9yKGc9MCxoPWIubGVuZ3RoO2c8aDtnKyspZi5pbmRleE9mKFwiIFwiK2JbZ10rXCIgXCIpPDAmJihmKz1iW2ddK1wiIFwiKTtlLmNsYXNzTmFtZT1wLnRyaW0oZil9fX1yZXR1cm4gdGhpc30scmVtb3ZlQ2xhc3M6ZnVuY3Rpb24oYSl7dmFyIGMsZCxlLGYsZyxoLGk7aWYocC5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cCh0aGlzKS5yZW1vdmVDbGFzcyhhLmNhbGwodGhpcyxiLHRoaXMuY2xhc3NOYW1lKSl9KTtpZihhJiZ0eXBlb2YgYT09XCJzdHJpbmdcInx8YT09PWIpe2M9KGF8fFwiXCIpLnNwbGl0KHMpO2ZvcihoPTAsaT10aGlzLmxlbmd0aDtoPGk7aCsrKXtlPXRoaXNbaF07aWYoZS5ub2RlVHlwZT09PTEmJmUuY2xhc3NOYW1lKXtkPShcIiBcIitlLmNsYXNzTmFtZStcIiBcIikucmVwbGFjZShPLFwiIFwiKTtmb3IoZj0wLGc9Yy5sZW5ndGg7ZjxnO2YrKyl3aGlsZShkLmluZGV4T2YoXCIgXCIrY1tmXStcIiBcIik+PTApZD1kLnJlcGxhY2UoXCIgXCIrY1tmXStcIiBcIixcIiBcIik7ZS5jbGFzc05hbWU9YT9wLnRyaW0oZCk6XCJcIn19fXJldHVybiB0aGlzfSx0b2dnbGVDbGFzczpmdW5jdGlvbihhLGIpe3ZhciBjPXR5cGVvZiBhLGQ9dHlwZW9mIGI9PVwiYm9vbGVhblwiO3JldHVybiBwLmlzRnVuY3Rpb24oYSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3AodGhpcykudG9nZ2xlQ2xhc3MoYS5jYWxsKHRoaXMsYyx0aGlzLmNsYXNzTmFtZSxiKSxiKX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe2lmKGM9PT1cInN0cmluZ1wiKXt2YXIgZSxmPTAsZz1wKHRoaXMpLGg9YixpPWEuc3BsaXQocyk7d2hpbGUoZT1pW2YrK10paD1kP2g6IWcuaGFzQ2xhc3MoZSksZ1toP1wiYWRkQ2xhc3NcIjpcInJlbW92ZUNsYXNzXCJdKGUpfWVsc2UgaWYoYz09PVwidW5kZWZpbmVkXCJ8fGM9PT1cImJvb2xlYW5cIil0aGlzLmNsYXNzTmFtZSYmcC5fZGF0YSh0aGlzLFwiX19jbGFzc05hbWVfX1wiLHRoaXMuY2xhc3NOYW1lKSx0aGlzLmNsYXNzTmFtZT10aGlzLmNsYXNzTmFtZXx8YT09PSExP1wiXCI6cC5fZGF0YSh0aGlzLFwiX19jbGFzc05hbWVfX1wiKXx8XCJcIn0pfSxoYXNDbGFzczpmdW5jdGlvbihhKXt2YXIgYj1cIiBcIithK1wiIFwiLGM9MCxkPXRoaXMubGVuZ3RoO2Zvcig7YzxkO2MrKylpZih0aGlzW2NdLm5vZGVUeXBlPT09MSYmKFwiIFwiK3RoaXNbY10uY2xhc3NOYW1lK1wiIFwiKS5yZXBsYWNlKE8sXCIgXCIpLmluZGV4T2YoYik+PTApcmV0dXJuITA7cmV0dXJuITF9LHZhbDpmdW5jdGlvbihhKXt2YXIgYyxkLGUsZj10aGlzWzBdO2lmKCFhcmd1bWVudHMubGVuZ3RoKXtpZihmKXJldHVybiBjPXAudmFsSG9va3NbZi50eXBlXXx8cC52YWxIb29rc1tmLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldLGMmJlwiZ2V0XCJpbiBjJiYoZD1jLmdldChmLFwidmFsdWVcIikpIT09Yj9kOihkPWYudmFsdWUsdHlwZW9mIGQ9PVwic3RyaW5nXCI/ZC5yZXBsYWNlKFAsXCJcIik6ZD09bnVsbD9cIlwiOmQpO3JldHVybn1yZXR1cm4gZT1wLmlzRnVuY3Rpb24oYSksdGhpcy5lYWNoKGZ1bmN0aW9uKGQpe3ZhciBmLGc9cCh0aGlzKTtpZih0aGlzLm5vZGVUeXBlIT09MSlyZXR1cm47ZT9mPWEuY2FsbCh0aGlzLGQsZy52YWwoKSk6Zj1hLGY9PW51bGw/Zj1cIlwiOnR5cGVvZiBmPT1cIm51bWJlclwiP2YrPVwiXCI6cC5pc0FycmF5KGYpJiYoZj1wLm1hcChmLGZ1bmN0aW9uKGEpe3JldHVybiBhPT1udWxsP1wiXCI6YStcIlwifSkpLGM9cC52YWxIb29rc1t0aGlzLnR5cGVdfHxwLnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV07aWYoIWN8fCEoXCJzZXRcImluIGMpfHxjLnNldCh0aGlzLGYsXCJ2YWx1ZVwiKT09PWIpdGhpcy52YWx1ZT1mfSl9fSkscC5leHRlbmQoe3ZhbEhvb2tzOntvcHRpb246e2dldDpmdW5jdGlvbihhKXt2YXIgYj1hLmF0dHJpYnV0ZXMudmFsdWU7cmV0dXJuIWJ8fGIuc3BlY2lmaWVkP2EudmFsdWU6YS50ZXh0fX0sc2VsZWN0OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZj1hLnNlbGVjdGVkSW5kZXgsZz1bXSxoPWEub3B0aW9ucyxpPWEudHlwZT09PVwic2VsZWN0LW9uZVwiO2lmKGY8MClyZXR1cm4gbnVsbDtjPWk/ZjowLGQ9aT9mKzE6aC5sZW5ndGg7Zm9yKDtjPGQ7YysrKXtlPWhbY107aWYoZS5zZWxlY3RlZCYmKHAuc3VwcG9ydC5vcHREaXNhYmxlZD8hZS5kaXNhYmxlZDplLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpPT09bnVsbCkmJighZS5wYXJlbnROb2RlLmRpc2FibGVkfHwhcC5ub2RlTmFtZShlLnBhcmVudE5vZGUsXCJvcHRncm91cFwiKSkpe2I9cChlKS52YWwoKTtpZihpKXJldHVybiBiO2cucHVzaChiKX19cmV0dXJuIGkmJiFnLmxlbmd0aCYmaC5sZW5ndGg/cChoW2ZdKS52YWwoKTpnfSxzZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYz1wLm1ha2VBcnJheShiKTtyZXR1cm4gcChhKS5maW5kKFwib3B0aW9uXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLnNlbGVjdGVkPXAuaW5BcnJheShwKHRoaXMpLnZhbCgpLGMpPj0wfSksYy5sZW5ndGh8fChhLnNlbGVjdGVkSW5kZXg9LTEpLGN9fX0sYXR0ckZuOnt9LGF0dHI6ZnVuY3Rpb24oYSxjLGQsZSl7dmFyIGYsZyxoLGk9YS5ub2RlVHlwZTtpZighYXx8aT09PTN8fGk9PT04fHxpPT09MilyZXR1cm47aWYoZSYmcC5pc0Z1bmN0aW9uKHAuZm5bY10pKXJldHVybiBwKGEpW2NdKGQpO2lmKHR5cGVvZiBhLmdldEF0dHJpYnV0ZT09XCJ1bmRlZmluZWRcIilyZXR1cm4gcC5wcm9wKGEsYyxkKTtoPWkhPT0xfHwhcC5pc1hNTERvYyhhKSxoJiYoYz1jLnRvTG93ZXJDYXNlKCksZz1wLmF0dHJIb29rc1tjXXx8KFQudGVzdChjKT9NOkwpKTtpZihkIT09Yil7aWYoZD09PW51bGwpe3AucmVtb3ZlQXR0cihhLGMpO3JldHVybn1yZXR1cm4gZyYmXCJzZXRcImluIGcmJmgmJihmPWcuc2V0KGEsZCxjKSkhPT1iP2Y6KGEuc2V0QXR0cmlidXRlKGMsZCtcIlwiKSxkKX1yZXR1cm4gZyYmXCJnZXRcImluIGcmJmgmJihmPWcuZ2V0KGEsYykpIT09bnVsbD9mOihmPWEuZ2V0QXR0cmlidXRlKGMpLGY9PT1udWxsP2I6Zil9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnPTA7aWYoYiYmYS5ub2RlVHlwZT09PTEpe2Q9Yi5zcGxpdChzKTtmb3IoO2c8ZC5sZW5ndGg7ZysrKWU9ZFtnXSxlJiYoYz1wLnByb3BGaXhbZV18fGUsZj1ULnRlc3QoZSksZnx8cC5hdHRyKGEsZSxcIlwiKSxhLnJlbW92ZUF0dHJpYnV0ZShVP2U6YyksZiYmYyBpbiBhJiYoYVtjXT0hMSkpfX0sYXR0ckhvb2tzOnt0eXBlOntzZXQ6ZnVuY3Rpb24oYSxiKXtpZihRLnRlc3QoYS5ub2RlTmFtZSkmJmEucGFyZW50Tm9kZSlwLmVycm9yKFwidHlwZSBwcm9wZXJ0eSBjYW4ndCBiZSBjaGFuZ2VkXCIpO2Vsc2UgaWYoIXAuc3VwcG9ydC5yYWRpb1ZhbHVlJiZiPT09XCJyYWRpb1wiJiZwLm5vZGVOYW1lKGEsXCJpbnB1dFwiKSl7dmFyIGM9YS52YWx1ZTtyZXR1cm4gYS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsYiksYyYmKGEudmFsdWU9YyksYn19fSx2YWx1ZTp7Z2V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIEwmJnAubm9kZU5hbWUoYSxcImJ1dHRvblwiKT9MLmdldChhLGIpOmIgaW4gYT9hLnZhbHVlOm51bGx9LHNldDpmdW5jdGlvbihhLGIsYyl7aWYoTCYmcC5ub2RlTmFtZShhLFwiYnV0dG9uXCIpKXJldHVybiBMLnNldChhLGIsYyk7YS52YWx1ZT1ifX19LHByb3BGaXg6e3RhYmluZGV4OlwidGFiSW5kZXhcIixyZWFkb25seTpcInJlYWRPbmx5XCIsXCJmb3JcIjpcImh0bWxGb3JcIixcImNsYXNzXCI6XCJjbGFzc05hbWVcIixtYXhsZW5ndGg6XCJtYXhMZW5ndGhcIixjZWxsc3BhY2luZzpcImNlbGxTcGFjaW5nXCIsY2VsbHBhZGRpbmc6XCJjZWxsUGFkZGluZ1wiLHJvd3NwYW46XCJyb3dTcGFuXCIsY29sc3BhbjpcImNvbFNwYW5cIix1c2VtYXA6XCJ1c2VNYXBcIixmcmFtZWJvcmRlcjpcImZyYW1lQm9yZGVyXCIsY29udGVudGVkaXRhYmxlOlwiY29udGVudEVkaXRhYmxlXCJ9LHByb3A6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlLGYsZyxoPWEubm9kZVR5cGU7aWYoIWF8fGg9PT0zfHxoPT09OHx8aD09PTIpcmV0dXJuO3JldHVybiBnPWghPT0xfHwhcC5pc1hNTERvYyhhKSxnJiYoYz1wLnByb3BGaXhbY118fGMsZj1wLnByb3BIb29rc1tjXSksZCE9PWI/ZiYmXCJzZXRcImluIGYmJihlPWYuc2V0KGEsZCxjKSkhPT1iP2U6YVtjXT1kOmYmJlwiZ2V0XCJpbiBmJiYoZT1mLmdldChhLGMpKSE9PW51bGw/ZTphW2NdfSxwcm9wSG9va3M6e3RhYkluZGV4OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGM9YS5nZXRBdHRyaWJ1dGVOb2RlKFwidGFiaW5kZXhcIik7cmV0dXJuIGMmJmMuc3BlY2lmaWVkP3BhcnNlSW50KGMudmFsdWUsMTApOlIudGVzdChhLm5vZGVOYW1lKXx8Uy50ZXN0KGEubm9kZU5hbWUpJiZhLmhyZWY/MDpifX19fSksTT17Z2V0OmZ1bmN0aW9uKGEsYyl7dmFyIGQsZT1wLnByb3AoYSxjKTtyZXR1cm4gZT09PSEwfHx0eXBlb2YgZSE9XCJib29sZWFuXCImJihkPWEuZ2V0QXR0cmlidXRlTm9kZShjKSkmJmQubm9kZVZhbHVlIT09ITE/Yy50b0xvd2VyQ2FzZSgpOmJ9LHNldDpmdW5jdGlvbihhLGIsYyl7dmFyIGQ7cmV0dXJuIGI9PT0hMT9wLnJlbW92ZUF0dHIoYSxjKTooZD1wLnByb3BGaXhbY118fGMsZCBpbiBhJiYoYVtkXT0hMCksYS5zZXRBdHRyaWJ1dGUoYyxjLnRvTG93ZXJDYXNlKCkpKSxjfX0sVXx8KE49e25hbWU6ITAsaWQ6ITAsY29vcmRzOiEwfSxMPXAudmFsSG9va3MuYnV0dG9uPXtnZXQ6ZnVuY3Rpb24oYSxjKXt2YXIgZDtyZXR1cm4gZD1hLmdldEF0dHJpYnV0ZU5vZGUoYyksZCYmKE5bY10/ZC52YWx1ZSE9PVwiXCI6ZC5zcGVjaWZpZWQpP2QudmFsdWU6Yn0sc2V0OmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1hLmdldEF0dHJpYnV0ZU5vZGUoYyk7cmV0dXJuIGR8fChkPWUuY3JlYXRlQXR0cmlidXRlKGMpLGEuc2V0QXR0cmlidXRlTm9kZShkKSksZC52YWx1ZT1iK1wiXCJ9fSxwLmVhY2goW1wid2lkdGhcIixcImhlaWdodFwiXSxmdW5jdGlvbihhLGIpe3AuYXR0ckhvb2tzW2JdPXAuZXh0ZW5kKHAuYXR0ckhvb2tzW2JdLHtzZXQ6ZnVuY3Rpb24oYSxjKXtpZihjPT09XCJcIilyZXR1cm4gYS5zZXRBdHRyaWJ1dGUoYixcImF1dG9cIiksY319KX0pLHAuYXR0ckhvb2tzLmNvbnRlbnRlZGl0YWJsZT17Z2V0OkwuZ2V0LHNldDpmdW5jdGlvbihhLGIsYyl7Yj09PVwiXCImJihiPVwiZmFsc2VcIiksTC5zZXQoYSxiLGMpfX0pLHAuc3VwcG9ydC5ocmVmTm9ybWFsaXplZHx8cC5lYWNoKFtcImhyZWZcIixcInNyY1wiLFwid2lkdGhcIixcImhlaWdodFwiXSxmdW5jdGlvbihhLGMpe3AuYXR0ckhvb2tzW2NdPXAuZXh0ZW5kKHAuYXR0ckhvb2tzW2NdLHtnZXQ6ZnVuY3Rpb24oYSl7dmFyIGQ9YS5nZXRBdHRyaWJ1dGUoYywyKTtyZXR1cm4gZD09PW51bGw/YjpkfX0pfSkscC5zdXBwb3J0LnN0eWxlfHwocC5hdHRySG9va3Muc3R5bGU9e2dldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5zdHlsZS5jc3NUZXh0LnRvTG93ZXJDYXNlKCl8fGJ9LHNldDpmdW5jdGlvbihhLGIpe3JldHVybiBhLnN0eWxlLmNzc1RleHQ9YitcIlwifX0pLHAuc3VwcG9ydC5vcHRTZWxlY3RlZHx8KHAucHJvcEhvb2tzLnNlbGVjdGVkPXAuZXh0ZW5kKHAucHJvcEhvb2tzLnNlbGVjdGVkLHtnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5wYXJlbnROb2RlO3JldHVybiBiJiYoYi5zZWxlY3RlZEluZGV4LGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpLG51bGx9fSkpLHAuc3VwcG9ydC5lbmN0eXBlfHwocC5wcm9wRml4LmVuY3R5cGU9XCJlbmNvZGluZ1wiKSxwLnN1cHBvcnQuY2hlY2tPbnx8cC5lYWNoKFtcInJhZGlvXCIsXCJjaGVja2JveFwiXSxmdW5jdGlvbigpe3AudmFsSG9va3NbdGhpc109e2dldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKT09PW51bGw/XCJvblwiOmEudmFsdWV9fX0pLHAuZWFjaChbXCJyYWRpb1wiLFwiY2hlY2tib3hcIl0sZnVuY3Rpb24oKXtwLnZhbEhvb2tzW3RoaXNdPXAuZXh0ZW5kKHAudmFsSG9va3NbdGhpc10se3NldDpmdW5jdGlvbihhLGIpe2lmKHAuaXNBcnJheShiKSlyZXR1cm4gYS5jaGVja2VkPXAuaW5BcnJheShwKGEpLnZhbCgpLGIpPj0wfX0pfSk7dmFyIFY9L14oPzp0ZXh0YXJlYXxpbnB1dHxzZWxlY3QpJC9pLFc9L14oW15cXC5dKnwpKD86XFwuKC4rKXwpJC8sWD0vKD86XnxcXHMpaG92ZXIoXFwuXFxTK3wpXFxiLyxZPS9ea2V5LyxaPS9eKD86bW91c2V8Y29udGV4dG1lbnUpfGNsaWNrLywkPS9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLyxfPWZ1bmN0aW9uKGEpe3JldHVybiBwLmV2ZW50LnNwZWNpYWwuaG92ZXI/YTphLnJlcGxhY2UoWCxcIm1vdXNlZW50ZXIkMSBtb3VzZWxlYXZlJDFcIil9O3AuZXZlbnQ9e2FkZDpmdW5jdGlvbihhLGMsZCxlLGYpe3ZhciBnLGgsaSxqLGssbCxtLG4sbyxxLHI7aWYoYS5ub2RlVHlwZT09PTN8fGEubm9kZVR5cGU9PT04fHwhY3x8IWR8fCEoZz1wLl9kYXRhKGEpKSlyZXR1cm47ZC5oYW5kbGVyJiYobz1kLGQ9by5oYW5kbGVyLGY9by5zZWxlY3RvciksZC5ndWlkfHwoZC5ndWlkPXAuZ3VpZCsrKSxpPWcuZXZlbnRzLGl8fChnLmV2ZW50cz1pPXt9KSxoPWcuaGFuZGxlLGh8fChnLmhhbmRsZT1oPWZ1bmN0aW9uKGEpe3JldHVybiB0eXBlb2YgcCE9XCJ1bmRlZmluZWRcIiYmKCFhfHxwLmV2ZW50LnRyaWdnZXJlZCE9PWEudHlwZSk/cC5ldmVudC5kaXNwYXRjaC5hcHBseShoLmVsZW0sYXJndW1lbnRzKTpifSxoLmVsZW09YSksYz1wLnRyaW0oXyhjKSkuc3BsaXQoXCIgXCIpO2ZvcihqPTA7ajxjLmxlbmd0aDtqKyspe2s9Vy5leGVjKGNbal0pfHxbXSxsPWtbMV0sbT0oa1syXXx8XCJcIikuc3BsaXQoXCIuXCIpLnNvcnQoKSxyPXAuZXZlbnQuc3BlY2lhbFtsXXx8e30sbD0oZj9yLmRlbGVnYXRlVHlwZTpyLmJpbmRUeXBlKXx8bCxyPXAuZXZlbnQuc3BlY2lhbFtsXXx8e30sbj1wLmV4dGVuZCh7dHlwZTpsLG9yaWdUeXBlOmtbMV0sZGF0YTplLGhhbmRsZXI6ZCxndWlkOmQuZ3VpZCxzZWxlY3RvcjpmLG5lZWRzQ29udGV4dDpmJiZwLmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoZiksbmFtZXNwYWNlOm0uam9pbihcIi5cIil9LG8pLHE9aVtsXTtpZighcSl7cT1pW2xdPVtdLHEuZGVsZWdhdGVDb3VudD0wO2lmKCFyLnNldHVwfHxyLnNldHVwLmNhbGwoYSxlLG0saCk9PT0hMSlhLmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKGwsaCwhMSk6YS5hdHRhY2hFdmVudCYmYS5hdHRhY2hFdmVudChcIm9uXCIrbCxoKX1yLmFkZCYmKHIuYWRkLmNhbGwoYSxuKSxuLmhhbmRsZXIuZ3VpZHx8KG4uaGFuZGxlci5ndWlkPWQuZ3VpZCkpLGY/cS5zcGxpY2UocS5kZWxlZ2F0ZUNvdW50KyssMCxuKTpxLnB1c2gobikscC5ldmVudC5nbG9iYWxbbF09ITB9YT1udWxsfSxnbG9iYWw6e30scmVtb3ZlOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGYsZyxoLGksaixrLGwsbSxuLG8scSxyPXAuaGFzRGF0YShhKSYmcC5fZGF0YShhKTtpZighcnx8IShtPXIuZXZlbnRzKSlyZXR1cm47Yj1wLnRyaW0oXyhifHxcIlwiKSkuc3BsaXQoXCIgXCIpO2ZvcihmPTA7ZjxiLmxlbmd0aDtmKyspe2c9Vy5leGVjKGJbZl0pfHxbXSxoPWk9Z1sxXSxqPWdbMl07aWYoIWgpe2ZvcihoIGluIG0pcC5ldmVudC5yZW1vdmUoYSxoK2JbZl0sYyxkLCEwKTtjb250aW51ZX1uPXAuZXZlbnQuc3BlY2lhbFtoXXx8e30saD0oZD9uLmRlbGVnYXRlVHlwZTpuLmJpbmRUeXBlKXx8aCxvPW1baF18fFtdLGs9by5sZW5ndGgsaj1qP25ldyBSZWdFeHAoXCIoXnxcXFxcLilcIitqLnNwbGl0KFwiLlwiKS5zb3J0KCkuam9pbihcIlxcXFwuKD86LipcXFxcLnwpXCIpK1wiKFxcXFwufCQpXCIpOm51bGw7Zm9yKGw9MDtsPG8ubGVuZ3RoO2wrKylxPW9bbF0sKGV8fGk9PT1xLm9yaWdUeXBlKSYmKCFjfHxjLmd1aWQ9PT1xLmd1aWQpJiYoIWp8fGoudGVzdChxLm5hbWVzcGFjZSkpJiYoIWR8fGQ9PT1xLnNlbGVjdG9yfHxkPT09XCIqKlwiJiZxLnNlbGVjdG9yKSYmKG8uc3BsaWNlKGwtLSwxKSxxLnNlbGVjdG9yJiZvLmRlbGVnYXRlQ291bnQtLSxuLnJlbW92ZSYmbi5yZW1vdmUuY2FsbChhLHEpKTtvLmxlbmd0aD09PTAmJmshPT1vLmxlbmd0aCYmKCghbi50ZWFyZG93bnx8bi50ZWFyZG93bi5jYWxsKGEsaixyLmhhbmRsZSk9PT0hMSkmJnAucmVtb3ZlRXZlbnQoYSxoLHIuaGFuZGxlKSxkZWxldGUgbVtoXSl9cC5pc0VtcHR5T2JqZWN0KG0pJiYoZGVsZXRlIHIuaGFuZGxlLHAucmVtb3ZlRGF0YShhLFwiZXZlbnRzXCIsITApKX0sY3VzdG9tRXZlbnQ6e2dldERhdGE6ITAsc2V0RGF0YTohMCxjaGFuZ2VEYXRhOiEwfSx0cmlnZ2VyOmZ1bmN0aW9uKGMsZCxmLGcpe2lmKCFmfHxmLm5vZGVUeXBlIT09MyYmZi5ub2RlVHlwZSE9PTgpe3ZhciBoLGksaixrLGwsbSxuLG8scSxyLHM9Yy50eXBlfHxjLHQ9W107aWYoJC50ZXN0KHMrcC5ldmVudC50cmlnZ2VyZWQpKXJldHVybjtzLmluZGV4T2YoXCIhXCIpPj0wJiYocz1zLnNsaWNlKDAsLTEpLGk9ITApLHMuaW5kZXhPZihcIi5cIik+PTAmJih0PXMuc3BsaXQoXCIuXCIpLHM9dC5zaGlmdCgpLHQuc29ydCgpKTtpZigoIWZ8fHAuZXZlbnQuY3VzdG9tRXZlbnRbc10pJiYhcC5ldmVudC5nbG9iYWxbc10pcmV0dXJuO2M9dHlwZW9mIGM9PVwib2JqZWN0XCI/Y1twLmV4cGFuZG9dP2M6bmV3IHAuRXZlbnQocyxjKTpuZXcgcC5FdmVudChzKSxjLnR5cGU9cyxjLmlzVHJpZ2dlcj0hMCxjLmV4Y2x1c2l2ZT1pLGMubmFtZXNwYWNlPXQuam9pbihcIi5cIiksYy5uYW1lc3BhY2VfcmU9Yy5uYW1lc3BhY2U/bmV3IFJlZ0V4cChcIihefFxcXFwuKVwiK3Quam9pbihcIlxcXFwuKD86LipcXFxcLnwpXCIpK1wiKFxcXFwufCQpXCIpOm51bGwsbT1zLmluZGV4T2YoXCI6XCIpPDA/XCJvblwiK3M6XCJcIjtpZighZil7aD1wLmNhY2hlO2ZvcihqIGluIGgpaFtqXS5ldmVudHMmJmhbal0uZXZlbnRzW3NdJiZwLmV2ZW50LnRyaWdnZXIoYyxkLGhbal0uaGFuZGxlLmVsZW0sITApO3JldHVybn1jLnJlc3VsdD1iLGMudGFyZ2V0fHwoYy50YXJnZXQ9ZiksZD1kIT1udWxsP3AubWFrZUFycmF5KGQpOltdLGQudW5zaGlmdChjKSxuPXAuZXZlbnQuc3BlY2lhbFtzXXx8e307aWYobi50cmlnZ2VyJiZuLnRyaWdnZXIuYXBwbHkoZixkKT09PSExKXJldHVybjtxPVtbZixuLmJpbmRUeXBlfHxzXV07aWYoIWcmJiFuLm5vQnViYmxlJiYhcC5pc1dpbmRvdyhmKSl7cj1uLmRlbGVnYXRlVHlwZXx8cyxrPSQudGVzdChyK3MpP2Y6Zi5wYXJlbnROb2RlO2ZvcihsPWY7aztrPWsucGFyZW50Tm9kZSlxLnB1c2goW2sscl0pLGw9aztsPT09KGYub3duZXJEb2N1bWVudHx8ZSkmJnEucHVzaChbbC5kZWZhdWx0Vmlld3x8bC5wYXJlbnRXaW5kb3d8fGEscl0pfWZvcihqPTA7ajxxLmxlbmd0aCYmIWMuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtqKyspaz1xW2pdWzBdLGMudHlwZT1xW2pdWzFdLG89KHAuX2RhdGEoayxcImV2ZW50c1wiKXx8e30pW2MudHlwZV0mJnAuX2RhdGEoayxcImhhbmRsZVwiKSxvJiZvLmFwcGx5KGssZCksbz1tJiZrW21dLG8mJnAuYWNjZXB0RGF0YShrKSYmby5hcHBseSYmby5hcHBseShrLGQpPT09ITEmJmMucHJldmVudERlZmF1bHQoKTtyZXR1cm4gYy50eXBlPXMsIWcmJiFjLmlzRGVmYXVsdFByZXZlbnRlZCgpJiYoIW4uX2RlZmF1bHR8fG4uX2RlZmF1bHQuYXBwbHkoZi5vd25lckRvY3VtZW50LGQpPT09ITEpJiYocyE9PVwiY2xpY2tcInx8IXAubm9kZU5hbWUoZixcImFcIikpJiZwLmFjY2VwdERhdGEoZikmJm0mJmZbc10mJihzIT09XCJmb2N1c1wiJiZzIT09XCJibHVyXCJ8fGMudGFyZ2V0Lm9mZnNldFdpZHRoIT09MCkmJiFwLmlzV2luZG93KGYpJiYobD1mW21dLGwmJihmW21dPW51bGwpLHAuZXZlbnQudHJpZ2dlcmVkPXMsZltzXSgpLHAuZXZlbnQudHJpZ2dlcmVkPWIsbCYmKGZbbV09bCkpLGMucmVzdWx0fXJldHVybn0sZGlzcGF0Y2g6ZnVuY3Rpb24oYyl7Yz1wLmV2ZW50LmZpeChjfHxhLmV2ZW50KTt2YXIgZCxlLGYsZyxoLGksaixsLG0sbixvPShwLl9kYXRhKHRoaXMsXCJldmVudHNcIil8fHt9KVtjLnR5cGVdfHxbXSxxPW8uZGVsZWdhdGVDb3VudCxyPWsuY2FsbChhcmd1bWVudHMpLHM9IWMuZXhjbHVzaXZlJiYhYy5uYW1lc3BhY2UsdD1wLmV2ZW50LnNwZWNpYWxbYy50eXBlXXx8e30sdT1bXTtyWzBdPWMsYy5kZWxlZ2F0ZVRhcmdldD10aGlzO2lmKHQucHJlRGlzcGF0Y2gmJnQucHJlRGlzcGF0Y2guY2FsbCh0aGlzLGMpPT09ITEpcmV0dXJuO2lmKHEmJighYy5idXR0b258fGMudHlwZSE9PVwiY2xpY2tcIikpZm9yKGY9Yy50YXJnZXQ7ZiE9dGhpcztmPWYucGFyZW50Tm9kZXx8dGhpcylpZihmLmRpc2FibGVkIT09ITB8fGMudHlwZSE9PVwiY2xpY2tcIil7aD17fSxqPVtdO2ZvcihkPTA7ZDxxO2QrKylsPW9bZF0sbT1sLnNlbGVjdG9yLGhbbV09PT1iJiYoaFttXT1sLm5lZWRzQ29udGV4dD9wKG0sdGhpcykuaW5kZXgoZik+PTA6cC5maW5kKG0sdGhpcyxudWxsLFtmXSkubGVuZ3RoKSxoW21dJiZqLnB1c2gobCk7ai5sZW5ndGgmJnUucHVzaCh7ZWxlbTpmLG1hdGNoZXM6an0pfW8ubGVuZ3RoPnEmJnUucHVzaCh7ZWxlbTp0aGlzLG1hdGNoZXM6by5zbGljZShxKX0pO2ZvcihkPTA7ZDx1Lmxlbmd0aCYmIWMuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspe2k9dVtkXSxjLmN1cnJlbnRUYXJnZXQ9aS5lbGVtO2ZvcihlPTA7ZTxpLm1hdGNoZXMubGVuZ3RoJiYhYy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpO2UrKyl7bD1pLm1hdGNoZXNbZV07aWYoc3x8IWMubmFtZXNwYWNlJiYhbC5uYW1lc3BhY2V8fGMubmFtZXNwYWNlX3JlJiZjLm5hbWVzcGFjZV9yZS50ZXN0KGwubmFtZXNwYWNlKSljLmRhdGE9bC5kYXRhLGMuaGFuZGxlT2JqPWwsZz0oKHAuZXZlbnQuc3BlY2lhbFtsLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8bC5oYW5kbGVyKS5hcHBseShpLmVsZW0sciksZyE9PWImJihjLnJlc3VsdD1nLGc9PT0hMSYmKGMucHJldmVudERlZmF1bHQoKSxjLnN0b3BQcm9wYWdhdGlvbigpKSl9fXJldHVybiB0LnBvc3REaXNwYXRjaCYmdC5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLGMpLGMucmVzdWx0fSxwcm9wczpcImF0dHJDaGFuZ2UgYXR0ck5hbWUgcmVsYXRlZE5vZGUgc3JjRWxlbWVudCBhbHRLZXkgYnViYmxlcyBjYW5jZWxhYmxlIGN0cmxLZXkgY3VycmVudFRhcmdldCBldmVudFBoYXNlIG1ldGFLZXkgcmVsYXRlZFRhcmdldCBzaGlmdEtleSB0YXJnZXQgdGltZVN0YW1wIHZpZXcgd2hpY2hcIi5zcGxpdChcIiBcIiksZml4SG9va3M6e30sa2V5SG9va3M6e3Byb3BzOlwiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZVwiLnNwbGl0KFwiIFwiKSxmaWx0ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYS53aGljaD09bnVsbCYmKGEud2hpY2g9Yi5jaGFyQ29kZSE9bnVsbD9iLmNoYXJDb2RlOmIua2V5Q29kZSksYX19LG1vdXNlSG9va3M6e3Byb3BzOlwiYnV0dG9uIGJ1dHRvbnMgY2xpZW50WCBjbGllbnRZIGZyb21FbGVtZW50IG9mZnNldFggb2Zmc2V0WSBwYWdlWCBwYWdlWSBzY3JlZW5YIHNjcmVlblkgdG9FbGVtZW50XCIuc3BsaXQoXCIgXCIpLGZpbHRlcjpmdW5jdGlvbihhLGMpe3ZhciBkLGYsZyxoPWMuYnV0dG9uLGk9Yy5mcm9tRWxlbWVudDtyZXR1cm4gYS5wYWdlWD09bnVsbCYmYy5jbGllbnRYIT1udWxsJiYoZD1hLnRhcmdldC5vd25lckRvY3VtZW50fHxlLGY9ZC5kb2N1bWVudEVsZW1lbnQsZz1kLmJvZHksYS5wYWdlWD1jLmNsaWVudFgrKGYmJmYuc2Nyb2xsTGVmdHx8ZyYmZy5zY3JvbGxMZWZ0fHwwKS0oZiYmZi5jbGllbnRMZWZ0fHxnJiZnLmNsaWVudExlZnR8fDApLGEucGFnZVk9Yy5jbGllbnRZKyhmJiZmLnNjcm9sbFRvcHx8ZyYmZy5zY3JvbGxUb3B8fDApLShmJiZmLmNsaWVudFRvcHx8ZyYmZy5jbGllbnRUb3B8fDApKSwhYS5yZWxhdGVkVGFyZ2V0JiZpJiYoYS5yZWxhdGVkVGFyZ2V0PWk9PT1hLnRhcmdldD9jLnRvRWxlbWVudDppKSwhYS53aGljaCYmaCE9PWImJihhLndoaWNoPWgmMT8xOmgmMj8zOmgmND8yOjApLGF9fSxmaXg6ZnVuY3Rpb24oYSl7aWYoYVtwLmV4cGFuZG9dKXJldHVybiBhO3ZhciBiLGMsZD1hLGY9cC5ldmVudC5maXhIb29rc1thLnR5cGVdfHx7fSxnPWYucHJvcHM/dGhpcy5wcm9wcy5jb25jYXQoZi5wcm9wcyk6dGhpcy5wcm9wczthPXAuRXZlbnQoZCk7Zm9yKGI9Zy5sZW5ndGg7YjspYz1nWy0tYl0sYVtjXT1kW2NdO3JldHVybiBhLnRhcmdldHx8KGEudGFyZ2V0PWQuc3JjRWxlbWVudHx8ZSksYS50YXJnZXQubm9kZVR5cGU9PT0zJiYoYS50YXJnZXQ9YS50YXJnZXQucGFyZW50Tm9kZSksYS5tZXRhS2V5PSEhYS5tZXRhS2V5LGYuZmlsdGVyP2YuZmlsdGVyKGEsZCk6YX0sc3BlY2lhbDp7bG9hZDp7bm9CdWJibGU6ITB9LGZvY3VzOntkZWxlZ2F0ZVR5cGU6XCJmb2N1c2luXCJ9LGJsdXI6e2RlbGVnYXRlVHlwZTpcImZvY3Vzb3V0XCJ9LGJlZm9yZXVubG9hZDp7c2V0dXA6ZnVuY3Rpb24oYSxiLGMpe3AuaXNXaW5kb3codGhpcykmJih0aGlzLm9uYmVmb3JldW5sb2FkPWMpfSx0ZWFyZG93bjpmdW5jdGlvbihhLGIpe3RoaXMub25iZWZvcmV1bmxvYWQ9PT1iJiYodGhpcy5vbmJlZm9yZXVubG9hZD1udWxsKX19fSxzaW11bGF0ZTpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1wLmV4dGVuZChuZXcgcC5FdmVudCxjLHt0eXBlOmEsaXNTaW11bGF0ZWQ6ITAsb3JpZ2luYWxFdmVudDp7fX0pO2Q/cC5ldmVudC50cmlnZ2VyKGUsbnVsbCxiKTpwLmV2ZW50LmRpc3BhdGNoLmNhbGwoYixlKSxlLmlzRGVmYXVsdFByZXZlbnRlZCgpJiZjLnByZXZlbnREZWZhdWx0KCl9fSxwLmV2ZW50LmhhbmRsZT1wLmV2ZW50LmRpc3BhdGNoLHAucmVtb3ZlRXZlbnQ9ZS5yZW1vdmVFdmVudExpc3RlbmVyP2Z1bmN0aW9uKGEsYixjKXthLnJlbW92ZUV2ZW50TGlzdGVuZXImJmEucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGMsITEpfTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9XCJvblwiK2I7YS5kZXRhY2hFdmVudCYmKHR5cGVvZiBhW2RdPT1cInVuZGVmaW5lZFwiJiYoYVtkXT1udWxsKSxhLmRldGFjaEV2ZW50KGQsYykpfSxwLkV2ZW50PWZ1bmN0aW9uKGEsYil7aWYodGhpcyBpbnN0YW5jZW9mIHAuRXZlbnQpYSYmYS50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9YSx0aGlzLnR5cGU9YS50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWEuZGVmYXVsdFByZXZlbnRlZHx8YS5yZXR1cm5WYWx1ZT09PSExfHxhLmdldFByZXZlbnREZWZhdWx0JiZhLmdldFByZXZlbnREZWZhdWx0KCk/YmI6YmEpOnRoaXMudHlwZT1hLGImJnAuZXh0ZW5kKHRoaXMsYiksdGhpcy50aW1lU3RhbXA9YSYmYS50aW1lU3RhbXB8fHAubm93KCksdGhpc1twLmV4cGFuZG9dPSEwO2Vsc2UgcmV0dXJuIG5ldyBwLkV2ZW50KGEsYil9LHAuRXZlbnQucHJvdG90eXBlPXtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJiO3ZhciBhPXRoaXMub3JpZ2luYWxFdmVudDtpZighYSlyZXR1cm47YS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6YS5yZXR1cm5WYWx1ZT0hMX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iYjt2YXIgYT10aGlzLm9yaWdpbmFsRXZlbnQ7aWYoIWEpcmV0dXJuO2Euc3RvcFByb3BhZ2F0aW9uJiZhLnN0b3BQcm9wYWdhdGlvbigpLGEuY2FuY2VsQnViYmxlPSEwfSxzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkPWJiLHRoaXMuc3RvcFByb3BhZ2F0aW9uKCl9LGlzRGVmYXVsdFByZXZlbnRlZDpiYSxpc1Byb3BhZ2F0aW9uU3RvcHBlZDpiYSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDpiYX0scC5lYWNoKHttb3VzZWVudGVyOlwibW91c2VvdmVyXCIsbW91c2VsZWF2ZTpcIm1vdXNlb3V0XCJ9LGZ1bmN0aW9uKGEsYil7cC5ldmVudC5zcGVjaWFsW2FdPXtkZWxlZ2F0ZVR5cGU6YixiaW5kVHlwZTpiLGhhbmRsZTpmdW5jdGlvbihhKXt2YXIgYyxkPXRoaXMsZT1hLnJlbGF0ZWRUYXJnZXQsZj1hLmhhbmRsZU9iaixnPWYuc2VsZWN0b3I7aWYoIWV8fGUhPT1kJiYhcC5jb250YWlucyhkLGUpKWEudHlwZT1mLm9yaWdUeXBlLGM9Zi5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxhLnR5cGU9YjtyZXR1cm4gY319fSkscC5zdXBwb3J0LnN1Ym1pdEJ1YmJsZXN8fChwLmV2ZW50LnNwZWNpYWwuc3VibWl0PXtzZXR1cDpmdW5jdGlvbigpe2lmKHAubm9kZU5hbWUodGhpcyxcImZvcm1cIikpcmV0dXJuITE7cC5ldmVudC5hZGQodGhpcyxcImNsaWNrLl9zdWJtaXQga2V5cHJlc3MuX3N1Ym1pdFwiLGZ1bmN0aW9uKGEpe3ZhciBjPWEudGFyZ2V0LGQ9cC5ub2RlTmFtZShjLFwiaW5wdXRcIil8fHAubm9kZU5hbWUoYyxcImJ1dHRvblwiKT9jLmZvcm06YjtkJiYhcC5fZGF0YShkLFwiX3N1Ym1pdF9hdHRhY2hlZFwiKSYmKHAuZXZlbnQuYWRkKGQsXCJzdWJtaXQuX3N1Ym1pdFwiLGZ1bmN0aW9uKGEpe2EuX3N1Ym1pdF9idWJibGU9ITB9KSxwLl9kYXRhKGQsXCJfc3VibWl0X2F0dGFjaGVkXCIsITApKX0pfSxwb3N0RGlzcGF0Y2g6ZnVuY3Rpb24oYSl7YS5fc3VibWl0X2J1YmJsZSYmKGRlbGV0ZSBhLl9zdWJtaXRfYnViYmxlLHRoaXMucGFyZW50Tm9kZSYmIWEuaXNUcmlnZ2VyJiZwLmV2ZW50LnNpbXVsYXRlKFwic3VibWl0XCIsdGhpcy5wYXJlbnROb2RlLGEsITApKX0sdGVhcmRvd246ZnVuY3Rpb24oKXtpZihwLm5vZGVOYW1lKHRoaXMsXCJmb3JtXCIpKXJldHVybiExO3AuZXZlbnQucmVtb3ZlKHRoaXMsXCIuX3N1Ym1pdFwiKX19KSxwLnN1cHBvcnQuY2hhbmdlQnViYmxlc3x8KHAuZXZlbnQuc3BlY2lhbC5jaGFuZ2U9e3NldHVwOmZ1bmN0aW9uKCl7aWYoVi50ZXN0KHRoaXMubm9kZU5hbWUpKXtpZih0aGlzLnR5cGU9PT1cImNoZWNrYm94XCJ8fHRoaXMudHlwZT09PVwicmFkaW9cIilwLmV2ZW50LmFkZCh0aGlzLFwicHJvcGVydHljaGFuZ2UuX2NoYW5nZVwiLGZ1bmN0aW9uKGEpe2Eub3JpZ2luYWxFdmVudC5wcm9wZXJ0eU5hbWU9PT1cImNoZWNrZWRcIiYmKHRoaXMuX2p1c3RfY2hhbmdlZD0hMCl9KSxwLmV2ZW50LmFkZCh0aGlzLFwiY2xpY2suX2NoYW5nZVwiLGZ1bmN0aW9uKGEpe3RoaXMuX2p1c3RfY2hhbmdlZCYmIWEuaXNUcmlnZ2VyJiYodGhpcy5fanVzdF9jaGFuZ2VkPSExKSxwLmV2ZW50LnNpbXVsYXRlKFwiY2hhbmdlXCIsdGhpcyxhLCEwKX0pO3JldHVybiExfXAuZXZlbnQuYWRkKHRoaXMsXCJiZWZvcmVhY3RpdmF0ZS5fY2hhbmdlXCIsZnVuY3Rpb24oYSl7dmFyIGI9YS50YXJnZXQ7Vi50ZXN0KGIubm9kZU5hbWUpJiYhcC5fZGF0YShiLFwiX2NoYW5nZV9hdHRhY2hlZFwiKSYmKHAuZXZlbnQuYWRkKGIsXCJjaGFuZ2UuX2NoYW5nZVwiLGZ1bmN0aW9uKGEpe3RoaXMucGFyZW50Tm9kZSYmIWEuaXNTaW11bGF0ZWQmJiFhLmlzVHJpZ2dlciYmcC5ldmVudC5zaW11bGF0ZShcImNoYW5nZVwiLHRoaXMucGFyZW50Tm9kZSxhLCEwKX0pLHAuX2RhdGEoYixcIl9jaGFuZ2VfYXR0YWNoZWRcIiwhMCkpfSl9LGhhbmRsZTpmdW5jdGlvbihhKXt2YXIgYj1hLnRhcmdldDtpZih0aGlzIT09Ynx8YS5pc1NpbXVsYXRlZHx8YS5pc1RyaWdnZXJ8fGIudHlwZSE9PVwicmFkaW9cIiYmYi50eXBlIT09XCJjaGVja2JveFwiKXJldHVybiBhLmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdGVhcmRvd246ZnVuY3Rpb24oKXtyZXR1cm4gcC5ldmVudC5yZW1vdmUodGhpcyxcIi5fY2hhbmdlXCIpLCFWLnRlc3QodGhpcy5ub2RlTmFtZSl9fSkscC5zdXBwb3J0LmZvY3VzaW5CdWJibGVzfHxwLmVhY2goe2ZvY3VzOlwiZm9jdXNpblwiLGJsdXI6XCJmb2N1c291dFwifSxmdW5jdGlvbihhLGIpe3ZhciBjPTAsZD1mdW5jdGlvbihhKXtwLmV2ZW50LnNpbXVsYXRlKGIsYS50YXJnZXQscC5ldmVudC5maXgoYSksITApfTtwLmV2ZW50LnNwZWNpYWxbYl09e3NldHVwOmZ1bmN0aW9uKCl7YysrPT09MCYmZS5hZGRFdmVudExpc3RlbmVyKGEsZCwhMCl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7LS1jPT09MCYmZS5yZW1vdmVFdmVudExpc3RlbmVyKGEsZCwhMCl9fX0pLHAuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbihhLGMsZCxlLGYpe3ZhciBnLGg7aWYodHlwZW9mIGE9PVwib2JqZWN0XCIpe3R5cGVvZiBjIT1cInN0cmluZ1wiJiYoZD1kfHxjLGM9Yik7Zm9yKGggaW4gYSl0aGlzLm9uKGgsYyxkLGFbaF0sZik7cmV0dXJuIHRoaXN9ZD09bnVsbCYmZT09bnVsbD8oZT1jLGQ9Yz1iKTplPT1udWxsJiYodHlwZW9mIGM9PVwic3RyaW5nXCI/KGU9ZCxkPWIpOihlPWQsZD1jLGM9YikpO2lmKGU9PT0hMSllPWJhO2Vsc2UgaWYoIWUpcmV0dXJuIHRoaXM7cmV0dXJuIGY9PT0xJiYoZz1lLGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHAoKS5vZmYoYSksZy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGUuZ3VpZD1nLmd1aWR8fChnLmd1aWQ9cC5ndWlkKyspKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtwLmV2ZW50LmFkZCh0aGlzLGEsZSxkLGMpfSl9LG9uZTpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gdGhpcy5vbihhLGIsYyxkLDEpfSxvZmY6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlLGY7aWYoYSYmYS5wcmV2ZW50RGVmYXVsdCYmYS5oYW5kbGVPYmopcmV0dXJuIGU9YS5oYW5kbGVPYmoscChhLmRlbGVnYXRlVGFyZ2V0KS5vZmYoZS5uYW1lc3BhY2U/ZS5vcmlnVHlwZStcIi5cIitlLm5hbWVzcGFjZTplLm9yaWdUeXBlLGUuc2VsZWN0b3IsZS5oYW5kbGVyKSx0aGlzO2lmKHR5cGVvZiBhPT1cIm9iamVjdFwiKXtmb3IoZiBpbiBhKXRoaXMub2ZmKGYsYyxhW2ZdKTtyZXR1cm4gdGhpc31pZihjPT09ITF8fHR5cGVvZiBjPT1cImZ1bmN0aW9uXCIpZD1jLGM9YjtyZXR1cm4gZD09PSExJiYoZD1iYSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7cC5ldmVudC5yZW1vdmUodGhpcyxhLGQsYyl9KX0sYmluZDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHRoaXMub24oYSxudWxsLGIsYyl9LHVuYmluZDpmdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLm9mZihhLG51bGwsYil9LGxpdmU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBwKHRoaXMuY29udGV4dCkub24oYSx0aGlzLnNlbGVjdG9yLGIsYyksdGhpc30sZGllOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHAodGhpcy5jb250ZXh0KS5vZmYoYSx0aGlzLnNlbGVjdG9yfHxcIioqXCIsYiksdGhpc30sZGVsZWdhdGU6ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMub24oYixhLGMsZCl9LHVuZGVsZWdhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoPT09MT90aGlzLm9mZihhLFwiKipcIik6dGhpcy5vZmYoYixhfHxcIioqXCIsYyl9LHRyaWdnZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7cC5ldmVudC50cmlnZ2VyKGEsYix0aGlzKX0pfSx0cmlnZ2VySGFuZGxlcjpmdW5jdGlvbihhLGIpe2lmKHRoaXNbMF0pcmV0dXJuIHAuZXZlbnQudHJpZ2dlcihhLGIsdGhpc1swXSwhMCl9LHRvZ2dsZTpmdW5jdGlvbihhKXt2YXIgYj1hcmd1bWVudHMsYz1hLmd1aWR8fHAuZ3VpZCsrLGQ9MCxlPWZ1bmN0aW9uKGMpe3ZhciBlPShwLl9kYXRhKHRoaXMsXCJsYXN0VG9nZ2xlXCIrYS5ndWlkKXx8MCklZDtyZXR1cm4gcC5fZGF0YSh0aGlzLFwibGFzdFRvZ2dsZVwiK2EuZ3VpZCxlKzEpLGMucHJldmVudERlZmF1bHQoKSxiW2VdLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8ITF9O2UuZ3VpZD1jO3doaWxlKGQ8Yi5sZW5ndGgpYltkKytdLmd1aWQ9YztyZXR1cm4gdGhpcy5jbGljayhlKX0saG92ZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGEpLm1vdXNlbGVhdmUoYnx8YSl9fSkscC5lYWNoKFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBlcnJvciBjb250ZXh0bWVudVwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihhLGIpe3AuZm5bYl09ZnVuY3Rpb24oYSxjKXtyZXR1cm4gYz09bnVsbCYmKGM9YSxhPW51bGwpLGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKGIsbnVsbCxhLGMpOnRoaXMudHJpZ2dlcihiKX0sWS50ZXN0KGIpJiYocC5ldmVudC5maXhIb29rc1tiXT1wLmV2ZW50LmtleUhvb2tzKSxaLnRlc3QoYikmJihwLmV2ZW50LmZpeEhvb2tzW2JdPXAuZXZlbnQubW91c2VIb29rcyl9KSxmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIGJjKGEsYixjLGQpe2M9Y3x8W10sYj1ifHxyO3ZhciBlLGYsaSxqLGs9Yi5ub2RlVHlwZTtpZighYXx8dHlwZW9mIGEhPVwic3RyaW5nXCIpcmV0dXJuIGM7aWYoayE9PTEmJmshPT05KXJldHVybltdO2k9ZyhiKTtpZighaSYmIWQpaWYoZT1QLmV4ZWMoYSkpaWYoaj1lWzFdKXtpZihrPT09OSl7Zj1iLmdldEVsZW1lbnRCeUlkKGopO2lmKCFmfHwhZi5wYXJlbnROb2RlKXJldHVybiBjO2lmKGYuaWQ9PT1qKXJldHVybiBjLnB1c2goZiksY31lbHNlIGlmKGIub3duZXJEb2N1bWVudCYmKGY9Yi5vd25lckRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGopKSYmaChiLGYpJiZmLmlkPT09ailyZXR1cm4gYy5wdXNoKGYpLGN9ZWxzZXtpZihlWzJdKXJldHVybiB3LmFwcGx5KGMseC5jYWxsKGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSksMCkpLGM7aWYoKGo9ZVszXSkmJl8mJmIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSlyZXR1cm4gdy5hcHBseShjLHguY2FsbChiLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoaiksMCkpLGN9cmV0dXJuIGJwKGEucmVwbGFjZShMLFwiJDFcIiksYixjLGQsaSl9ZnVuY3Rpb24gYmQoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYz09PVwiaW5wdXRcIiYmYi50eXBlPT09YX19ZnVuY3Rpb24gYmUoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3ZhciBjPWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oYz09PVwiaW5wdXRcInx8Yz09PVwiYnV0dG9uXCIpJiZiLnR5cGU9PT1hfX1mdW5jdGlvbiBiZihhKXtyZXR1cm4geihmdW5jdGlvbihiKXtyZXR1cm4gYj0rYix6KGZ1bmN0aW9uKGMsZCl7dmFyIGUsZj1hKFtdLGMubGVuZ3RoLGIpLGc9Zi5sZW5ndGg7d2hpbGUoZy0tKWNbZT1mW2ddXSYmKGNbZV09IShkW2VdPWNbZV0pKX0pfSl9ZnVuY3Rpb24gYmcoYSxiLGMpe2lmKGE9PT1iKXJldHVybiBjO3ZhciBkPWEubmV4dFNpYmxpbmc7d2hpbGUoZCl7aWYoZD09PWIpcmV0dXJuLTE7ZD1kLm5leHRTaWJsaW5nfXJldHVybiAxfWZ1bmN0aW9uIGJoKGEsYil7dmFyIGMsZCxmLGcsaCxpLGosaz1DW29dW2FdO2lmKGspcmV0dXJuIGI/MDprLnNsaWNlKDApO2g9YSxpPVtdLGo9ZS5wcmVGaWx0ZXI7d2hpbGUoaCl7aWYoIWN8fChkPU0uZXhlYyhoKSkpZCYmKGg9aC5zbGljZShkWzBdLmxlbmd0aCkpLGkucHVzaChmPVtdKTtjPSExO2lmKGQ9Ti5leGVjKGgpKWYucHVzaChjPW5ldyBxKGQuc2hpZnQoKSkpLGg9aC5zbGljZShjLmxlbmd0aCksYy50eXBlPWRbMF0ucmVwbGFjZShMLFwiIFwiKTtmb3IoZyBpbiBlLmZpbHRlcikoZD1XW2ddLmV4ZWMoaCkpJiYoIWpbZ118fChkPWpbZ10oZCxyLCEwKSkpJiYoZi5wdXNoKGM9bmV3IHEoZC5zaGlmdCgpKSksaD1oLnNsaWNlKGMubGVuZ3RoKSxjLnR5cGU9ZyxjLm1hdGNoZXM9ZCk7aWYoIWMpYnJlYWt9cmV0dXJuIGI/aC5sZW5ndGg6aD9iYy5lcnJvcihhKTpDKGEsaSkuc2xpY2UoMCl9ZnVuY3Rpb24gYmkoYSxiLGQpe3ZhciBlPWIuZGlyLGY9ZCYmYi5kaXI9PT1cInBhcmVudE5vZGVcIixnPXUrKztyZXR1cm4gYi5maXJzdD9mdW5jdGlvbihiLGMsZCl7d2hpbGUoYj1iW2VdKWlmKGZ8fGIubm9kZVR5cGU9PT0xKXJldHVybiBhKGIsYyxkKX06ZnVuY3Rpb24oYixkLGgpe2lmKCFoKXt2YXIgaSxqPXQrXCIgXCIrZytcIiBcIixrPWorYzt3aGlsZShiPWJbZV0paWYoZnx8Yi5ub2RlVHlwZT09PTEpe2lmKChpPWJbb10pPT09aylyZXR1cm4gYi5zaXpzZXQ7aWYodHlwZW9mIGk9PVwic3RyaW5nXCImJmkuaW5kZXhPZihqKT09PTApe2lmKGIuc2l6c2V0KXJldHVybiBifWVsc2V7YltvXT1rO2lmKGEoYixkLGgpKXJldHVybiBiLnNpenNldD0hMCxiO2Iuc2l6c2V0PSExfX19ZWxzZSB3aGlsZShiPWJbZV0paWYoZnx8Yi5ub2RlVHlwZT09PTEpaWYoYShiLGQsaCkpcmV0dXJuIGJ9fWZ1bmN0aW9uIGJqKGEpe3JldHVybiBhLmxlbmd0aD4xP2Z1bmN0aW9uKGIsYyxkKXt2YXIgZT1hLmxlbmd0aDt3aGlsZShlLS0paWYoIWFbZV0oYixjLGQpKXJldHVybiExO3JldHVybiEwfTphWzBdfWZ1bmN0aW9uIGJrKGEsYixjLGQsZSl7dmFyIGYsZz1bXSxoPTAsaT1hLmxlbmd0aCxqPWIhPW51bGw7Zm9yKDtoPGk7aCsrKWlmKGY9YVtoXSlpZighY3x8YyhmLGQsZSkpZy5wdXNoKGYpLGomJmIucHVzaChoKTtyZXR1cm4gZ31mdW5jdGlvbiBibChhLGIsYyxkLGUsZil7cmV0dXJuIGQmJiFkW29dJiYoZD1ibChkKSksZSYmIWVbb10mJihlPWJsKGUsZikpLHooZnVuY3Rpb24oZixnLGgsaSl7aWYoZiYmZSlyZXR1cm47dmFyIGosayxsLG09W10sbj1bXSxvPWcubGVuZ3RoLHA9Znx8Ym8oYnx8XCIqXCIsaC5ub2RlVHlwZT9baF06aCxbXSxmKSxxPWEmJihmfHwhYik/YmsocCxtLGEsaCxpKTpwLHI9Yz9lfHwoZj9hOm98fGQpP1tdOmc6cTtjJiZjKHEscixoLGkpO2lmKGQpe2w9YmsocixuKSxkKGwsW10saCxpKSxqPWwubGVuZ3RoO3doaWxlKGotLSlpZihrPWxbal0pcltuW2pdXT0hKHFbbltqXV09ayl9aWYoZil7aj1hJiZyLmxlbmd0aDt3aGlsZShqLS0paWYoaz1yW2pdKWZbbVtqXV09IShnW21bal1dPWspfWVsc2Ugcj1iayhyPT09Zz9yLnNwbGljZShvLHIubGVuZ3RoKTpyKSxlP2UobnVsbCxnLHIsaSk6dy5hcHBseShnLHIpfSl9ZnVuY3Rpb24gYm0oYSl7dmFyIGIsYyxkLGY9YS5sZW5ndGgsZz1lLnJlbGF0aXZlW2FbMF0udHlwZV0saD1nfHxlLnJlbGF0aXZlW1wiIFwiXSxpPWc/MTowLGo9YmkoZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1ifSxoLCEwKSxrPWJpKGZ1bmN0aW9uKGEpe3JldHVybiB5LmNhbGwoYixhKT4tMX0saCwhMCksbT1bZnVuY3Rpb24oYSxjLGQpe3JldHVybiFnJiYoZHx8YyE9PWwpfHwoKGI9Yykubm9kZVR5cGU/aihhLGMsZCk6ayhhLGMsZCkpfV07Zm9yKDtpPGY7aSsrKWlmKGM9ZS5yZWxhdGl2ZVthW2ldLnR5cGVdKW09W2JpKGJqKG0pLGMpXTtlbHNle2M9ZS5maWx0ZXJbYVtpXS50eXBlXS5hcHBseShudWxsLGFbaV0ubWF0Y2hlcyk7aWYoY1tvXSl7ZD0rK2k7Zm9yKDtkPGY7ZCsrKWlmKGUucmVsYXRpdmVbYVtkXS50eXBlXSlicmVhaztyZXR1cm4gYmwoaT4xJiZiaihtKSxpPjEmJmEuc2xpY2UoMCxpLTEpLmpvaW4oXCJcIikucmVwbGFjZShMLFwiJDFcIiksYyxpPGQmJmJtKGEuc2xpY2UoaSxkKSksZDxmJiZibShhPWEuc2xpY2UoZCkpLGQ8ZiYmYS5qb2luKFwiXCIpKX1tLnB1c2goYyl9cmV0dXJuIGJqKG0pfWZ1bmN0aW9uIGJuKGEsYil7dmFyIGQ9Yi5sZW5ndGg+MCxmPWEubGVuZ3RoPjAsZz1mdW5jdGlvbihoLGksaixrLG0pe3ZhciBuLG8scCxxPVtdLHM9MCx1PVwiMFwiLHg9aCYmW10seT1tIT1udWxsLHo9bCxBPWh8fGYmJmUuZmluZC5UQUcoXCIqXCIsbSYmaS5wYXJlbnROb2RlfHxpKSxCPXQrPXo9PW51bGw/MTpNYXRoLkU7eSYmKGw9aSE9PXImJmksYz1nLmVsKTtmb3IoOyhuPUFbdV0pIT1udWxsO3UrKyl7aWYoZiYmbil7Zm9yKG89MDtwPWFbb107bysrKWlmKHAobixpLGopKXtrLnB1c2gobik7YnJlYWt9eSYmKHQ9QixjPSsrZy5lbCl9ZCYmKChuPSFwJiZuKSYmcy0tLGgmJngucHVzaChuKSl9cys9dTtpZihkJiZ1IT09cyl7Zm9yKG89MDtwPWJbb107bysrKXAoeCxxLGksaik7aWYoaCl7aWYocz4wKXdoaWxlKHUtLSkheFt1XSYmIXFbdV0mJihxW3VdPXYuY2FsbChrKSk7cT1iayhxKX13LmFwcGx5KGsscSkseSYmIWgmJnEubGVuZ3RoPjAmJnMrYi5sZW5ndGg+MSYmYmMudW5pcXVlU29ydChrKX1yZXR1cm4geSYmKHQ9QixsPXopLHh9O3JldHVybiBnLmVsPTAsZD96KGcpOmd9ZnVuY3Rpb24gYm8oYSxiLGMsZCl7dmFyIGU9MCxmPWIubGVuZ3RoO2Zvcig7ZTxmO2UrKyliYyhhLGJbZV0sYyxkKTtyZXR1cm4gY31mdW5jdGlvbiBicChhLGIsYyxkLGYpe3ZhciBnLGgsaixrLGwsbT1iaChhKSxuPW0ubGVuZ3RoO2lmKCFkJiZtLmxlbmd0aD09PTEpe2g9bVswXT1tWzBdLnNsaWNlKDApO2lmKGgubGVuZ3RoPjImJihqPWhbMF0pLnR5cGU9PT1cIklEXCImJmIubm9kZVR5cGU9PT05JiYhZiYmZS5yZWxhdGl2ZVtoWzFdLnR5cGVdKXtiPWUuZmluZC5JRChqLm1hdGNoZXNbMF0ucmVwbGFjZShWLFwiXCIpLGIsZilbMF07aWYoIWIpcmV0dXJuIGM7YT1hLnNsaWNlKGguc2hpZnQoKS5sZW5ndGgpfWZvcihnPVcuUE9TLnRlc3QoYSk/LTE6aC5sZW5ndGgtMTtnPj0wO2ctLSl7aj1oW2ddO2lmKGUucmVsYXRpdmVbaz1qLnR5cGVdKWJyZWFrO2lmKGw9ZS5maW5kW2tdKWlmKGQ9bChqLm1hdGNoZXNbMF0ucmVwbGFjZShWLFwiXCIpLFIudGVzdChoWzBdLnR5cGUpJiZiLnBhcmVudE5vZGV8fGIsZikpe2guc3BsaWNlKGcsMSksYT1kLmxlbmd0aCYmaC5qb2luKFwiXCIpO2lmKCFhKXJldHVybiB3LmFwcGx5KGMseC5jYWxsKGQsMCkpLGM7YnJlYWt9fX1yZXR1cm4gaShhLG0pKGQsYixmLGMsUi50ZXN0KGEpKSxjfWZ1bmN0aW9uIGJxKCl7fXZhciBjLGQsZSxmLGcsaCxpLGosayxsLG09ITAsbj1cInVuZGVmaW5lZFwiLG89KFwic2l6Y2FjaGVcIitNYXRoLnJhbmRvbSgpKS5yZXBsYWNlKFwiLlwiLFwiXCIpLHE9U3RyaW5nLHI9YS5kb2N1bWVudCxzPXIuZG9jdW1lbnRFbGVtZW50LHQ9MCx1PTAsdj1bXS5wb3Asdz1bXS5wdXNoLHg9W10uc2xpY2UseT1bXS5pbmRleE9mfHxmdW5jdGlvbihhKXt2YXIgYj0wLGM9dGhpcy5sZW5ndGg7Zm9yKDtiPGM7YisrKWlmKHRoaXNbYl09PT1hKXJldHVybiBiO3JldHVybi0xfSx6PWZ1bmN0aW9uKGEsYil7cmV0dXJuIGFbb109Yj09bnVsbHx8YixhfSxBPWZ1bmN0aW9uKCl7dmFyIGE9e30sYj1bXTtyZXR1cm4geihmdW5jdGlvbihjLGQpe3JldHVybiBiLnB1c2goYyk+ZS5jYWNoZUxlbmd0aCYmZGVsZXRlIGFbYi5zaGlmdCgpXSxhW2NdPWR9LGEpfSxCPUEoKSxDPUEoKSxEPUEoKSxFPVwiW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZl1cIixGPVwiKD86XFxcXFxcXFwufFstXFxcXHddfFteXFxcXHgwMC1cXFxceGEwXSkrXCIsRz1GLnJlcGxhY2UoXCJ3XCIsXCJ3I1wiKSxIPVwiKFsqXiR8IX5dPz0pXCIsST1cIlxcXFxbXCIrRStcIiooXCIrRitcIilcIitFK1wiKig/OlwiK0grRStcIiooPzooWydcXFwiXSkoKD86XFxcXFxcXFwufFteXFxcXFxcXFxdKSo/KVxcXFwzfChcIitHK1wiKXwpfClcIitFK1wiKlxcXFxdXCIsSj1cIjooXCIrRitcIikoPzpcXFxcKCg/OihbJ1xcXCJdKSgoPzpcXFxcXFxcXC58W15cXFxcXFxcXF0pKj8pXFxcXDJ8KFteKClbXFxcXF1dKnwoPzooPzpcIitJK1wiKXxbXjpdfFxcXFxcXFxcLikqfC4qKSlcXFxcKXwpXCIsSz1cIjooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIitFK1wiKigoPzotXFxcXGQpP1xcXFxkKilcIitFK1wiKlxcXFwpfCkoPz1bXi1dfCQpXCIsTD1uZXcgUmVnRXhwKFwiXlwiK0UrXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiK0UrXCIrJFwiLFwiZ1wiKSxNPW5ldyBSZWdFeHAoXCJeXCIrRStcIiosXCIrRStcIipcIiksTj1uZXcgUmVnRXhwKFwiXlwiK0UrXCIqKFtcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGY+K35dKVwiK0UrXCIqXCIpLE89bmV3IFJlZ0V4cChKKSxQPS9eKD86IyhbXFx3XFwtXSspfChcXHcrKXxcXC4oW1xcd1xcLV0rKSkkLyxRPS9eOm5vdC8sUj0vW1xceDIwXFx0XFxyXFxuXFxmXSpbK35dLyxTPS86bm90XFwoJC8sVD0vaFxcZC9pLFU9L2lucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24vaSxWPS9cXFxcKD8hXFxcXCkvZyxXPXtJRDpuZXcgUmVnRXhwKFwiXiMoXCIrRitcIilcIiksQ0xBU1M6bmV3IFJlZ0V4cChcIl5cXFxcLihcIitGK1wiKVwiKSxOQU1FOm5ldyBSZWdFeHAoXCJeXFxcXFtuYW1lPVsnXFxcIl0/KFwiK0YrXCIpWydcXFwiXT9cXFxcXVwiKSxUQUc6bmV3IFJlZ0V4cChcIl4oXCIrRi5yZXBsYWNlKFwid1wiLFwidypcIikrXCIpXCIpLEFUVFI6bmV3IFJlZ0V4cChcIl5cIitJKSxQU0VVRE86bmV3IFJlZ0V4cChcIl5cIitKKSxQT1M6bmV3IFJlZ0V4cChLLFwiaVwiKSxDSElMRDpuZXcgUmVnRXhwKFwiXjoob25seXxudGh8Zmlyc3R8bGFzdCktY2hpbGQoPzpcXFxcKFwiK0UrXCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIitFK1wiKig/OihbKy1dfClcIitFK1wiKihcXFxcZCspfCkpXCIrRStcIipcXFxcKXwpXCIsXCJpXCIpLG5lZWRzQ29udGV4dDpuZXcgUmVnRXhwKFwiXlwiK0UrXCIqWz4rfl18XCIrSyxcImlcIil9LFg9ZnVuY3Rpb24oYSl7dmFyIGI9ci5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXtyZXR1cm4hMX1maW5hbGx5e2I9bnVsbH19LFk9WChmdW5jdGlvbihhKXtyZXR1cm4gYS5hcHBlbmRDaGlsZChyLmNyZWF0ZUNvbW1lbnQoXCJcIikpLCFhLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKS5sZW5ndGh9KSxaPVgoZnVuY3Rpb24oYSl7cmV0dXJuIGEuaW5uZXJIVE1MPVwiPGEgaHJlZj0nIyc+PC9hPlwiLGEuZmlyc3RDaGlsZCYmdHlwZW9mIGEuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUhPT1uJiZhLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKT09PVwiI1wifSksJD1YKGZ1bmN0aW9uKGEpe2EuaW5uZXJIVE1MPVwiPHNlbGVjdD48L3NlbGVjdD5cIjt2YXIgYj10eXBlb2YgYS5sYXN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwibXVsdGlwbGVcIik7cmV0dXJuIGIhPT1cImJvb2xlYW5cIiYmYiE9PVwic3RyaW5nXCJ9KSxfPVgoZnVuY3Rpb24oYSl7cmV0dXJuIGEuaW5uZXJIVE1MPVwiPGRpdiBjbGFzcz0naGlkZGVuIGUnPjwvZGl2PjxkaXYgY2xhc3M9J2hpZGRlbic+PC9kaXY+XCIsIWEuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZXx8IWEuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImVcIikubGVuZ3RoPyExOihhLmxhc3RDaGlsZC5jbGFzc05hbWU9XCJlXCIsYS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiZVwiKS5sZW5ndGg9PT0yKX0pLGJhPVgoZnVuY3Rpb24oYSl7YS5pZD1vKzAsYS5pbm5lckhUTUw9XCI8YSBuYW1lPSdcIitvK1wiJz48L2E+PGRpdiBuYW1lPSdcIitvK1wiJz48L2Rpdj5cIixzLmluc2VydEJlZm9yZShhLHMuZmlyc3RDaGlsZCk7dmFyIGI9ci5nZXRFbGVtZW50c0J5TmFtZSYmci5nZXRFbGVtZW50c0J5TmFtZShvKS5sZW5ndGg9PT0yK3IuZ2V0RWxlbWVudHNCeU5hbWUobyswKS5sZW5ndGg7cmV0dXJuIGQ9IXIuZ2V0RWxlbWVudEJ5SWQobykscy5yZW1vdmVDaGlsZChhKSxifSk7dHJ5e3guY2FsbChzLmNoaWxkTm9kZXMsMClbMF0ubm9kZVR5cGV9Y2F0Y2goYmIpe3g9ZnVuY3Rpb24oYSl7dmFyIGIsYz1bXTtmb3IoO2I9dGhpc1thXTthKyspYy5wdXNoKGIpO3JldHVybiBjfX1iYy5tYXRjaGVzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGJjKGEsbnVsbCxudWxsLGIpfSxiYy5tYXRjaGVzU2VsZWN0b3I9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYmMoYixudWxsLG51bGwsW2FdKS5sZW5ndGg+MH0sZj1iYy5nZXRUZXh0PWZ1bmN0aW9uKGEpe3ZhciBiLGM9XCJcIixkPTAsZT1hLm5vZGVUeXBlO2lmKGUpe2lmKGU9PT0xfHxlPT09OXx8ZT09PTExKXtpZih0eXBlb2YgYS50ZXh0Q29udGVudD09XCJzdHJpbmdcIilyZXR1cm4gYS50ZXh0Q29udGVudDtmb3IoYT1hLmZpcnN0Q2hpbGQ7YTthPWEubmV4dFNpYmxpbmcpYys9ZihhKX1lbHNlIGlmKGU9PT0zfHxlPT09NClyZXR1cm4gYS5ub2RlVmFsdWV9ZWxzZSBmb3IoO2I9YVtkXTtkKyspYys9ZihiKTtyZXR1cm4gY30sZz1iYy5pc1hNTD1mdW5jdGlvbihhKXt2YXIgYj1hJiYoYS5vd25lckRvY3VtZW50fHxhKS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGI/Yi5ub2RlTmFtZSE9PVwiSFRNTFwiOiExfSxoPWJjLmNvbnRhaW5zPXMuY29udGFpbnM/ZnVuY3Rpb24oYSxiKXt2YXIgYz1hLm5vZGVUeXBlPT09OT9hLmRvY3VtZW50RWxlbWVudDphLGQ9YiYmYi5wYXJlbnROb2RlO3JldHVybiBhPT09ZHx8ISEoZCYmZC5ub2RlVHlwZT09PTEmJmMuY29udGFpbnMmJmMuY29udGFpbnMoZCkpfTpzLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uP2Z1bmN0aW9uKGEsYil7cmV0dXJuIGImJiEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpfTpmdW5jdGlvbihhLGIpe3doaWxlKGI9Yi5wYXJlbnROb2RlKWlmKGI9PT1hKXJldHVybiEwO3JldHVybiExfSxiYy5hdHRyPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1nKGEpO3JldHVybiBkfHwoYj1iLnRvTG93ZXJDYXNlKCkpLChjPWUuYXR0ckhhbmRsZVtiXSk/YyhhKTpkfHwkP2EuZ2V0QXR0cmlidXRlKGIpOihjPWEuZ2V0QXR0cmlidXRlTm9kZShiKSxjP3R5cGVvZiBhW2JdPT1cImJvb2xlYW5cIj9hW2JdP2I6bnVsbDpjLnNwZWNpZmllZD9jLnZhbHVlOm51bGw6bnVsbCl9LGU9YmMuc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86eixtYXRjaDpXLGF0dHJIYW5kbGU6Wj97fTp7aHJlZjpmdW5jdGlvbihhKXtyZXR1cm4gYS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIsMil9LHR5cGU6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKFwidHlwZVwiKX19LGZpbmQ6e0lEOmQ/ZnVuY3Rpb24oYSxiLGMpe2lmKHR5cGVvZiBiLmdldEVsZW1lbnRCeUlkIT09biYmIWMpe3ZhciBkPWIuZ2V0RWxlbWVudEJ5SWQoYSk7cmV0dXJuIGQmJmQucGFyZW50Tm9kZT9bZF06W119fTpmdW5jdGlvbihhLGMsZCl7aWYodHlwZW9mIGMuZ2V0RWxlbWVudEJ5SWQhPT1uJiYhZCl7dmFyIGU9Yy5nZXRFbGVtZW50QnlJZChhKTtyZXR1cm4gZT9lLmlkPT09YXx8dHlwZW9mIGUuZ2V0QXR0cmlidXRlTm9kZSE9PW4mJmUuZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpLnZhbHVlPT09YT9bZV06YjpbXX19LFRBRzpZP2Z1bmN0aW9uKGEsYil7aWYodHlwZW9mIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUhPT1uKXJldHVybiBiLmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpfTpmdW5jdGlvbihhLGIpe3ZhciBjPWIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSk7aWYoYT09PVwiKlwiKXt2YXIgZCxlPVtdLGY9MDtmb3IoO2Q9Y1tmXTtmKyspZC5ub2RlVHlwZT09PTEmJmUucHVzaChkKTtyZXR1cm4gZX1yZXR1cm4gY30sTkFNRTpiYSYmZnVuY3Rpb24oYSxiKXtpZih0eXBlb2YgYi5nZXRFbGVtZW50c0J5TmFtZSE9PW4pcmV0dXJuIGIuZ2V0RWxlbWVudHNCeU5hbWUobmFtZSl9LENMQVNTOl8mJmZ1bmN0aW9uKGEsYixjKXtpZih0eXBlb2YgYi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lIT09biYmIWMpcmV0dXJuIGIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShhKX19LHJlbGF0aXZlOntcIj5cIjp7ZGlyOlwicGFyZW50Tm9kZVwiLGZpcnN0OiEwfSxcIiBcIjp7ZGlyOlwicGFyZW50Tm9kZVwifSxcIitcIjp7ZGlyOlwicHJldmlvdXNTaWJsaW5nXCIsZmlyc3Q6ITB9LFwiflwiOntkaXI6XCJwcmV2aW91c1NpYmxpbmdcIn19LHByZUZpbHRlcjp7QVRUUjpmdW5jdGlvbihhKXtyZXR1cm4gYVsxXT1hWzFdLnJlcGxhY2UoVixcIlwiKSxhWzNdPShhWzRdfHxhWzVdfHxcIlwiKS5yZXBsYWNlKFYsXCJcIiksYVsyXT09PVwifj1cIiYmKGFbM109XCIgXCIrYVszXStcIiBcIiksYS5zbGljZSgwLDQpfSxDSElMRDpmdW5jdGlvbihhKXtyZXR1cm4gYVsxXT1hWzFdLnRvTG93ZXJDYXNlKCksYVsxXT09PVwibnRoXCI/KGFbMl18fGJjLmVycm9yKGFbMF0pLGFbM109KyhhWzNdP2FbNF0rKGFbNV18fDEpOjIqKGFbMl09PT1cImV2ZW5cInx8YVsyXT09PVwib2RkXCIpKSxhWzRdPSsoYVs2XSthWzddfHxhWzJdPT09XCJvZGRcIikpOmFbMl0mJmJjLmVycm9yKGFbMF0pLGF9LFBTRVVETzpmdW5jdGlvbihhKXt2YXIgYixjO2lmKFcuQ0hJTEQudGVzdChhWzBdKSlyZXR1cm4gbnVsbDtpZihhWzNdKWFbMl09YVszXTtlbHNlIGlmKGI9YVs0XSlPLnRlc3QoYikmJihjPWJoKGIsITApKSYmKGM9Yi5pbmRleE9mKFwiKVwiLGIubGVuZ3RoLWMpLWIubGVuZ3RoKSYmKGI9Yi5zbGljZSgwLGMpLGFbMF09YVswXS5zbGljZSgwLGMpKSxhWzJdPWI7cmV0dXJuIGEuc2xpY2UoMCwzKX19LGZpbHRlcjp7SUQ6ZD9mdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoVixcIlwiKSxmdW5jdGlvbihiKXtyZXR1cm4gYi5nZXRBdHRyaWJ1dGUoXCJpZFwiKT09PWF9fTpmdW5jdGlvbihhKXtyZXR1cm4gYT1hLnJlcGxhY2UoVixcIlwiKSxmdW5jdGlvbihiKXt2YXIgYz10eXBlb2YgYi5nZXRBdHRyaWJ1dGVOb2RlIT09biYmYi5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7cmV0dXJuIGMmJmMudmFsdWU9PT1hfX0sVEFHOmZ1bmN0aW9uKGEpe3JldHVybiBhPT09XCIqXCI/ZnVuY3Rpb24oKXtyZXR1cm4hMH06KGE9YS5yZXBsYWNlKFYsXCJcIikudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihiKXtyZXR1cm4gYi5ub2RlTmFtZSYmYi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09YX0pfSxDTEFTUzpmdW5jdGlvbihhKXt2YXIgYj1CW29dW2FdO3JldHVybiBifHwoYj1CKGEsbmV3IFJlZ0V4cChcIihefFwiK0UrXCIpXCIrYStcIihcIitFK1wifCQpXCIpKSksZnVuY3Rpb24oYSl7cmV0dXJuIGIudGVzdChhLmNsYXNzTmFtZXx8dHlwZW9mIGEuZ2V0QXR0cmlidXRlIT09biYmYS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKXx8XCJcIil9fSxBVFRSOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZnVuY3Rpb24oZCxlKXt2YXIgZj1iYy5hdHRyKGQsYSk7cmV0dXJuIGY9PW51bGw/Yj09PVwiIT1cIjpiPyhmKz1cIlwiLGI9PT1cIj1cIj9mPT09YzpiPT09XCIhPVwiP2YhPT1jOmI9PT1cIl49XCI/YyYmZi5pbmRleE9mKGMpPT09MDpiPT09XCIqPVwiP2MmJmYuaW5kZXhPZihjKT4tMTpiPT09XCIkPVwiP2MmJmYuc3Vic3RyKGYubGVuZ3RoLWMubGVuZ3RoKT09PWM6Yj09PVwifj1cIj8oXCIgXCIrZitcIiBcIikuaW5kZXhPZihjKT4tMTpiPT09XCJ8PVwiP2Y9PT1jfHxmLnN1YnN0cigwLGMubGVuZ3RoKzEpPT09YytcIi1cIjohMSk6ITB9fSxDSElMRDpmdW5jdGlvbihhLGIsYyxkKXtyZXR1cm4gYT09PVwibnRoXCI/ZnVuY3Rpb24oYSl7dmFyIGIsZSxmPWEucGFyZW50Tm9kZTtpZihjPT09MSYmZD09PTApcmV0dXJuITA7aWYoZil7ZT0wO2ZvcihiPWYuZmlyc3RDaGlsZDtiO2I9Yi5uZXh0U2libGluZylpZihiLm5vZGVUeXBlPT09MSl7ZSsrO2lmKGE9PT1iKWJyZWFrfX1yZXR1cm4gZS09ZCxlPT09Y3x8ZSVjPT09MCYmZS9jPj0wfTpmdW5jdGlvbihiKXt2YXIgYz1iO3N3aXRjaChhKXtjYXNlXCJvbmx5XCI6Y2FzZVwiZmlyc3RcIjp3aGlsZShjPWMucHJldmlvdXNTaWJsaW5nKWlmKGMubm9kZVR5cGU9PT0xKXJldHVybiExO2lmKGE9PT1cImZpcnN0XCIpcmV0dXJuITA7Yz1iO2Nhc2VcImxhc3RcIjp3aGlsZShjPWMubmV4dFNpYmxpbmcpaWYoYy5ub2RlVHlwZT09PTEpcmV0dXJuITE7cmV0dXJuITB9fX0sUFNFVURPOmZ1bmN0aW9uKGEsYil7dmFyIGMsZD1lLnBzZXVkb3NbYV18fGUuc2V0RmlsdGVyc1thLnRvTG93ZXJDYXNlKCldfHxiYy5lcnJvcihcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIrYSk7cmV0dXJuIGRbb10/ZChiKTpkLmxlbmd0aD4xPyhjPVthLGEsXCJcIixiXSxlLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoYS50b0xvd2VyQ2FzZSgpKT96KGZ1bmN0aW9uKGEsYyl7dmFyIGUsZj1kKGEsYiksZz1mLmxlbmd0aDt3aGlsZShnLS0pZT15LmNhbGwoYSxmW2ddKSxhW2VdPSEoY1tlXT1mW2ddKX0pOmZ1bmN0aW9uKGEpe3JldHVybiBkKGEsMCxjKX0pOmR9fSxwc2V1ZG9zOntub3Q6eihmdW5jdGlvbihhKXt2YXIgYj1bXSxjPVtdLGQ9aShhLnJlcGxhY2UoTCxcIiQxXCIpKTtyZXR1cm4gZFtvXT96KGZ1bmN0aW9uKGEsYixjLGUpe3ZhciBmLGc9ZChhLG51bGwsZSxbXSksaD1hLmxlbmd0aDt3aGlsZShoLS0paWYoZj1nW2hdKWFbaF09IShiW2hdPWYpfSk6ZnVuY3Rpb24oYSxlLGYpe3JldHVybiBiWzBdPWEsZChiLG51bGwsZixjKSwhYy5wb3AoKX19KSxoYXM6eihmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuIGJjKGEsYikubGVuZ3RoPjB9fSksY29udGFpbnM6eihmdW5jdGlvbihhKXtyZXR1cm4gZnVuY3Rpb24oYil7cmV0dXJuKGIudGV4dENvbnRlbnR8fGIuaW5uZXJUZXh0fHxmKGIpKS5pbmRleE9mKGEpPi0xfX0pLGVuYWJsZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZGlzYWJsZWQ9PT0hMX0sZGlzYWJsZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZGlzYWJsZWQ9PT0hMH0sY2hlY2tlZDpmdW5jdGlvbihhKXt2YXIgYj1hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGI9PT1cImlucHV0XCImJiEhYS5jaGVja2VkfHxiPT09XCJvcHRpb25cIiYmISFhLnNlbGVjdGVkfSxzZWxlY3RlZDpmdW5jdGlvbihhKXtyZXR1cm4gYS5wYXJlbnROb2RlJiZhLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCxhLnNlbGVjdGVkPT09ITB9LHBhcmVudDpmdW5jdGlvbihhKXtyZXR1cm4hZS5wc2V1ZG9zLmVtcHR5KGEpfSxlbXB0eTpmdW5jdGlvbihhKXt2YXIgYjthPWEuZmlyc3RDaGlsZDt3aGlsZShhKXtpZihhLm5vZGVOYW1lPlwiQFwifHwoYj1hLm5vZGVUeXBlKT09PTN8fGI9PT00KXJldHVybiExO2E9YS5uZXh0U2libGluZ31yZXR1cm4hMH0saGVhZGVyOmZ1bmN0aW9uKGEpe3JldHVybiBULnRlc3QoYS5ub2RlTmFtZSl9LHRleHQ6ZnVuY3Rpb24oYSl7dmFyIGIsYztyZXR1cm4gYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09XCJpbnB1dFwiJiYoYj1hLnR5cGUpPT09XCJ0ZXh0XCImJigoYz1hLmdldEF0dHJpYnV0ZShcInR5cGVcIikpPT1udWxsfHxjLnRvTG93ZXJDYXNlKCk9PT1iKX0scmFkaW86YmQoXCJyYWRpb1wiKSxjaGVja2JveDpiZChcImNoZWNrYm94XCIpLGZpbGU6YmQoXCJmaWxlXCIpLHBhc3N3b3JkOmJkKFwicGFzc3dvcmRcIiksaW1hZ2U6YmQoXCJpbWFnZVwiKSxzdWJtaXQ6YmUoXCJzdWJtaXRcIikscmVzZXQ6YmUoXCJyZXNldFwiKSxidXR0b246ZnVuY3Rpb24oYSl7dmFyIGI9YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiPT09XCJpbnB1dFwiJiZhLnR5cGU9PT1cImJ1dHRvblwifHxiPT09XCJidXR0b25cIn0saW5wdXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUudGVzdChhLm5vZGVOYW1lKX0sZm9jdXM6ZnVuY3Rpb24oYSl7dmFyIGI9YS5vd25lckRvY3VtZW50O3JldHVybiBhPT09Yi5hY3RpdmVFbGVtZW50JiYoIWIuaGFzRm9jdXN8fGIuaGFzRm9jdXMoKSkmJighIWEudHlwZXx8ISFhLmhyZWYpfSxhY3RpdmU6ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT1hLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudH0sZmlyc3Q6YmYoZnVuY3Rpb24oYSxiLGMpe3JldHVyblswXX0pLGxhc3Q6YmYoZnVuY3Rpb24oYSxiLGMpe3JldHVybltiLTFdfSksZXE6YmYoZnVuY3Rpb24oYSxiLGMpe3JldHVybltjPDA/YytiOmNdfSksZXZlbjpiZihmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPTA7ZDxiO2QrPTIpYS5wdXNoKGQpO3JldHVybiBhfSksb2RkOmJmKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9MTtkPGI7ZCs9MilhLnB1c2goZCk7cmV0dXJuIGF9KSxsdDpiZihmdW5jdGlvbihhLGIsYyl7Zm9yKHZhciBkPWM8MD9jK2I6YzstLWQ+PTA7KWEucHVzaChkKTtyZXR1cm4gYX0pLGd0OmJmKGZ1bmN0aW9uKGEsYixjKXtmb3IodmFyIGQ9YzwwP2MrYjpjOysrZDxiOylhLnB1c2goZCk7cmV0dXJuIGF9KX19LGo9cy5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj9mdW5jdGlvbihhLGIpe3JldHVybiBhPT09Yj8oaz0hMCwwKTooIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb258fCFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uP2EuY29tcGFyZURvY3VtZW50UG9zaXRpb246YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSY0KT8tMToxfTpmdW5jdGlvbihhLGIpe2lmKGE9PT1iKXJldHVybiBrPSEwLDA7aWYoYS5zb3VyY2VJbmRleCYmYi5zb3VyY2VJbmRleClyZXR1cm4gYS5zb3VyY2VJbmRleC1iLnNvdXJjZUluZGV4O3ZhciBjLGQsZT1bXSxmPVtdLGc9YS5wYXJlbnROb2RlLGg9Yi5wYXJlbnROb2RlLGk9ZztpZihnPT09aClyZXR1cm4gYmcoYSxiKTtpZighZylyZXR1cm4tMTtpZighaClyZXR1cm4gMTt3aGlsZShpKWUudW5zaGlmdChpKSxpPWkucGFyZW50Tm9kZTtpPWg7d2hpbGUoaSlmLnVuc2hpZnQoaSksaT1pLnBhcmVudE5vZGU7Yz1lLmxlbmd0aCxkPWYubGVuZ3RoO2Zvcih2YXIgaj0wO2o8YyYmajxkO2orKylpZihlW2pdIT09ZltqXSlyZXR1cm4gYmcoZVtqXSxmW2pdKTtyZXR1cm4gaj09PWM/YmcoYSxmW2pdLC0xKTpiZyhlW2pdLGIsMSl9LFswLDBdLnNvcnQoaiksbT0hayxiYy51bmlxdWVTb3J0PWZ1bmN0aW9uKGEpe3ZhciBiLGM9MTtrPW0sYS5zb3J0KGopO2lmKGspZm9yKDtiPWFbY107YysrKWI9PT1hW2MtMV0mJmEuc3BsaWNlKGMtLSwxKTtyZXR1cm4gYX0sYmMuZXJyb3I9ZnVuY3Rpb24oYSl7dGhyb3cgbmV3IEVycm9yKFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIrYSl9LGk9YmMuY29tcGlsZT1mdW5jdGlvbihhLGIpe3ZhciBjLGQ9W10sZT1bXSxmPURbb11bYV07aWYoIWYpe2J8fChiPWJoKGEpKSxjPWIubGVuZ3RoO3doaWxlKGMtLSlmPWJtKGJbY10pLGZbb10/ZC5wdXNoKGYpOmUucHVzaChmKTtmPUQoYSxibihlLGQpKX1yZXR1cm4gZn0sci5xdWVyeVNlbGVjdG9yQWxsJiZmdW5jdGlvbigpe3ZhciBhLGI9YnAsYz0vJ3xcXFxcL2csZD0vXFw9W1xceDIwXFx0XFxyXFxuXFxmXSooW14nXCJcXF1dKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcXS9nLGU9W1wiOmZvY3VzXCJdLGY9W1wiOmFjdGl2ZVwiLFwiOmZvY3VzXCJdLGg9cy5tYXRjaGVzU2VsZWN0b3J8fHMubW96TWF0Y2hlc1NlbGVjdG9yfHxzLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8cy5vTWF0Y2hlc1NlbGVjdG9yfHxzLm1zTWF0Y2hlc1NlbGVjdG9yO1goZnVuY3Rpb24oYSl7YS5pbm5lckhUTUw9XCI8c2VsZWN0PjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCIsYS5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGh8fGUucHVzaChcIlxcXFxbXCIrRStcIiooPzpjaGVja2VkfGRpc2FibGVkfGlzbWFwfG11bHRpcGxlfHJlYWRvbmx5fHNlbGVjdGVkfHZhbHVlKVwiKSxhLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGh8fGUucHVzaChcIjpjaGVja2VkXCIpfSksWChmdW5jdGlvbihhKXthLmlubmVySFRNTD1cIjxwIHRlc3Q9Jyc+PC9wPlwiLGEucXVlcnlTZWxlY3RvckFsbChcIlt0ZXN0Xj0nJ11cIikubGVuZ3RoJiZlLnB1c2goXCJbKl4kXT1cIitFK1wiKig/OlxcXCJcXFwifCcnKVwiKSxhLmlubmVySFRNTD1cIjxpbnB1dCB0eXBlPSdoaWRkZW4nLz5cIixhLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZW5hYmxlZFwiKS5sZW5ndGh8fGUucHVzaChcIjplbmFibGVkXCIsXCI6ZGlzYWJsZWRcIil9KSxlPW5ldyBSZWdFeHAoZS5qb2luKFwifFwiKSksYnA9ZnVuY3Rpb24oYSxkLGYsZyxoKXtpZighZyYmIWgmJighZXx8IWUudGVzdChhKSkpe3ZhciBpLGosaz0hMCxsPW8sbT1kLG49ZC5ub2RlVHlwZT09PTkmJmE7aWYoZC5ub2RlVHlwZT09PTEmJmQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSE9PVwib2JqZWN0XCIpe2k9YmgoYSksKGs9ZC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSk/bD1rLnJlcGxhY2UoYyxcIlxcXFwkJlwiKTpkLnNldEF0dHJpYnV0ZShcImlkXCIsbCksbD1cIltpZD0nXCIrbCtcIiddIFwiLGo9aS5sZW5ndGg7d2hpbGUoai0tKWlbal09bCtpW2pdLmpvaW4oXCJcIik7bT1SLnRlc3QoYSkmJmQucGFyZW50Tm9kZXx8ZCxuPWkuam9pbihcIixcIil9aWYobil0cnl7cmV0dXJuIHcuYXBwbHkoZix4LmNhbGwobS5xdWVyeVNlbGVjdG9yQWxsKG4pLDApKSxmfWNhdGNoKHApe31maW5hbGx5e2t8fGQucmVtb3ZlQXR0cmlidXRlKFwiaWRcIil9fXJldHVybiBiKGEsZCxmLGcsaCl9LGgmJihYKGZ1bmN0aW9uKGIpe2E9aC5jYWxsKGIsXCJkaXZcIik7dHJ5e2guY2FsbChiLFwiW3Rlc3QhPScnXTpzaXp6bGVcIiksZi5wdXNoKFwiIT1cIixKKX1jYXRjaChjKXt9fSksZj1uZXcgUmVnRXhwKGYuam9pbihcInxcIikpLGJjLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihiLGMpe2M9Yy5yZXBsYWNlKGQsXCI9JyQxJ11cIik7aWYoIWcoYikmJiFmLnRlc3QoYykmJighZXx8IWUudGVzdChjKSkpdHJ5e3ZhciBpPWguY2FsbChiLGMpO2lmKGl8fGF8fGIuZG9jdW1lbnQmJmIuZG9jdW1lbnQubm9kZVR5cGUhPT0xMSlyZXR1cm4gaX1jYXRjaChqKXt9cmV0dXJuIGJjKGMsbnVsbCxudWxsLFtiXSkubGVuZ3RoPjB9KX0oKSxlLnBzZXVkb3MubnRoPWUucHNldWRvcy5lcSxlLmZpbHRlcnM9YnEucHJvdG90eXBlPWUucHNldWRvcyxlLnNldEZpbHRlcnM9bmV3IGJxLGJjLmF0dHI9cC5hdHRyLHAuZmluZD1iYyxwLmV4cHI9YmMuc2VsZWN0b3JzLHAuZXhwcltcIjpcIl09cC5leHByLnBzZXVkb3MscC51bmlxdWU9YmMudW5pcXVlU29ydCxwLnRleHQ9YmMuZ2V0VGV4dCxwLmlzWE1MRG9jPWJjLmlzWE1MLHAuY29udGFpbnM9YmMuY29udGFpbnN9KGEpO3ZhciBiYz0vVW50aWwkLyxiZD0vXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxiZT0vXi5bXjojXFxbXFwuLF0qJC8sYmY9cC5leHByLm1hdGNoLm5lZWRzQ29udGV4dCxiZz17Y2hpbGRyZW46ITAsY29udGVudHM6ITAsbmV4dDohMCxwcmV2OiEwfTtwLmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaD10aGlzO2lmKHR5cGVvZiBhIT1cInN0cmluZ1wiKXJldHVybiBwKGEpLmZpbHRlcihmdW5jdGlvbigpe2ZvcihiPTAsYz1oLmxlbmd0aDtiPGM7YisrKWlmKHAuY29udGFpbnMoaFtiXSx0aGlzKSlyZXR1cm4hMH0pO2c9dGhpcy5wdXNoU3RhY2soXCJcIixcImZpbmRcIixhKTtmb3IoYj0wLGM9dGhpcy5sZW5ndGg7YjxjO2IrKyl7ZD1nLmxlbmd0aCxwLmZpbmQoYSx0aGlzW2JdLGcpO2lmKGI+MClmb3IoZT1kO2U8Zy5sZW5ndGg7ZSsrKWZvcihmPTA7ZjxkO2YrKylpZihnW2ZdPT09Z1tlXSl7Zy5zcGxpY2UoZS0tLDEpO2JyZWFrfX1yZXR1cm4gZ30saGFzOmZ1bmN0aW9uKGEpe3ZhciBiLGM9cChhLHRoaXMpLGQ9Yy5sZW5ndGg7cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGI9MDtiPGQ7YisrKWlmKHAuY29udGFpbnModGhpcyxjW2JdKSlyZXR1cm4hMH0pfSxub3Q6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGJqKHRoaXMsYSwhMSksXCJub3RcIixhKX0sZmlsdGVyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnB1c2hTdGFjayhiaih0aGlzLGEsITApLFwiZmlsdGVyXCIsYSl9LGlzOmZ1bmN0aW9uKGEpe3JldHVybiEhYSYmKHR5cGVvZiBhPT1cInN0cmluZ1wiP2JmLnRlc3QoYSk/cChhLHRoaXMuY29udGV4dCkuaW5kZXgodGhpc1swXSk+PTA6cC5maWx0ZXIoYSx0aGlzKS5sZW5ndGg+MDp0aGlzLmZpbHRlcihhKS5sZW5ndGg+MCl9LGNsb3Nlc3Q6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTAsZT10aGlzLmxlbmd0aCxmPVtdLGc9YmYudGVzdChhKXx8dHlwZW9mIGEhPVwic3RyaW5nXCI/cChhLGJ8fHRoaXMuY29udGV4dCk6MDtmb3IoO2Q8ZTtkKyspe2M9dGhpc1tkXTt3aGlsZShjJiZjLm93bmVyRG9jdW1lbnQmJmMhPT1iJiZjLm5vZGVUeXBlIT09MTEpe2lmKGc/Zy5pbmRleChjKT4tMTpwLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGMsYSkpe2YucHVzaChjKTticmVha31jPWMucGFyZW50Tm9kZX19cmV0dXJuIGY9Zi5sZW5ndGg+MT9wLnVuaXF1ZShmKTpmLHRoaXMucHVzaFN0YWNrKGYsXCJjbG9zZXN0XCIsYSl9LGluZGV4OmZ1bmN0aW9uKGEpe3JldHVybiBhP3R5cGVvZiBhPT1cInN0cmluZ1wiP3AuaW5BcnJheSh0aGlzWzBdLHAoYSkpOnAuaW5BcnJheShhLmpxdWVyeT9hWzBdOmEsdGhpcyk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMucHJldkFsbCgpLmxlbmd0aDotMX0sYWRkOmZ1bmN0aW9uKGEsYil7dmFyIGM9dHlwZW9mIGE9PVwic3RyaW5nXCI/cChhLGIpOnAubWFrZUFycmF5KGEmJmEubm9kZVR5cGU/W2FdOmEpLGQ9cC5tZXJnZSh0aGlzLmdldCgpLGMpO3JldHVybiB0aGlzLnB1c2hTdGFjayhiaChjWzBdKXx8YmgoZFswXSk/ZDpwLnVuaXF1ZShkKSl9LGFkZEJhY2s6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuYWRkKGE9PW51bGw/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIoYSkpfX0pLHAuZm4uYW5kU2VsZj1wLmZuLmFkZEJhY2sscC5lYWNoKHtwYXJlbnQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5wYXJlbnROb2RlO3JldHVybiBiJiZiLm5vZGVUeXBlIT09MTE/YjpudWxsfSxwYXJlbnRzOmZ1bmN0aW9uKGEpe3JldHVybiBwLmRpcihhLFwicGFyZW50Tm9kZVwiKX0scGFyZW50c1VudGlsOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gcC5kaXIoYSxcInBhcmVudE5vZGVcIixjKX0sbmV4dDpmdW5jdGlvbihhKXtyZXR1cm4gYmkoYSxcIm5leHRTaWJsaW5nXCIpfSxwcmV2OmZ1bmN0aW9uKGEpe3JldHVybiBiaShhLFwicHJldmlvdXNTaWJsaW5nXCIpfSxuZXh0QWxsOmZ1bmN0aW9uKGEpe3JldHVybiBwLmRpcihhLFwibmV4dFNpYmxpbmdcIil9LHByZXZBbGw6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZGlyKGEsXCJwcmV2aW91c1NpYmxpbmdcIil9LG5leHRVbnRpbDpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHAuZGlyKGEsXCJuZXh0U2libGluZ1wiLGMpfSxwcmV2VW50aWw6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBwLmRpcihhLFwicHJldmlvdXNTaWJsaW5nXCIsYyl9LHNpYmxpbmdzOmZ1bmN0aW9uKGEpe3JldHVybiBwLnNpYmxpbmcoKGEucGFyZW50Tm9kZXx8e30pLmZpcnN0Q2hpbGQsYSl9LGNoaWxkcmVuOmZ1bmN0aW9uKGEpe3JldHVybiBwLnNpYmxpbmcoYS5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24oYSl7cmV0dXJuIHAubm9kZU5hbWUoYSxcImlmcmFtZVwiKT9hLmNvbnRlbnREb2N1bWVudHx8YS5jb250ZW50V2luZG93LmRvY3VtZW50OnAubWVyZ2UoW10sYS5jaGlsZE5vZGVzKX19LGZ1bmN0aW9uKGEsYil7cC5mblthXT1mdW5jdGlvbihjLGQpe3ZhciBlPXAubWFwKHRoaXMsYixjKTtyZXR1cm4gYmMudGVzdChhKXx8KGQ9YyksZCYmdHlwZW9mIGQ9PVwic3RyaW5nXCImJihlPXAuZmlsdGVyKGQsZSkpLGU9dGhpcy5sZW5ndGg+MSYmIWJnW2FdP3AudW5pcXVlKGUpOmUsdGhpcy5sZW5ndGg+MSYmYmQudGVzdChhKSYmKGU9ZS5yZXZlcnNlKCkpLHRoaXMucHVzaFN0YWNrKGUsYSxrLmNhbGwoYXJndW1lbnRzKS5qb2luKFwiLFwiKSl9fSkscC5leHRlbmQoe2ZpbHRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGMmJihhPVwiOm5vdChcIithK1wiKVwiKSxiLmxlbmd0aD09PTE/cC5maW5kLm1hdGNoZXNTZWxlY3RvcihiWzBdLGEpP1tiWzBdXTpbXTpwLmZpbmQubWF0Y2hlcyhhLGIpfSxkaXI6ZnVuY3Rpb24oYSxjLGQpe3ZhciBlPVtdLGY9YVtjXTt3aGlsZShmJiZmLm5vZGVUeXBlIT09OSYmKGQ9PT1ifHxmLm5vZGVUeXBlIT09MXx8IXAoZikuaXMoZCkpKWYubm9kZVR5cGU9PT0xJiZlLnB1c2goZiksZj1mW2NdO3JldHVybiBlfSxzaWJsaW5nOmZ1bmN0aW9uKGEsYil7dmFyIGM9W107Zm9yKDthO2E9YS5uZXh0U2libGluZylhLm5vZGVUeXBlPT09MSYmYSE9PWImJmMucHVzaChhKTtyZXR1cm4gY319KTt2YXIgYmw9XCJhYmJyfGFydGljbGV8YXNpZGV8YXVkaW98YmRpfGNhbnZhc3xkYXRhfGRhdGFsaXN0fGRldGFpbHN8ZmlnY2FwdGlvbnxmaWd1cmV8Zm9vdGVyfGhlYWRlcnxoZ3JvdXB8bWFya3xtZXRlcnxuYXZ8b3V0cHV0fHByb2dyZXNzfHNlY3Rpb258c3VtbWFyeXx0aW1lfHZpZGVvXCIsYm09LyBqUXVlcnlcXGQrPVwiKD86bnVsbHxcXGQrKVwiL2csYm49L15cXHMrLyxibz0vPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXFx3Ol0rKVtePl0qKVxcLz4vZ2ksYnA9LzwoW1xcdzpdKykvLGJxPS88dGJvZHkvaSxicj0vPHwmIz9cXHcrOy8sYnM9LzwoPzpzY3JpcHR8c3R5bGV8bGluaykvaSxidD0vPCg/OnNjcmlwdHxvYmplY3R8ZW1iZWR8b3B0aW9ufHN0eWxlKS9pLGJ1PW5ldyBSZWdFeHAoXCI8KD86XCIrYmwrXCIpW1xcXFxzLz5dXCIsXCJpXCIpLGJ2PS9eKD86Y2hlY2tib3h8cmFkaW8pJC8sYnc9L2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxieD0vXFwvKGphdmF8ZWNtYSlzY3JpcHQvaSxieT0vXlxccyo8ISg/OlxcW0NEQVRBXFxbfFxcLVxcLSl8W1xcXVxcLV17Mn0+XFxzKiQvZyxiej17b3B0aW9uOlsxLFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLFwiPC9zZWxlY3Q+XCJdLGxlZ2VuZDpbMSxcIjxmaWVsZHNldD5cIixcIjwvZmllbGRzZXQ+XCJdLHRoZWFkOlsxLFwiPHRhYmxlPlwiLFwiPC90YWJsZT5cIl0sdHI6WzIsXCI8dGFibGU+PHRib2R5PlwiLFwiPC90Ym9keT48L3RhYmxlPlwiXSx0ZDpbMyxcIjx0YWJsZT48dGJvZHk+PHRyPlwiLFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCJdLGNvbDpbMixcIjx0YWJsZT48dGJvZHk+PC90Ym9keT48Y29sZ3JvdXA+XCIsXCI8L2NvbGdyb3VwPjwvdGFibGU+XCJdLGFyZWE6WzEsXCI8bWFwPlwiLFwiPC9tYXA+XCJdLF9kZWZhdWx0OlswLFwiXCIsXCJcIl19LGJBPWJrKGUpLGJCPWJBLmFwcGVuZENoaWxkKGUuY3JlYXRlRWxlbWVudChcImRpdlwiKSk7Ynoub3B0Z3JvdXA9Ynoub3B0aW9uLGJ6LnRib2R5PWJ6LnRmb290PWJ6LmNvbGdyb3VwPWJ6LmNhcHRpb249YnoudGhlYWQsYnoudGg9YnoudGQscC5zdXBwb3J0Lmh0bWxTZXJpYWxpemV8fChiei5fZGVmYXVsdD1bMSxcIlg8ZGl2PlwiLFwiPC9kaXY+XCJdKSxwLmZuLmV4dGVuZCh7dGV4dDpmdW5jdGlvbihhKXtyZXR1cm4gcC5hY2Nlc3ModGhpcyxmdW5jdGlvbihhKXtyZXR1cm4gYT09PWI/cC50ZXh0KHRoaXMpOnRoaXMuZW1wdHkoKS5hcHBlbmQoKHRoaXNbMF0mJnRoaXNbMF0ub3duZXJEb2N1bWVudHx8ZSkuY3JlYXRlVGV4dE5vZGUoYSkpfSxudWxsLGEsYXJndW1lbnRzLmxlbmd0aCl9LHdyYXBBbGw6ZnVuY3Rpb24oYSl7aWYocC5pc0Z1bmN0aW9uKGEpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oYil7cCh0aGlzKS53cmFwQWxsKGEuY2FsbCh0aGlzLGIpKX0pO2lmKHRoaXNbMF0pe3ZhciBiPXAoYSx0aGlzWzBdLm93bmVyRG9jdW1lbnQpLmVxKDApLmNsb25lKCEwKTt0aGlzWzBdLnBhcmVudE5vZGUmJmIuaW5zZXJ0QmVmb3JlKHRoaXNbMF0pLGIubWFwKGZ1bmN0aW9uKCl7dmFyIGE9dGhpczt3aGlsZShhLmZpcnN0Q2hpbGQmJmEuZmlyc3RDaGlsZC5ub2RlVHlwZT09PTEpYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9KS5hcHBlbmQodGhpcyl9cmV0dXJuIHRoaXN9LHdyYXBJbm5lcjpmdW5jdGlvbihhKXtyZXR1cm4gcC5pc0Z1bmN0aW9uKGEpP3RoaXMuZWFjaChmdW5jdGlvbihiKXtwKHRoaXMpLndyYXBJbm5lcihhLmNhbGwodGhpcyxiKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgYj1wKHRoaXMpLGM9Yi5jb250ZW50cygpO2MubGVuZ3RoP2Mud3JhcEFsbChhKTpiLmFwcGVuZChhKX0pfSx3cmFwOmZ1bmN0aW9uKGEpe3ZhciBiPXAuaXNGdW5jdGlvbihhKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGMpe3AodGhpcykud3JhcEFsbChiP2EuY2FsbCh0aGlzLGMpOmEpfSl9LHVud3JhcDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcmVudCgpLmVhY2goZnVuY3Rpb24oKXtwLm5vZGVOYW1lKHRoaXMsXCJib2R5XCIpfHxwKHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KS5lbmQoKX0sYXBwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCEwLGZ1bmN0aW9uKGEpeyh0aGlzLm5vZGVUeXBlPT09MXx8dGhpcy5ub2RlVHlwZT09PTExKSYmdGhpcy5hcHBlbmRDaGlsZChhKX0pfSxwcmVwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCEwLGZ1bmN0aW9uKGEpeyh0aGlzLm5vZGVUeXBlPT09MXx8dGhpcy5ub2RlVHlwZT09PTExKSYmdGhpcy5pbnNlcnRCZWZvcmUoYSx0aGlzLmZpcnN0Q2hpbGQpfSl9LGJlZm9yZTpmdW5jdGlvbigpe2lmKCFiaCh0aGlzWzBdKSlyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsITEsZnVuY3Rpb24oYSl7dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLHRoaXMpfSk7aWYoYXJndW1lbnRzLmxlbmd0aCl7dmFyIGE9cC5jbGVhbihhcmd1bWVudHMpO3JldHVybiB0aGlzLnB1c2hTdGFjayhwLm1lcmdlKGEsdGhpcyksXCJiZWZvcmVcIix0aGlzLnNlbGVjdG9yKX19LGFmdGVyOmZ1bmN0aW9uKCl7aWYoIWJoKHRoaXNbMF0pKXJldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cywhMSxmdW5jdGlvbihhKXt0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsdGhpcy5uZXh0U2libGluZyl9KTtpZihhcmd1bWVudHMubGVuZ3RoKXt2YXIgYT1wLmNsZWFuKGFyZ3VtZW50cyk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHAubWVyZ2UodGhpcyxhKSxcImFmdGVyXCIsdGhpcy5zZWxlY3Rvcil9fSxyZW1vdmU6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkPTA7Zm9yKDsoYz10aGlzW2RdKSE9bnVsbDtkKyspaWYoIWF8fHAuZmlsdGVyKGEsW2NdKS5sZW5ndGgpIWImJmMubm9kZVR5cGU9PT0xJiYocC5jbGVhbkRhdGEoYy5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikpLHAuY2xlYW5EYXRhKFtjXSkpLGMucGFyZW50Tm9kZSYmYy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGMpO3JldHVybiB0aGlzfSxlbXB0eTpmdW5jdGlvbigpe3ZhciBhLGI9MDtmb3IoOyhhPXRoaXNbYl0pIT1udWxsO2IrKyl7YS5ub2RlVHlwZT09PTEmJnAuY2xlYW5EYXRhKGEuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpKTt3aGlsZShhLmZpcnN0Q2hpbGQpYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpfXJldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbihhLGIpe3JldHVybiBhPWE9PW51bGw/ITE6YSxiPWI9PW51bGw/YTpiLHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIHAuY2xvbmUodGhpcyxhLGIpfSl9LGh0bWw6ZnVuY3Rpb24oYSl7cmV0dXJuIHAuYWNjZXNzKHRoaXMsZnVuY3Rpb24oYSl7dmFyIGM9dGhpc1swXXx8e30sZD0wLGU9dGhpcy5sZW5ndGg7aWYoYT09PWIpcmV0dXJuIGMubm9kZVR5cGU9PT0xP2MuaW5uZXJIVE1MLnJlcGxhY2UoYm0sXCJcIik6YjtpZih0eXBlb2YgYT09XCJzdHJpbmdcIiYmIWJzLnRlc3QoYSkmJihwLnN1cHBvcnQuaHRtbFNlcmlhbGl6ZXx8IWJ1LnRlc3QoYSkpJiYocC5zdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlfHwhYm4udGVzdChhKSkmJiFielsoYnAuZXhlYyhhKXx8W1wiXCIsXCJcIl0pWzFdLnRvTG93ZXJDYXNlKCldKXthPWEucmVwbGFjZShibyxcIjwkMT48LyQyPlwiKTt0cnl7Zm9yKDtkPGU7ZCsrKWM9dGhpc1tkXXx8e30sYy5ub2RlVHlwZT09PTEmJihwLmNsZWFuRGF0YShjLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSksYy5pbm5lckhUTUw9YSk7Yz0wfWNhdGNoKGYpe319YyYmdGhpcy5lbXB0eSgpLmFwcGVuZChhKX0sbnVsbCxhLGFyZ3VtZW50cy5sZW5ndGgpfSxyZXBsYWNlV2l0aDpmdW5jdGlvbihhKXtyZXR1cm4gYmgodGhpc1swXSk/dGhpcy5sZW5ndGg/dGhpcy5wdXNoU3RhY2socChwLmlzRnVuY3Rpb24oYSk/YSgpOmEpLFwicmVwbGFjZVdpdGhcIixhKTp0aGlzOnAuaXNGdW5jdGlvbihhKT90aGlzLmVhY2goZnVuY3Rpb24oYil7dmFyIGM9cCh0aGlzKSxkPWMuaHRtbCgpO2MucmVwbGFjZVdpdGgoYS5jYWxsKHRoaXMsYixkKSl9KToodHlwZW9mIGEhPVwic3RyaW5nXCImJihhPXAoYSkuZGV0YWNoKCkpLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPXRoaXMubmV4dFNpYmxpbmcsYz10aGlzLnBhcmVudE5vZGU7cCh0aGlzKS5yZW1vdmUoKSxiP3AoYikuYmVmb3JlKGEpOnAoYykuYXBwZW5kKGEpfSkpfSxkZXRhY2g6ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMucmVtb3ZlKGEsITApfSxkb21NYW5pcDpmdW5jdGlvbihhLGMsZCl7YT1bXS5jb25jYXQuYXBwbHkoW10sYSk7dmFyIGUsZixnLGgsaT0wLGo9YVswXSxrPVtdLGw9dGhpcy5sZW5ndGg7aWYoIXAuc3VwcG9ydC5jaGVja0Nsb25lJiZsPjEmJnR5cGVvZiBqPT1cInN0cmluZ1wiJiZidy50ZXN0KGopKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtwKHRoaXMpLmRvbU1hbmlwKGEsYyxkKX0pO2lmKHAuaXNGdW5jdGlvbihqKSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe3ZhciBmPXAodGhpcyk7YVswXT1qLmNhbGwodGhpcyxlLGM/Zi5odG1sKCk6YiksZi5kb21NYW5pcChhLGMsZCl9KTtpZih0aGlzWzBdKXtlPXAuYnVpbGRGcmFnbWVudChhLHRoaXMsayksZz1lLmZyYWdtZW50LGY9Zy5maXJzdENoaWxkLGcuY2hpbGROb2Rlcy5sZW5ndGg9PT0xJiYoZz1mKTtpZihmKXtjPWMmJnAubm9kZU5hbWUoZixcInRyXCIpO2ZvcihoPWUuY2FjaGVhYmxlfHxsLTE7aTxsO2krKylkLmNhbGwoYyYmcC5ub2RlTmFtZSh0aGlzW2ldLFwidGFibGVcIik/YkModGhpc1tpXSxcInRib2R5XCIpOnRoaXNbaV0saT09PWg/ZzpwLmNsb25lKGcsITAsITApKX1nPWY9bnVsbCxrLmxlbmd0aCYmcC5lYWNoKGssZnVuY3Rpb24oYSxiKXtiLnNyYz9wLmFqYXg/cC5hamF4KHt1cmw6Yi5zcmMsdHlwZTpcIkdFVFwiLGRhdGFUeXBlOlwic2NyaXB0XCIsYXN5bmM6ITEsZ2xvYmFsOiExLFwidGhyb3dzXCI6ITB9KTpwLmVycm9yKFwibm8gYWpheFwiKTpwLmdsb2JhbEV2YWwoKGIudGV4dHx8Yi50ZXh0Q29udGVudHx8Yi5pbm5lckhUTUx8fFwiXCIpLnJlcGxhY2UoYnksXCJcIikpLGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIpfSl9cmV0dXJuIHRoaXN9fSkscC5idWlsZEZyYWdtZW50PWZ1bmN0aW9uKGEsYyxkKXt2YXIgZixnLGgsaT1hWzBdO3JldHVybiBjPWN8fGUsYz0hYy5ub2RlVHlwZSYmY1swXXx8YyxjPWMub3duZXJEb2N1bWVudHx8YyxhLmxlbmd0aD09PTEmJnR5cGVvZiBpPT1cInN0cmluZ1wiJiZpLmxlbmd0aDw1MTImJmM9PT1lJiZpLmNoYXJBdCgwKT09PVwiPFwiJiYhYnQudGVzdChpKSYmKHAuc3VwcG9ydC5jaGVja0Nsb25lfHwhYncudGVzdChpKSkmJihwLnN1cHBvcnQuaHRtbDVDbG9uZXx8IWJ1LnRlc3QoaSkpJiYoZz0hMCxmPXAuZnJhZ21lbnRzW2ldLGg9ZiE9PWIpLGZ8fChmPWMuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLHAuY2xlYW4oYSxjLGYsZCksZyYmKHAuZnJhZ21lbnRzW2ldPWgmJmYpKSx7ZnJhZ21lbnQ6ZixjYWNoZWFibGU6Z319LHAuZnJhZ21lbnRzPXt9LHAuZWFjaCh7YXBwZW5kVG86XCJhcHBlbmRcIixwcmVwZW5kVG86XCJwcmVwZW5kXCIsaW5zZXJ0QmVmb3JlOlwiYmVmb3JlXCIsaW5zZXJ0QWZ0ZXI6XCJhZnRlclwiLHJlcGxhY2VBbGw6XCJyZXBsYWNlV2l0aFwifSxmdW5jdGlvbihhLGIpe3AuZm5bYV09ZnVuY3Rpb24oYyl7dmFyIGQsZT0wLGY9W10sZz1wKGMpLGg9Zy5sZW5ndGgsaT10aGlzLmxlbmd0aD09PTEmJnRoaXNbMF0ucGFyZW50Tm9kZTtpZigoaT09bnVsbHx8aSYmaS5ub2RlVHlwZT09PTExJiZpLmNoaWxkTm9kZXMubGVuZ3RoPT09MSkmJmg9PT0xKXJldHVybiBnW2JdKHRoaXNbMF0pLHRoaXM7Zm9yKDtlPGg7ZSsrKWQ9KGU+MD90aGlzLmNsb25lKCEwKTp0aGlzKS5nZXQoKSxwKGdbZV0pW2JdKGQpLGY9Zi5jb25jYXQoZCk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGYsYSxnLnNlbGVjdG9yKX19KSxwLmV4dGVuZCh7Y2xvbmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnO3Auc3VwcG9ydC5odG1sNUNsb25lfHxwLmlzWE1MRG9jKGEpfHwhYnUudGVzdChcIjxcIithLm5vZGVOYW1lK1wiPlwiKT9nPWEuY2xvbmVOb2RlKCEwKTooYkIuaW5uZXJIVE1MPWEub3V0ZXJIVE1MLGJCLnJlbW92ZUNoaWxkKGc9YkIuZmlyc3RDaGlsZCkpO2lmKCghcC5zdXBwb3J0Lm5vQ2xvbmVFdmVudHx8IXAuc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCkmJihhLm5vZGVUeXBlPT09MXx8YS5ub2RlVHlwZT09PTExKSYmIXAuaXNYTUxEb2MoYSkpe2JFKGEsZyksZD1iRihhKSxlPWJGKGcpO2ZvcihmPTA7ZFtmXTsrK2YpZVtmXSYmYkUoZFtmXSxlW2ZdKX1pZihiKXtiRChhLGcpO2lmKGMpe2Q9YkYoYSksZT1iRihnKTtmb3IoZj0wO2RbZl07KytmKWJEKGRbZl0sZVtmXSl9fXJldHVybiBkPWU9bnVsbCxnfSxjbGVhbjpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZixnLGgsaSxqLGssbCxtLG4sbyxxLHIscz1iPT09ZSYmYkEsdD1bXTtpZighYnx8dHlwZW9mIGIuY3JlYXRlRG9jdW1lbnRGcmFnbWVudD09XCJ1bmRlZmluZWRcIiliPWU7Zm9yKGY9MDsoaD1hW2ZdKSE9bnVsbDtmKyspe3R5cGVvZiBoPT1cIm51bWJlclwiJiYoaCs9XCJcIik7aWYoIWgpY29udGludWU7aWYodHlwZW9mIGg9PVwic3RyaW5nXCIpaWYoIWJyLnRlc3QoaCkpaD1iLmNyZWF0ZVRleHROb2RlKGgpO2Vsc2V7cz1zfHxiayhiKSxsPWIuY3JlYXRlRWxlbWVudChcImRpdlwiKSxzLmFwcGVuZENoaWxkKGwpLGg9aC5yZXBsYWNlKGJvLFwiPCQxPjwvJDI+XCIpLGk9KGJwLmV4ZWMoaCl8fFtcIlwiLFwiXCJdKVsxXS50b0xvd2VyQ2FzZSgpLGo9YnpbaV18fGJ6Ll9kZWZhdWx0LGs9alswXSxsLmlubmVySFRNTD1qWzFdK2gralsyXTt3aGlsZShrLS0pbD1sLmxhc3RDaGlsZDtpZighcC5zdXBwb3J0LnRib2R5KXttPWJxLnRlc3QoaCksbj1pPT09XCJ0YWJsZVwiJiYhbT9sLmZpcnN0Q2hpbGQmJmwuZmlyc3RDaGlsZC5jaGlsZE5vZGVzOmpbMV09PT1cIjx0YWJsZT5cIiYmIW0/bC5jaGlsZE5vZGVzOltdO2ZvcihnPW4ubGVuZ3RoLTE7Zz49MDstLWcpcC5ub2RlTmFtZShuW2ddLFwidGJvZHlcIikmJiFuW2ddLmNoaWxkTm9kZXMubGVuZ3RoJiZuW2ddLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobltnXSl9IXAuc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSYmYm4udGVzdChoKSYmbC5pbnNlcnRCZWZvcmUoYi5jcmVhdGVUZXh0Tm9kZShibi5leGVjKGgpWzBdKSxsLmZpcnN0Q2hpbGQpLGg9bC5jaGlsZE5vZGVzLGwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChsKX1oLm5vZGVUeXBlP3QucHVzaChoKTpwLm1lcmdlKHQsaCl9bCYmKGg9bD1zPW51bGwpO2lmKCFwLnN1cHBvcnQuYXBwZW5kQ2hlY2tlZClmb3IoZj0wOyhoPXRbZl0pIT1udWxsO2YrKylwLm5vZGVOYW1lKGgsXCJpbnB1dFwiKT9iRyhoKTp0eXBlb2YgaC5nZXRFbGVtZW50c0J5VGFnTmFtZSE9XCJ1bmRlZmluZWRcIiYmcC5ncmVwKGguZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbnB1dFwiKSxiRyk7aWYoYyl7cT1mdW5jdGlvbihhKXtpZighYS50eXBlfHxieC50ZXN0KGEudHlwZSkpcmV0dXJuIGQ/ZC5wdXNoKGEucGFyZW50Tm9kZT9hLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYSk6YSk6Yy5hcHBlbmRDaGlsZChhKX07Zm9yKGY9MDsoaD10W2ZdKSE9bnVsbDtmKyspaWYoIXAubm9kZU5hbWUoaCxcInNjcmlwdFwiKXx8IXEoaCkpYy5hcHBlbmRDaGlsZChoKSx0eXBlb2YgaC5nZXRFbGVtZW50c0J5VGFnTmFtZSE9XCJ1bmRlZmluZWRcIiYmKHI9cC5ncmVwKHAubWVyZ2UoW10saC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKSkscSksdC5zcGxpY2UuYXBwbHkodCxbZisxLDBdLmNvbmNhdChyKSksZis9ci5sZW5ndGgpfXJldHVybiB0fSxjbGVhbkRhdGE6ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnPTAsaD1wLmV4cGFuZG8saT1wLmNhY2hlLGo9cC5zdXBwb3J0LmRlbGV0ZUV4cGFuZG8saz1wLmV2ZW50LnNwZWNpYWw7Zm9yKDsoZT1hW2ddKSE9bnVsbDtnKyspaWYoYnx8cC5hY2NlcHREYXRhKGUpKXtkPWVbaF0sYz1kJiZpW2RdO2lmKGMpe2lmKGMuZXZlbnRzKWZvcihmIGluIGMuZXZlbnRzKWtbZl0/cC5ldmVudC5yZW1vdmUoZSxmKTpwLnJlbW92ZUV2ZW50KGUsZixjLmhhbmRsZSk7aVtkXSYmKGRlbGV0ZSBpW2RdLGo/ZGVsZXRlIGVbaF06ZS5yZW1vdmVBdHRyaWJ1dGU/ZS5yZW1vdmVBdHRyaWJ1dGUoaCk6ZVtoXT1udWxsLHAuZGVsZXRlZElkcy5wdXNoKGQpKX19fX0pLGZ1bmN0aW9uKCl7dmFyIGEsYjtwLnVhTWF0Y2g9ZnVuY3Rpb24oYSl7YT1hLnRvTG93ZXJDYXNlKCk7dmFyIGI9LyhjaHJvbWUpWyBcXC9dKFtcXHcuXSspLy5leGVjKGEpfHwvKHdlYmtpdClbIFxcL10oW1xcdy5dKykvLmV4ZWMoYSl8fC8ob3BlcmEpKD86Lip2ZXJzaW9ufClbIFxcL10oW1xcdy5dKykvLmV4ZWMoYSl8fC8obXNpZSkgKFtcXHcuXSspLy5leGVjKGEpfHxhLmluZGV4T2YoXCJjb21wYXRpYmxlXCIpPDAmJi8obW96aWxsYSkoPzouKj8gcnY6KFtcXHcuXSspfCkvLmV4ZWMoYSl8fFtdO3JldHVybnticm93c2VyOmJbMV18fFwiXCIsdmVyc2lvbjpiWzJdfHxcIjBcIn19LGE9cC51YU1hdGNoKGcudXNlckFnZW50KSxiPXt9LGEuYnJvd3NlciYmKGJbYS5icm93c2VyXT0hMCxiLnZlcnNpb249YS52ZXJzaW9uKSxiLmNocm9tZT9iLndlYmtpdD0hMDpiLndlYmtpdCYmKGIuc2FmYXJpPSEwKSxwLmJyb3dzZXI9YixwLnN1Yj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYixjKXtyZXR1cm4gbmV3IGEuZm4uaW5pdChiLGMpfXAuZXh0ZW5kKCEwLGEsdGhpcyksYS5zdXBlcmNsYXNzPXRoaXMsYS5mbj1hLnByb3RvdHlwZT10aGlzKCksYS5mbi5jb25zdHJ1Y3Rvcj1hLGEuc3ViPXRoaXMuc3ViLGEuZm4uaW5pdD1mdW5jdGlvbiBjKGMsZCl7cmV0dXJuIGQmJmQgaW5zdGFuY2VvZiBwJiYhKGQgaW5zdGFuY2VvZiBhKSYmKGQ9YShkKSkscC5mbi5pbml0LmNhbGwodGhpcyxjLGQsYil9LGEuZm4uaW5pdC5wcm90b3R5cGU9YS5mbjt2YXIgYj1hKGUpO3JldHVybiBhfX0oKTt2YXIgYkgsYkksYkosYks9L2FscGhhXFwoW14pXSpcXCkvaSxiTD0vb3BhY2l0eT0oW14pXSopLyxiTT0vXih0b3B8cmlnaHR8Ym90dG9tfGxlZnQpJC8sYk49L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLGJPPS9ebWFyZ2luLyxiUD1uZXcgUmVnRXhwKFwiXihcIitxK1wiKSguKikkXCIsXCJpXCIpLGJRPW5ldyBSZWdFeHAoXCJeKFwiK3ErXCIpKD8hcHgpW2EteiVdKyRcIixcImlcIiksYlI9bmV3IFJlZ0V4cChcIl4oWy0rXSk9KFwiK3ErXCIpXCIsXCJpXCIpLGJTPXt9LGJUPXtwb3NpdGlvbjpcImFic29sdXRlXCIsdmlzaWJpbGl0eTpcImhpZGRlblwiLGRpc3BsYXk6XCJibG9ja1wifSxiVT17bGV0dGVyU3BhY2luZzowLGZvbnRXZWlnaHQ6NDAwfSxiVj1bXCJUb3BcIixcIlJpZ2h0XCIsXCJCb3R0b21cIixcIkxlZnRcIl0sYlc9W1wiV2Via2l0XCIsXCJPXCIsXCJNb3pcIixcIm1zXCJdLGJYPXAuZm4udG9nZ2xlO3AuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24oYSxjKXtyZXR1cm4gcC5hY2Nlc3ModGhpcyxmdW5jdGlvbihhLGMsZCl7cmV0dXJuIGQhPT1iP3Auc3R5bGUoYSxjLGQpOnAuY3NzKGEsYyl9LGEsYyxhcmd1bWVudHMubGVuZ3RoPjEpfSxzaG93OmZ1bmN0aW9uKCl7cmV0dXJuIGIkKHRoaXMsITApfSxoaWRlOmZ1bmN0aW9uKCl7cmV0dXJuIGIkKHRoaXMpfSx0b2dnbGU6ZnVuY3Rpb24oYSxiKXt2YXIgYz10eXBlb2YgYT09XCJib29sZWFuXCI7cmV0dXJuIHAuaXNGdW5jdGlvbihhKSYmcC5pc0Z1bmN0aW9uKGIpP2JYLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmVhY2goZnVuY3Rpb24oKXsoYz9hOmJaKHRoaXMpKT9wKHRoaXMpLnNob3coKTpwKHRoaXMpLmhpZGUoKX0pfX0pLHAuZXh0ZW5kKHtjc3NIb29rczp7b3BhY2l0eTp7Z2V0OmZ1bmN0aW9uKGEsYil7aWYoYil7dmFyIGM9YkgoYSxcIm9wYWNpdHlcIik7cmV0dXJuIGM9PT1cIlwiP1wiMVwiOmN9fX19LGNzc051bWJlcjp7ZmlsbE9wYWNpdHk6ITAsZm9udFdlaWdodDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOntcImZsb2F0XCI6cC5zdXBwb3J0LmNzc0Zsb2F0P1wiY3NzRmxvYXRcIjpcInN0eWxlRmxvYXRcIn0sc3R5bGU6ZnVuY3Rpb24oYSxjLGQsZSl7aWYoIWF8fGEubm9kZVR5cGU9PT0zfHxhLm5vZGVUeXBlPT09OHx8IWEuc3R5bGUpcmV0dXJuO3ZhciBmLGcsaCxpPXAuY2FtZWxDYXNlKGMpLGo9YS5zdHlsZTtjPXAuY3NzUHJvcHNbaV18fChwLmNzc1Byb3BzW2ldPWJZKGosaSkpLGg9cC5jc3NIb29rc1tjXXx8cC5jc3NIb29rc1tpXTtpZihkPT09YilyZXR1cm4gaCYmXCJnZXRcImluIGgmJihmPWguZ2V0KGEsITEsZSkpIT09Yj9mOmpbY107Zz10eXBlb2YgZCxnPT09XCJzdHJpbmdcIiYmKGY9YlIuZXhlYyhkKSkmJihkPShmWzFdKzEpKmZbMl0rcGFyc2VGbG9hdChwLmNzcyhhLGMpKSxnPVwibnVtYmVyXCIpO2lmKGQ9PW51bGx8fGc9PT1cIm51bWJlclwiJiZpc05hTihkKSlyZXR1cm47Zz09PVwibnVtYmVyXCImJiFwLmNzc051bWJlcltpXSYmKGQrPVwicHhcIik7aWYoIWh8fCEoXCJzZXRcImluIGgpfHwoZD1oLnNldChhLGQsZSkpIT09Yil0cnl7altjXT1kfWNhdGNoKGspe319LGNzczpmdW5jdGlvbihhLGMsZCxlKXt2YXIgZixnLGgsaT1wLmNhbWVsQ2FzZShjKTtyZXR1cm4gYz1wLmNzc1Byb3BzW2ldfHwocC5jc3NQcm9wc1tpXT1iWShhLnN0eWxlLGkpKSxoPXAuY3NzSG9va3NbY118fHAuY3NzSG9va3NbaV0saCYmXCJnZXRcImluIGgmJihmPWguZ2V0KGEsITAsZSkpLGY9PT1iJiYoZj1iSChhLGMpKSxmPT09XCJub3JtYWxcIiYmYyBpbiBiVSYmKGY9YlVbY10pLGR8fGUhPT1iPyhnPXBhcnNlRmxvYXQoZiksZHx8cC5pc051bWVyaWMoZyk/Z3x8MDpmKTpmfSxzd2FwOmZ1bmN0aW9uKGEsYixjKXt2YXIgZCxlLGY9e307Zm9yKGUgaW4gYilmW2VdPWEuc3R5bGVbZV0sYS5zdHlsZVtlXT1iW2VdO2Q9Yy5jYWxsKGEpO2ZvcihlIGluIGIpYS5zdHlsZVtlXT1mW2VdO3JldHVybiBkfX0pLGEuZ2V0Q29tcHV0ZWRTdHlsZT9iSD1mdW5jdGlvbihiLGMpe3ZhciBkLGUsZixnLGg9YS5nZXRDb21wdXRlZFN0eWxlKGIsbnVsbCksaT1iLnN0eWxlO3JldHVybiBoJiYoZD1oW2NdLGQ9PT1cIlwiJiYhcC5jb250YWlucyhiLm93bmVyRG9jdW1lbnQsYikmJihkPXAuc3R5bGUoYixjKSksYlEudGVzdChkKSYmYk8udGVzdChjKSYmKGU9aS53aWR0aCxmPWkubWluV2lkdGgsZz1pLm1heFdpZHRoLGkubWluV2lkdGg9aS5tYXhXaWR0aD1pLndpZHRoPWQsZD1oLndpZHRoLGkud2lkdGg9ZSxpLm1pbldpZHRoPWYsaS5tYXhXaWR0aD1nKSksZH06ZS5kb2N1bWVudEVsZW1lbnQuY3VycmVudFN0eWxlJiYoYkg9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU9YS5jdXJyZW50U3R5bGUmJmEuY3VycmVudFN0eWxlW2JdLGY9YS5zdHlsZTtyZXR1cm4gZT09bnVsbCYmZiYmZltiXSYmKGU9ZltiXSksYlEudGVzdChlKSYmIWJNLnRlc3QoYikmJihjPWYubGVmdCxkPWEucnVudGltZVN0eWxlJiZhLnJ1bnRpbWVTdHlsZS5sZWZ0LGQmJihhLnJ1bnRpbWVTdHlsZS5sZWZ0PWEuY3VycmVudFN0eWxlLmxlZnQpLGYubGVmdD1iPT09XCJmb250U2l6ZVwiP1wiMWVtXCI6ZSxlPWYucGl4ZWxMZWZ0K1wicHhcIixmLmxlZnQ9YyxkJiYoYS5ydW50aW1lU3R5bGUubGVmdD1kKSksZT09PVwiXCI/XCJhdXRvXCI6ZX0pLHAuZWFjaChbXCJoZWlnaHRcIixcIndpZHRoXCJdLGZ1bmN0aW9uKGEsYil7cC5jc3NIb29rc1tiXT17Z2V0OmZ1bmN0aW9uKGEsYyxkKXtpZihjKXJldHVybiBhLm9mZnNldFdpZHRoPT09MCYmYk4udGVzdChiSChhLFwiZGlzcGxheVwiKSk/cC5zd2FwKGEsYlQsZnVuY3Rpb24oKXtyZXR1cm4gY2IoYSxiLGQpfSk6Y2IoYSxiLGQpfSxzZXQ6ZnVuY3Rpb24oYSxjLGQpe3JldHVybiBiXyhhLGMsZD9jYShhLGIsZCxwLnN1cHBvcnQuYm94U2l6aW5nJiZwLmNzcyhhLFwiYm94U2l6aW5nXCIpPT09XCJib3JkZXItYm94XCIpOjApfX19KSxwLnN1cHBvcnQub3BhY2l0eXx8KHAuY3NzSG9va3Mub3BhY2l0eT17Z2V0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIGJMLnRlc3QoKGImJmEuY3VycmVudFN0eWxlP2EuY3VycmVudFN0eWxlLmZpbHRlcjphLnN0eWxlLmZpbHRlcil8fFwiXCIpPy4wMSpwYXJzZUZsb2F0KFJlZ0V4cC4kMSkrXCJcIjpiP1wiMVwiOlwiXCJ9LHNldDpmdW5jdGlvbihhLGIpe3ZhciBjPWEuc3R5bGUsZD1hLmN1cnJlbnRTdHlsZSxlPXAuaXNOdW1lcmljKGIpP1wiYWxwaGEob3BhY2l0eT1cIitiKjEwMCtcIilcIjpcIlwiLGY9ZCYmZC5maWx0ZXJ8fGMuZmlsdGVyfHxcIlwiO2Muem9vbT0xO2lmKGI+PTEmJnAudHJpbShmLnJlcGxhY2UoYkssXCJcIikpPT09XCJcIiYmYy5yZW1vdmVBdHRyaWJ1dGUpe2MucmVtb3ZlQXR0cmlidXRlKFwiZmlsdGVyXCIpO2lmKGQmJiFkLmZpbHRlcilyZXR1cm59Yy5maWx0ZXI9YksudGVzdChmKT9mLnJlcGxhY2UoYkssZSk6ZitcIiBcIitlfX0pLHAoZnVuY3Rpb24oKXtwLnN1cHBvcnQucmVsaWFibGVNYXJnaW5SaWdodHx8KHAuY3NzSG9va3MubWFyZ2luUmlnaHQ9e2dldDpmdW5jdGlvbihhLGIpe3JldHVybiBwLnN3YXAoYSx7ZGlzcGxheTpcImlubGluZS1ibG9ja1wifSxmdW5jdGlvbigpe2lmKGIpcmV0dXJuIGJIKGEsXCJtYXJnaW5SaWdodFwiKX0pfX0pLCFwLnN1cHBvcnQucGl4ZWxQb3NpdGlvbiYmcC5mbi5wb3NpdGlvbiYmcC5lYWNoKFtcInRvcFwiLFwibGVmdFwiXSxmdW5jdGlvbihhLGIpe3AuY3NzSG9va3NbYl09e2dldDpmdW5jdGlvbihhLGMpe2lmKGMpe3ZhciBkPWJIKGEsYik7cmV0dXJuIGJRLnRlc3QoZCk/cChhKS5wb3NpdGlvbigpW2JdK1wicHhcIjpkfX19fSl9KSxwLmV4cHImJnAuZXhwci5maWx0ZXJzJiYocC5leHByLmZpbHRlcnMuaGlkZGVuPWZ1bmN0aW9uKGEpe3JldHVybiBhLm9mZnNldFdpZHRoPT09MCYmYS5vZmZzZXRIZWlnaHQ9PT0wfHwhcC5zdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyYmKGEuc3R5bGUmJmEuc3R5bGUuZGlzcGxheXx8YkgoYSxcImRpc3BsYXlcIikpPT09XCJub25lXCJ9LHAuZXhwci5maWx0ZXJzLnZpc2libGU9ZnVuY3Rpb24oYSl7cmV0dXJuIXAuZXhwci5maWx0ZXJzLmhpZGRlbihhKX0pLHAuZWFjaCh7bWFyZ2luOlwiXCIscGFkZGluZzpcIlwiLGJvcmRlcjpcIldpZHRoXCJ9LGZ1bmN0aW9uKGEsYil7cC5jc3NIb29rc1thK2JdPXtleHBhbmQ6ZnVuY3Rpb24oYyl7dmFyIGQsZT10eXBlb2YgYz09XCJzdHJpbmdcIj9jLnNwbGl0KFwiIFwiKTpbY10sZj17fTtmb3IoZD0wO2Q8NDtkKyspZlthK2JWW2RdK2JdPWVbZF18fGVbZC0yXXx8ZVswXTtyZXR1cm4gZn19LGJPLnRlc3QoYSl8fChwLmNzc0hvb2tzW2ErYl0uc2V0PWJfKX0pO3ZhciBjZD0vJTIwL2csY2U9L1xcW1xcXSQvLGNmPS9cXHI/XFxuL2csY2c9L14oPzpjb2xvcnxkYXRlfGRhdGV0aW1lfGRhdGV0aW1lLWxvY2FsfGVtYWlsfGhpZGRlbnxtb250aHxudW1iZXJ8cGFzc3dvcmR8cmFuZ2V8c2VhcmNofHRlbHx0ZXh0fHRpbWV8dXJsfHdlZWspJC9pLGNoPS9eKD86c2VsZWN0fHRleHRhcmVhKS9pO3AuZm4uZXh0ZW5kKHtzZXJpYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gcC5wYXJhbSh0aGlzLnNlcmlhbGl6ZUFycmF5KCkpfSxzZXJpYWxpemVBcnJheTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnRzP3AubWFrZUFycmF5KHRoaXMuZWxlbWVudHMpOnRoaXN9KS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5uYW1lJiYhdGhpcy5kaXNhYmxlZCYmKHRoaXMuY2hlY2tlZHx8Y2gudGVzdCh0aGlzLm5vZGVOYW1lKXx8Y2cudGVzdCh0aGlzLnR5cGUpKX0pLm1hcChmdW5jdGlvbihhLGIpe3ZhciBjPXAodGhpcykudmFsKCk7cmV0dXJuIGM9PW51bGw/bnVsbDpwLmlzQXJyYXkoYyk/cC5tYXAoYyxmdW5jdGlvbihhLGMpe3JldHVybntuYW1lOmIubmFtZSx2YWx1ZTphLnJlcGxhY2UoY2YsXCJcXHJcXG5cIil9fSk6e25hbWU6Yi5uYW1lLHZhbHVlOmMucmVwbGFjZShjZixcIlxcclxcblwiKX19KS5nZXQoKX19KSxwLnBhcmFtPWZ1bmN0aW9uKGEsYyl7dmFyIGQsZT1bXSxmPWZ1bmN0aW9uKGEsYil7Yj1wLmlzRnVuY3Rpb24oYik/YigpOmI9PW51bGw/XCJcIjpiLGVbZS5sZW5ndGhdPWVuY29kZVVSSUNvbXBvbmVudChhKStcIj1cIitlbmNvZGVVUklDb21wb25lbnQoYil9O2M9PT1iJiYoYz1wLmFqYXhTZXR0aW5ncyYmcC5hamF4U2V0dGluZ3MudHJhZGl0aW9uYWwpO2lmKHAuaXNBcnJheShhKXx8YS5qcXVlcnkmJiFwLmlzUGxhaW5PYmplY3QoYSkpcC5lYWNoKGEsZnVuY3Rpb24oKXtmKHRoaXMubmFtZSx0aGlzLnZhbHVlKX0pO2Vsc2UgZm9yKGQgaW4gYSljaShkLGFbZF0sYyxmKTtyZXR1cm4gZS5qb2luKFwiJlwiKS5yZXBsYWNlKGNkLFwiK1wiKX07dmFyIGNqLGNrLGNsPS8jLiokLyxjbT0vXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKilcXHI/JC9tZyxjbj0vXig/OmFib3V0fGFwcHxhcHBcXC1zdG9yYWdlfC4rXFwtZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sY289L14oPzpHRVR8SEVBRCkkLyxjcD0vXlxcL1xcLy8sY3E9L1xcPy8sY3I9LzxzY3JpcHRcXGJbXjxdKig/Oig/ITxcXC9zY3JpcHQ+KTxbXjxdKikqPFxcL3NjcmlwdD4vZ2ksY3M9LyhbPyZdKV89W14mXSovLGN0PS9eKFtcXHdcXCtcXC5cXC1dKzopKD86XFwvXFwvKFteXFwvPyM6XSopKD86OihcXGQrKXwpfCkvLGN1PXAuZm4ubG9hZCxjdj17fSxjdz17fSxjeD1bXCIqL1wiXStbXCIqXCJdO3RyeXtjaz1mLmhyZWZ9Y2F0Y2goY3kpe2NrPWUuY3JlYXRlRWxlbWVudChcImFcIiksY2suaHJlZj1cIlwiLGNrPWNrLmhyZWZ9Y2o9Y3QuZXhlYyhjay50b0xvd2VyQ2FzZSgpKXx8W10scC5mbi5sb2FkPWZ1bmN0aW9uKGEsYyxkKXtpZih0eXBlb2YgYSE9XCJzdHJpbmdcIiYmY3UpcmV0dXJuIGN1LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZighdGhpcy5sZW5ndGgpcmV0dXJuIHRoaXM7dmFyIGUsZixnLGg9dGhpcyxpPWEuaW5kZXhPZihcIiBcIik7cmV0dXJuIGk+PTAmJihlPWEuc2xpY2UoaSxhLmxlbmd0aCksYT1hLnNsaWNlKDAsaSkpLHAuaXNGdW5jdGlvbihjKT8oZD1jLGM9Yik6YyYmdHlwZW9mIGM9PVwib2JqZWN0XCImJihmPVwiUE9TVFwiKSxwLmFqYXgoe3VybDphLHR5cGU6ZixkYXRhVHlwZTpcImh0bWxcIixkYXRhOmMsY29tcGxldGU6ZnVuY3Rpb24oYSxiKXtkJiZoLmVhY2goZCxnfHxbYS5yZXNwb25zZVRleHQsYixhXSl9fSkuZG9uZShmdW5jdGlvbihhKXtnPWFyZ3VtZW50cyxoLmh0bWwoZT9wKFwiPGRpdj5cIikuYXBwZW5kKGEucmVwbGFjZShjcixcIlwiKSkuZmluZChlKTphKX0pLHRoaXN9LHAuZWFjaChcImFqYXhTdGFydCBhamF4U3RvcCBhamF4Q29tcGxldGUgYWpheEVycm9yIGFqYXhTdWNjZXNzIGFqYXhTZW5kXCIuc3BsaXQoXCIgXCIpLGZ1bmN0aW9uKGEsYil7cC5mbltiXT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5vbihiLGEpfX0pLHAuZWFjaChbXCJnZXRcIixcInBvc3RcIl0sZnVuY3Rpb24oYSxjKXtwW2NdPWZ1bmN0aW9uKGEsZCxlLGYpe3JldHVybiBwLmlzRnVuY3Rpb24oZCkmJihmPWZ8fGUsZT1kLGQ9YikscC5hamF4KHt0eXBlOmMsdXJsOmEsZGF0YTpkLHN1Y2Nlc3M6ZSxkYXRhVHlwZTpmfSl9fSkscC5leHRlbmQoe2dldFNjcmlwdDpmdW5jdGlvbihhLGMpe3JldHVybiBwLmdldChhLGIsYyxcInNjcmlwdFwiKX0sZ2V0SlNPTjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIHAuZ2V0KGEsYixjLFwianNvblwiKX0sYWpheFNldHVwOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGI/Y0IoYSxwLmFqYXhTZXR0aW5ncyk6KGI9YSxhPXAuYWpheFNldHRpbmdzKSxjQihhLGIpLGF9LGFqYXhTZXR0aW5nczp7dXJsOmNrLGlzTG9jYWw6Y24udGVzdChjalsxXSksZ2xvYmFsOiEwLHR5cGU6XCJHRVRcIixjb250ZW50VHlwZTpcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLHByb2Nlc3NEYXRhOiEwLGFzeW5jOiEwLGFjY2VwdHM6e3htbDpcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixodG1sOlwidGV4dC9odG1sXCIsdGV4dDpcInRleHQvcGxhaW5cIixqc29uOlwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCIsXCIqXCI6Y3h9LGNvbnRlbnRzOnt4bWw6L3htbC8saHRtbDovaHRtbC8sanNvbjovanNvbi99LHJlc3BvbnNlRmllbGRzOnt4bWw6XCJyZXNwb25zZVhNTFwiLHRleHQ6XCJyZXNwb25zZVRleHRcIn0sY29udmVydGVyczp7XCIqIHRleHRcIjphLlN0cmluZyxcInRleHQgaHRtbFwiOiEwLFwidGV4dCBqc29uXCI6cC5wYXJzZUpTT04sXCJ0ZXh0IHhtbFwiOnAucGFyc2VYTUx9LGZsYXRPcHRpb25zOntjb250ZXh0OiEwLHVybDohMH19LGFqYXhQcmVmaWx0ZXI6Y3ooY3YpLGFqYXhUcmFuc3BvcnQ6Y3ooY3cpLGFqYXg6ZnVuY3Rpb24oYSxjKXtmdW5jdGlvbiB5KGEsYyxmLGkpe3ZhciBrLHMsdCx1LHcseT1jO2lmKHY9PT0yKXJldHVybjt2PTIsaCYmY2xlYXJUaW1lb3V0KGgpLGc9YixlPWl8fFwiXCIseC5yZWFkeVN0YXRlPWE+MD80OjAsZiYmKHU9Y0MobCx4LGYpKTtpZihhPj0yMDAmJmE8MzAwfHxhPT09MzA0KWwuaWZNb2RpZmllZCYmKHc9eC5nZXRSZXNwb25zZUhlYWRlcihcIkxhc3QtTW9kaWZpZWRcIiksdyYmKHAubGFzdE1vZGlmaWVkW2RdPXcpLHc9eC5nZXRSZXNwb25zZUhlYWRlcihcIkV0YWdcIiksdyYmKHAuZXRhZ1tkXT13KSksYT09PTMwND8oeT1cIm5vdG1vZGlmaWVkXCIsaz0hMCk6KGs9Y0QobCx1KSx5PWsuc3RhdGUscz1rLmRhdGEsdD1rLmVycm9yLGs9IXQpO2Vsc2V7dD15O2lmKCF5fHxhKXk9XCJlcnJvclwiLGE8MCYmKGE9MCl9eC5zdGF0dXM9YSx4LnN0YXR1c1RleHQ9KGN8fHkpK1wiXCIsaz9vLnJlc29sdmVXaXRoKG0sW3MseSx4XSk6by5yZWplY3RXaXRoKG0sW3gseSx0XSkseC5zdGF0dXNDb2RlKHIpLHI9YixqJiZuLnRyaWdnZXIoXCJhamF4XCIrKGs/XCJTdWNjZXNzXCI6XCJFcnJvclwiKSxbeCxsLGs/czp0XSkscS5maXJlV2l0aChtLFt4LHldKSxqJiYobi50cmlnZ2VyKFwiYWpheENvbXBsZXRlXCIsW3gsbF0pLC0tcC5hY3RpdmV8fHAuZXZlbnQudHJpZ2dlcihcImFqYXhTdG9wXCIpKX10eXBlb2YgYT09XCJvYmplY3RcIiYmKGM9YSxhPWIpLGM9Y3x8e307dmFyIGQsZSxmLGcsaCxpLGosayxsPXAuYWpheFNldHVwKHt9LGMpLG09bC5jb250ZXh0fHxsLG49bSE9PWwmJihtLm5vZGVUeXBlfHxtIGluc3RhbmNlb2YgcCk/cChtKTpwLmV2ZW50LG89cC5EZWZlcnJlZCgpLHE9cC5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSxyPWwuc3RhdHVzQ29kZXx8e30sdD17fSx1PXt9LHY9MCx3PVwiY2FuY2VsZWRcIix4PXtyZWFkeVN0YXRlOjAsc2V0UmVxdWVzdEhlYWRlcjpmdW5jdGlvbihhLGIpe2lmKCF2KXt2YXIgYz1hLnRvTG93ZXJDYXNlKCk7YT11W2NdPXVbY118fGEsdFthXT1ifXJldHVybiB0aGlzfSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gdj09PTI/ZTpudWxsfSxnZXRSZXNwb25zZUhlYWRlcjpmdW5jdGlvbihhKXt2YXIgYztpZih2PT09Mil7aWYoIWYpe2Y9e307d2hpbGUoYz1jbS5leGVjKGUpKWZbY1sxXS50b0xvd2VyQ2FzZSgpXT1jWzJdfWM9ZlthLnRvTG93ZXJDYXNlKCldfXJldHVybiBjPT09Yj9udWxsOmN9LG92ZXJyaWRlTWltZVR5cGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHZ8fChsLm1pbWVUeXBlPWEpLHRoaXN9LGFib3J0OmZ1bmN0aW9uKGEpe3JldHVybiBhPWF8fHcsZyYmZy5hYm9ydChhKSx5KDAsYSksdGhpc319O28ucHJvbWlzZSh4KSx4LnN1Y2Nlc3M9eC5kb25lLHguZXJyb3I9eC5mYWlsLHguY29tcGxldGU9cS5hZGQseC5zdGF0dXNDb2RlPWZ1bmN0aW9uKGEpe2lmKGEpe3ZhciBiO2lmKHY8Milmb3IoYiBpbiBhKXJbYl09W3JbYl0sYVtiXV07ZWxzZSBiPWFbeC5zdGF0dXNdLHguYWx3YXlzKGIpfXJldHVybiB0aGlzfSxsLnVybD0oKGF8fGwudXJsKStcIlwiKS5yZXBsYWNlKGNsLFwiXCIpLnJlcGxhY2UoY3AsY2pbMV0rXCIvL1wiKSxsLmRhdGFUeXBlcz1wLnRyaW0obC5kYXRhVHlwZXx8XCIqXCIpLnRvTG93ZXJDYXNlKCkuc3BsaXQocyksbC5jcm9zc0RvbWFpbj09bnVsbCYmKGk9Y3QuZXhlYyhsLnVybC50b0xvd2VyQ2FzZSgpKXx8ITEsbC5jcm9zc0RvbWFpbj1pJiZpLmpvaW4oXCI6XCIpKyhpWzNdP1wiXCI6aVsxXT09PVwiaHR0cDpcIj84MDo0NDMpIT09Y2ouam9pbihcIjpcIikrKGNqWzNdP1wiXCI6Y2pbMV09PT1cImh0dHA6XCI/ODA6NDQzKSksbC5kYXRhJiZsLnByb2Nlc3NEYXRhJiZ0eXBlb2YgbC5kYXRhIT1cInN0cmluZ1wiJiYobC5kYXRhPXAucGFyYW0obC5kYXRhLGwudHJhZGl0aW9uYWwpKSxjQShjdixsLGMseCk7aWYodj09PTIpcmV0dXJuIHg7aj1sLmdsb2JhbCxsLnR5cGU9bC50eXBlLnRvVXBwZXJDYXNlKCksbC5oYXNDb250ZW50PSFjby50ZXN0KGwudHlwZSksaiYmcC5hY3RpdmUrKz09PTAmJnAuZXZlbnQudHJpZ2dlcihcImFqYXhTdGFydFwiKTtpZighbC5oYXNDb250ZW50KXtsLmRhdGEmJihsLnVybCs9KGNxLnRlc3QobC51cmwpP1wiJlwiOlwiP1wiKStsLmRhdGEsZGVsZXRlIGwuZGF0YSksZD1sLnVybDtpZihsLmNhY2hlPT09ITEpe3ZhciB6PXAubm93KCksQT1sLnVybC5yZXBsYWNlKGNzLFwiJDFfPVwiK3opO2wudXJsPUErKEE9PT1sLnVybD8oY3EudGVzdChsLnVybCk/XCImXCI6XCI/XCIpK1wiXz1cIit6OlwiXCIpfX0obC5kYXRhJiZsLmhhc0NvbnRlbnQmJmwuY29udGVudFR5cGUhPT0hMXx8Yy5jb250ZW50VHlwZSkmJnguc2V0UmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLGwuY29udGVudFR5cGUpLGwuaWZNb2RpZmllZCYmKGQ9ZHx8bC51cmwscC5sYXN0TW9kaWZpZWRbZF0mJnguc2V0UmVxdWVzdEhlYWRlcihcIklmLU1vZGlmaWVkLVNpbmNlXCIscC5sYXN0TW9kaWZpZWRbZF0pLHAuZXRhZ1tkXSYmeC5zZXRSZXF1ZXN0SGVhZGVyKFwiSWYtTm9uZS1NYXRjaFwiLHAuZXRhZ1tkXSkpLHguc2V0UmVxdWVzdEhlYWRlcihcIkFjY2VwdFwiLGwuZGF0YVR5cGVzWzBdJiZsLmFjY2VwdHNbbC5kYXRhVHlwZXNbMF1dP2wuYWNjZXB0c1tsLmRhdGFUeXBlc1swXV0rKGwuZGF0YVR5cGVzWzBdIT09XCIqXCI/XCIsIFwiK2N4K1wiOyBxPTAuMDFcIjpcIlwiKTpsLmFjY2VwdHNbXCIqXCJdKTtmb3IoayBpbiBsLmhlYWRlcnMpeC5zZXRSZXF1ZXN0SGVhZGVyKGssbC5oZWFkZXJzW2tdKTtpZighbC5iZWZvcmVTZW5kfHxsLmJlZm9yZVNlbmQuY2FsbChtLHgsbCkhPT0hMSYmdiE9PTIpe3c9XCJhYm9ydFwiO2ZvcihrIGlue3N1Y2Nlc3M6MSxlcnJvcjoxLGNvbXBsZXRlOjF9KXhba10obFtrXSk7Zz1jQShjdyxsLGMseCk7aWYoIWcpeSgtMSxcIk5vIFRyYW5zcG9ydFwiKTtlbHNle3gucmVhZHlTdGF0ZT0xLGomJm4udHJpZ2dlcihcImFqYXhTZW5kXCIsW3gsbF0pLGwuYXN5bmMmJmwudGltZW91dD4wJiYoaD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eC5hYm9ydChcInRpbWVvdXRcIil9LGwudGltZW91dCkpO3RyeXt2PTEsZy5zZW5kKHQseSl9Y2F0Y2goQil7aWYodjwyKXkoLTEsQik7ZWxzZSB0aHJvdyBCfX1yZXR1cm4geH1yZXR1cm4geC5hYm9ydCgpfSxhY3RpdmU6MCxsYXN0TW9kaWZpZWQ6e30sZXRhZzp7fX0pO3ZhciBjRT1bXSxjRj0vXFw/LyxjRz0vKD0pXFw/KD89JnwkKXxcXD9cXD8vLGNIPXAubm93KCk7cC5hamF4U2V0dXAoe2pzb25wOlwiY2FsbGJhY2tcIixqc29ucENhbGxiYWNrOmZ1bmN0aW9uKCl7dmFyIGE9Y0UucG9wKCl8fHAuZXhwYW5kbytcIl9cIitjSCsrO3JldHVybiB0aGlzW2FdPSEwLGF9fSkscC5hamF4UHJlZmlsdGVyKFwianNvbiBqc29ucFwiLGZ1bmN0aW9uKGMsZCxlKXt2YXIgZixnLGgsaT1jLmRhdGEsaj1jLnVybCxrPWMuanNvbnAhPT0hMSxsPWsmJmNHLnRlc3QoaiksbT1rJiYhbCYmdHlwZW9mIGk9PVwic3RyaW5nXCImJiEoYy5jb250ZW50VHlwZXx8XCJcIikuaW5kZXhPZihcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSYmY0cudGVzdChpKTtpZihjLmRhdGFUeXBlc1swXT09PVwianNvbnBcInx8bHx8bSlyZXR1cm4gZj1jLmpzb25wQ2FsbGJhY2s9cC5pc0Z1bmN0aW9uKGMuanNvbnBDYWxsYmFjayk/Yy5qc29ucENhbGxiYWNrKCk6Yy5qc29ucENhbGxiYWNrLGc9YVtmXSxsP2MudXJsPWoucmVwbGFjZShjRyxcIiQxXCIrZik6bT9jLmRhdGE9aS5yZXBsYWNlKGNHLFwiJDFcIitmKTprJiYoYy51cmwrPShjRi50ZXN0KGopP1wiJlwiOlwiP1wiKStjLmpzb25wK1wiPVwiK2YpLGMuY29udmVydGVyc1tcInNjcmlwdCBqc29uXCJdPWZ1bmN0aW9uKCl7cmV0dXJuIGh8fHAuZXJyb3IoZitcIiB3YXMgbm90IGNhbGxlZFwiKSxoWzBdfSxjLmRhdGFUeXBlc1swXT1cImpzb25cIixhW2ZdPWZ1bmN0aW9uKCl7aD1hcmd1bWVudHN9LGUuYWx3YXlzKGZ1bmN0aW9uKCl7YVtmXT1nLGNbZl0mJihjLmpzb25wQ2FsbGJhY2s9ZC5qc29ucENhbGxiYWNrLGNFLnB1c2goZikpLGgmJnAuaXNGdW5jdGlvbihnKSYmZyhoWzBdKSxoPWc9Yn0pLFwic2NyaXB0XCJ9KSxwLmFqYXhTZXR1cCh7YWNjZXB0czp7c2NyaXB0OlwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIn0sY29udGVudHM6e3NjcmlwdDovamF2YXNjcmlwdHxlY21hc2NyaXB0L30sY29udmVydGVyczp7XCJ0ZXh0IHNjcmlwdFwiOmZ1bmN0aW9uKGEpe3JldHVybiBwLmdsb2JhbEV2YWwoYSksYX19fSkscC5hamF4UHJlZmlsdGVyKFwic2NyaXB0XCIsZnVuY3Rpb24oYSl7YS5jYWNoZT09PWImJihhLmNhY2hlPSExKSxhLmNyb3NzRG9tYWluJiYoYS50eXBlPVwiR0VUXCIsYS5nbG9iYWw9ITEpfSkscC5hamF4VHJhbnNwb3J0KFwic2NyaXB0XCIsZnVuY3Rpb24oYSl7aWYoYS5jcm9zc0RvbWFpbil7dmFyIGMsZD1lLmhlYWR8fGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdfHxlLmRvY3VtZW50RWxlbWVudDtyZXR1cm57c2VuZDpmdW5jdGlvbihmLGcpe2M9ZS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpLGMuYXN5bmM9XCJhc3luY1wiLGEuc2NyaXB0Q2hhcnNldCYmKGMuY2hhcnNldD1hLnNjcmlwdENoYXJzZXQpLGMuc3JjPWEudXJsLGMub25sb2FkPWMub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKGEsZSl7aWYoZXx8IWMucmVhZHlTdGF0ZXx8L2xvYWRlZHxjb21wbGV0ZS8udGVzdChjLnJlYWR5U3RhdGUpKWMub25sb2FkPWMub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsZCYmYy5wYXJlbnROb2RlJiZkLnJlbW92ZUNoaWxkKGMpLGM9YixlfHxnKDIwMCxcInN1Y2Nlc3NcIil9LGQuaW5zZXJ0QmVmb3JlKGMsZC5maXJzdENoaWxkKX0sYWJvcnQ6ZnVuY3Rpb24oKXtjJiZjLm9ubG9hZCgwLDEpfX19fSk7dmFyIGNJLGNKPWEuQWN0aXZlWE9iamVjdD9mdW5jdGlvbigpe2Zvcih2YXIgYSBpbiBjSSljSVthXSgwLDEpfTohMSxjSz0wO3AuYWpheFNldHRpbmdzLnhocj1hLkFjdGl2ZVhPYmplY3Q/ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5pc0xvY2FsJiZjTCgpfHxjTSgpfTpjTCxmdW5jdGlvbihhKXtwLmV4dGVuZChwLnN1cHBvcnQse2FqYXg6ISFhLGNvcnM6ISFhJiZcIndpdGhDcmVkZW50aWFsc1wiaW4gYX0pfShwLmFqYXhTZXR0aW5ncy54aHIoKSkscC5zdXBwb3J0LmFqYXgmJnAuYWpheFRyYW5zcG9ydChmdW5jdGlvbihjKXtpZighYy5jcm9zc0RvbWFpbnx8cC5zdXBwb3J0LmNvcnMpe3ZhciBkO3JldHVybntzZW5kOmZ1bmN0aW9uKGUsZil7dmFyIGcsaCxpPWMueGhyKCk7Yy51c2VybmFtZT9pLm9wZW4oYy50eXBlLGMudXJsLGMuYXN5bmMsYy51c2VybmFtZSxjLnBhc3N3b3JkKTppLm9wZW4oYy50eXBlLGMudXJsLGMuYXN5bmMpO2lmKGMueGhyRmllbGRzKWZvcihoIGluIGMueGhyRmllbGRzKWlbaF09Yy54aHJGaWVsZHNbaF07Yy5taW1lVHlwZSYmaS5vdmVycmlkZU1pbWVUeXBlJiZpLm92ZXJyaWRlTWltZVR5cGUoYy5taW1lVHlwZSksIWMuY3Jvc3NEb21haW4mJiFlW1wiWC1SZXF1ZXN0ZWQtV2l0aFwiXSYmKGVbXCJYLVJlcXVlc3RlZC1XaXRoXCJdPVwiWE1MSHR0cFJlcXVlc3RcIik7dHJ5e2ZvcihoIGluIGUpaS5zZXRSZXF1ZXN0SGVhZGVyKGgsZVtoXSl9Y2F0Y2goail7fWkuc2VuZChjLmhhc0NvbnRlbnQmJmMuZGF0YXx8bnVsbCksZD1mdW5jdGlvbihhLGUpe3ZhciBoLGosayxsLG07dHJ5e2lmKGQmJihlfHxpLnJlYWR5U3RhdGU9PT00KSl7ZD1iLGcmJihpLm9ucmVhZHlzdGF0ZWNoYW5nZT1wLm5vb3AsY0omJmRlbGV0ZSBjSVtnXSk7aWYoZSlpLnJlYWR5U3RhdGUhPT00JiZpLmFib3J0KCk7ZWxzZXtoPWkuc3RhdHVzLGs9aS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSxsPXt9LG09aS5yZXNwb25zZVhNTCxtJiZtLmRvY3VtZW50RWxlbWVudCYmKGwueG1sPW0pO3RyeXtsLnRleHQ9aS5yZXNwb25zZVRleHR9Y2F0Y2goYSl7fXRyeXtqPWkuc3RhdHVzVGV4dH1jYXRjaChuKXtqPVwiXCJ9IWgmJmMuaXNMb2NhbCYmIWMuY3Jvc3NEb21haW4/aD1sLnRleHQ/MjAwOjQwNDpoPT09MTIyMyYmKGg9MjA0KX19fWNhdGNoKG8pe2V8fGYoLTEsbyl9bCYmZihoLGosbCxrKX0sYy5hc3luYz9pLnJlYWR5U3RhdGU9PT00P3NldFRpbWVvdXQoZCwwKTooZz0rK2NLLGNKJiYoY0l8fChjST17fSxwKGEpLnVubG9hZChjSikpLGNJW2ddPWQpLGkub25yZWFkeXN0YXRlY2hhbmdlPWQpOmQoKX0sYWJvcnQ6ZnVuY3Rpb24oKXtkJiZkKDAsMSl9fX19KTt2YXIgY04sY08sY1A9L14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLGNRPW5ldyBSZWdFeHAoXCJeKD86KFstK10pPXwpKFwiK3ErXCIpKFthLXolXSopJFwiLFwiaVwiKSxjUj0vcXVldWVIb29rcyQvLGNTPVtjWV0sY1Q9e1wiKlwiOltmdW5jdGlvbihhLGIpe3ZhciBjLGQsZT10aGlzLmNyZWF0ZVR3ZWVuKGEsYiksZj1jUS5leGVjKGIpLGc9ZS5jdXIoKSxoPStnfHwwLGk9MSxqPTIwO2lmKGYpe2M9K2ZbMl0sZD1mWzNdfHwocC5jc3NOdW1iZXJbYV0/XCJcIjpcInB4XCIpO2lmKGQhPT1cInB4XCImJmgpe2g9cC5jc3MoZS5lbGVtLGEsITApfHxjfHwxO2RvIGk9aXx8XCIuNVwiLGg9aC9pLHAuc3R5bGUoZS5lbGVtLGEsaCtkKTt3aGlsZShpIT09KGk9ZS5jdXIoKS9nKSYmaSE9PTEmJi0tail9ZS51bml0PWQsZS5zdGFydD1oLGUuZW5kPWZbMV0/aCsoZlsxXSsxKSpjOmN9cmV0dXJuIGV9XX07cC5BbmltYXRpb249cC5leHRlbmQoY1cse3R3ZWVuZXI6ZnVuY3Rpb24oYSxiKXtwLmlzRnVuY3Rpb24oYSk/KGI9YSxhPVtcIipcIl0pOmE9YS5zcGxpdChcIiBcIik7dmFyIGMsZD0wLGU9YS5sZW5ndGg7Zm9yKDtkPGU7ZCsrKWM9YVtkXSxjVFtjXT1jVFtjXXx8W10sY1RbY10udW5zaGlmdChiKX0scHJlZmlsdGVyOmZ1bmN0aW9uKGEsYil7Yj9jUy51bnNoaWZ0KGEpOmNTLnB1c2goYSl9fSkscC5Ud2Vlbj1jWixjWi5wcm90b3R5cGU9e2NvbnN0cnVjdG9yOmNaLGluaXQ6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe3RoaXMuZWxlbT1hLHRoaXMucHJvcD1jLHRoaXMuZWFzaW5nPWV8fFwic3dpbmdcIix0aGlzLm9wdGlvbnM9Yix0aGlzLnN0YXJ0PXRoaXMubm93PXRoaXMuY3VyKCksdGhpcy5lbmQ9ZCx0aGlzLnVuaXQ9Znx8KHAuY3NzTnVtYmVyW2NdP1wiXCI6XCJweFwiKX0sY3VyOmZ1bmN0aW9uKCl7dmFyIGE9Y1oucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIGEmJmEuZ2V0P2EuZ2V0KHRoaXMpOmNaLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbihhKXt2YXIgYixjPWNaLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiB0aGlzLm9wdGlvbnMuZHVyYXRpb24/dGhpcy5wb3M9Yj1wLmVhc2luZ1t0aGlzLmVhc2luZ10oYSx0aGlzLm9wdGlvbnMuZHVyYXRpb24qYSwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKTp0aGlzLnBvcz1iPWEsdGhpcy5ub3c9KHRoaXMuZW5kLXRoaXMuc3RhcnQpKmIrdGhpcy5zdGFydCx0aGlzLm9wdGlvbnMuc3RlcCYmdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCh0aGlzLmVsZW0sdGhpcy5ub3csdGhpcyksYyYmYy5zZXQ/Yy5zZXQodGhpcyk6Y1oucHJvcEhvb2tzLl9kZWZhdWx0LnNldCh0aGlzKSx0aGlzfX0sY1oucHJvdG90eXBlLmluaXQucHJvdG90eXBlPWNaLnByb3RvdHlwZSxjWi5wcm9wSG9va3M9e19kZWZhdWx0OntnZXQ6ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuIGEuZWxlbVthLnByb3BdPT1udWxsfHwhIWEuZWxlbS5zdHlsZSYmYS5lbGVtLnN0eWxlW2EucHJvcF0hPW51bGw/KGI9cC5jc3MoYS5lbGVtLGEucHJvcCwhMSxcIlwiKSwhYnx8Yj09PVwiYXV0b1wiPzA6Yik6YS5lbGVtW2EucHJvcF19LHNldDpmdW5jdGlvbihhKXtwLmZ4LnN0ZXBbYS5wcm9wXT9wLmZ4LnN0ZXBbYS5wcm9wXShhKTphLmVsZW0uc3R5bGUmJihhLmVsZW0uc3R5bGVbcC5jc3NQcm9wc1thLnByb3BdXSE9bnVsbHx8cC5jc3NIb29rc1thLnByb3BdKT9wLnN0eWxlKGEuZWxlbSxhLnByb3AsYS5ub3crYS51bml0KTphLmVsZW1bYS5wcm9wXT1hLm5vd319fSxjWi5wcm9wSG9va3Muc2Nyb2xsVG9wPWNaLnByb3BIb29rcy5zY3JvbGxMZWZ0PXtzZXQ6ZnVuY3Rpb24oYSl7YS5lbGVtLm5vZGVUeXBlJiZhLmVsZW0ucGFyZW50Tm9kZSYmKGEuZWxlbVthLnByb3BdPWEubm93KX19LHAuZWFjaChbXCJ0b2dnbGVcIixcInNob3dcIixcImhpZGVcIl0sZnVuY3Rpb24oYSxiKXt2YXIgYz1wLmZuW2JdO3AuZm5bYl09ZnVuY3Rpb24oZCxlLGYpe3JldHVybiBkPT1udWxsfHx0eXBlb2YgZD09XCJib29sZWFuXCJ8fCFhJiZwLmlzRnVuY3Rpb24oZCkmJnAuaXNGdW5jdGlvbihlKT9jLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmFuaW1hdGUoYyQoYiwhMCksZCxlLGYpfX0pLHAuZm4uZXh0ZW5kKHtmYWRlVG86ZnVuY3Rpb24oYSxiLGMsZCl7cmV0dXJuIHRoaXMuZmlsdGVyKGJaKS5jc3MoXCJvcGFjaXR5XCIsMCkuc2hvdygpLmVuZCgpLmFuaW1hdGUoe29wYWNpdHk6Yn0sYSxjLGQpfSxhbmltYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXAuaXNFbXB0eU9iamVjdChhKSxmPXAuc3BlZWQoYixjLGQpLGc9ZnVuY3Rpb24oKXt2YXIgYj1jVyh0aGlzLHAuZXh0ZW5kKHt9LGEpLGYpO2UmJmIuc3RvcCghMCl9O3JldHVybiBlfHxmLnF1ZXVlPT09ITE/dGhpcy5lYWNoKGcpOnRoaXMucXVldWUoZi5xdWV1ZSxnKX0sc3RvcDpmdW5jdGlvbihhLGMsZCl7dmFyIGU9ZnVuY3Rpb24oYSl7dmFyIGI9YS5zdG9wO2RlbGV0ZSBhLnN0b3AsYihkKX07cmV0dXJuIHR5cGVvZiBhIT1cInN0cmluZ1wiJiYoZD1jLGM9YSxhPWIpLGMmJmEhPT0hMSYmdGhpcy5xdWV1ZShhfHxcImZ4XCIsW10pLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBiPSEwLGM9YSE9bnVsbCYmYStcInF1ZXVlSG9va3NcIixmPXAudGltZXJzLGc9cC5fZGF0YSh0aGlzKTtpZihjKWdbY10mJmdbY10uc3RvcCYmZShnW2NdKTtlbHNlIGZvcihjIGluIGcpZ1tjXSYmZ1tjXS5zdG9wJiZjUi50ZXN0KGMpJiZlKGdbY10pO2ZvcihjPWYubGVuZ3RoO2MtLTspZltjXS5lbGVtPT09dGhpcyYmKGE9PW51bGx8fGZbY10ucXVldWU9PT1hKSYmKGZbY10uYW5pbS5zdG9wKGQpLGI9ITEsZi5zcGxpY2UoYywxKSk7KGJ8fCFkKSYmcC5kZXF1ZXVlKHRoaXMsYSl9KX19KSxwLmVhY2goe3NsaWRlRG93bjpjJChcInNob3dcIiksc2xpZGVVcDpjJChcImhpZGVcIiksc2xpZGVUb2dnbGU6YyQoXCJ0b2dnbGVcIiksZmFkZUluOntvcGFjaXR5Olwic2hvd1wifSxmYWRlT3V0OntvcGFjaXR5OlwiaGlkZVwifSxmYWRlVG9nZ2xlOntvcGFjaXR5OlwidG9nZ2xlXCJ9fSxmdW5jdGlvbihhLGIpe3AuZm5bYV09ZnVuY3Rpb24oYSxjLGQpe3JldHVybiB0aGlzLmFuaW1hdGUoYixhLGMsZCl9fSkscC5zcGVlZD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9YSYmdHlwZW9mIGE9PVwib2JqZWN0XCI/cC5leHRlbmQoe30sYSk6e2NvbXBsZXRlOmN8fCFjJiZifHxwLmlzRnVuY3Rpb24oYSkmJmEsZHVyYXRpb246YSxlYXNpbmc6YyYmYnx8YiYmIXAuaXNGdW5jdGlvbihiKSYmYn07ZC5kdXJhdGlvbj1wLmZ4Lm9mZj8wOnR5cGVvZiBkLmR1cmF0aW9uPT1cIm51bWJlclwiP2QuZHVyYXRpb246ZC5kdXJhdGlvbiBpbiBwLmZ4LnNwZWVkcz9wLmZ4LnNwZWVkc1tkLmR1cmF0aW9uXTpwLmZ4LnNwZWVkcy5fZGVmYXVsdDtpZihkLnF1ZXVlPT1udWxsfHxkLnF1ZXVlPT09ITApZC5xdWV1ZT1cImZ4XCI7cmV0dXJuIGQub2xkPWQuY29tcGxldGUsZC5jb21wbGV0ZT1mdW5jdGlvbigpe3AuaXNGdW5jdGlvbihkLm9sZCkmJmQub2xkLmNhbGwodGhpcyksZC5xdWV1ZSYmcC5kZXF1ZXVlKHRoaXMsZC5xdWV1ZSl9LGR9LHAuZWFzaW5nPXtsaW5lYXI6ZnVuY3Rpb24oYSl7cmV0dXJuIGF9LHN3aW5nOmZ1bmN0aW9uKGEpe3JldHVybi41LU1hdGguY29zKGEqTWF0aC5QSSkvMn19LHAudGltZXJzPVtdLHAuZng9Y1oucHJvdG90eXBlLmluaXQscC5meC50aWNrPWZ1bmN0aW9uKCl7dmFyIGEsYj1wLnRpbWVycyxjPTA7Zm9yKDtjPGIubGVuZ3RoO2MrKylhPWJbY10sIWEoKSYmYltjXT09PWEmJmIuc3BsaWNlKGMtLSwxKTtiLmxlbmd0aHx8cC5meC5zdG9wKCl9LHAuZngudGltZXI9ZnVuY3Rpb24oYSl7YSgpJiZwLnRpbWVycy5wdXNoKGEpJiYhY08mJihjTz1zZXRJbnRlcnZhbChwLmZ4LnRpY2sscC5meC5pbnRlcnZhbCkpfSxwLmZ4LmludGVydmFsPTEzLHAuZnguc3RvcD1mdW5jdGlvbigpe2NsZWFySW50ZXJ2YWwoY08pLGNPPW51bGx9LHAuZnguc3BlZWRzPXtzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVsdDo0MDB9LHAuZnguc3RlcD17fSxwLmV4cHImJnAuZXhwci5maWx0ZXJzJiYocC5leHByLmZpbHRlcnMuYW5pbWF0ZWQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHAuZ3JlcChwLnRpbWVycyxmdW5jdGlvbihiKXtyZXR1cm4gYT09PWIuZWxlbX0pLmxlbmd0aH0pO3ZhciBjXz0vXig/OmJvZHl8aHRtbCkkL2k7cC5mbi5vZmZzZXQ9ZnVuY3Rpb24oYSl7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gYT09PWI/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oYil7cC5vZmZzZXQuc2V0T2Zmc2V0KHRoaXMsYSxiKX0pO3ZhciBjLGQsZSxmLGcsaCxpLGo9e3RvcDowLGxlZnQ6MH0saz10aGlzWzBdLGw9ayYmay5vd25lckRvY3VtZW50O2lmKCFsKXJldHVybjtyZXR1cm4oZD1sLmJvZHkpPT09az9wLm9mZnNldC5ib2R5T2Zmc2V0KGspOihjPWwuZG9jdW1lbnRFbGVtZW50LHAuY29udGFpbnMoYyxrKT8odHlwZW9mIGsuZ2V0Qm91bmRpbmdDbGllbnRSZWN0IT1cInVuZGVmaW5lZFwiJiYoaj1rLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSxlPWRhKGwpLGY9Yy5jbGllbnRUb3B8fGQuY2xpZW50VG9wfHwwLGc9Yy5jbGllbnRMZWZ0fHxkLmNsaWVudExlZnR8fDAsaD1lLnBhZ2VZT2Zmc2V0fHxjLnNjcm9sbFRvcCxpPWUucGFnZVhPZmZzZXR8fGMuc2Nyb2xsTGVmdCx7dG9wOmoudG9wK2gtZixsZWZ0OmoubGVmdCtpLWd9KTpqKX0scC5vZmZzZXQ9e2JvZHlPZmZzZXQ6ZnVuY3Rpb24oYSl7dmFyIGI9YS5vZmZzZXRUb3AsYz1hLm9mZnNldExlZnQ7cmV0dXJuIHAuc3VwcG9ydC5kb2VzTm90SW5jbHVkZU1hcmdpbkluQm9keU9mZnNldCYmKGIrPXBhcnNlRmxvYXQocC5jc3MoYSxcIm1hcmdpblRvcFwiKSl8fDAsYys9cGFyc2VGbG9hdChwLmNzcyhhLFwibWFyZ2luTGVmdFwiKSl8fDApLHt0b3A6YixsZWZ0OmN9fSxzZXRPZmZzZXQ6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXAuY3NzKGEsXCJwb3NpdGlvblwiKTtkPT09XCJzdGF0aWNcIiYmKGEuc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiKTt2YXIgZT1wKGEpLGY9ZS5vZmZzZXQoKSxnPXAuY3NzKGEsXCJ0b3BcIiksaD1wLmNzcyhhLFwibGVmdFwiKSxpPShkPT09XCJhYnNvbHV0ZVwifHxkPT09XCJmaXhlZFwiKSYmcC5pbkFycmF5KFwiYXV0b1wiLFtnLGhdKT4tMSxqPXt9LGs9e30sbCxtO2k/KGs9ZS5wb3NpdGlvbigpLGw9ay50b3AsbT1rLmxlZnQpOihsPXBhcnNlRmxvYXQoZyl8fDAsbT1wYXJzZUZsb2F0KGgpfHwwKSxwLmlzRnVuY3Rpb24oYikmJihiPWIuY2FsbChhLGMsZikpLGIudG9wIT1udWxsJiYoai50b3A9Yi50b3AtZi50b3ArbCksYi5sZWZ0IT1udWxsJiYoai5sZWZ0PWIubGVmdC1mLmxlZnQrbSksXCJ1c2luZ1wiaW4gYj9iLnVzaW5nLmNhbGwoYSxqKTplLmNzcyhqKX19LHAuZm4uZXh0ZW5kKHtwb3NpdGlvbjpmdW5jdGlvbigpe2lmKCF0aGlzWzBdKXJldHVybjt2YXIgYT10aGlzWzBdLGI9dGhpcy5vZmZzZXRQYXJlbnQoKSxjPXRoaXMub2Zmc2V0KCksZD1jXy50ZXN0KGJbMF0ubm9kZU5hbWUpP3t0b3A6MCxsZWZ0OjB9OmIub2Zmc2V0KCk7cmV0dXJuIGMudG9wLT1wYXJzZUZsb2F0KHAuY3NzKGEsXCJtYXJnaW5Ub3BcIikpfHwwLGMubGVmdC09cGFyc2VGbG9hdChwLmNzcyhhLFwibWFyZ2luTGVmdFwiKSl8fDAsZC50b3ArPXBhcnNlRmxvYXQocC5jc3MoYlswXSxcImJvcmRlclRvcFdpZHRoXCIpKXx8MCxkLmxlZnQrPXBhcnNlRmxvYXQocC5jc3MoYlswXSxcImJvcmRlckxlZnRXaWR0aFwiKSl8fDAse3RvcDpjLnRvcC1kLnRvcCxsZWZ0OmMubGVmdC1kLmxlZnR9fSxvZmZzZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgYT10aGlzLm9mZnNldFBhcmVudHx8ZS5ib2R5O3doaWxlKGEmJiFjXy50ZXN0KGEubm9kZU5hbWUpJiZwLmNzcyhhLFwicG9zaXRpb25cIik9PT1cInN0YXRpY1wiKWE9YS5vZmZzZXRQYXJlbnQ7cmV0dXJuIGF8fGUuYm9keX0pfX0pLHAuZWFjaCh7c2Nyb2xsTGVmdDpcInBhZ2VYT2Zmc2V0XCIsc2Nyb2xsVG9wOlwicGFnZVlPZmZzZXRcIn0sZnVuY3Rpb24oYSxjKXt2YXIgZD0vWS8udGVzdChjKTtwLmZuW2FdPWZ1bmN0aW9uKGUpe3JldHVybiBwLmFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGEsZSxmKXt2YXIgZz1kYShhKTtpZihmPT09YilyZXR1cm4gZz9jIGluIGc/Z1tjXTpnLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtlXTphW2VdO2c/Zy5zY3JvbGxUbyhkP3AoZykuc2Nyb2xsTGVmdCgpOmYsZD9mOnAoZykuc2Nyb2xsVG9wKCkpOmFbZV09Zn0sYSxlLGFyZ3VtZW50cy5sZW5ndGgsbnVsbCl9fSkscC5lYWNoKHtIZWlnaHQ6XCJoZWlnaHRcIixXaWR0aDpcIndpZHRoXCJ9LGZ1bmN0aW9uKGEsYyl7cC5lYWNoKHtwYWRkaW5nOlwiaW5uZXJcIithLGNvbnRlbnQ6YyxcIlwiOlwib3V0ZXJcIithfSxmdW5jdGlvbihkLGUpe3AuZm5bZV09ZnVuY3Rpb24oZSxmKXt2YXIgZz1hcmd1bWVudHMubGVuZ3RoJiYoZHx8dHlwZW9mIGUhPVwiYm9vbGVhblwiKSxoPWR8fChlPT09ITB8fGY9PT0hMD9cIm1hcmdpblwiOlwiYm9yZGVyXCIpO3JldHVybiBwLmFjY2Vzcyh0aGlzLGZ1bmN0aW9uKGMsZCxlKXt2YXIgZjtyZXR1cm4gcC5pc1dpbmRvdyhjKT9jLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtcImNsaWVudFwiK2FdOmMubm9kZVR5cGU9PT05PyhmPWMuZG9jdW1lbnRFbGVtZW50LE1hdGgubWF4KGMuYm9keVtcInNjcm9sbFwiK2FdLGZbXCJzY3JvbGxcIithXSxjLmJvZHlbXCJvZmZzZXRcIithXSxmW1wib2Zmc2V0XCIrYV0sZltcImNsaWVudFwiK2FdKSk6ZT09PWI/cC5jc3MoYyxkLGUsaCk6cC5zdHlsZShjLGQsZSxoKX0sYyxnP2U6YixnLG51bGwpfX0pfSksYS5qUXVlcnk9YS4kPXAsdHlwZW9mIGRlZmluZT09XCJmdW5jdGlvblwiJiZkZWZpbmUuYW1kJiZkZWZpbmUuYW1kLmpRdWVyeSYmZGVmaW5lKFwianF1ZXJ5XCIsW10sZnVuY3Rpb24oKXtyZXR1cm4gcH0pfSkod2luZG93KTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vanF1ZXJ5L2xpYi9qcXVlcnkubWluLmpzXG4gKiogbW9kdWxlIGlkID0gM1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXztcclxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjaykvYnVpbGRpbi9hbWQtb3B0aW9ucy5qc1xuICoqIG1vZHVsZSBpZCA9IDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qISBqUXVlcnkgVUkgLSB2MS45LjIgLSAyMDE2LTA2LTE3XG4gKiBodHRwOi8vanF1ZXJ5dWkuY29tXG4gKiBJbmNsdWRlczoganF1ZXJ5LnVpLmNvcmUuanMsIGpxdWVyeS51aS53aWRnZXQuanMsIGpxdWVyeS51aS5tb3VzZS5qcywganF1ZXJ5LnVpLnBvc2l0aW9uLmpzLCBqcXVlcnkudWkuZHJhZ2dhYmxlLmpzLCBqcXVlcnkudWkucmVzaXphYmxlLmpzLCBqcXVlcnkudWkuYWNjb3JkaW9uLmpzLCBqcXVlcnkudWkuYXV0b2NvbXBsZXRlLmpzLCBqcXVlcnkudWkuYnV0dG9uLmpzLCBqcXVlcnkudWkuZGF0ZXBpY2tlci5qcywganF1ZXJ5LnVpLmRpYWxvZy5qcywganF1ZXJ5LnVpLm1lbnUuanNcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzOyBMaWNlbnNlZCBNSVQgKi9cblxuKGZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gaSh0LGkpe3ZhciBuLGEsbyxyPXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImFyZWFcIj09PXI/KG49dC5wYXJlbnROb2RlLGE9bi5uYW1lLHQuaHJlZiYmYSYmXCJtYXBcIj09PW4ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT8obz1lKFwiaW1nW3VzZW1hcD0jXCIrYStcIl1cIilbMF0sISFvJiZzKG8pKTohMSk6KC9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdC8udGVzdChyKT8hdC5kaXNhYmxlZDpcImFcIj09PXI/dC5ocmVmfHxpOmkpJiZzKHQpfWZ1bmN0aW9uIHModCl7cmV0dXJuIGUuZXhwci5maWx0ZXJzLnZpc2libGUodCkmJiFlKHQpLnBhcmVudHMoKS5hbmRTZWxmKCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuXCJoaWRkZW5cIj09PWUuY3NzKHRoaXMsXCJ2aXNpYmlsaXR5XCIpfSkubGVuZ3RofXZhciBuPTAsYT0vXnVpLWlkLVxcZCskLztlLnVpPWUudWl8fHt9LGUudWkudmVyc2lvbnx8KGUuZXh0ZW5kKGUudWkse3ZlcnNpb246XCIxLjkuMlwiLGtleUNvZGU6e0JBQ0tTUEFDRTo4LENPTU1BOjE4OCxERUxFVEU6NDYsRE9XTjo0MCxFTkQ6MzUsRU5URVI6MTMsRVNDQVBFOjI3LEhPTUU6MzYsTEVGVDozNyxOVU1QQURfQUREOjEwNyxOVU1QQURfREVDSU1BTDoxMTAsTlVNUEFEX0RJVklERToxMTEsTlVNUEFEX0VOVEVSOjEwOCxOVU1QQURfTVVMVElQTFk6MTA2LE5VTVBBRF9TVUJUUkFDVDoxMDksUEFHRV9ET1dOOjM0LFBBR0VfVVA6MzMsUEVSSU9EOjE5MCxSSUdIVDozOSxTUEFDRTozMixUQUI6OSxVUDozOH19KSxlLmZuLmV4dGVuZCh7X2ZvY3VzOmUuZm4uZm9jdXMsZm9jdXM6ZnVuY3Rpb24odCxpKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdD90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgcz10aGlzO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtlKHMpLmZvY3VzKCksaSYmaS5jYWxsKHMpfSx0KX0pOnRoaXMuX2ZvY3VzLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sc2Nyb2xsUGFyZW50OmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHQ9ZS51aS5pZSYmLyhzdGF0aWN8cmVsYXRpdmUpLy50ZXN0KHRoaXMuY3NzKFwicG9zaXRpb25cIikpfHwvYWJzb2x1dGUvLnRlc3QodGhpcy5jc3MoXCJwb3NpdGlvblwiKSk/dGhpcy5wYXJlbnRzKCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuLyhyZWxhdGl2ZXxhYnNvbHV0ZXxmaXhlZCkvLnRlc3QoZS5jc3ModGhpcyxcInBvc2l0aW9uXCIpKSYmLyhhdXRvfHNjcm9sbCkvLnRlc3QoZS5jc3ModGhpcyxcIm92ZXJmbG93XCIpK2UuY3NzKHRoaXMsXCJvdmVyZmxvdy15XCIpK2UuY3NzKHRoaXMsXCJvdmVyZmxvdy14XCIpKX0pLmVxKDApOnRoaXMucGFyZW50cygpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybi8oYXV0b3xzY3JvbGwpLy50ZXN0KGUuY3NzKHRoaXMsXCJvdmVyZmxvd1wiKStlLmNzcyh0aGlzLFwib3ZlcmZsb3cteVwiKStlLmNzcyh0aGlzLFwib3ZlcmZsb3cteFwiKSl9KS5lcSgwKSwvZml4ZWQvLnRlc3QodGhpcy5jc3MoXCJwb3NpdGlvblwiKSl8fCF0Lmxlbmd0aD9lKGRvY3VtZW50KTp0fSx6SW5kZXg6ZnVuY3Rpb24oaSl7aWYoaSE9PXQpcmV0dXJuIHRoaXMuY3NzKFwiekluZGV4XCIsaSk7aWYodGhpcy5sZW5ndGgpZm9yKHZhciBzLG4sYT1lKHRoaXNbMF0pO2EubGVuZ3RoJiZhWzBdIT09ZG9jdW1lbnQ7KXtpZihzPWEuY3NzKFwicG9zaXRpb25cIiksKFwiYWJzb2x1dGVcIj09PXN8fFwicmVsYXRpdmVcIj09PXN8fFwiZml4ZWRcIj09PXMpJiYobj1wYXJzZUludChhLmNzcyhcInpJbmRleFwiKSwxMCksIWlzTmFOKG4pJiYwIT09bikpcmV0dXJuIG47YT1hLnBhcmVudCgpfXJldHVybiAwfSx1bmlxdWVJZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt0aGlzLmlkfHwodGhpcy5pZD1cInVpLWlkLVwiKyArK24pfSl9LHJlbW92ZVVuaXF1ZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2EudGVzdCh0aGlzLmlkKSYmZSh0aGlzKS5yZW1vdmVBdHRyKFwiaWRcIil9KX19KSxlLmV4dGVuZChlLmV4cHJbXCI6XCJdLHtkYXRhOmUuZXhwci5jcmVhdGVQc2V1ZG8/ZS5leHByLmNyZWF0ZVBzZXVkbyhmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oaSl7cmV0dXJuISFlLmRhdGEoaSx0KX19KTpmdW5jdGlvbih0LGkscyl7cmV0dXJuISFlLmRhdGEodCxzWzNdKX0sZm9jdXNhYmxlOmZ1bmN0aW9uKHQpe3JldHVybiBpKHQsIWlzTmFOKGUuYXR0cih0LFwidGFiaW5kZXhcIikpKX0sdGFiYmFibGU6ZnVuY3Rpb24odCl7dmFyIHM9ZS5hdHRyKHQsXCJ0YWJpbmRleFwiKSxuPWlzTmFOKHMpO3JldHVybihufHxzPj0wKSYmaSh0LCFuKX19KSxlKGZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuYm9keSxpPXQuYXBwZW5kQ2hpbGQoaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKTtpLm9mZnNldEhlaWdodCxlLmV4dGVuZChpLnN0eWxlLHttaW5IZWlnaHQ6XCIxMDBweFwiLGhlaWdodDpcImF1dG9cIixwYWRkaW5nOjAsYm9yZGVyV2lkdGg6MH0pLGUuc3VwcG9ydC5taW5IZWlnaHQ9MTAwPT09aS5vZmZzZXRIZWlnaHQsZS5zdXBwb3J0LnNlbGVjdHN0YXJ0PVwib25zZWxlY3RzdGFydFwiaW4gaSx0LnJlbW92ZUNoaWxkKGkpLnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9KSxlKFwiPGE+XCIpLm91dGVyV2lkdGgoMSkuanF1ZXJ5fHxlLmVhY2goW1wiV2lkdGhcIixcIkhlaWdodFwiXSxmdW5jdGlvbihpLHMpe2Z1bmN0aW9uIG4odCxpLHMsbil7cmV0dXJuIGUuZWFjaChhLGZ1bmN0aW9uKCl7aS09cGFyc2VGbG9hdChlLmNzcyh0LFwicGFkZGluZ1wiK3RoaXMpKXx8MCxzJiYoaS09cGFyc2VGbG9hdChlLmNzcyh0LFwiYm9yZGVyXCIrdGhpcytcIldpZHRoXCIpKXx8MCksbiYmKGktPXBhcnNlRmxvYXQoZS5jc3ModCxcIm1hcmdpblwiK3RoaXMpKXx8MCl9KSxpfXZhciBhPVwiV2lkdGhcIj09PXM/W1wiTGVmdFwiLFwiUmlnaHRcIl06W1wiVG9wXCIsXCJCb3R0b21cIl0sbz1zLnRvTG93ZXJDYXNlKCkscj17aW5uZXJXaWR0aDplLmZuLmlubmVyV2lkdGgsaW5uZXJIZWlnaHQ6ZS5mbi5pbm5lckhlaWdodCxvdXRlcldpZHRoOmUuZm4ub3V0ZXJXaWR0aCxvdXRlckhlaWdodDplLmZuLm91dGVySGVpZ2h0fTtlLmZuW1wiaW5uZXJcIitzXT1mdW5jdGlvbihpKXtyZXR1cm4gaT09PXQ/cltcImlubmVyXCIrc10uY2FsbCh0aGlzKTp0aGlzLmVhY2goZnVuY3Rpb24oKXtlKHRoaXMpLmNzcyhvLG4odGhpcyxpKStcInB4XCIpfSl9LGUuZm5bXCJvdXRlclwiK3NdPWZ1bmN0aW9uKHQsaSl7cmV0dXJuXCJudW1iZXJcIiE9dHlwZW9mIHQ/cltcIm91dGVyXCIrc10uY2FsbCh0aGlzLHQpOnRoaXMuZWFjaChmdW5jdGlvbigpe2UodGhpcykuY3NzKG8sbih0aGlzLHQsITAsaSkrXCJweFwiKX0pfX0pLGUoXCI8YT5cIikuZGF0YShcImEtYlwiLFwiYVwiKS5yZW1vdmVEYXRhKFwiYS1iXCIpLmRhdGEoXCJhLWJcIikmJihlLmZuLnJlbW92ZURhdGE9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGkpe3JldHVybiBhcmd1bWVudHMubGVuZ3RoP3QuY2FsbCh0aGlzLGUuY2FtZWxDYXNlKGkpKTp0LmNhbGwodGhpcyl9fShlLmZuLnJlbW92ZURhdGEpKSxmdW5jdGlvbigpe3ZhciB0PS9tc2llIChbXFx3Ll0rKS8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpfHxbXTtlLnVpLmllPXQubGVuZ3RoPyEwOiExLGUudWkuaWU2PTY9PT1wYXJzZUZsb2F0KHRbMV0sMTApfSgpLGUuZm4uZXh0ZW5kKHtkaXNhYmxlU2VsZWN0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYmluZCgoZS5zdXBwb3J0LnNlbGVjdHN0YXJ0P1wic2VsZWN0c3RhcnRcIjpcIm1vdXNlZG93blwiKStcIi51aS1kaXNhYmxlU2VsZWN0aW9uXCIsZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpfSl9LGVuYWJsZVNlbGVjdGlvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnVuYmluZChcIi51aS1kaXNhYmxlU2VsZWN0aW9uXCIpfX0pLGUuZXh0ZW5kKGUudWkse3BsdWdpbjp7YWRkOmZ1bmN0aW9uKHQsaSxzKXt2YXIgbixhPWUudWlbdF0ucHJvdG90eXBlO2ZvcihuIGluIHMpYS5wbHVnaW5zW25dPWEucGx1Z2luc1tuXXx8W10sYS5wbHVnaW5zW25dLnB1c2goW2ksc1tuXV0pfSxjYWxsOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcyxuPWUucGx1Z2luc1t0XTtpZihuJiZlLmVsZW1lbnRbMF0ucGFyZW50Tm9kZSYmMTEhPT1lLmVsZW1lbnRbMF0ucGFyZW50Tm9kZS5ub2RlVHlwZSlmb3Iocz0wO24ubGVuZ3RoPnM7cysrKWUub3B0aW9uc1tuW3NdWzBdXSYmbltzXVsxXS5hcHBseShlLmVsZW1lbnQsaSl9fSxjb250YWluczplLmNvbnRhaW5zLGhhc1Njcm9sbDpmdW5jdGlvbih0LGkpe2lmKFwiaGlkZGVuXCI9PT1lKHQpLmNzcyhcIm92ZXJmbG93XCIpKXJldHVybiExO3ZhciBzPWkmJlwibGVmdFwiPT09aT9cInNjcm9sbExlZnRcIjpcInNjcm9sbFRvcFwiLG49ITE7cmV0dXJuIHRbc10+MD8hMDoodFtzXT0xLG49dFtzXT4wLHRbc109MCxuKX0saXNPdmVyQXhpczpmdW5jdGlvbihlLHQsaSl7cmV0dXJuIGU+dCYmdCtpPmV9LGlzT3ZlcjpmdW5jdGlvbih0LGkscyxuLGEsbyl7cmV0dXJuIGUudWkuaXNPdmVyQXhpcyh0LHMsYSkmJmUudWkuaXNPdmVyQXhpcyhpLG4sbyl9fSkpfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSx0KXt2YXIgaT0wLHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLG49ZS5jbGVhbkRhdGE7ZS5jbGVhbkRhdGE9ZnVuY3Rpb24odCl7Zm9yKHZhciBpLHM9MDtudWxsIT0oaT10W3NdKTtzKyspdHJ5e2UoaSkudHJpZ2dlckhhbmRsZXIoXCJyZW1vdmVcIil9Y2F0Y2goYSl7fW4odCl9LGUud2lkZ2V0PWZ1bmN0aW9uKGkscyxuKXt2YXIgYSxvLHIsaCxsPWkuc3BsaXQoXCIuXCIpWzBdO2k9aS5zcGxpdChcIi5cIilbMV0sYT1sK1wiLVwiK2ksbnx8KG49cyxzPWUuV2lkZ2V0KSxlLmV4cHJbXCI6XCJdW2EudG9Mb3dlckNhc2UoKV09ZnVuY3Rpb24odCl7cmV0dXJuISFlLmRhdGEodCxhKX0sZVtsXT1lW2xdfHx7fSxvPWVbbF1baV0scj1lW2xdW2ldPWZ1bmN0aW9uKGUsaSl7cmV0dXJuIHRoaXMuX2NyZWF0ZVdpZGdldD8oYXJndW1lbnRzLmxlbmd0aCYmdGhpcy5fY3JlYXRlV2lkZ2V0KGUsaSksdCk6bmV3IHIoZSxpKX0sZS5leHRlbmQocixvLHt2ZXJzaW9uOm4udmVyc2lvbixfcHJvdG86ZS5leHRlbmQoe30sbiksX2NoaWxkQ29uc3RydWN0b3JzOltdfSksaD1uZXcgcyxoLm9wdGlvbnM9ZS53aWRnZXQuZXh0ZW5kKHt9LGgub3B0aW9ucyksZS5lYWNoKG4sZnVuY3Rpb24odCxpKXtlLmlzRnVuY3Rpb24oaSkmJihuW3RdPWZ1bmN0aW9uKCl7dmFyIGU9ZnVuY3Rpb24oKXtyZXR1cm4gcy5wcm90b3R5cGVbdF0uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxuPWZ1bmN0aW9uKGUpe3JldHVybiBzLnByb3RvdHlwZVt0XS5hcHBseSh0aGlzLGUpfTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdCxzPXRoaXMuX3N1cGVyLGE9dGhpcy5fc3VwZXJBcHBseTtyZXR1cm4gdGhpcy5fc3VwZXI9ZSx0aGlzLl9zdXBlckFwcGx5PW4sdD1pLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9zdXBlcj1zLHRoaXMuX3N1cGVyQXBwbHk9YSx0fX0oKSl9KSxyLnByb3RvdHlwZT1lLndpZGdldC5leHRlbmQoaCx7d2lkZ2V0RXZlbnRQcmVmaXg6bz9oLndpZGdldEV2ZW50UHJlZml4Oml9LG4se2NvbnN0cnVjdG9yOnIsbmFtZXNwYWNlOmwsd2lkZ2V0TmFtZTppLHdpZGdldEJhc2VDbGFzczphLHdpZGdldEZ1bGxOYW1lOmF9KSxvPyhlLmVhY2goby5fY2hpbGRDb25zdHJ1Y3RvcnMsZnVuY3Rpb24odCxpKXt2YXIgcz1pLnByb3RvdHlwZTtlLndpZGdldChzLm5hbWVzcGFjZStcIi5cIitzLndpZGdldE5hbWUscixpLl9wcm90byl9KSxkZWxldGUgby5fY2hpbGRDb25zdHJ1Y3RvcnMpOnMuX2NoaWxkQ29uc3RydWN0b3JzLnB1c2gociksZS53aWRnZXQuYnJpZGdlKGkscil9LGUud2lkZ2V0LmV4dGVuZD1mdW5jdGlvbihpKXtmb3IodmFyIG4sYSxvPXMuY2FsbChhcmd1bWVudHMsMSkscj0wLGg9by5sZW5ndGg7aD5yO3IrKylmb3IobiBpbiBvW3JdKWE9b1tyXVtuXSxvW3JdLmhhc093blByb3BlcnR5KG4pJiZhIT09dCYmKGlbbl09ZS5pc1BsYWluT2JqZWN0KGEpP2UuaXNQbGFpbk9iamVjdChpW25dKT9lLndpZGdldC5leHRlbmQoe30saVtuXSxhKTplLndpZGdldC5leHRlbmQoe30sYSk6YSk7cmV0dXJuIGl9LGUud2lkZ2V0LmJyaWRnZT1mdW5jdGlvbihpLG4pe3ZhciBhPW4ucHJvdG90eXBlLndpZGdldEZ1bGxOYW1lfHxpO2UuZm5baV09ZnVuY3Rpb24obyl7dmFyIHI9XCJzdHJpbmdcIj09dHlwZW9mIG8saD1zLmNhbGwoYXJndW1lbnRzLDEpLGw9dGhpcztyZXR1cm4gbz0hciYmaC5sZW5ndGg/ZS53aWRnZXQuZXh0ZW5kLmFwcGx5KG51bGwsW29dLmNvbmNhdChoKSk6byxyP3RoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBzLG49ZS5kYXRhKHRoaXMsYSk7cmV0dXJuIG4/ZS5pc0Z1bmN0aW9uKG5bb10pJiZcIl9cIiE9PW8uY2hhckF0KDApPyhzPW5bb10uYXBwbHkobixoKSxzIT09biYmcyE9PXQ/KGw9cyYmcy5qcXVlcnk/bC5wdXNoU3RhY2socy5nZXQoKSk6cywhMSk6dCk6ZS5lcnJvcihcIm5vIHN1Y2ggbWV0aG9kICdcIitvK1wiJyBmb3IgXCIraStcIiB3aWRnZXQgaW5zdGFuY2VcIik6ZS5lcnJvcihcImNhbm5vdCBjYWxsIG1ldGhvZHMgb24gXCIraStcIiBwcmlvciB0byBpbml0aWFsaXphdGlvbjsgXCIrXCJhdHRlbXB0ZWQgdG8gY2FsbCBtZXRob2QgJ1wiK28rXCInXCIpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9ZS5kYXRhKHRoaXMsYSk7dD90Lm9wdGlvbihvfHx7fSkuX2luaXQoKTplLmRhdGEodGhpcyxhLG5ldyBuKG8sdGhpcykpfSksbH19LGUuV2lkZ2V0PWZ1bmN0aW9uKCl7fSxlLldpZGdldC5fY2hpbGRDb25zdHJ1Y3RvcnM9W10sZS5XaWRnZXQucHJvdG90eXBlPXt3aWRnZXROYW1lOlwid2lkZ2V0XCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJcIixkZWZhdWx0RWxlbWVudDpcIjxkaXY+XCIsb3B0aW9uczp7ZGlzYWJsZWQ6ITEsY3JlYXRlOm51bGx9LF9jcmVhdGVXaWRnZXQ6ZnVuY3Rpb24odCxzKXtzPWUoc3x8dGhpcy5kZWZhdWx0RWxlbWVudHx8dGhpcylbMF0sdGhpcy5lbGVtZW50PWUocyksdGhpcy51dWlkPWkrKyx0aGlzLmV2ZW50TmFtZXNwYWNlPVwiLlwiK3RoaXMud2lkZ2V0TmFtZSt0aGlzLnV1aWQsdGhpcy5vcHRpb25zPWUud2lkZ2V0LmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsdGhpcy5fZ2V0Q3JlYXRlT3B0aW9ucygpLHQpLHRoaXMuYmluZGluZ3M9ZSgpLHRoaXMuaG92ZXJhYmxlPWUoKSx0aGlzLmZvY3VzYWJsZT1lKCkscyE9PXRoaXMmJihlLmRhdGEocyx0aGlzLndpZGdldE5hbWUsdGhpcyksZS5kYXRhKHMsdGhpcy53aWRnZXRGdWxsTmFtZSx0aGlzKSx0aGlzLl9vbighMCx0aGlzLmVsZW1lbnQse3JlbW92ZTpmdW5jdGlvbihlKXtlLnRhcmdldD09PXMmJnRoaXMuZGVzdHJveSgpfX0pLHRoaXMuZG9jdW1lbnQ9ZShzLnN0eWxlP3Mub3duZXJEb2N1bWVudDpzLmRvY3VtZW50fHxzKSx0aGlzLndpbmRvdz1lKHRoaXMuZG9jdW1lbnRbMF0uZGVmYXVsdFZpZXd8fHRoaXMuZG9jdW1lbnRbMF0ucGFyZW50V2luZG93KSksdGhpcy5fY3JlYXRlKCksdGhpcy5fdHJpZ2dlcihcImNyZWF0ZVwiLG51bGwsdGhpcy5fZ2V0Q3JlYXRlRXZlbnREYXRhKCkpLHRoaXMuX2luaXQoKX0sX2dldENyZWF0ZU9wdGlvbnM6ZS5ub29wLF9nZXRDcmVhdGVFdmVudERhdGE6ZS5ub29wLF9jcmVhdGU6ZS5ub29wLF9pbml0OmUubm9vcCxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fZGVzdHJveSgpLHRoaXMuZWxlbWVudC51bmJpbmQodGhpcy5ldmVudE5hbWVzcGFjZSkucmVtb3ZlRGF0YSh0aGlzLndpZGdldE5hbWUpLnJlbW92ZURhdGEodGhpcy53aWRnZXRGdWxsTmFtZSkucmVtb3ZlRGF0YShlLmNhbWVsQ2FzZSh0aGlzLndpZGdldEZ1bGxOYW1lKSksdGhpcy53aWRnZXQoKS51bmJpbmQodGhpcy5ldmVudE5hbWVzcGFjZSkucmVtb3ZlQXR0cihcImFyaWEtZGlzYWJsZWRcIikucmVtb3ZlQ2xhc3ModGhpcy53aWRnZXRGdWxsTmFtZStcIi1kaXNhYmxlZCBcIitcInVpLXN0YXRlLWRpc2FibGVkXCIpLHRoaXMuYmluZGluZ3MudW5iaW5kKHRoaXMuZXZlbnROYW1lc3BhY2UpLHRoaXMuaG92ZXJhYmxlLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksdGhpcy5mb2N1c2FibGUucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1mb2N1c1wiKX0sX2Rlc3Ryb3k6ZS5ub29wLHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnR9LG9wdGlvbjpmdW5jdGlvbihpLHMpe3ZhciBuLGEsbyxyPWk7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIGUud2lkZ2V0LmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBpKWlmKHI9e30sbj1pLnNwbGl0KFwiLlwiKSxpPW4uc2hpZnQoKSxuLmxlbmd0aCl7Zm9yKGE9cltpXT1lLndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zW2ldKSxvPTA7bi5sZW5ndGgtMT5vO28rKylhW25bb11dPWFbbltvXV18fHt9LGE9YVtuW29dXTtpZihpPW4ucG9wKCkscz09PXQpcmV0dXJuIGFbaV09PT10P251bGw6YVtpXTthW2ldPXN9ZWxzZXtpZihzPT09dClyZXR1cm4gdGhpcy5vcHRpb25zW2ldPT09dD9udWxsOnRoaXMub3B0aW9uc1tpXTtyW2ldPXN9cmV0dXJuIHRoaXMuX3NldE9wdGlvbnMociksdGhpc30sX3NldE9wdGlvbnM6ZnVuY3Rpb24oZSl7dmFyIHQ7Zm9yKHQgaW4gZSl0aGlzLl9zZXRPcHRpb24odCxlW3RdKTtyZXR1cm4gdGhpc30sX3NldE9wdGlvbjpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm9wdGlvbnNbZV09dCxcImRpc2FibGVkXCI9PT1lJiYodGhpcy53aWRnZXQoKS50b2dnbGVDbGFzcyh0aGlzLndpZGdldEZ1bGxOYW1lK1wiLWRpc2FibGVkIHVpLXN0YXRlLWRpc2FibGVkXCIsISF0KS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLHQpLHRoaXMuaG92ZXJhYmxlLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksdGhpcy5mb2N1c2FibGUucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1mb2N1c1wiKSksdGhpc30sZW5hYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsITEpfSxkaXNhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsITApfSxfb246ZnVuY3Rpb24oaSxzLG4pe3ZhciBhLG89dGhpcztcImJvb2xlYW5cIiE9dHlwZW9mIGkmJihuPXMscz1pLGk9ITEpLG4/KHM9YT1lKHMpLHRoaXMuYmluZGluZ3M9dGhpcy5iaW5kaW5ncy5hZGQocykpOihuPXMscz10aGlzLmVsZW1lbnQsYT10aGlzLndpZGdldCgpKSxlLmVhY2gobixmdW5jdGlvbihuLHIpe2Z1bmN0aW9uIGgoKXtyZXR1cm4gaXx8by5vcHRpb25zLmRpc2FibGVkIT09ITAmJiFlKHRoaXMpLmhhc0NsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIik/KFwic3RyaW5nXCI9PXR5cGVvZiByP29bcl06cikuYXBwbHkobyxhcmd1bWVudHMpOnR9XCJzdHJpbmdcIiE9dHlwZW9mIHImJihoLmd1aWQ9ci5ndWlkPXIuZ3VpZHx8aC5ndWlkfHxlLmd1aWQrKyk7dmFyIGw9bi5tYXRjaCgvXihcXHcrKVxccyooLiopJC8pLHU9bFsxXStvLmV2ZW50TmFtZXNwYWNlLGQ9bFsyXTtkP2EuZGVsZWdhdGUoZCx1LGgpOnMuYmluZCh1LGgpfSl9LF9vZmY6ZnVuY3Rpb24oZSx0KXt0PSh0fHxcIlwiKS5zcGxpdChcIiBcIikuam9pbih0aGlzLmV2ZW50TmFtZXNwYWNlK1wiIFwiKSt0aGlzLmV2ZW50TmFtZXNwYWNlLGUudW5iaW5kKHQpLnVuZGVsZWdhdGUodCl9LF9kZWxheTpmdW5jdGlvbihlLHQpe2Z1bmN0aW9uIGkoKXtyZXR1cm4oXCJzdHJpbmdcIj09dHlwZW9mIGU/c1tlXTplKS5hcHBseShzLGFyZ3VtZW50cyl9dmFyIHM9dGhpcztyZXR1cm4gc2V0VGltZW91dChpLHR8fDApfSxfaG92ZXJhYmxlOmZ1bmN0aW9uKHQpe3RoaXMuaG92ZXJhYmxlPXRoaXMuaG92ZXJhYmxlLmFkZCh0KSx0aGlzLl9vbih0LHttb3VzZWVudGVyOmZ1bmN0aW9uKHQpe2UodC5jdXJyZW50VGFyZ2V0KS5hZGRDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpfSxtb3VzZWxlYXZlOmZ1bmN0aW9uKHQpe2UodC5jdXJyZW50VGFyZ2V0KS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpfX0pfSxfZm9jdXNhYmxlOmZ1bmN0aW9uKHQpe3RoaXMuZm9jdXNhYmxlPXRoaXMuZm9jdXNhYmxlLmFkZCh0KSx0aGlzLl9vbih0LHtmb2N1c2luOmZ1bmN0aW9uKHQpe2UodC5jdXJyZW50VGFyZ2V0KS5hZGRDbGFzcyhcInVpLXN0YXRlLWZvY3VzXCIpfSxmb2N1c291dDpmdW5jdGlvbih0KXtlKHQuY3VycmVudFRhcmdldCkucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1mb2N1c1wiKX19KX0sX3RyaWdnZXI6ZnVuY3Rpb24odCxpLHMpe3ZhciBuLGEsbz10aGlzLm9wdGlvbnNbdF07aWYocz1zfHx7fSxpPWUuRXZlbnQoaSksaS50eXBlPSh0PT09dGhpcy53aWRnZXRFdmVudFByZWZpeD90OnRoaXMud2lkZ2V0RXZlbnRQcmVmaXgrdCkudG9Mb3dlckNhc2UoKSxpLnRhcmdldD10aGlzLmVsZW1lbnRbMF0sYT1pLm9yaWdpbmFsRXZlbnQpZm9yKG4gaW4gYSluIGluIGl8fChpW25dPWFbbl0pO3JldHVybiB0aGlzLmVsZW1lbnQudHJpZ2dlcihpLHMpLCEoZS5pc0Z1bmN0aW9uKG8pJiZvLmFwcGx5KHRoaXMuZWxlbWVudFswXSxbaV0uY29uY2F0KHMpKT09PSExfHxpLmlzRGVmYXVsdFByZXZlbnRlZCgpKX19LGUuZWFjaCh7c2hvdzpcImZhZGVJblwiLGhpZGU6XCJmYWRlT3V0XCJ9LGZ1bmN0aW9uKHQsaSl7ZS5XaWRnZXQucHJvdG90eXBlW1wiX1wiK3RdPWZ1bmN0aW9uKHMsbixhKXtcInN0cmluZ1wiPT10eXBlb2YgbiYmKG49e2VmZmVjdDpufSk7dmFyIG8scj1uP249PT0hMHx8XCJudW1iZXJcIj09dHlwZW9mIG4/aTpuLmVmZmVjdHx8aTp0O249bnx8e30sXCJudW1iZXJcIj09dHlwZW9mIG4mJihuPXtkdXJhdGlvbjpufSksbz0hZS5pc0VtcHR5T2JqZWN0KG4pLG4uY29tcGxldGU9YSxuLmRlbGF5JiZzLmRlbGF5KG4uZGVsYXkpLG8mJmUuZWZmZWN0cyYmKGUuZWZmZWN0cy5lZmZlY3Rbcl18fGUudWlCYWNrQ29tcGF0IT09ITEmJmUuZWZmZWN0c1tyXSk/c1t0XShuKTpyIT09dCYmc1tyXT9zW3JdKG4uZHVyYXRpb24sbi5lYXNpbmcsYSk6cy5xdWV1ZShmdW5jdGlvbihpKXtlKHRoaXMpW3RdKCksYSYmYS5jYWxsKHNbMF0pLGkoKX0pfX0pLGUudWlCYWNrQ29tcGF0IT09ITEmJihlLldpZGdldC5wcm90b3R5cGUuX2dldENyZWF0ZU9wdGlvbnM9ZnVuY3Rpb24oKXtyZXR1cm4gZS5tZXRhZGF0YSYmZS5tZXRhZGF0YS5nZXQodGhpcy5lbGVtZW50WzBdKVt0aGlzLndpZGdldE5hbWVdfSl9KShqUXVlcnkpOyhmdW5jdGlvbihlKXt2YXIgdD0hMTtlKGRvY3VtZW50KS5tb3VzZXVwKGZ1bmN0aW9uKCl7dD0hMX0pLGUud2lkZ2V0KFwidWkubW91c2VcIix7dmVyc2lvbjpcIjEuOS4yXCIsb3B0aW9uczp7Y2FuY2VsOlwiaW5wdXQsdGV4dGFyZWEsYnV0dG9uLHNlbGVjdCxvcHRpb25cIixkaXN0YW5jZToxLGRlbGF5OjB9LF9tb3VzZUluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZWxlbWVudC5iaW5kKFwibW91c2Vkb3duLlwiK3RoaXMud2lkZ2V0TmFtZSxmdW5jdGlvbihlKXtyZXR1cm4gdC5fbW91c2VEb3duKGUpfSkuYmluZChcImNsaWNrLlwiK3RoaXMud2lkZ2V0TmFtZSxmdW5jdGlvbihpKXtyZXR1cm4hMD09PWUuZGF0YShpLnRhcmdldCx0LndpZGdldE5hbWUrXCIucHJldmVudENsaWNrRXZlbnRcIik/KGUucmVtb3ZlRGF0YShpLnRhcmdldCx0LndpZGdldE5hbWUrXCIucHJldmVudENsaWNrRXZlbnRcIiksaS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSwhMSk6dW5kZWZpbmVkfSksdGhpcy5zdGFydGVkPSExfSxfbW91c2VEZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnVuYmluZChcIi5cIit0aGlzLndpZGdldE5hbWUpLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlJiZlKGRvY3VtZW50KS51bmJpbmQoXCJtb3VzZW1vdmUuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlKS51bmJpbmQoXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpfSxfbW91c2VEb3duOmZ1bmN0aW9uKGkpe2lmKCF0KXt0aGlzLl9tb3VzZVN0YXJ0ZWQmJnRoaXMuX21vdXNlVXAoaSksdGhpcy5fbW91c2VEb3duRXZlbnQ9aTt2YXIgcz10aGlzLG49MT09PWkud2hpY2gsYT1cInN0cmluZ1wiPT10eXBlb2YgdGhpcy5vcHRpb25zLmNhbmNlbCYmaS50YXJnZXQubm9kZU5hbWU/ZShpLnRhcmdldCkuY2xvc2VzdCh0aGlzLm9wdGlvbnMuY2FuY2VsKS5sZW5ndGg6ITE7cmV0dXJuIG4mJiFhJiZ0aGlzLl9tb3VzZUNhcHR1cmUoaSk/KHRoaXMubW91c2VEZWxheU1ldD0hdGhpcy5vcHRpb25zLmRlbGF5LHRoaXMubW91c2VEZWxheU1ldHx8KHRoaXMuX21vdXNlRGVsYXlUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cy5tb3VzZURlbGF5TWV0PSEwfSx0aGlzLm9wdGlvbnMuZGVsYXkpKSx0aGlzLl9tb3VzZURpc3RhbmNlTWV0KGkpJiZ0aGlzLl9tb3VzZURlbGF5TWV0KGkpJiYodGhpcy5fbW91c2VTdGFydGVkPXRoaXMuX21vdXNlU3RhcnQoaSkhPT0hMSwhdGhpcy5fbW91c2VTdGFydGVkKT8oaS5wcmV2ZW50RGVmYXVsdCgpLCEwKTooITA9PT1lLmRhdGEoaS50YXJnZXQsdGhpcy53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpJiZlLnJlbW92ZURhdGEoaS50YXJnZXQsdGhpcy53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBzLl9tb3VzZU1vdmUoZSl9LHRoaXMuX21vdXNlVXBEZWxlZ2F0ZT1mdW5jdGlvbihlKXtyZXR1cm4gcy5fbW91c2VVcChlKX0sZShkb2N1bWVudCkuYmluZChcIm1vdXNlbW92ZS5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUpLmJpbmQoXCJtb3VzZXVwLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZVVwRGVsZWdhdGUpLGkucHJldmVudERlZmF1bHQoKSx0PSEwLCEwKSk6ITB9fSxfbW91c2VNb3ZlOmZ1bmN0aW9uKHQpe3JldHVybiFlLnVpLmllfHxkb2N1bWVudC5kb2N1bWVudE1vZGU+PTl8fHQuYnV0dG9uP3RoaXMuX21vdXNlU3RhcnRlZD8odGhpcy5fbW91c2VEcmFnKHQpLHQucHJldmVudERlZmF1bHQoKSk6KHRoaXMuX21vdXNlRGlzdGFuY2VNZXQodCkmJnRoaXMuX21vdXNlRGVsYXlNZXQodCkmJih0aGlzLl9tb3VzZVN0YXJ0ZWQ9dGhpcy5fbW91c2VTdGFydCh0aGlzLl9tb3VzZURvd25FdmVudCx0KSE9PSExLHRoaXMuX21vdXNlU3RhcnRlZD90aGlzLl9tb3VzZURyYWcodCk6dGhpcy5fbW91c2VVcCh0KSksIXRoaXMuX21vdXNlU3RhcnRlZCk6dGhpcy5fbW91c2VVcCh0KX0sX21vdXNlVXA6ZnVuY3Rpb24odCl7cmV0dXJuIGUoZG9jdW1lbnQpLnVuYmluZChcIm1vdXNlbW92ZS5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUpLnVuYmluZChcIm1vdXNldXAuXCIrdGhpcy53aWRnZXROYW1lLHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSksdGhpcy5fbW91c2VTdGFydGVkJiYodGhpcy5fbW91c2VTdGFydGVkPSExLHQudGFyZ2V0PT09dGhpcy5fbW91c2VEb3duRXZlbnQudGFyZ2V0JiZlLmRhdGEodC50YXJnZXQsdGhpcy53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIsITApLHRoaXMuX21vdXNlU3RvcCh0KSksITF9LF9tb3VzZURpc3RhbmNlTWV0OmZ1bmN0aW9uKGUpe3JldHVybiBNYXRoLm1heChNYXRoLmFicyh0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWC1lLnBhZ2VYKSxNYXRoLmFicyh0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWS1lLnBhZ2VZKSk+PXRoaXMub3B0aW9ucy5kaXN0YW5jZX0sX21vdXNlRGVsYXlNZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb3VzZURlbGF5TWV0fSxfbW91c2VTdGFydDpmdW5jdGlvbigpe30sX21vdXNlRHJhZzpmdW5jdGlvbigpe30sX21vdXNlU3RvcDpmdW5jdGlvbigpe30sX21vdXNlQ2FwdHVyZTpmdW5jdGlvbigpe3JldHVybiEwfX0pfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSx0KXtmdW5jdGlvbiBpKGUsdCxpKXtyZXR1cm5bcGFyc2VJbnQoZVswXSwxMCkqKGMudGVzdChlWzBdKT90LzEwMDoxKSxwYXJzZUludChlWzFdLDEwKSooYy50ZXN0KGVbMV0pP2kvMTAwOjEpXX1mdW5jdGlvbiBzKHQsaSl7cmV0dXJuIHBhcnNlSW50KGUuY3NzKHQsaSksMTApfHwwfWUudWk9ZS51aXx8e307dmFyIG4sYT1NYXRoLm1heCxvPU1hdGguYWJzLHI9TWF0aC5yb3VuZCxoPS9sZWZ0fGNlbnRlcnxyaWdodC8sbD0vdG9wfGNlbnRlcnxib3R0b20vLHU9L1tcXCtcXC1dXFxkKyU/LyxkPS9eXFx3Ky8sYz0vJSQvLHA9ZS5mbi5wb3NpdGlvbjtlLnBvc2l0aW9uPXtzY3JvbGxiYXJXaWR0aDpmdW5jdGlvbigpe2lmKG4hPT10KXJldHVybiBuO3ZhciBpLHMsYT1lKFwiPGRpdiBzdHlsZT0nZGlzcGxheTpibG9jazt3aWR0aDo1MHB4O2hlaWdodDo1MHB4O292ZXJmbG93OmhpZGRlbjsnPjxkaXYgc3R5bGU9J2hlaWdodDoxMDBweDt3aWR0aDphdXRvOyc+PC9kaXY+PC9kaXY+XCIpLG89YS5jaGlsZHJlbigpWzBdO3JldHVybiBlKFwiYm9keVwiKS5hcHBlbmQoYSksaT1vLm9mZnNldFdpZHRoLGEuY3NzKFwib3ZlcmZsb3dcIixcInNjcm9sbFwiKSxzPW8ub2Zmc2V0V2lkdGgsaT09PXMmJihzPWFbMF0uY2xpZW50V2lkdGgpLGEucmVtb3ZlKCksbj1pLXN9LGdldFNjcm9sbEluZm86ZnVuY3Rpb24odCl7dmFyIGk9dC5pc1dpbmRvdz9cIlwiOnQuZWxlbWVudC5jc3MoXCJvdmVyZmxvdy14XCIpLHM9dC5pc1dpbmRvdz9cIlwiOnQuZWxlbWVudC5jc3MoXCJvdmVyZmxvdy15XCIpLG49XCJzY3JvbGxcIj09PWl8fFwiYXV0b1wiPT09aSYmdC53aWR0aDx0LmVsZW1lbnRbMF0uc2Nyb2xsV2lkdGgsYT1cInNjcm9sbFwiPT09c3x8XCJhdXRvXCI9PT1zJiZ0LmhlaWdodDx0LmVsZW1lbnRbMF0uc2Nyb2xsSGVpZ2h0O3JldHVybnt3aWR0aDpuP2UucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKTowLGhlaWdodDphP2UucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKTowfX0sZ2V0V2l0aGluSW5mbzpmdW5jdGlvbih0KXt2YXIgaT1lKHR8fHdpbmRvdykscz1lLmlzV2luZG93KGlbMF0pO3JldHVybntlbGVtZW50OmksaXNXaW5kb3c6cyxvZmZzZXQ6aS5vZmZzZXQoKXx8e2xlZnQ6MCx0b3A6MH0sc2Nyb2xsTGVmdDppLnNjcm9sbExlZnQoKSxzY3JvbGxUb3A6aS5zY3JvbGxUb3AoKSx3aWR0aDpzP2kud2lkdGgoKTppLm91dGVyV2lkdGgoKSxoZWlnaHQ6cz9pLmhlaWdodCgpOmkub3V0ZXJIZWlnaHQoKX19fSxlLmZuLnBvc2l0aW9uPWZ1bmN0aW9uKHQpe2lmKCF0fHwhdC5vZilyZXR1cm4gcC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dD1lLmV4dGVuZCh7fSx0KTt2YXIgbixjLGYsbSxnLHY9ZSh0Lm9mKSxfPWUucG9zaXRpb24uZ2V0V2l0aGluSW5mbyh0LndpdGhpbiksYj1lLnBvc2l0aW9uLmdldFNjcm9sbEluZm8oXykseT12WzBdLHg9KHQuY29sbGlzaW9ufHxcImZsaXBcIikuc3BsaXQoXCIgXCIpLHc9e307cmV0dXJuIDk9PT15Lm5vZGVUeXBlPyhjPXYud2lkdGgoKSxmPXYuaGVpZ2h0KCksbT17dG9wOjAsbGVmdDowfSk6ZS5pc1dpbmRvdyh5KT8oYz12LndpZHRoKCksZj12LmhlaWdodCgpLG09e3RvcDp2LnNjcm9sbFRvcCgpLGxlZnQ6di5zY3JvbGxMZWZ0KCl9KTp5LnByZXZlbnREZWZhdWx0Pyh0LmF0PVwibGVmdCB0b3BcIixjPWY9MCxtPXt0b3A6eS5wYWdlWSxsZWZ0OnkucGFnZVh9KTooYz12Lm91dGVyV2lkdGgoKSxmPXYub3V0ZXJIZWlnaHQoKSxtPXYub2Zmc2V0KCkpLGc9ZS5leHRlbmQoe30sbSksZS5lYWNoKFtcIm15XCIsXCJhdFwiXSxmdW5jdGlvbigpe3ZhciBlLGkscz0odFt0aGlzXXx8XCJcIikuc3BsaXQoXCIgXCIpOzE9PT1zLmxlbmd0aCYmKHM9aC50ZXN0KHNbMF0pP3MuY29uY2F0KFtcImNlbnRlclwiXSk6bC50ZXN0KHNbMF0pP1tcImNlbnRlclwiXS5jb25jYXQocyk6W1wiY2VudGVyXCIsXCJjZW50ZXJcIl0pLHNbMF09aC50ZXN0KHNbMF0pP3NbMF06XCJjZW50ZXJcIixzWzFdPWwudGVzdChzWzFdKT9zWzFdOlwiY2VudGVyXCIsZT11LmV4ZWMoc1swXSksaT11LmV4ZWMoc1sxXSksd1t0aGlzXT1bZT9lWzBdOjAsaT9pWzBdOjBdLHRbdGhpc109W2QuZXhlYyhzWzBdKVswXSxkLmV4ZWMoc1sxXSlbMF1dfSksMT09PXgubGVuZ3RoJiYoeFsxXT14WzBdKSxcInJpZ2h0XCI9PT10LmF0WzBdP2cubGVmdCs9YzpcImNlbnRlclwiPT09dC5hdFswXSYmKGcubGVmdCs9Yy8yKSxcImJvdHRvbVwiPT09dC5hdFsxXT9nLnRvcCs9ZjpcImNlbnRlclwiPT09dC5hdFsxXSYmKGcudG9wKz1mLzIpLG49aSh3LmF0LGMsZiksZy5sZWZ0Kz1uWzBdLGcudG9wKz1uWzFdLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBoLGwsdT1lKHRoaXMpLGQ9dS5vdXRlcldpZHRoKCkscD11Lm91dGVySGVpZ2h0KCkseT1zKHRoaXMsXCJtYXJnaW5MZWZ0XCIpLGs9cyh0aGlzLFwibWFyZ2luVG9wXCIpLEQ9ZCt5K3ModGhpcyxcIm1hcmdpblJpZ2h0XCIpK2Iud2lkdGgsVD1wK2srcyh0aGlzLFwibWFyZ2luQm90dG9tXCIpK2IuaGVpZ2h0LFM9ZS5leHRlbmQoe30sZyksTj1pKHcubXksdS5vdXRlcldpZHRoKCksdS5vdXRlckhlaWdodCgpKTtcInJpZ2h0XCI9PT10Lm15WzBdP1MubGVmdC09ZDpcImNlbnRlclwiPT09dC5teVswXSYmKFMubGVmdC09ZC8yKSxcImJvdHRvbVwiPT09dC5teVsxXT9TLnRvcC09cDpcImNlbnRlclwiPT09dC5teVsxXSYmKFMudG9wLT1wLzIpLFMubGVmdCs9TlswXSxTLnRvcCs9TlsxXSxlLnN1cHBvcnQub2Zmc2V0RnJhY3Rpb25zfHwoUy5sZWZ0PXIoUy5sZWZ0KSxTLnRvcD1yKFMudG9wKSksaD17bWFyZ2luTGVmdDp5LG1hcmdpblRvcDprfSxlLmVhY2goW1wibGVmdFwiLFwidG9wXCJdLGZ1bmN0aW9uKGkscyl7ZS51aS5wb3NpdGlvblt4W2ldXSYmZS51aS5wb3NpdGlvblt4W2ldXVtzXShTLHt0YXJnZXRXaWR0aDpjLHRhcmdldEhlaWdodDpmLGVsZW1XaWR0aDpkLGVsZW1IZWlnaHQ6cCxjb2xsaXNpb25Qb3NpdGlvbjpoLGNvbGxpc2lvbldpZHRoOkQsY29sbGlzaW9uSGVpZ2h0OlQsb2Zmc2V0OltuWzBdK05bMF0sblsxXStOWzFdXSxteTp0Lm15LGF0OnQuYXQsd2l0aGluOl8sZWxlbTp1fSl9KSxlLmZuLmJnaWZyYW1lJiZ1LmJnaWZyYW1lKCksdC51c2luZyYmKGw9ZnVuY3Rpb24oZSl7dmFyIGk9bS5sZWZ0LVMubGVmdCxzPWkrYy1kLG49bS50b3AtUy50b3Ascj1uK2YtcCxoPXt0YXJnZXQ6e2VsZW1lbnQ6dixsZWZ0Om0ubGVmdCx0b3A6bS50b3Asd2lkdGg6YyxoZWlnaHQ6Zn0sZWxlbWVudDp7ZWxlbWVudDp1LGxlZnQ6Uy5sZWZ0LHRvcDpTLnRvcCx3aWR0aDpkLGhlaWdodDpwfSxob3Jpem9udGFsOjA+cz9cImxlZnRcIjppPjA/XCJyaWdodFwiOlwiY2VudGVyXCIsdmVydGljYWw6MD5yP1widG9wXCI6bj4wP1wiYm90dG9tXCI6XCJtaWRkbGVcIn07ZD5jJiZjPm8oaStzKSYmKGguaG9yaXpvbnRhbD1cImNlbnRlclwiKSxwPmYmJmY+byhuK3IpJiYoaC52ZXJ0aWNhbD1cIm1pZGRsZVwiKSxoLmltcG9ydGFudD1hKG8oaSksbyhzKSk+YShvKG4pLG8ocikpP1wiaG9yaXpvbnRhbFwiOlwidmVydGljYWxcIix0LnVzaW5nLmNhbGwodGhpcyxlLGgpfSksdS5vZmZzZXQoZS5leHRlbmQoUyx7dXNpbmc6bH0pKX0pfSxlLnVpLnBvc2l0aW9uPXtmaXQ6e2xlZnQ6ZnVuY3Rpb24oZSx0KXt2YXIgaSxzPXQud2l0aGluLG49cy5pc1dpbmRvdz9zLnNjcm9sbExlZnQ6cy5vZmZzZXQubGVmdCxvPXMud2lkdGgscj1lLmxlZnQtdC5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LGg9bi1yLGw9cit0LmNvbGxpc2lvbldpZHRoLW8tbjt0LmNvbGxpc2lvbldpZHRoPm8/aD4wJiYwPj1sPyhpPWUubGVmdCtoK3QuY29sbGlzaW9uV2lkdGgtby1uLGUubGVmdCs9aC1pKTplLmxlZnQ9bD4wJiYwPj1oP246aD5sP24rby10LmNvbGxpc2lvbldpZHRoOm46aD4wP2UubGVmdCs9aDpsPjA/ZS5sZWZ0LT1sOmUubGVmdD1hKGUubGVmdC1yLGUubGVmdCl9LHRvcDpmdW5jdGlvbihlLHQpe3ZhciBpLHM9dC53aXRoaW4sbj1zLmlzV2luZG93P3Muc2Nyb2xsVG9wOnMub2Zmc2V0LnRvcCxvPXQud2l0aGluLmhlaWdodCxyPWUudG9wLXQuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLGg9bi1yLGw9cit0LmNvbGxpc2lvbkhlaWdodC1vLW47dC5jb2xsaXNpb25IZWlnaHQ+bz9oPjAmJjA+PWw/KGk9ZS50b3AraCt0LmNvbGxpc2lvbkhlaWdodC1vLW4sZS50b3ArPWgtaSk6ZS50b3A9bD4wJiYwPj1oP246aD5sP24rby10LmNvbGxpc2lvbkhlaWdodDpuOmg+MD9lLnRvcCs9aDpsPjA/ZS50b3AtPWw6ZS50b3A9YShlLnRvcC1yLGUudG9wKX19LGZsaXA6e2xlZnQ6ZnVuY3Rpb24oZSx0KXt2YXIgaSxzLG49dC53aXRoaW4sYT1uLm9mZnNldC5sZWZ0K24uc2Nyb2xsTGVmdCxyPW4ud2lkdGgsaD1uLmlzV2luZG93P24uc2Nyb2xsTGVmdDpuLm9mZnNldC5sZWZ0LGw9ZS5sZWZ0LXQuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCx1PWwtaCxkPWwrdC5jb2xsaXNpb25XaWR0aC1yLWgsYz1cImxlZnRcIj09PXQubXlbMF0/LXQuZWxlbVdpZHRoOlwicmlnaHRcIj09PXQubXlbMF0/dC5lbGVtV2lkdGg6MCxwPVwibGVmdFwiPT09dC5hdFswXT90LnRhcmdldFdpZHRoOlwicmlnaHRcIj09PXQuYXRbMF0/LXQudGFyZ2V0V2lkdGg6MCxmPS0yKnQub2Zmc2V0WzBdOzA+dT8oaT1lLmxlZnQrYytwK2YrdC5jb2xsaXNpb25XaWR0aC1yLWEsKDA+aXx8byh1KT5pKSYmKGUubGVmdCs9YytwK2YpKTpkPjAmJihzPWUubGVmdC10LmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQrYytwK2YtaCwocz4wfHxkPm8ocykpJiYoZS5sZWZ0Kz1jK3ArZikpfSx0b3A6ZnVuY3Rpb24oZSx0KXt2YXIgaSxzLG49dC53aXRoaW4sYT1uLm9mZnNldC50b3Arbi5zY3JvbGxUb3Ascj1uLmhlaWdodCxoPW4uaXNXaW5kb3c/bi5zY3JvbGxUb3A6bi5vZmZzZXQudG9wLGw9ZS50b3AtdC5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsdT1sLWgsZD1sK3QuY29sbGlzaW9uSGVpZ2h0LXItaCxjPVwidG9wXCI9PT10Lm15WzFdLHA9Yz8tdC5lbGVtSGVpZ2h0OlwiYm90dG9tXCI9PT10Lm15WzFdP3QuZWxlbUhlaWdodDowLGY9XCJ0b3BcIj09PXQuYXRbMV0/dC50YXJnZXRIZWlnaHQ6XCJib3R0b21cIj09PXQuYXRbMV0/LXQudGFyZ2V0SGVpZ2h0OjAsbT0tMip0Lm9mZnNldFsxXTswPnU/KHM9ZS50b3ArcCtmK20rdC5jb2xsaXNpb25IZWlnaHQtci1hLGUudG9wK3ArZittPnUmJigwPnN8fG8odSk+cykmJihlLnRvcCs9cCtmK20pKTpkPjAmJihpPWUudG9wLXQuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wK3ArZittLWgsZS50b3ArcCtmK20+ZCYmKGk+MHx8ZD5vKGkpKSYmKGUudG9wKz1wK2YrbSkpfX0sZmxpcGZpdDp7bGVmdDpmdW5jdGlvbigpe2UudWkucG9zaXRpb24uZmxpcC5sZWZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxlLnVpLnBvc2l0aW9uLmZpdC5sZWZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdG9wOmZ1bmN0aW9uKCl7ZS51aS5wb3NpdGlvbi5mbGlwLnRvcC5hcHBseSh0aGlzLGFyZ3VtZW50cyksZS51aS5wb3NpdGlvbi5maXQudG9wLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fSxmdW5jdGlvbigpe3ZhciB0LGkscyxuLGEsbz1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJvZHlcIilbMF0scj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3Q9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChvP1wiZGl2XCI6XCJib2R5XCIpLHM9e3Zpc2liaWxpdHk6XCJoaWRkZW5cIix3aWR0aDowLGhlaWdodDowLGJvcmRlcjowLG1hcmdpbjowLGJhY2tncm91bmQ6XCJub25lXCJ9LG8mJmUuZXh0ZW5kKHMse3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OlwiLTEwMDBweFwiLHRvcDpcIi0xMDAwcHhcIn0pO2ZvcihhIGluIHMpdC5zdHlsZVthXT1zW2FdO3QuYXBwZW5kQ2hpbGQociksaT1vfHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsaS5pbnNlcnRCZWZvcmUodCxpLmZpcnN0Q2hpbGQpLHIuc3R5bGUuY3NzVGV4dD1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgbGVmdDogMTAuNzQzMjIyMnB4O1wiLG49ZShyKS5vZmZzZXQoKS5sZWZ0LGUuc3VwcG9ydC5vZmZzZXRGcmFjdGlvbnM9bj4xMCYmMTE+bix0LmlubmVySFRNTD1cIlwiLGkucmVtb3ZlQ2hpbGQodCl9KCksZS51aUJhY2tDb21wYXQhPT0hMSYmZnVuY3Rpb24oZSl7dmFyIGk9ZS5mbi5wb3NpdGlvbjtlLmZuLnBvc2l0aW9uPWZ1bmN0aW9uKHMpe2lmKCFzfHwhcy5vZmZzZXQpcmV0dXJuIGkuY2FsbCh0aGlzLHMpO3ZhciBuPXMub2Zmc2V0LnNwbGl0KFwiIFwiKSxhPXMuYXQuc3BsaXQoXCIgXCIpO3JldHVybiAxPT09bi5sZW5ndGgmJihuWzFdPW5bMF0pLC9eXFxkLy50ZXN0KG5bMF0pJiYoblswXT1cIitcIituWzBdKSwvXlxcZC8udGVzdChuWzFdKSYmKG5bMV09XCIrXCIrblsxXSksMT09PWEubGVuZ3RoJiYoL2xlZnR8Y2VudGVyfHJpZ2h0Ly50ZXN0KGFbMF0pP2FbMV09XCJjZW50ZXJcIjooYVsxXT1hWzBdLGFbMF09XCJjZW50ZXJcIikpLGkuY2FsbCh0aGlzLGUuZXh0ZW5kKHMse2F0OmFbMF0rblswXStcIiBcIithWzFdK25bMV0sb2Zmc2V0OnR9KSl9fShqUXVlcnkpfSkoalF1ZXJ5KTsoZnVuY3Rpb24oZSl7ZS53aWRnZXQoXCJ1aS5kcmFnZ2FibGVcIixlLnVpLm1vdXNlLHt2ZXJzaW9uOlwiMS45LjJcIix3aWRnZXRFdmVudFByZWZpeDpcImRyYWdcIixvcHRpb25zOnthZGRDbGFzc2VzOiEwLGFwcGVuZFRvOlwicGFyZW50XCIsYXhpczohMSxjb25uZWN0VG9Tb3J0YWJsZTohMSxjb250YWlubWVudDohMSxjdXJzb3I6XCJhdXRvXCIsY3Vyc29yQXQ6ITEsZ3JpZDohMSxoYW5kbGU6ITEsaGVscGVyOlwib3JpZ2luYWxcIixpZnJhbWVGaXg6ITEsb3BhY2l0eTohMSxyZWZyZXNoUG9zaXRpb25zOiExLHJldmVydDohMSxyZXZlcnREdXJhdGlvbjo1MDAsc2NvcGU6XCJkZWZhdWx0XCIsc2Nyb2xsOiEwLHNjcm9sbFNlbnNpdGl2aXR5OjIwLHNjcm9sbFNwZWVkOjIwLHNuYXA6ITEsc25hcE1vZGU6XCJib3RoXCIsc25hcFRvbGVyYW5jZToyMCxzdGFjazohMSx6SW5kZXg6ITF9LF9jcmVhdGU6ZnVuY3Rpb24oKXtcIm9yaWdpbmFsXCIhPXRoaXMub3B0aW9ucy5oZWxwZXJ8fC9eKD86cnxhfGYpLy50ZXN0KHRoaXMuZWxlbWVudC5jc3MoXCJwb3NpdGlvblwiKSl8fCh0aGlzLmVsZW1lbnRbMF0uc3R5bGUucG9zaXRpb249XCJyZWxhdGl2ZVwiKSx0aGlzLm9wdGlvbnMuYWRkQ2xhc3NlcyYmdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktZHJhZ2dhYmxlXCIpLHRoaXMub3B0aW9ucy5kaXNhYmxlZCYmdGhpcy5lbGVtZW50LmFkZENsYXNzKFwidWktZHJhZ2dhYmxlLWRpc2FibGVkXCIpLHRoaXMuX21vdXNlSW5pdCgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyhcInVpLWRyYWdnYWJsZSB1aS1kcmFnZ2FibGUtZHJhZ2dpbmcgdWktZHJhZ2dhYmxlLWRpc2FibGVkXCIpLHRoaXMuX21vdXNlRGVzdHJveSgpfSxfbW91c2VDYXB0dXJlOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucztyZXR1cm4gdGhpcy5oZWxwZXJ8fGkuZGlzYWJsZWR8fGUodC50YXJnZXQpLmlzKFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIik/ITE6KHRoaXMuaGFuZGxlPXRoaXMuX2dldEhhbmRsZSh0KSx0aGlzLmhhbmRsZT8oZShpLmlmcmFtZUZpeD09PSEwP1wiaWZyYW1lXCI6aS5pZnJhbWVGaXgpLmVhY2goZnVuY3Rpb24oKXtlKCc8ZGl2IGNsYXNzPVwidWktZHJhZ2dhYmxlLWlmcmFtZUZpeFwiIHN0eWxlPVwiYmFja2dyb3VuZDogI2ZmZjtcIj48L2Rpdj4nKS5jc3Moe3dpZHRoOnRoaXMub2Zmc2V0V2lkdGgrXCJweFwiLGhlaWdodDp0aGlzLm9mZnNldEhlaWdodCtcInB4XCIscG9zaXRpb246XCJhYnNvbHV0ZVwiLG9wYWNpdHk6XCIwLjAwMVwiLHpJbmRleDoxZTN9KS5jc3MoZSh0aGlzKS5vZmZzZXQoKSkuYXBwZW5kVG8oXCJib2R5XCIpfSksITApOiExKX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24odCl7dmFyIGk9dGhpcy5vcHRpb25zO3JldHVybiB0aGlzLmhlbHBlcj10aGlzLl9jcmVhdGVIZWxwZXIodCksdGhpcy5oZWxwZXIuYWRkQ2xhc3MoXCJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmdcIiksdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpLGUudWkuZGRtYW5hZ2VyJiYoZS51aS5kZG1hbmFnZXIuY3VycmVudD10aGlzKSx0aGlzLl9jYWNoZU1hcmdpbnMoKSx0aGlzLmNzc1Bvc2l0aW9uPXRoaXMuaGVscGVyLmNzcyhcInBvc2l0aW9uXCIpLHRoaXMuc2Nyb2xsUGFyZW50PXRoaXMuaGVscGVyLnNjcm9sbFBhcmVudCgpLHRoaXMub2Zmc2V0PXRoaXMucG9zaXRpb25BYnM9dGhpcy5lbGVtZW50Lm9mZnNldCgpLHRoaXMub2Zmc2V0PXt0b3A6dGhpcy5vZmZzZXQudG9wLXRoaXMubWFyZ2lucy50b3AsbGVmdDp0aGlzLm9mZnNldC5sZWZ0LXRoaXMubWFyZ2lucy5sZWZ0fSxlLmV4dGVuZCh0aGlzLm9mZnNldCx7Y2xpY2s6e2xlZnQ6dC5wYWdlWC10aGlzLm9mZnNldC5sZWZ0LHRvcDp0LnBhZ2VZLXRoaXMub2Zmc2V0LnRvcH0scGFyZW50OnRoaXMuX2dldFBhcmVudE9mZnNldCgpLHJlbGF0aXZlOnRoaXMuX2dldFJlbGF0aXZlT2Zmc2V0KCl9KSx0aGlzLm9yaWdpbmFsUG9zaXRpb249dGhpcy5wb3NpdGlvbj10aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKHQpLHRoaXMub3JpZ2luYWxQYWdlWD10LnBhZ2VYLHRoaXMub3JpZ2luYWxQYWdlWT10LnBhZ2VZLGkuY3Vyc29yQXQmJnRoaXMuX2FkanVzdE9mZnNldEZyb21IZWxwZXIoaS5jdXJzb3JBdCksaS5jb250YWlubWVudCYmdGhpcy5fc2V0Q29udGFpbm1lbnQoKSx0aGlzLl90cmlnZ2VyKFwic3RhcnRcIix0KT09PSExPyh0aGlzLl9jbGVhcigpLCExKToodGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpLGUudWkuZGRtYW5hZ2VyJiYhaS5kcm9wQmVoYXZpb3VyJiZlLnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyh0aGlzLHQpLHRoaXMuX21vdXNlRHJhZyh0LCEwKSxlLnVpLmRkbWFuYWdlciYmZS51aS5kZG1hbmFnZXIuZHJhZ1N0YXJ0KHRoaXMsdCksITApfSxfbW91c2VEcmFnOmZ1bmN0aW9uKHQsaSl7aWYodGhpcy5wb3NpdGlvbj10aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKHQpLHRoaXMucG9zaXRpb25BYnM9dGhpcy5fY29udmVydFBvc2l0aW9uVG8oXCJhYnNvbHV0ZVwiKSwhaSl7dmFyIHM9dGhpcy5fdWlIYXNoKCk7aWYodGhpcy5fdHJpZ2dlcihcImRyYWdcIix0LHMpPT09ITEpcmV0dXJuIHRoaXMuX21vdXNlVXAoe30pLCExO3RoaXMucG9zaXRpb249cy5wb3NpdGlvbn1yZXR1cm4gdGhpcy5vcHRpb25zLmF4aXMmJlwieVwiPT10aGlzLm9wdGlvbnMuYXhpc3x8KHRoaXMuaGVscGVyWzBdLnN0eWxlLmxlZnQ9dGhpcy5wb3NpdGlvbi5sZWZ0K1wicHhcIiksdGhpcy5vcHRpb25zLmF4aXMmJlwieFwiPT10aGlzLm9wdGlvbnMuYXhpc3x8KHRoaXMuaGVscGVyWzBdLnN0eWxlLnRvcD10aGlzLnBvc2l0aW9uLnRvcCtcInB4XCIpLGUudWkuZGRtYW5hZ2VyJiZlLnVpLmRkbWFuYWdlci5kcmFnKHRoaXMsdCksITF9LF9tb3VzZVN0b3A6ZnVuY3Rpb24odCl7dmFyIGk9ITE7ZS51aS5kZG1hbmFnZXImJiF0aGlzLm9wdGlvbnMuZHJvcEJlaGF2aW91ciYmKGk9ZS51aS5kZG1hbmFnZXIuZHJvcCh0aGlzLHQpKSx0aGlzLmRyb3BwZWQmJihpPXRoaXMuZHJvcHBlZCx0aGlzLmRyb3BwZWQ9ITEpO2Zvcih2YXIgcz10aGlzLmVsZW1lbnRbMF0sbj0hMTtzJiYocz1zLnBhcmVudE5vZGUpOylzPT1kb2N1bWVudCYmKG49ITApO2lmKCFuJiZcIm9yaWdpbmFsXCI9PT10aGlzLm9wdGlvbnMuaGVscGVyKXJldHVybiExO2lmKFwiaW52YWxpZFwiPT10aGlzLm9wdGlvbnMucmV2ZXJ0JiYhaXx8XCJ2YWxpZFwiPT10aGlzLm9wdGlvbnMucmV2ZXJ0JiZpfHx0aGlzLm9wdGlvbnMucmV2ZXJ0PT09ITB8fGUuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMucmV2ZXJ0KSYmdGhpcy5vcHRpb25zLnJldmVydC5jYWxsKHRoaXMuZWxlbWVudCxpKSl7dmFyIGE9dGhpcztlKHRoaXMuaGVscGVyKS5hbmltYXRlKHRoaXMub3JpZ2luYWxQb3NpdGlvbixwYXJzZUludCh0aGlzLm9wdGlvbnMucmV2ZXJ0RHVyYXRpb24sMTApLGZ1bmN0aW9uKCl7YS5fdHJpZ2dlcihcInN0b3BcIix0KSE9PSExJiZhLl9jbGVhcigpfSl9ZWxzZSB0aGlzLl90cmlnZ2VyKFwic3RvcFwiLHQpIT09ITEmJnRoaXMuX2NsZWFyKCk7cmV0dXJuITF9LF9tb3VzZVVwOmZ1bmN0aW9uKHQpe3JldHVybiBlKFwiZGl2LnVpLWRyYWdnYWJsZS1pZnJhbWVGaXhcIikuZWFjaChmdW5jdGlvbigpe3RoaXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzKX0pLGUudWkuZGRtYW5hZ2VyJiZlLnVpLmRkbWFuYWdlci5kcmFnU3RvcCh0aGlzLHQpLGUudWkubW91c2UucHJvdG90eXBlLl9tb3VzZVVwLmNhbGwodGhpcyx0KX0sY2FuY2VsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGVscGVyLmlzKFwiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZ1wiKT90aGlzLl9tb3VzZVVwKHt9KTp0aGlzLl9jbGVhcigpLHRoaXN9LF9nZXRIYW5kbGU6ZnVuY3Rpb24odCl7dmFyIGk9dGhpcy5vcHRpb25zLmhhbmRsZSYmZSh0aGlzLm9wdGlvbnMuaGFuZGxlLHRoaXMuZWxlbWVudCkubGVuZ3RoPyExOiEwO3JldHVybiBlKHRoaXMub3B0aW9ucy5oYW5kbGUsdGhpcy5lbGVtZW50KS5maW5kKFwiKlwiKS5hbmRTZWxmKCkuZWFjaChmdW5jdGlvbigpe3RoaXM9PXQudGFyZ2V0JiYoaT0hMCl9KSxpfSxfY3JlYXRlSGVscGVyOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucyxzPWUuaXNGdW5jdGlvbihpLmhlbHBlcik/ZShpLmhlbHBlci5hcHBseSh0aGlzLmVsZW1lbnRbMF0sW3RdKSk6XCJjbG9uZVwiPT1pLmhlbHBlcj90aGlzLmVsZW1lbnQuY2xvbmUoKS5yZW1vdmVBdHRyKFwiaWRcIik6dGhpcy5lbGVtZW50O3JldHVybiBzLnBhcmVudHMoXCJib2R5XCIpLmxlbmd0aHx8cy5hcHBlbmRUbyhcInBhcmVudFwiPT1pLmFwcGVuZFRvP3RoaXMuZWxlbWVudFswXS5wYXJlbnROb2RlOmkuYXBwZW5kVG8pLHNbMF09PXRoaXMuZWxlbWVudFswXXx8LyhmaXhlZHxhYnNvbHV0ZSkvLnRlc3Qocy5jc3MoXCJwb3NpdGlvblwiKSl8fHMuY3NzKFwicG9zaXRpb25cIixcImFic29sdXRlXCIpLHN9LF9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOmZ1bmN0aW9uKHQpe1wic3RyaW5nXCI9PXR5cGVvZiB0JiYodD10LnNwbGl0KFwiIFwiKSksZS5pc0FycmF5KHQpJiYodD17bGVmdDordFswXSx0b3A6K3RbMV18fDB9KSxcImxlZnRcImluIHQmJih0aGlzLm9mZnNldC5jbGljay5sZWZ0PXQubGVmdCt0aGlzLm1hcmdpbnMubGVmdCksXCJyaWdodFwiaW4gdCYmKHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ9dGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC10LnJpZ2h0K3RoaXMubWFyZ2lucy5sZWZ0KSxcInRvcFwiaW4gdCYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD10LnRvcCt0aGlzLm1hcmdpbnMudG9wKSxcImJvdHRvbVwiaW4gdCYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10LmJvdHRvbSt0aGlzLm1hcmdpbnMudG9wKX0sX2dldFBhcmVudE9mZnNldDpmdW5jdGlvbigpe3RoaXMub2Zmc2V0UGFyZW50PXRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpO3ZhciB0PXRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpO3JldHVyblwiYWJzb2x1dGVcIj09dGhpcy5jc3NQb3NpdGlvbiYmdGhpcy5zY3JvbGxQYXJlbnRbMF0hPWRvY3VtZW50JiZlLmNvbnRhaW5zKHRoaXMuc2Nyb2xsUGFyZW50WzBdLHRoaXMub2Zmc2V0UGFyZW50WzBdKSYmKHQubGVmdCs9dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpLHQudG9wKz10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSksKHRoaXMub2Zmc2V0UGFyZW50WzBdPT1kb2N1bWVudC5ib2R5fHx0aGlzLm9mZnNldFBhcmVudFswXS50YWdOYW1lJiZcImh0bWxcIj09dGhpcy5vZmZzZXRQYXJlbnRbMF0udGFnTmFtZS50b0xvd2VyQ2FzZSgpJiZlLnVpLmllKSYmKHQ9e3RvcDowLGxlZnQ6MH0pLHt0b3A6dC50b3ArKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlclRvcFdpZHRoXCIpLDEwKXx8MCksbGVmdDp0LmxlZnQrKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApfX0sX2dldFJlbGF0aXZlT2Zmc2V0OmZ1bmN0aW9uKCl7aWYoXCJyZWxhdGl2ZVwiPT10aGlzLmNzc1Bvc2l0aW9uKXt2YXIgZT10aGlzLmVsZW1lbnQucG9zaXRpb24oKTtyZXR1cm57dG9wOmUudG9wLShwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoXCJ0b3BcIiksMTApfHwwKSt0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSxsZWZ0OmUubGVmdC0ocGFyc2VJbnQodGhpcy5oZWxwZXIuY3NzKFwibGVmdFwiKSwxMCl8fDApK3RoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKX19cmV0dXJue3RvcDowLGxlZnQ6MH19LF9jYWNoZU1hcmdpbnM6ZnVuY3Rpb24oKXt0aGlzLm1hcmdpbnM9e2xlZnQ6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpbkxlZnRcIiksMTApfHwwLHRvcDpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luVG9wXCIpLDEwKXx8MCxyaWdodDpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luUmlnaHRcIiksMTApfHwwLGJvdHRvbTpwYXJzZUludCh0aGlzLmVsZW1lbnQuY3NzKFwibWFyZ2luQm90dG9tXCIpLDEwKXx8MH19LF9jYWNoZUhlbHBlclByb3BvcnRpb25zOmZ1bmN0aW9uKCl7dGhpcy5oZWxwZXJQcm9wb3J0aW9ucz17d2lkdGg6dGhpcy5oZWxwZXIub3V0ZXJXaWR0aCgpLGhlaWdodDp0aGlzLmhlbHBlci5vdXRlckhlaWdodCgpfX0sX3NldENvbnRhaW5tZW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zO2lmKFwicGFyZW50XCI9PXQuY29udGFpbm1lbnQmJih0LmNvbnRhaW5tZW50PXRoaXMuaGVscGVyWzBdLnBhcmVudE5vZGUpLChcImRvY3VtZW50XCI9PXQuY29udGFpbm1lbnR8fFwid2luZG93XCI9PXQuY29udGFpbm1lbnQpJiYodGhpcy5jb250YWlubWVudD1bXCJkb2N1bWVudFwiPT10LmNvbnRhaW5tZW50PzA6ZSh3aW5kb3cpLnNjcm9sbExlZnQoKS10aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0LXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0LFwiZG9jdW1lbnRcIj09dC5jb250YWlubWVudD8wOmUod2luZG93KS5zY3JvbGxUb3AoKS10aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AtdGhpcy5vZmZzZXQucGFyZW50LnRvcCwoXCJkb2N1bWVudFwiPT10LmNvbnRhaW5tZW50PzA6ZSh3aW5kb3cpLnNjcm9sbExlZnQoKSkrZShcImRvY3VtZW50XCI9PXQuY29udGFpbm1lbnQ/ZG9jdW1lbnQ6d2luZG93KS53aWR0aCgpLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgtdGhpcy5tYXJnaW5zLmxlZnQsKFwiZG9jdW1lbnRcIj09dC5jb250YWlubWVudD8wOmUod2luZG93KS5zY3JvbGxUb3AoKSkrKGUoXCJkb2N1bWVudFwiPT10LmNvbnRhaW5tZW50P2RvY3VtZW50OndpbmRvdykuaGVpZ2h0KCl8fGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQpLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3BdKSwvXihkb2N1bWVudHx3aW5kb3d8cGFyZW50KSQvLnRlc3QodC5jb250YWlubWVudCl8fHQuY29udGFpbm1lbnQuY29uc3RydWN0b3I9PUFycmF5KXQuY29udGFpbm1lbnQuY29uc3RydWN0b3I9PUFycmF5JiYodGhpcy5jb250YWlubWVudD10LmNvbnRhaW5tZW50KTtlbHNle3ZhciBpPWUodC5jb250YWlubWVudCkscz1pWzBdO2lmKCFzKXJldHVybjtpLm9mZnNldCgpO3ZhciBuPVwiaGlkZGVuXCIhPWUocykuY3NzKFwib3ZlcmZsb3dcIik7dGhpcy5jb250YWlubWVudD1bKHBhcnNlSW50KGUocykuY3NzKFwiYm9yZGVyTGVmdFdpZHRoXCIpLDEwKXx8MCkrKHBhcnNlSW50KGUocykuY3NzKFwicGFkZGluZ0xlZnRcIiksMTApfHwwKSwocGFyc2VJbnQoZShzKS5jc3MoXCJib3JkZXJUb3BXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludChlKHMpLmNzcyhcInBhZGRpbmdUb3BcIiksMTApfHwwKSwobj9NYXRoLm1heChzLnNjcm9sbFdpZHRoLHMub2Zmc2V0V2lkdGgpOnMub2Zmc2V0V2lkdGgpLShwYXJzZUludChlKHMpLmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApLShwYXJzZUludChlKHMpLmNzcyhcInBhZGRpbmdSaWdodFwiKSwxMCl8fDApLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgtdGhpcy5tYXJnaW5zLmxlZnQtdGhpcy5tYXJnaW5zLnJpZ2h0LChuP01hdGgubWF4KHMuc2Nyb2xsSGVpZ2h0LHMub2Zmc2V0SGVpZ2h0KTpzLm9mZnNldEhlaWdodCktKHBhcnNlSW50KGUocykuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQoZShzKS5jc3MoXCJwYWRkaW5nQm90dG9tXCIpLDEwKXx8MCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQtdGhpcy5tYXJnaW5zLnRvcC10aGlzLm1hcmdpbnMuYm90dG9tXSx0aGlzLnJlbGF0aXZlX2NvbnRhaW5lcj1pfX0sX2NvbnZlcnRQb3NpdGlvblRvOmZ1bmN0aW9uKHQsaSl7aXx8KGk9dGhpcy5wb3NpdGlvbik7dmFyIHM9XCJhYnNvbHV0ZVwiPT10PzE6LTEsbj0odGhpcy5vcHRpb25zLFwiYWJzb2x1dGVcIiE9dGhpcy5jc3NQb3NpdGlvbnx8dGhpcy5zY3JvbGxQYXJlbnRbMF0hPWRvY3VtZW50JiZlLmNvbnRhaW5zKHRoaXMuc2Nyb2xsUGFyZW50WzBdLHRoaXMub2Zmc2V0UGFyZW50WzBdKT90aGlzLnNjcm9sbFBhcmVudDp0aGlzLm9mZnNldFBhcmVudCksYT0vKGh0bWx8Ym9keSkvaS50ZXN0KG5bMF0udGFnTmFtZSk7cmV0dXJue3RvcDppLnRvcCt0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3Aqcyt0aGlzLm9mZnNldC5wYXJlbnQudG9wKnMtKFwiZml4ZWRcIj09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk6YT8wOm4uc2Nyb2xsVG9wKCkpKnMsbGVmdDppLmxlZnQrdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCpzK3RoaXMub2Zmc2V0LnBhcmVudC5sZWZ0KnMtKFwiZml4ZWRcIj09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpOmE/MDpuLnNjcm9sbExlZnQoKSkqc319LF9nZW5lcmF0ZVBvc2l0aW9uOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucyxzPVwiYWJzb2x1dGVcIiE9dGhpcy5jc3NQb3NpdGlvbnx8dGhpcy5zY3JvbGxQYXJlbnRbMF0hPWRvY3VtZW50JiZlLmNvbnRhaW5zKHRoaXMuc2Nyb2xsUGFyZW50WzBdLHRoaXMub2Zmc2V0UGFyZW50WzBdKT90aGlzLnNjcm9sbFBhcmVudDp0aGlzLm9mZnNldFBhcmVudCxuPS8oaHRtbHxib2R5KS9pLnRlc3Qoc1swXS50YWdOYW1lKSxhPXQucGFnZVgsbz10LnBhZ2VZO2lmKHRoaXMub3JpZ2luYWxQb3NpdGlvbil7dmFyIHI7aWYodGhpcy5jb250YWlubWVudCl7aWYodGhpcy5yZWxhdGl2ZV9jb250YWluZXIpe3ZhciBoPXRoaXMucmVsYXRpdmVfY29udGFpbmVyLm9mZnNldCgpO3I9W3RoaXMuY29udGFpbm1lbnRbMF0raC5sZWZ0LHRoaXMuY29udGFpbm1lbnRbMV0raC50b3AsdGhpcy5jb250YWlubWVudFsyXStoLmxlZnQsdGhpcy5jb250YWlubWVudFszXStoLnRvcF19ZWxzZSByPXRoaXMuY29udGFpbm1lbnQ7dC5wYWdlWC10aGlzLm9mZnNldC5jbGljay5sZWZ0PHJbMF0mJihhPXJbMF0rdGhpcy5vZmZzZXQuY2xpY2subGVmdCksdC5wYWdlWS10aGlzLm9mZnNldC5jbGljay50b3A8clsxXSYmKG89clsxXSt0aGlzLm9mZnNldC5jbGljay50b3ApLHQucGFnZVgtdGhpcy5vZmZzZXQuY2xpY2subGVmdD5yWzJdJiYoYT1yWzJdK3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQpLHQucGFnZVktdGhpcy5vZmZzZXQuY2xpY2sudG9wPnJbM10mJihvPXJbM10rdGhpcy5vZmZzZXQuY2xpY2sudG9wKX1pZihpLmdyaWQpe3ZhciBsPWkuZ3JpZFsxXT90aGlzLm9yaWdpbmFsUGFnZVkrTWF0aC5yb3VuZCgoby10aGlzLm9yaWdpbmFsUGFnZVkpL2kuZ3JpZFsxXSkqaS5ncmlkWzFdOnRoaXMub3JpZ2luYWxQYWdlWTtvPXI/bC10aGlzLm9mZnNldC5jbGljay50b3A8clsxXXx8bC10aGlzLm9mZnNldC5jbGljay50b3A+clszXT9sLXRoaXMub2Zmc2V0LmNsaWNrLnRvcDxyWzFdP2wraS5ncmlkWzFdOmwtaS5ncmlkWzFdOmw6bDt2YXIgdT1pLmdyaWRbMF0/dGhpcy5vcmlnaW5hbFBhZ2VYK01hdGgucm91bmQoKGEtdGhpcy5vcmlnaW5hbFBhZ2VYKS9pLmdyaWRbMF0pKmkuZ3JpZFswXTp0aGlzLm9yaWdpbmFsUGFnZVg7YT1yP3UtdGhpcy5vZmZzZXQuY2xpY2subGVmdDxyWzBdfHx1LXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+clsyXT91LXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ8clswXT91K2kuZ3JpZFswXTp1LWkuZ3JpZFswXTp1OnV9fXJldHVybnt0b3A6by10aGlzLm9mZnNldC5jbGljay50b3AtdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wLXRoaXMub2Zmc2V0LnBhcmVudC50b3ArKFwiZml4ZWRcIj09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk6bj8wOnMuc2Nyb2xsVG9wKCkpLGxlZnQ6YS10aGlzLm9mZnNldC5jbGljay5sZWZ0LXRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQtdGhpcy5vZmZzZXQucGFyZW50LmxlZnQrKFwiZml4ZWRcIj09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpOm4/MDpzLnNjcm9sbExlZnQoKSl9fSxfY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLmhlbHBlci5yZW1vdmVDbGFzcyhcInVpLWRyYWdnYWJsZS1kcmFnZ2luZ1wiKSx0aGlzLmhlbHBlclswXT09dGhpcy5lbGVtZW50WzBdfHx0aGlzLmNhbmNlbEhlbHBlclJlbW92YWx8fHRoaXMuaGVscGVyLnJlbW92ZSgpLHRoaXMuaGVscGVyPW51bGwsdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsPSExfSxfdHJpZ2dlcjpmdW5jdGlvbih0LGkscyl7cmV0dXJuIHM9c3x8dGhpcy5fdWlIYXNoKCksZS51aS5wbHVnaW4uY2FsbCh0aGlzLHQsW2ksc10pLFwiZHJhZ1wiPT10JiYodGhpcy5wb3NpdGlvbkFicz10aGlzLl9jb252ZXJ0UG9zaXRpb25UbyhcImFic29sdXRlXCIpKSxlLldpZGdldC5wcm90b3R5cGUuX3RyaWdnZXIuY2FsbCh0aGlzLHQsaSxzKX0scGx1Z2luczp7fSxfdWlIYXNoOmZ1bmN0aW9uKCl7cmV0dXJue2hlbHBlcjp0aGlzLmhlbHBlcixwb3NpdGlvbjp0aGlzLnBvc2l0aW9uLG9yaWdpbmFsUG9zaXRpb246dGhpcy5vcmlnaW5hbFBvc2l0aW9uLG9mZnNldDp0aGlzLnBvc2l0aW9uQWJzfX19KSxlLnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcImNvbm5lY3RUb1NvcnRhYmxlXCIse3N0YXJ0OmZ1bmN0aW9uKHQsaSl7dmFyIHM9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLG49cy5vcHRpb25zLGE9ZS5leHRlbmQoe30saSx7aXRlbTpzLmVsZW1lbnR9KTtzLnNvcnRhYmxlcz1bXSxlKG4uY29ubmVjdFRvU29ydGFibGUpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT1lLmRhdGEodGhpcyxcInNvcnRhYmxlXCIpO2kmJiFpLm9wdGlvbnMuZGlzYWJsZWQmJihzLnNvcnRhYmxlcy5wdXNoKHtpbnN0YW5jZTppLHNob3VsZFJldmVydDppLm9wdGlvbnMucmV2ZXJ0fSksaS5yZWZyZXNoUG9zaXRpb25zKCksaS5fdHJpZ2dlcihcImFjdGl2YXRlXCIsdCxhKSl9KX0sc3RvcDpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKSxuPWUuZXh0ZW5kKHt9LGkse2l0ZW06cy5lbGVtZW50fSk7ZS5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7dGhpcy5pbnN0YW5jZS5pc092ZXI/KHRoaXMuaW5zdGFuY2UuaXNPdmVyPTAscy5jYW5jZWxIZWxwZXJSZW1vdmFsPSEwLHRoaXMuaW5zdGFuY2UuY2FuY2VsSGVscGVyUmVtb3ZhbD0hMSx0aGlzLnNob3VsZFJldmVydCYmKHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5yZXZlcnQ9ITApLHRoaXMuaW5zdGFuY2UuX21vdXNlU3RvcCh0KSx0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGVscGVyPXRoaXMuaW5zdGFuY2Uub3B0aW9ucy5faGVscGVyLFwib3JpZ2luYWxcIj09cy5vcHRpb25zLmhlbHBlciYmdGhpcy5pbnN0YW5jZS5jdXJyZW50SXRlbS5jc3Moe3RvcDpcImF1dG9cIixsZWZ0OlwiYXV0b1wifSkpOih0aGlzLmluc3RhbmNlLmNhbmNlbEhlbHBlclJlbW92YWw9ITEsdGhpcy5pbnN0YW5jZS5fdHJpZ2dlcihcImRlYWN0aXZhdGVcIix0LG4pKX0pfSxkcmFnOmZ1bmN0aW9uKHQsaSl7dmFyIHM9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLG49dGhpcztlLmVhY2gocy5zb3J0YWJsZXMsZnVuY3Rpb24oKXt2YXIgYT0hMSxvPXRoaXM7dGhpcy5pbnN0YW5jZS5wb3NpdGlvbkFicz1zLnBvc2l0aW9uQWJzLHRoaXMuaW5zdGFuY2UuaGVscGVyUHJvcG9ydGlvbnM9cy5oZWxwZXJQcm9wb3J0aW9ucyx0aGlzLmluc3RhbmNlLm9mZnNldC5jbGljaz1zLm9mZnNldC5jbGljayx0aGlzLmluc3RhbmNlLl9pbnRlcnNlY3RzV2l0aCh0aGlzLmluc3RhbmNlLmNvbnRhaW5lckNhY2hlKSYmKGE9ITAsZS5lYWNoKHMuc29ydGFibGVzLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaW5zdGFuY2UucG9zaXRpb25BYnM9cy5wb3NpdGlvbkFicyx0aGlzLmluc3RhbmNlLmhlbHBlclByb3BvcnRpb25zPXMuaGVscGVyUHJvcG9ydGlvbnMsdGhpcy5pbnN0YW5jZS5vZmZzZXQuY2xpY2s9cy5vZmZzZXQuY2xpY2ssdGhpcyE9byYmdGhpcy5pbnN0YW5jZS5faW50ZXJzZWN0c1dpdGgodGhpcy5pbnN0YW5jZS5jb250YWluZXJDYWNoZSkmJmUudWkuY29udGFpbnMoby5pbnN0YW5jZS5lbGVtZW50WzBdLHRoaXMuaW5zdGFuY2UuZWxlbWVudFswXSkmJihhPSExKSxhfSkpLGE/KHRoaXMuaW5zdGFuY2UuaXNPdmVyfHwodGhpcy5pbnN0YW5jZS5pc092ZXI9MSx0aGlzLmluc3RhbmNlLmN1cnJlbnRJdGVtPWUobikuY2xvbmUoKS5yZW1vdmVBdHRyKFwiaWRcIikuYXBwZW5kVG8odGhpcy5pbnN0YW5jZS5lbGVtZW50KS5kYXRhKFwic29ydGFibGUtaXRlbVwiLCEwKSx0aGlzLmluc3RhbmNlLm9wdGlvbnMuX2hlbHBlcj10aGlzLmluc3RhbmNlLm9wdGlvbnMuaGVscGVyLHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5oZWxwZXI9ZnVuY3Rpb24oKXtyZXR1cm4gaS5oZWxwZXJbMF19LHQudGFyZ2V0PXRoaXMuaW5zdGFuY2UuY3VycmVudEl0ZW1bMF0sdGhpcy5pbnN0YW5jZS5fbW91c2VDYXB0dXJlKHQsITApLHRoaXMuaW5zdGFuY2UuX21vdXNlU3RhcnQodCwhMCwhMCksdGhpcy5pbnN0YW5jZS5vZmZzZXQuY2xpY2sudG9wPXMub2Zmc2V0LmNsaWNrLnRvcCx0aGlzLmluc3RhbmNlLm9mZnNldC5jbGljay5sZWZ0PXMub2Zmc2V0LmNsaWNrLmxlZnQsdGhpcy5pbnN0YW5jZS5vZmZzZXQucGFyZW50LmxlZnQtPXMub2Zmc2V0LnBhcmVudC5sZWZ0LXRoaXMuaW5zdGFuY2Uub2Zmc2V0LnBhcmVudC5sZWZ0LHRoaXMuaW5zdGFuY2Uub2Zmc2V0LnBhcmVudC50b3AtPXMub2Zmc2V0LnBhcmVudC50b3AtdGhpcy5pbnN0YW5jZS5vZmZzZXQucGFyZW50LnRvcCxzLl90cmlnZ2VyKFwidG9Tb3J0YWJsZVwiLHQpLHMuZHJvcHBlZD10aGlzLmluc3RhbmNlLmVsZW1lbnQscy5jdXJyZW50SXRlbT1zLmVsZW1lbnQsdGhpcy5pbnN0YW5jZS5mcm9tT3V0c2lkZT1zKSx0aGlzLmluc3RhbmNlLmN1cnJlbnRJdGVtJiZ0aGlzLmluc3RhbmNlLl9tb3VzZURyYWcodCkpOnRoaXMuaW5zdGFuY2UuaXNPdmVyJiYodGhpcy5pbnN0YW5jZS5pc092ZXI9MCx0aGlzLmluc3RhbmNlLmNhbmNlbEhlbHBlclJlbW92YWw9ITAsdGhpcy5pbnN0YW5jZS5vcHRpb25zLnJldmVydD0hMSx0aGlzLmluc3RhbmNlLl90cmlnZ2VyKFwib3V0XCIsdCx0aGlzLmluc3RhbmNlLl91aUhhc2godGhpcy5pbnN0YW5jZSkpLHRoaXMuaW5zdGFuY2UuX21vdXNlU3RvcCh0LCEwKSx0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGVscGVyPXRoaXMuaW5zdGFuY2Uub3B0aW9ucy5faGVscGVyLHRoaXMuaW5zdGFuY2UuY3VycmVudEl0ZW0ucmVtb3ZlKCksdGhpcy5pbnN0YW5jZS5wbGFjZWhvbGRlciYmdGhpcy5pbnN0YW5jZS5wbGFjZWhvbGRlci5yZW1vdmUoKSxzLl90cmlnZ2VyKFwiZnJvbVNvcnRhYmxlXCIsdCkscy5kcm9wcGVkPSExKX0pfX0pLGUudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwiY3Vyc29yXCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIHQ9ZShcImJvZHlcIiksaT1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9uczt0LmNzcyhcImN1cnNvclwiKSYmKGkuX2N1cnNvcj10LmNzcyhcImN1cnNvclwiKSksdC5jc3MoXCJjdXJzb3JcIixpLmN1cnNvcil9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9uczt0Ll9jdXJzb3ImJmUoXCJib2R5XCIpLmNzcyhcImN1cnNvclwiLHQuX2N1cnNvcil9fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJvcGFjaXR5XCIse3N0YXJ0OmZ1bmN0aW9uKHQsaSl7dmFyIHM9ZShpLmhlbHBlciksbj1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIikub3B0aW9ucztzLmNzcyhcIm9wYWNpdHlcIikmJihuLl9vcGFjaXR5PXMuY3NzKFwib3BhY2l0eVwiKSkscy5jc3MoXCJvcGFjaXR5XCIsbi5vcGFjaXR5KX0sc3RvcDpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKS5vcHRpb25zO3MuX29wYWNpdHkmJmUoaS5oZWxwZXIpLmNzcyhcIm9wYWNpdHlcIixzLl9vcGFjaXR5KX19KSxlLnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcInNjcm9sbFwiLHtzdGFydDpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKTt0LnNjcm9sbFBhcmVudFswXSE9ZG9jdW1lbnQmJlwiSFRNTFwiIT10LnNjcm9sbFBhcmVudFswXS50YWdOYW1lJiYodC5vdmVyZmxvd09mZnNldD10LnNjcm9sbFBhcmVudC5vZmZzZXQoKSl9LGRyYWc6ZnVuY3Rpb24odCl7dmFyIGk9ZSh0aGlzKS5kYXRhKFwiZHJhZ2dhYmxlXCIpLHM9aS5vcHRpb25zLG49ITE7aS5zY3JvbGxQYXJlbnRbMF0hPWRvY3VtZW50JiZcIkhUTUxcIiE9aS5zY3JvbGxQYXJlbnRbMF0udGFnTmFtZT8ocy5heGlzJiZcInhcIj09cy5heGlzfHwoaS5vdmVyZmxvd09mZnNldC50b3AraS5zY3JvbGxQYXJlbnRbMF0ub2Zmc2V0SGVpZ2h0LXQucGFnZVk8cy5zY3JvbGxTZW5zaXRpdml0eT9pLnNjcm9sbFBhcmVudFswXS5zY3JvbGxUb3A9bj1pLnNjcm9sbFBhcmVudFswXS5zY3JvbGxUb3Arcy5zY3JvbGxTcGVlZDp0LnBhZ2VZLWkub3ZlcmZsb3dPZmZzZXQudG9wPHMuc2Nyb2xsU2Vuc2l0aXZpdHkmJihpLnNjcm9sbFBhcmVudFswXS5zY3JvbGxUb3A9bj1pLnNjcm9sbFBhcmVudFswXS5zY3JvbGxUb3Atcy5zY3JvbGxTcGVlZCkpLHMuYXhpcyYmXCJ5XCI9PXMuYXhpc3x8KGkub3ZlcmZsb3dPZmZzZXQubGVmdCtpLnNjcm9sbFBhcmVudFswXS5vZmZzZXRXaWR0aC10LnBhZ2VYPHMuc2Nyb2xsU2Vuc2l0aXZpdHk/aS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdD1uPWkuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQrcy5zY3JvbGxTcGVlZDp0LnBhZ2VYLWkub3ZlcmZsb3dPZmZzZXQubGVmdDxzLnNjcm9sbFNlbnNpdGl2aXR5JiYoaS5zY3JvbGxQYXJlbnRbMF0uc2Nyb2xsTGVmdD1uPWkuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQtcy5zY3JvbGxTcGVlZCkpKToocy5heGlzJiZcInhcIj09cy5heGlzfHwodC5wYWdlWS1lKGRvY3VtZW50KS5zY3JvbGxUb3AoKTxzLnNjcm9sbFNlbnNpdGl2aXR5P249ZShkb2N1bWVudCkuc2Nyb2xsVG9wKGUoZG9jdW1lbnQpLnNjcm9sbFRvcCgpLXMuc2Nyb2xsU3BlZWQpOmUod2luZG93KS5oZWlnaHQoKS0odC5wYWdlWS1lKGRvY3VtZW50KS5zY3JvbGxUb3AoKSk8cy5zY3JvbGxTZW5zaXRpdml0eSYmKG49ZShkb2N1bWVudCkuc2Nyb2xsVG9wKGUoZG9jdW1lbnQpLnNjcm9sbFRvcCgpK3Muc2Nyb2xsU3BlZWQpKSkscy5heGlzJiZcInlcIj09cy5heGlzfHwodC5wYWdlWC1lKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCk8cy5zY3JvbGxTZW5zaXRpdml0eT9uPWUoZG9jdW1lbnQpLnNjcm9sbExlZnQoZShkb2N1bWVudCkuc2Nyb2xsTGVmdCgpLXMuc2Nyb2xsU3BlZWQpOmUod2luZG93KS53aWR0aCgpLSh0LnBhZ2VYLWUoZG9jdW1lbnQpLnNjcm9sbExlZnQoKSk8cy5zY3JvbGxTZW5zaXRpdml0eSYmKG49ZShkb2N1bWVudCkuc2Nyb2xsTGVmdChlKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCkrcy5zY3JvbGxTcGVlZCkpKSksbiE9PSExJiZlLnVpLmRkbWFuYWdlciYmIXMuZHJvcEJlaGF2aW91ciYmZS51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoaSx0KX19KSxlLnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcInNuYXBcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIiksaT10Lm9wdGlvbnM7dC5zbmFwRWxlbWVudHM9W10sZShpLnNuYXAuY29uc3RydWN0b3IhPVN0cmluZz9pLnNuYXAuaXRlbXN8fFwiOmRhdGEoZHJhZ2dhYmxlKVwiOmkuc25hcCkuZWFjaChmdW5jdGlvbigpe3ZhciBpPWUodGhpcykscz1pLm9mZnNldCgpO3RoaXMhPXQuZWxlbWVudFswXSYmdC5zbmFwRWxlbWVudHMucHVzaCh7aXRlbTp0aGlzLHdpZHRoOmkub3V0ZXJXaWR0aCgpLGhlaWdodDppLm91dGVySGVpZ2h0KCksdG9wOnMudG9wLGxlZnQ6cy5sZWZ0fSl9KX0sZHJhZzpmdW5jdGlvbih0LGkpe2Zvcih2YXIgcz1lKHRoaXMpLmRhdGEoXCJkcmFnZ2FibGVcIiksbj1zLm9wdGlvbnMsYT1uLnNuYXBUb2xlcmFuY2Usbz1pLm9mZnNldC5sZWZ0LHI9bytzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLGg9aS5vZmZzZXQudG9wLGw9aCtzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCx1PXMuc25hcEVsZW1lbnRzLmxlbmd0aC0xO3U+PTA7dS0tKXt2YXIgZD1zLnNuYXBFbGVtZW50c1t1XS5sZWZ0LGM9ZCtzLnNuYXBFbGVtZW50c1t1XS53aWR0aCxwPXMuc25hcEVsZW1lbnRzW3VdLnRvcCxmPXArcy5zbmFwRWxlbWVudHNbdV0uaGVpZ2h0O2lmKG8+ZC1hJiZjK2E+byYmaD5wLWEmJmYrYT5ofHxvPmQtYSYmYythPm8mJmw+cC1hJiZmK2E+bHx8cj5kLWEmJmMrYT5yJiZoPnAtYSYmZithPmh8fHI+ZC1hJiZjK2E+ciYmbD5wLWEmJmYrYT5sKXtpZihcImlubmVyXCIhPW4uc25hcE1vZGUpe3ZhciBtPWE+PU1hdGguYWJzKHAtbCksZz1hPj1NYXRoLmFicyhmLWgpLHY9YT49TWF0aC5hYnMoZC1yKSxfPWE+PU1hdGguYWJzKGMtbyk7bSYmKGkucG9zaXRpb24udG9wPXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOnAtcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsbGVmdDowfSkudG9wLXMubWFyZ2lucy50b3ApLGcmJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDpmLGxlZnQ6MH0pLnRvcC1zLm1hcmdpbnMudG9wKSx2JiYoaS5wb3NpdGlvbi5sZWZ0PXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOjAsbGVmdDpkLXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGh9KS5sZWZ0LXMubWFyZ2lucy5sZWZ0KSxfJiYoaS5wb3NpdGlvbi5sZWZ0PXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOjAsbGVmdDpjfSkubGVmdC1zLm1hcmdpbnMubGVmdCl9dmFyIGI9bXx8Z3x8dnx8XztpZihcIm91dGVyXCIhPW4uc25hcE1vZGUpe3ZhciBtPWE+PU1hdGguYWJzKHAtaCksZz1hPj1NYXRoLmFicyhmLWwpLHY9YT49TWF0aC5hYnMoZC1vKSxfPWE+PU1hdGguYWJzKGMtcik7bSYmKGkucG9zaXRpb24udG9wPXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOnAsbGVmdDowfSkudG9wLXMubWFyZ2lucy50b3ApLGcmJihpLnBvc2l0aW9uLnRvcD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDpmLXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LGxlZnQ6MH0pLnRvcC1zLm1hcmdpbnMudG9wKSx2JiYoaS5wb3NpdGlvbi5sZWZ0PXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOjAsbGVmdDpkfSkubGVmdC1zLm1hcmdpbnMubGVmdCksXyYmKGkucG9zaXRpb24ubGVmdD1zLl9jb252ZXJ0UG9zaXRpb25UbyhcInJlbGF0aXZlXCIse3RvcDowLGxlZnQ6Yy1zLmhlbHBlclByb3BvcnRpb25zLndpZHRofSkubGVmdC1zLm1hcmdpbnMubGVmdCl9IXMuc25hcEVsZW1lbnRzW3VdLnNuYXBwaW5nJiYobXx8Z3x8dnx8X3x8YikmJnMub3B0aW9ucy5zbmFwLnNuYXAmJnMub3B0aW9ucy5zbmFwLnNuYXAuY2FsbChzLmVsZW1lbnQsdCxlLmV4dGVuZChzLl91aUhhc2goKSx7c25hcEl0ZW06cy5zbmFwRWxlbWVudHNbdV0uaXRlbX0pKSxzLnNuYXBFbGVtZW50c1t1XS5zbmFwcGluZz1tfHxnfHx2fHxffHxifWVsc2Ugcy5zbmFwRWxlbWVudHNbdV0uc25hcHBpbmcmJnMub3B0aW9ucy5zbmFwLnJlbGVhc2UmJnMub3B0aW9ucy5zbmFwLnJlbGVhc2UuY2FsbChzLmVsZW1lbnQsdCxlLmV4dGVuZChzLl91aUhhc2goKSx7c25hcEl0ZW06cy5zbmFwRWxlbWVudHNbdV0uaXRlbX0pKSxzLnNuYXBFbGVtZW50c1t1XS5zbmFwcGluZz0hMX19fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJzdGFja1wiLHtzdGFydDpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKS5vcHRpb25zLGk9ZS5tYWtlQXJyYXkoZSh0LnN0YWNrKSkuc29ydChmdW5jdGlvbih0LGkpe3JldHVybihwYXJzZUludChlKHQpLmNzcyhcInpJbmRleFwiKSwxMCl8fDApLShwYXJzZUludChlKGkpLmNzcyhcInpJbmRleFwiKSwxMCl8fDApfSk7aWYoaS5sZW5ndGgpe3ZhciBzPXBhcnNlSW50KGlbMF0uc3R5bGUuekluZGV4KXx8MDtlKGkpLmVhY2goZnVuY3Rpb24oZSl7dGhpcy5zdHlsZS56SW5kZXg9cytlfSksdGhpc1swXS5zdHlsZS56SW5kZXg9cytpLmxlbmd0aH19fSksZS51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJ6SW5kZXhcIix7c3RhcnQ6ZnVuY3Rpb24odCxpKXt2YXIgcz1lKGkuaGVscGVyKSxuPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKS5vcHRpb25zO3MuY3NzKFwiekluZGV4XCIpJiYobi5fekluZGV4PXMuY3NzKFwiekluZGV4XCIpKSxzLmNzcyhcInpJbmRleFwiLG4uekluZGV4KX0sc3RvcDpmdW5jdGlvbih0LGkpe3ZhciBzPWUodGhpcykuZGF0YShcImRyYWdnYWJsZVwiKS5vcHRpb25zO3MuX3pJbmRleCYmZShpLmhlbHBlcikuY3NzKFwiekluZGV4XCIscy5fekluZGV4KX19KX0pKGpRdWVyeSk7KGZ1bmN0aW9uKGUpe2Uud2lkZ2V0KFwidWkucmVzaXphYmxlXCIsZS51aS5tb3VzZSx7dmVyc2lvbjpcIjEuOS4yXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJyZXNpemVcIixvcHRpb25zOnthbHNvUmVzaXplOiExLGFuaW1hdGU6ITEsYW5pbWF0ZUR1cmF0aW9uOlwic2xvd1wiLGFuaW1hdGVFYXNpbmc6XCJzd2luZ1wiLGFzcGVjdFJhdGlvOiExLGF1dG9IaWRlOiExLGNvbnRhaW5tZW50OiExLGdob3N0OiExLGdyaWQ6ITEsaGFuZGxlczpcImUscyxzZVwiLGhlbHBlcjohMSxtYXhIZWlnaHQ6bnVsbCxtYXhXaWR0aDpudWxsLG1pbkhlaWdodDoxMCxtaW5XaWR0aDoxMCx6SW5kZXg6MWUzfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxpPXRoaXMub3B0aW9ucztpZih0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGVcIiksZS5leHRlbmQodGhpcyx7X2FzcGVjdFJhdGlvOiEhaS5hc3BlY3RSYXRpbyxhc3BlY3RSYXRpbzppLmFzcGVjdFJhdGlvLG9yaWdpbmFsRWxlbWVudDp0aGlzLmVsZW1lbnQsX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHM6W10sX2hlbHBlcjppLmhlbHBlcnx8aS5naG9zdHx8aS5hbmltYXRlP2kuaGVscGVyfHxcInVpLXJlc2l6YWJsZS1oZWxwZXJcIjpudWxsfSksdGhpcy5lbGVtZW50WzBdLm5vZGVOYW1lLm1hdGNoKC9jYW52YXN8dGV4dGFyZWF8aW5wdXR8c2VsZWN0fGJ1dHRvbnxpbWcvaSkmJih0aGlzLmVsZW1lbnQud3JhcChlKCc8ZGl2IGNsYXNzPVwidWktd3JhcHBlclwiIHN0eWxlPVwib3ZlcmZsb3c6IGhpZGRlbjtcIj48L2Rpdj4nKS5jc3Moe3Bvc2l0aW9uOnRoaXMuZWxlbWVudC5jc3MoXCJwb3NpdGlvblwiKSx3aWR0aDp0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpLGhlaWdodDp0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSx0b3A6dGhpcy5lbGVtZW50LmNzcyhcInRvcFwiKSxsZWZ0OnRoaXMuZWxlbWVudC5jc3MoXCJsZWZ0XCIpfSkpLHRoaXMuZWxlbWVudD10aGlzLmVsZW1lbnQucGFyZW50KCkuZGF0YShcInJlc2l6YWJsZVwiLHRoaXMuZWxlbWVudC5kYXRhKFwicmVzaXphYmxlXCIpKSx0aGlzLmVsZW1lbnRJc1dyYXBwZXI9ITAsdGhpcy5lbGVtZW50LmNzcyh7bWFyZ2luTGVmdDp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5MZWZ0XCIpLG1hcmdpblRvcDp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5Ub3BcIiksbWFyZ2luUmlnaHQ6dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luUmlnaHRcIiksbWFyZ2luQm90dG9tOnRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcIm1hcmdpbkJvdHRvbVwiKX0pLHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyh7bWFyZ2luTGVmdDowLG1hcmdpblRvcDowLG1hcmdpblJpZ2h0OjAsbWFyZ2luQm90dG9tOjB9KSx0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGU9dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwicmVzaXplXCIpLHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcInJlc2l6ZVwiLFwibm9uZVwiKSx0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLnB1c2godGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHtwb3NpdGlvbjpcInN0YXRpY1wiLHpvb206MSxkaXNwbGF5OlwiYmxvY2tcIn0pKSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3Moe21hcmdpbjp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5cIil9KSx0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpKSx0aGlzLmhhbmRsZXM9aS5oYW5kbGVzfHwoZShcIi51aS1yZXNpemFibGUtaGFuZGxlXCIsdGhpcy5lbGVtZW50KS5sZW5ndGg/e246XCIudWktcmVzaXphYmxlLW5cIixlOlwiLnVpLXJlc2l6YWJsZS1lXCIsczpcIi51aS1yZXNpemFibGUtc1wiLHc6XCIudWktcmVzaXphYmxlLXdcIixzZTpcIi51aS1yZXNpemFibGUtc2VcIixzdzpcIi51aS1yZXNpemFibGUtc3dcIixuZTpcIi51aS1yZXNpemFibGUtbmVcIixudzpcIi51aS1yZXNpemFibGUtbndcIn06XCJlLHMsc2VcIiksdGhpcy5oYW5kbGVzLmNvbnN0cnVjdG9yPT1TdHJpbmcpe1wiYWxsXCI9PXRoaXMuaGFuZGxlcyYmKHRoaXMuaGFuZGxlcz1cIm4sZSxzLHcsc2Usc3csbmUsbndcIik7dmFyIHM9dGhpcy5oYW5kbGVzLnNwbGl0KFwiLFwiKTt0aGlzLmhhbmRsZXM9e307Zm9yKHZhciBuPTA7cy5sZW5ndGg+bjtuKyspe3ZhciBhPWUudHJpbShzW25dKSxvPVwidWktcmVzaXphYmxlLVwiK2Escj1lKCc8ZGl2IGNsYXNzPVwidWktcmVzaXphYmxlLWhhbmRsZSAnK28rJ1wiPjwvZGl2PicpO3IuY3NzKHt6SW5kZXg6aS56SW5kZXh9KSxcInNlXCI9PWEmJnIuYWRkQ2xhc3MoXCJ1aS1pY29uIHVpLWljb24tZ3JpcHNtYWxsLWRpYWdvbmFsLXNlXCIpLHRoaXMuaGFuZGxlc1thXT1cIi51aS1yZXNpemFibGUtXCIrYSx0aGlzLmVsZW1lbnQuYXBwZW5kKHIpfX10aGlzLl9yZW5kZXJBeGlzPWZ1bmN0aW9uKHQpe3Q9dHx8dGhpcy5lbGVtZW50O2Zvcih2YXIgaSBpbiB0aGlzLmhhbmRsZXMpe2lmKHRoaXMuaGFuZGxlc1tpXS5jb25zdHJ1Y3Rvcj09U3RyaW5nJiYodGhpcy5oYW5kbGVzW2ldPWUodGhpcy5oYW5kbGVzW2ldLHRoaXMuZWxlbWVudCkuc2hvdygpKSx0aGlzLmVsZW1lbnRJc1dyYXBwZXImJnRoaXMub3JpZ2luYWxFbGVtZW50WzBdLm5vZGVOYW1lLm1hdGNoKC90ZXh0YXJlYXxpbnB1dHxzZWxlY3R8YnV0dG9uL2kpKXt2YXIgcz1lKHRoaXMuaGFuZGxlc1tpXSx0aGlzLmVsZW1lbnQpLG49MDtuPS9zd3xuZXxud3xzZXxufHMvLnRlc3QoaSk/cy5vdXRlckhlaWdodCgpOnMub3V0ZXJXaWR0aCgpO3ZhciBhPVtcInBhZGRpbmdcIiwvbmV8bnd8bi8udGVzdChpKT9cIlRvcFwiOi9zZXxzd3xzLy50ZXN0KGkpP1wiQm90dG9tXCI6L15lJC8udGVzdChpKT9cIlJpZ2h0XCI6XCJMZWZ0XCJdLmpvaW4oXCJcIik7dC5jc3MoYSxuKSx0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpfWUodGhpcy5oYW5kbGVzW2ldKS5sZW5ndGh9fSx0aGlzLl9yZW5kZXJBeGlzKHRoaXMuZWxlbWVudCksdGhpcy5faGFuZGxlcz1lKFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIix0aGlzLmVsZW1lbnQpLmRpc2FibGVTZWxlY3Rpb24oKSx0aGlzLl9oYW5kbGVzLm1vdXNlb3ZlcihmdW5jdGlvbigpe2lmKCF0LnJlc2l6aW5nKXtpZih0aGlzLmNsYXNzTmFtZSl2YXIgZT10aGlzLmNsYXNzTmFtZS5tYXRjaCgvdWktcmVzaXphYmxlLShzZXxzd3xuZXxud3xufGV8c3x3KS9pKTt0LmF4aXM9ZSYmZVsxXT9lWzFdOlwic2VcIn19KSxpLmF1dG9IaWRlJiYodGhpcy5faGFuZGxlcy5oaWRlKCksZSh0aGlzLmVsZW1lbnQpLmFkZENsYXNzKFwidWktcmVzaXphYmxlLWF1dG9oaWRlXCIpLm1vdXNlZW50ZXIoZnVuY3Rpb24oKXtpLmRpc2FibGVkfHwoZSh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLXJlc2l6YWJsZS1hdXRvaGlkZVwiKSx0Ll9oYW5kbGVzLnNob3coKSl9KS5tb3VzZWxlYXZlKGZ1bmN0aW9uKCl7aS5kaXNhYmxlZHx8dC5yZXNpemluZ3x8KGUodGhpcykuYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGUtYXV0b2hpZGVcIiksdC5faGFuZGxlcy5oaWRlKCkpfSkpLHRoaXMuX21vdXNlSW5pdCgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX21vdXNlRGVzdHJveSgpO3ZhciB0PWZ1bmN0aW9uKHQpe2UodCkucmVtb3ZlQ2xhc3MoXCJ1aS1yZXNpemFibGUgdWktcmVzaXphYmxlLWRpc2FibGVkIHVpLXJlc2l6YWJsZS1yZXNpemluZ1wiKS5yZW1vdmVEYXRhKFwicmVzaXphYmxlXCIpLnJlbW92ZURhdGEoXCJ1aS1yZXNpemFibGVcIikudW5iaW5kKFwiLnJlc2l6YWJsZVwiKS5maW5kKFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIikucmVtb3ZlKCl9O2lmKHRoaXMuZWxlbWVudElzV3JhcHBlcil7dCh0aGlzLmVsZW1lbnQpO3ZhciBpPXRoaXMuZWxlbWVudDt0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3Moe3Bvc2l0aW9uOmkuY3NzKFwicG9zaXRpb25cIiksd2lkdGg6aS5vdXRlcldpZHRoKCksaGVpZ2h0Omkub3V0ZXJIZWlnaHQoKSx0b3A6aS5jc3MoXCJ0b3BcIiksbGVmdDppLmNzcyhcImxlZnRcIil9KS5pbnNlcnRBZnRlcihpKSxpLnJlbW92ZSgpfXJldHVybiB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJyZXNpemVcIix0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUpLHQodGhpcy5vcmlnaW5hbEVsZW1lbnQpLHRoaXN9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24odCl7dmFyIGk9ITE7Zm9yKHZhciBzIGluIHRoaXMuaGFuZGxlcyllKHRoaXMuaGFuZGxlc1tzXSlbMF09PXQudGFyZ2V0JiYoaT0hMCk7cmV0dXJuIXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmaX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oaSl7dmFyIHM9dGhpcy5vcHRpb25zLG49dGhpcy5lbGVtZW50LnBvc2l0aW9uKCksYT10aGlzLmVsZW1lbnQ7dGhpcy5yZXNpemluZz0hMCx0aGlzLmRvY3VtZW50U2Nyb2xsPXt0b3A6ZShkb2N1bWVudCkuc2Nyb2xsVG9wKCksbGVmdDplKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCl9LChhLmlzKFwiLnVpLWRyYWdnYWJsZVwiKXx8L2Fic29sdXRlLy50ZXN0KGEuY3NzKFwicG9zaXRpb25cIikpKSYmYS5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix0b3A6bi50b3AsbGVmdDpuLmxlZnR9KSx0aGlzLl9yZW5kZXJQcm94eSgpO3ZhciBvPXQodGhpcy5oZWxwZXIuY3NzKFwibGVmdFwiKSkscj10KHRoaXMuaGVscGVyLmNzcyhcInRvcFwiKSk7cy5jb250YWlubWVudCYmKG8rPWUocy5jb250YWlubWVudCkuc2Nyb2xsTGVmdCgpfHwwLHIrPWUocy5jb250YWlubWVudCkuc2Nyb2xsVG9wKCl8fDApLHRoaXMub2Zmc2V0PXRoaXMuaGVscGVyLm9mZnNldCgpLHRoaXMucG9zaXRpb249e2xlZnQ6byx0b3A6cn0sdGhpcy5zaXplPXRoaXMuX2hlbHBlcj97d2lkdGg6YS5vdXRlcldpZHRoKCksaGVpZ2h0OmEub3V0ZXJIZWlnaHQoKX06e3dpZHRoOmEud2lkdGgoKSxoZWlnaHQ6YS5oZWlnaHQoKX0sdGhpcy5vcmlnaW5hbFNpemU9dGhpcy5faGVscGVyP3t3aWR0aDphLm91dGVyV2lkdGgoKSxoZWlnaHQ6YS5vdXRlckhlaWdodCgpfTp7d2lkdGg6YS53aWR0aCgpLGhlaWdodDphLmhlaWdodCgpfSx0aGlzLm9yaWdpbmFsUG9zaXRpb249e2xlZnQ6byx0b3A6cn0sdGhpcy5zaXplRGlmZj17d2lkdGg6YS5vdXRlcldpZHRoKCktYS53aWR0aCgpLGhlaWdodDphLm91dGVySGVpZ2h0KCktYS5oZWlnaHQoKX0sdGhpcy5vcmlnaW5hbE1vdXNlUG9zaXRpb249e2xlZnQ6aS5wYWdlWCx0b3A6aS5wYWdlWX0sdGhpcy5hc3BlY3RSYXRpbz1cIm51bWJlclwiPT10eXBlb2Ygcy5hc3BlY3RSYXRpbz9zLmFzcGVjdFJhdGlvOnRoaXMub3JpZ2luYWxTaXplLndpZHRoL3RoaXMub3JpZ2luYWxTaXplLmhlaWdodHx8MTt2YXIgaD1lKFwiLnVpLXJlc2l6YWJsZS1cIit0aGlzLmF4aXMpLmNzcyhcImN1cnNvclwiKTtyZXR1cm4gZShcImJvZHlcIikuY3NzKFwiY3Vyc29yXCIsXCJhdXRvXCI9PWg/dGhpcy5heGlzK1wiLXJlc2l6ZVwiOmgpLGEuYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGUtcmVzaXppbmdcIiksdGhpcy5fcHJvcGFnYXRlKFwic3RhcnRcIixpKSwhMH0sX21vdXNlRHJhZzpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmhlbHBlcixpPSh0aGlzLm9wdGlvbnMsdGhpcy5vcmlnaW5hbE1vdXNlUG9zaXRpb24pLHM9dGhpcy5heGlzLG49ZS5wYWdlWC1pLmxlZnR8fDAsYT1lLnBhZ2VZLWkudG9wfHwwLG89dGhpcy5fY2hhbmdlW3NdO2lmKCFvKXJldHVybiExO3ZhciByPW8uYXBwbHkodGhpcyxbZSxuLGFdKTtyZXR1cm4gdGhpcy5fdXBkYXRlVmlydHVhbEJvdW5kYXJpZXMoZS5zaGlmdEtleSksKHRoaXMuX2FzcGVjdFJhdGlvfHxlLnNoaWZ0S2V5KSYmKHI9dGhpcy5fdXBkYXRlUmF0aW8ocixlKSkscj10aGlzLl9yZXNwZWN0U2l6ZShyLGUpLHRoaXMuX3Byb3BhZ2F0ZShcInJlc2l6ZVwiLGUpLHQuY3NzKHt0b3A6dGhpcy5wb3NpdGlvbi50b3ArXCJweFwiLGxlZnQ6dGhpcy5wb3NpdGlvbi5sZWZ0K1wicHhcIix3aWR0aDp0aGlzLnNpemUud2lkdGgrXCJweFwiLGhlaWdodDp0aGlzLnNpemUuaGVpZ2h0K1wicHhcIn0pLCF0aGlzLl9oZWxwZXImJnRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpLHRoaXMuX3VwZGF0ZUNhY2hlKHIpLHRoaXMuX3RyaWdnZXIoXCJyZXNpemVcIixlLHRoaXMudWkoKSksITF9LF9tb3VzZVN0b3A6ZnVuY3Rpb24odCl7dGhpcy5yZXNpemluZz0hMTt2YXIgaT10aGlzLm9wdGlvbnMscz10aGlzO2lmKHRoaXMuX2hlbHBlcil7dmFyIG49dGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cyxhPW4ubGVuZ3RoJiYvdGV4dGFyZWEvaS50ZXN0KG5bMF0ubm9kZU5hbWUpLG89YSYmZS51aS5oYXNTY3JvbGwoblswXSxcImxlZnRcIik/MDpzLnNpemVEaWZmLmhlaWdodCxyPWE/MDpzLnNpemVEaWZmLndpZHRoLGg9e3dpZHRoOnMuaGVscGVyLndpZHRoKCktcixoZWlnaHQ6cy5oZWxwZXIuaGVpZ2h0KCktb30sbD1wYXJzZUludChzLmVsZW1lbnQuY3NzKFwibGVmdFwiKSwxMCkrKHMucG9zaXRpb24ubGVmdC1zLm9yaWdpbmFsUG9zaXRpb24ubGVmdCl8fG51bGwsdT1wYXJzZUludChzLmVsZW1lbnQuY3NzKFwidG9wXCIpLDEwKSsocy5wb3NpdGlvbi50b3Atcy5vcmlnaW5hbFBvc2l0aW9uLnRvcCl8fG51bGw7aS5hbmltYXRlfHx0aGlzLmVsZW1lbnQuY3NzKGUuZXh0ZW5kKGgse3RvcDp1LGxlZnQ6bH0pKSxzLmhlbHBlci5oZWlnaHQocy5zaXplLmhlaWdodCkscy5oZWxwZXIud2lkdGgocy5zaXplLndpZHRoKSx0aGlzLl9oZWxwZXImJiFpLmFuaW1hdGUmJnRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCl9cmV0dXJuIGUoXCJib2R5XCIpLmNzcyhcImN1cnNvclwiLFwiYXV0b1wiKSx0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1yZXNpemFibGUtcmVzaXppbmdcIiksdGhpcy5fcHJvcGFnYXRlKFwic3RvcFwiLHQpLHRoaXMuX2hlbHBlciYmdGhpcy5oZWxwZXIucmVtb3ZlKCksITF9LF91cGRhdGVWaXJ0dWFsQm91bmRhcmllczpmdW5jdGlvbihlKXt2YXIgdCxzLG4sYSxvLHI9dGhpcy5vcHRpb25zO289e21pbldpZHRoOmkoci5taW5XaWR0aCk/ci5taW5XaWR0aDowLG1heFdpZHRoOmkoci5tYXhXaWR0aCk/ci5tYXhXaWR0aDoxLzAsbWluSGVpZ2h0Omkoci5taW5IZWlnaHQpP3IubWluSGVpZ2h0OjAsbWF4SGVpZ2h0Omkoci5tYXhIZWlnaHQpP3IubWF4SGVpZ2h0OjEvMH0sKHRoaXMuX2FzcGVjdFJhdGlvfHxlKSYmKHQ9by5taW5IZWlnaHQqdGhpcy5hc3BlY3RSYXRpbyxuPW8ubWluV2lkdGgvdGhpcy5hc3BlY3RSYXRpbyxzPW8ubWF4SGVpZ2h0KnRoaXMuYXNwZWN0UmF0aW8sYT1vLm1heFdpZHRoL3RoaXMuYXNwZWN0UmF0aW8sdD5vLm1pbldpZHRoJiYoby5taW5XaWR0aD10KSxuPm8ubWluSGVpZ2h0JiYoby5taW5IZWlnaHQ9biksby5tYXhXaWR0aD5zJiYoby5tYXhXaWR0aD1zKSxvLm1heEhlaWdodD5hJiYoby5tYXhIZWlnaHQ9YSkpLHRoaXMuX3ZCb3VuZGFyaWVzPW99LF91cGRhdGVDYWNoZTpmdW5jdGlvbihlKXt0aGlzLm9wdGlvbnMsdGhpcy5vZmZzZXQ9dGhpcy5oZWxwZXIub2Zmc2V0KCksaShlLmxlZnQpJiYodGhpcy5wb3NpdGlvbi5sZWZ0PWUubGVmdCksaShlLnRvcCkmJih0aGlzLnBvc2l0aW9uLnRvcD1lLnRvcCksaShlLmhlaWdodCkmJih0aGlzLnNpemUuaGVpZ2h0PWUuaGVpZ2h0KSxpKGUud2lkdGgpJiYodGhpcy5zaXplLndpZHRoPWUud2lkdGgpfSxfdXBkYXRlUmF0aW86ZnVuY3Rpb24oZSl7dmFyIHQ9KHRoaXMub3B0aW9ucyx0aGlzLnBvc2l0aW9uKSxzPXRoaXMuc2l6ZSxuPXRoaXMuYXhpcztyZXR1cm4gaShlLmhlaWdodCk/ZS53aWR0aD1lLmhlaWdodCp0aGlzLmFzcGVjdFJhdGlvOmkoZS53aWR0aCkmJihlLmhlaWdodD1lLndpZHRoL3RoaXMuYXNwZWN0UmF0aW8pLFwic3dcIj09biYmKGUubGVmdD10LmxlZnQrKHMud2lkdGgtZS53aWR0aCksZS50b3A9bnVsbCksXCJud1wiPT1uJiYoZS50b3A9dC50b3ArKHMuaGVpZ2h0LWUuaGVpZ2h0KSxlLmxlZnQ9dC5sZWZ0KyhzLndpZHRoLWUud2lkdGgpKSxlfSxfcmVzcGVjdFNpemU6ZnVuY3Rpb24oZSx0KXt2YXIgcz0odGhpcy5oZWxwZXIsdGhpcy5fdkJvdW5kYXJpZXMpLG49KHRoaXMuX2FzcGVjdFJhdGlvfHx0LnNoaWZ0S2V5LHRoaXMuYXhpcyksYT1pKGUud2lkdGgpJiZzLm1heFdpZHRoJiZzLm1heFdpZHRoPGUud2lkdGgsbz1pKGUuaGVpZ2h0KSYmcy5tYXhIZWlnaHQmJnMubWF4SGVpZ2h0PGUuaGVpZ2h0LHI9aShlLndpZHRoKSYmcy5taW5XaWR0aCYmcy5taW5XaWR0aD5lLndpZHRoLGg9aShlLmhlaWdodCkmJnMubWluSGVpZ2h0JiZzLm1pbkhlaWdodD5lLmhlaWdodDtyJiYoZS53aWR0aD1zLm1pbldpZHRoKSxoJiYoZS5oZWlnaHQ9cy5taW5IZWlnaHQpLGEmJihlLndpZHRoPXMubWF4V2lkdGgpLG8mJihlLmhlaWdodD1zLm1heEhlaWdodCk7dmFyIGw9dGhpcy5vcmlnaW5hbFBvc2l0aW9uLmxlZnQrdGhpcy5vcmlnaW5hbFNpemUud2lkdGgsdT10aGlzLnBvc2l0aW9uLnRvcCt0aGlzLnNpemUuaGVpZ2h0LGQ9L3N3fG53fHcvLnRlc3QobiksYz0vbnd8bmV8bi8udGVzdChuKTtyJiZkJiYoZS5sZWZ0PWwtcy5taW5XaWR0aCksYSYmZCYmKGUubGVmdD1sLXMubWF4V2lkdGgpLGgmJmMmJihlLnRvcD11LXMubWluSGVpZ2h0KSxvJiZjJiYoZS50b3A9dS1zLm1heEhlaWdodCk7dmFyIHA9IWUud2lkdGgmJiFlLmhlaWdodDtyZXR1cm4gcCYmIWUubGVmdCYmZS50b3A/ZS50b3A9bnVsbDpwJiYhZS50b3AmJmUubGVmdCYmKGUubGVmdD1udWxsKSxlfSxfcHJvcG9ydGlvbmFsbHlSZXNpemU6ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMsdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5sZW5ndGgpZm9yKHZhciB0PXRoaXMuaGVscGVyfHx0aGlzLmVsZW1lbnQsaT0wO3RoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoPmk7aSsrKXt2YXIgcz10aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzW2ldO2lmKCF0aGlzLmJvcmRlckRpZil7dmFyIG49W3MuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIikscy5jc3MoXCJib3JkZXJSaWdodFdpZHRoXCIpLHMuY3NzKFwiYm9yZGVyQm90dG9tV2lkdGhcIikscy5jc3MoXCJib3JkZXJMZWZ0V2lkdGhcIildLGE9W3MuY3NzKFwicGFkZGluZ1RvcFwiKSxzLmNzcyhcInBhZGRpbmdSaWdodFwiKSxzLmNzcyhcInBhZGRpbmdCb3R0b21cIikscy5jc3MoXCJwYWRkaW5nTGVmdFwiKV07dGhpcy5ib3JkZXJEaWY9ZS5tYXAobixmdW5jdGlvbihlLHQpe3ZhciBpPXBhcnNlSW50KGUsMTApfHwwLHM9cGFyc2VJbnQoYVt0XSwxMCl8fDA7cmV0dXJuIGkrc30pfXMuY3NzKHtoZWlnaHQ6dC5oZWlnaHQoKS10aGlzLmJvcmRlckRpZlswXS10aGlzLmJvcmRlckRpZlsyXXx8MCx3aWR0aDp0LndpZHRoKCktdGhpcy5ib3JkZXJEaWZbMV0tdGhpcy5ib3JkZXJEaWZbM118fDB9KX19LF9yZW5kZXJQcm94eTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudCxpPXRoaXMub3B0aW9ucztpZih0aGlzLmVsZW1lbnRPZmZzZXQ9dC5vZmZzZXQoKSx0aGlzLl9oZWxwZXIpe3RoaXMuaGVscGVyPXRoaXMuaGVscGVyfHxlKCc8ZGl2IHN0eWxlPVwib3ZlcmZsb3c6aGlkZGVuO1wiPjwvZGl2PicpO3ZhciBzPWUudWkuaWU2PzE6MCxuPWUudWkuaWU2PzI6LTE7dGhpcy5oZWxwZXIuYWRkQ2xhc3ModGhpcy5faGVscGVyKS5jc3Moe3dpZHRoOnRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCkrbixoZWlnaHQ6dGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCkrbixwb3NpdGlvbjpcImFic29sdXRlXCIsbGVmdDp0aGlzLmVsZW1lbnRPZmZzZXQubGVmdC1zK1wicHhcIix0b3A6dGhpcy5lbGVtZW50T2Zmc2V0LnRvcC1zK1wicHhcIix6SW5kZXg6KytpLnpJbmRleH0pLHRoaXMuaGVscGVyLmFwcGVuZFRvKFwiYm9keVwiKS5kaXNhYmxlU2VsZWN0aW9uKCl9ZWxzZSB0aGlzLmhlbHBlcj10aGlzLmVsZW1lbnR9LF9jaGFuZ2U6e2U6ZnVuY3Rpb24oZSx0KXtyZXR1cm57d2lkdGg6dGhpcy5vcmlnaW5hbFNpemUud2lkdGgrdH19LHc6ZnVuY3Rpb24oZSx0KXt2YXIgaT0odGhpcy5vcHRpb25zLHRoaXMub3JpZ2luYWxTaXplKSxzPXRoaXMub3JpZ2luYWxQb3NpdGlvbjtyZXR1cm57bGVmdDpzLmxlZnQrdCx3aWR0aDppLndpZHRoLXR9fSxuOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz0odGhpcy5vcHRpb25zLHRoaXMub3JpZ2luYWxTaXplKSxuPXRoaXMub3JpZ2luYWxQb3NpdGlvbjtyZXR1cm57dG9wOm4udG9wK2ksaGVpZ2h0OnMuaGVpZ2h0LWl9fSxzOmZ1bmN0aW9uKGUsdCxpKXtyZXR1cm57aGVpZ2h0OnRoaXMub3JpZ2luYWxTaXplLmhlaWdodCtpfX0sc2U6ZnVuY3Rpb24odCxpLHMpe3JldHVybiBlLmV4dGVuZCh0aGlzLl9jaGFuZ2Uucy5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLmUuYXBwbHkodGhpcyxbdCxpLHNdKSl9LHN3OmZ1bmN0aW9uKHQsaSxzKXtyZXR1cm4gZS5leHRlbmQodGhpcy5fY2hhbmdlLnMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS53LmFwcGx5KHRoaXMsW3QsaSxzXSkpfSxuZTpmdW5jdGlvbih0LGkscyl7cmV0dXJuIGUuZXh0ZW5kKHRoaXMuX2NoYW5nZS5uLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9jaGFuZ2UuZS5hcHBseSh0aGlzLFt0LGksc10pKX0sbnc6ZnVuY3Rpb24odCxpLHMpe3JldHVybiBlLmV4dGVuZCh0aGlzLl9jaGFuZ2Uubi5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLncuYXBwbHkodGhpcyxbdCxpLHNdKSl9fSxfcHJvcGFnYXRlOmZ1bmN0aW9uKHQsaSl7ZS51aS5wbHVnaW4uY2FsbCh0aGlzLHQsW2ksdGhpcy51aSgpXSksXCJyZXNpemVcIiE9dCYmdGhpcy5fdHJpZ2dlcih0LGksdGhpcy51aSgpKX0scGx1Z2luczp7fSx1aTpmdW5jdGlvbigpe3JldHVybntvcmlnaW5hbEVsZW1lbnQ6dGhpcy5vcmlnaW5hbEVsZW1lbnQsZWxlbWVudDp0aGlzLmVsZW1lbnQsaGVscGVyOnRoaXMuaGVscGVyLHBvc2l0aW9uOnRoaXMucG9zaXRpb24sc2l6ZTp0aGlzLnNpemUsb3JpZ2luYWxTaXplOnRoaXMub3JpZ2luYWxTaXplLG9yaWdpbmFsUG9zaXRpb246dGhpcy5vcmlnaW5hbFBvc2l0aW9ufX19KSxlLnVpLnBsdWdpbi5hZGQoXCJyZXNpemFibGVcIixcImFsc29SZXNpemVcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIiksaT10Lm9wdGlvbnMscz1mdW5jdGlvbih0KXtlKHQpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpO3QuZGF0YShcInJlc2l6YWJsZS1hbHNvcmVzaXplXCIse3dpZHRoOnBhcnNlSW50KHQud2lkdGgoKSwxMCksaGVpZ2h0OnBhcnNlSW50KHQuaGVpZ2h0KCksMTApLGxlZnQ6cGFyc2VJbnQodC5jc3MoXCJsZWZ0XCIpLDEwKSx0b3A6cGFyc2VJbnQodC5jc3MoXCJ0b3BcIiksMTApfSl9KX07XCJvYmplY3RcIiE9dHlwZW9mIGkuYWxzb1Jlc2l6ZXx8aS5hbHNvUmVzaXplLnBhcmVudE5vZGU/cyhpLmFsc29SZXNpemUpOmkuYWxzb1Jlc2l6ZS5sZW5ndGg/KGkuYWxzb1Jlc2l6ZT1pLmFsc29SZXNpemVbMF0scyhpLmFsc29SZXNpemUpKTplLmVhY2goaS5hbHNvUmVzaXplLGZ1bmN0aW9uKGUpe3MoZSl9KX0scmVzaXplOmZ1bmN0aW9uKHQsaSl7dmFyIHM9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLG49cy5vcHRpb25zLGE9cy5vcmlnaW5hbFNpemUsbz1zLm9yaWdpbmFsUG9zaXRpb24scj17aGVpZ2h0OnMuc2l6ZS5oZWlnaHQtYS5oZWlnaHR8fDAsd2lkdGg6cy5zaXplLndpZHRoLWEud2lkdGh8fDAsdG9wOnMucG9zaXRpb24udG9wLW8udG9wfHwwLGxlZnQ6cy5wb3NpdGlvbi5sZWZ0LW8ubGVmdHx8MH0saD1mdW5jdGlvbih0LHMpe2UodCkuZWFjaChmdW5jdGlvbigpe3ZhciB0PWUodGhpcyksbj1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGUtYWxzb3Jlc2l6ZVwiKSxhPXt9LG89cyYmcy5sZW5ndGg/czp0LnBhcmVudHMoaS5vcmlnaW5hbEVsZW1lbnRbMF0pLmxlbmd0aD9bXCJ3aWR0aFwiLFwiaGVpZ2h0XCJdOltcIndpZHRoXCIsXCJoZWlnaHRcIixcInRvcFwiLFwibGVmdFwiXTtlLmVhY2gobyxmdW5jdGlvbihlLHQpe3ZhciBpPShuW3RdfHwwKSsoclt0XXx8MCk7aSYmaT49MCYmKGFbdF09aXx8bnVsbCl9KSx0LmNzcyhhKX0pfTtcIm9iamVjdFwiIT10eXBlb2Ygbi5hbHNvUmVzaXplfHxuLmFsc29SZXNpemUubm9kZVR5cGU/aChuLmFsc29SZXNpemUpOmUuZWFjaChuLmFsc29SZXNpemUsZnVuY3Rpb24oZSx0KXtoKGUsdCl9KX0sc3RvcDpmdW5jdGlvbigpe2UodGhpcykucmVtb3ZlRGF0YShcInJlc2l6YWJsZS1hbHNvcmVzaXplXCIpfX0pLGUudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiYW5pbWF0ZVwiLHtzdG9wOmZ1bmN0aW9uKHQpe3ZhciBpPWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKSxzPWkub3B0aW9ucyxuPWkuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMsYT1uLmxlbmd0aCYmL3RleHRhcmVhL2kudGVzdChuWzBdLm5vZGVOYW1lKSxvPWEmJmUudWkuaGFzU2Nyb2xsKG5bMF0sXCJsZWZ0XCIpPzA6aS5zaXplRGlmZi5oZWlnaHQscj1hPzA6aS5zaXplRGlmZi53aWR0aCxoPXt3aWR0aDppLnNpemUud2lkdGgtcixoZWlnaHQ6aS5zaXplLmhlaWdodC1vfSxsPXBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJsZWZ0XCIpLDEwKSsoaS5wb3NpdGlvbi5sZWZ0LWkub3JpZ2luYWxQb3NpdGlvbi5sZWZ0KXx8bnVsbCx1PXBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJ0b3BcIiksMTApKyhpLnBvc2l0aW9uLnRvcC1pLm9yaWdpbmFsUG9zaXRpb24udG9wKXx8bnVsbDtpLmVsZW1lbnQuYW5pbWF0ZShlLmV4dGVuZChoLHUmJmw/e3RvcDp1LGxlZnQ6bH06e30pLHtkdXJhdGlvbjpzLmFuaW1hdGVEdXJhdGlvbixlYXNpbmc6cy5hbmltYXRlRWFzaW5nLHN0ZXA6ZnVuY3Rpb24oKXt2YXIgcz17d2lkdGg6cGFyc2VJbnQoaS5lbGVtZW50LmNzcyhcIndpZHRoXCIpLDEwKSxoZWlnaHQ6cGFyc2VJbnQoaS5lbGVtZW50LmNzcyhcImhlaWdodFwiKSwxMCksdG9wOnBhcnNlSW50KGkuZWxlbWVudC5jc3MoXCJ0b3BcIiksMTApLGxlZnQ6cGFyc2VJbnQoaS5lbGVtZW50LmNzcyhcImxlZnRcIiksMTApfTtuJiZuLmxlbmd0aCYmZShuWzBdKS5jc3Moe3dpZHRoOnMud2lkdGgsaGVpZ2h0OnMuaGVpZ2h0fSksaS5fdXBkYXRlQ2FjaGUocyksaS5fcHJvcGFnYXRlKFwicmVzaXplXCIsdCl9fSl9fSksZS51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJjb250YWlubWVudFwiLHtzdGFydDpmdW5jdGlvbigpe3ZhciBpPWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKSxzPWkub3B0aW9ucyxuPWkuZWxlbWVudCxhPXMuY29udGFpbm1lbnQsbz1hIGluc3RhbmNlb2YgZT9hLmdldCgwKTovcGFyZW50Ly50ZXN0KGEpP24ucGFyZW50KCkuZ2V0KDApOmE7aWYobylpZihpLmNvbnRhaW5lckVsZW1lbnQ9ZShvKSwvZG9jdW1lbnQvLnRlc3QoYSl8fGE9PWRvY3VtZW50KWkuY29udGFpbmVyT2Zmc2V0PXtsZWZ0OjAsdG9wOjB9LGkuY29udGFpbmVyUG9zaXRpb249e2xlZnQ6MCx0b3A6MH0saS5wYXJlbnREYXRhPXtlbGVtZW50OmUoZG9jdW1lbnQpLGxlZnQ6MCx0b3A6MCx3aWR0aDplKGRvY3VtZW50KS53aWR0aCgpLGhlaWdodDplKGRvY3VtZW50KS5oZWlnaHQoKXx8ZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodH07ZWxzZXt2YXIgcj1lKG8pLGg9W107ZShbXCJUb3BcIixcIlJpZ2h0XCIsXCJMZWZ0XCIsXCJCb3R0b21cIl0pLmVhY2goZnVuY3Rpb24oZSxpKXtoW2VdPXQoci5jc3MoXCJwYWRkaW5nXCIraSkpfSksaS5jb250YWluZXJPZmZzZXQ9ci5vZmZzZXQoKSxpLmNvbnRhaW5lclBvc2l0aW9uPXIucG9zaXRpb24oKSxpLmNvbnRhaW5lclNpemU9e2hlaWdodDpyLmlubmVySGVpZ2h0KCktaFszXSx3aWR0aDpyLmlubmVyV2lkdGgoKS1oWzFdfTt2YXIgbD1pLmNvbnRhaW5lck9mZnNldCx1PWkuY29udGFpbmVyU2l6ZS5oZWlnaHQsZD1pLmNvbnRhaW5lclNpemUud2lkdGgsYz1lLnVpLmhhc1Njcm9sbChvLFwibGVmdFwiKT9vLnNjcm9sbFdpZHRoOmQscD1lLnVpLmhhc1Njcm9sbChvKT9vLnNjcm9sbEhlaWdodDp1O2kucGFyZW50RGF0YT17ZWxlbWVudDpvLGxlZnQ6bC5sZWZ0LHRvcDpsLnRvcCx3aWR0aDpjLGhlaWdodDpwfX19LHJlc2l6ZTpmdW5jdGlvbih0KXt2YXIgaT1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIikscz1pLm9wdGlvbnMsbj0oaS5jb250YWluZXJTaXplLGkuY29udGFpbmVyT2Zmc2V0KSxhPShpLnNpemUsaS5wb3NpdGlvbiksbz1pLl9hc3BlY3RSYXRpb3x8dC5zaGlmdEtleSxyPXt0b3A6MCxsZWZ0OjB9LGg9aS5jb250YWluZXJFbGVtZW50O2hbMF0hPWRvY3VtZW50JiYvc3RhdGljLy50ZXN0KGguY3NzKFwicG9zaXRpb25cIikpJiYocj1uKSxhLmxlZnQ8KGkuX2hlbHBlcj9uLmxlZnQ6MCkmJihpLnNpemUud2lkdGg9aS5zaXplLndpZHRoKyhpLl9oZWxwZXI/aS5wb3NpdGlvbi5sZWZ0LW4ubGVmdDppLnBvc2l0aW9uLmxlZnQtci5sZWZ0KSxvJiYoaS5zaXplLmhlaWdodD1pLnNpemUud2lkdGgvaS5hc3BlY3RSYXRpbyksaS5wb3NpdGlvbi5sZWZ0PXMuaGVscGVyP24ubGVmdDowKSxhLnRvcDwoaS5faGVscGVyP24udG9wOjApJiYoaS5zaXplLmhlaWdodD1pLnNpemUuaGVpZ2h0KyhpLl9oZWxwZXI/aS5wb3NpdGlvbi50b3Atbi50b3A6aS5wb3NpdGlvbi50b3ApLG8mJihpLnNpemUud2lkdGg9aS5zaXplLmhlaWdodCppLmFzcGVjdFJhdGlvKSxpLnBvc2l0aW9uLnRvcD1pLl9oZWxwZXI/bi50b3A6MCksaS5vZmZzZXQubGVmdD1pLnBhcmVudERhdGEubGVmdCtpLnBvc2l0aW9uLmxlZnQsaS5vZmZzZXQudG9wPWkucGFyZW50RGF0YS50b3AraS5wb3NpdGlvbi50b3A7dmFyIGw9TWF0aC5hYnMoKGkuX2hlbHBlcj9pLm9mZnNldC5sZWZ0LXIubGVmdDppLm9mZnNldC5sZWZ0LXIubGVmdCkraS5zaXplRGlmZi53aWR0aCksdT1NYXRoLmFicygoaS5faGVscGVyP2kub2Zmc2V0LnRvcC1yLnRvcDppLm9mZnNldC50b3Atbi50b3ApK2kuc2l6ZURpZmYuaGVpZ2h0KSxkPWkuY29udGFpbmVyRWxlbWVudC5nZXQoMCk9PWkuZWxlbWVudC5wYXJlbnQoKS5nZXQoMCksYz0vcmVsYXRpdmV8YWJzb2x1dGUvLnRlc3QoaS5jb250YWluZXJFbGVtZW50LmNzcyhcInBvc2l0aW9uXCIpKTtkJiZjJiYobC09aS5wYXJlbnREYXRhLmxlZnQpLGwraS5zaXplLndpZHRoPj1pLnBhcmVudERhdGEud2lkdGgmJihpLnNpemUud2lkdGg9aS5wYXJlbnREYXRhLndpZHRoLWwsbyYmKGkuc2l6ZS5oZWlnaHQ9aS5zaXplLndpZHRoL2kuYXNwZWN0UmF0aW8pKSx1K2kuc2l6ZS5oZWlnaHQ+PWkucGFyZW50RGF0YS5oZWlnaHQmJihpLnNpemUuaGVpZ2h0PWkucGFyZW50RGF0YS5oZWlnaHQtdSxvJiYoaS5zaXplLndpZHRoPWkuc2l6ZS5oZWlnaHQqaS5hc3BlY3RSYXRpbykpfSxzdG9wOmZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLGk9dC5vcHRpb25zLHM9KHQucG9zaXRpb24sdC5jb250YWluZXJPZmZzZXQpLG49dC5jb250YWluZXJQb3NpdGlvbixhPXQuY29udGFpbmVyRWxlbWVudCxvPWUodC5oZWxwZXIpLHI9by5vZmZzZXQoKSxoPW8ub3V0ZXJXaWR0aCgpLXQuc2l6ZURpZmYud2lkdGgsbD1vLm91dGVySGVpZ2h0KCktdC5zaXplRGlmZi5oZWlnaHQ7dC5faGVscGVyJiYhaS5hbmltYXRlJiYvcmVsYXRpdmUvLnRlc3QoYS5jc3MoXCJwb3NpdGlvblwiKSkmJmUodGhpcykuY3NzKHtsZWZ0OnIubGVmdC1uLmxlZnQtcy5sZWZ0LHdpZHRoOmgsaGVpZ2h0Omx9KSx0Ll9oZWxwZXImJiFpLmFuaW1hdGUmJi9zdGF0aWMvLnRlc3QoYS5jc3MoXCJwb3NpdGlvblwiKSkmJmUodGhpcykuY3NzKHtsZWZ0OnIubGVmdC1uLmxlZnQtcy5sZWZ0LHdpZHRoOmgsaGVpZ2h0Omx9KX19KSxlLnVpLnBsdWdpbi5hZGQoXCJyZXNpemFibGVcIixcImdob3N0XCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5kYXRhKFwicmVzaXphYmxlXCIpLGk9dC5vcHRpb25zLHM9dC5zaXplO3QuZ2hvc3Q9dC5vcmlnaW5hbEVsZW1lbnQuY2xvbmUoKSx0Lmdob3N0LmNzcyh7b3BhY2l0eTouMjUsZGlzcGxheTpcImJsb2NrXCIscG9zaXRpb246XCJyZWxhdGl2ZVwiLGhlaWdodDpzLmhlaWdodCx3aWR0aDpzLndpZHRoLG1hcmdpbjowLGxlZnQ6MCx0b3A6MH0pLmFkZENsYXNzKFwidWktcmVzaXphYmxlLWdob3N0XCIpLmFkZENsYXNzKFwic3RyaW5nXCI9PXR5cGVvZiBpLmdob3N0P2kuZ2hvc3Q6XCJcIiksdC5naG9zdC5hcHBlbmRUbyh0LmhlbHBlcil9LHJlc2l6ZTpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKTt0Lm9wdGlvbnMsdC5naG9zdCYmdC5naG9zdC5jc3Moe3Bvc2l0aW9uOlwicmVsYXRpdmVcIixoZWlnaHQ6dC5zaXplLmhlaWdodCx3aWR0aDp0LnNpemUud2lkdGh9KX0sc3RvcDpmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZGF0YShcInJlc2l6YWJsZVwiKTt0Lm9wdGlvbnMsdC5naG9zdCYmdC5oZWxwZXImJnQuaGVscGVyLmdldCgwKS5yZW1vdmVDaGlsZCh0Lmdob3N0LmdldCgwKSl9fSksZS51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJncmlkXCIse3Jlc2l6ZTpmdW5jdGlvbih0KXt2YXIgaT1lKHRoaXMpLmRhdGEoXCJyZXNpemFibGVcIikscz1pLm9wdGlvbnMsbj1pLnNpemUsYT1pLm9yaWdpbmFsU2l6ZSxvPWkub3JpZ2luYWxQb3NpdGlvbixyPWkuYXhpcztzLl9hc3BlY3RSYXRpb3x8dC5zaGlmdEtleSxzLmdyaWQ9XCJudW1iZXJcIj09dHlwZW9mIHMuZ3JpZD9bcy5ncmlkLHMuZ3JpZF06cy5ncmlkO3ZhciBoPU1hdGgucm91bmQoKG4ud2lkdGgtYS53aWR0aCkvKHMuZ3JpZFswXXx8MSkpKihzLmdyaWRbMF18fDEpLGw9TWF0aC5yb3VuZCgobi5oZWlnaHQtYS5oZWlnaHQpLyhzLmdyaWRbMV18fDEpKSoocy5ncmlkWzFdfHwxKTsvXihzZXxzfGUpJC8udGVzdChyKT8oaS5zaXplLndpZHRoPWEud2lkdGgraCxpLnNpemUuaGVpZ2h0PWEuaGVpZ2h0K2wpOi9eKG5lKSQvLnRlc3Qocik/KGkuc2l6ZS53aWR0aD1hLndpZHRoK2gsaS5zaXplLmhlaWdodD1hLmhlaWdodCtsLGkucG9zaXRpb24udG9wPW8udG9wLWwpOi9eKHN3KSQvLnRlc3Qocik/KGkuc2l6ZS53aWR0aD1hLndpZHRoK2gsaS5zaXplLmhlaWdodD1hLmhlaWdodCtsLGkucG9zaXRpb24ubGVmdD1vLmxlZnQtaCk6KGkuc2l6ZS53aWR0aD1hLndpZHRoK2gsaS5zaXplLmhlaWdodD1hLmhlaWdodCtsLGkucG9zaXRpb24udG9wPW8udG9wLWwsaS5wb3NpdGlvbi5sZWZ0PW8ubGVmdC1oKX19KTt2YXIgdD1mdW5jdGlvbihlKXtyZXR1cm4gcGFyc2VJbnQoZSwxMCl8fDB9LGk9ZnVuY3Rpb24oZSl7cmV0dXJuIWlzTmFOKHBhcnNlSW50KGUsMTApKX19KShqUXVlcnkpOyhmdW5jdGlvbihlKXt2YXIgdD0wLGk9e30scz17fTtpLmhlaWdodD1pLnBhZGRpbmdUb3A9aS5wYWRkaW5nQm90dG9tPWkuYm9yZGVyVG9wV2lkdGg9aS5ib3JkZXJCb3R0b21XaWR0aD1cImhpZGVcIixzLmhlaWdodD1zLnBhZGRpbmdUb3A9cy5wYWRkaW5nQm90dG9tPXMuYm9yZGVyVG9wV2lkdGg9cy5ib3JkZXJCb3R0b21XaWR0aD1cInNob3dcIixlLndpZGdldChcInVpLmFjY29yZGlvblwiLHt2ZXJzaW9uOlwiMS45LjJcIixvcHRpb25zOnthY3RpdmU6MCxhbmltYXRlOnt9LGNvbGxhcHNpYmxlOiExLGV2ZW50OlwiY2xpY2tcIixoZWFkZXI6XCI+IGxpID4gOmZpcnN0LWNoaWxkLD4gOm5vdChsaSk6ZXZlblwiLGhlaWdodFN0eWxlOlwiYXV0b1wiLGljb25zOnthY3RpdmVIZWFkZXI6XCJ1aS1pY29uLXRyaWFuZ2xlLTEtc1wiLGhlYWRlcjpcInVpLWljb24tdHJpYW5nbGUtMS1lXCJ9LGFjdGl2YXRlOm51bGwsYmVmb3JlQWN0aXZhdGU6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciBpPXRoaXMuYWNjb3JkaW9uSWQ9XCJ1aS1hY2NvcmRpb24tXCIrKHRoaXMuZWxlbWVudC5hdHRyKFwiaWRcIil8fCsrdCkscz10aGlzLm9wdGlvbnM7dGhpcy5wcmV2U2hvdz10aGlzLnByZXZIaWRlPWUoKSx0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24gdWktd2lkZ2V0IHVpLWhlbHBlci1yZXNldFwiKSx0aGlzLmhlYWRlcnM9dGhpcy5lbGVtZW50LmZpbmQocy5oZWFkZXIpLmFkZENsYXNzKFwidWktYWNjb3JkaW9uLWhlYWRlciB1aS1oZWxwZXItcmVzZXQgdWktc3RhdGUtZGVmYXVsdCB1aS1jb3JuZXItYWxsXCIpLHRoaXMuX2hvdmVyYWJsZSh0aGlzLmhlYWRlcnMpLHRoaXMuX2ZvY3VzYWJsZSh0aGlzLmhlYWRlcnMpLHRoaXMuaGVhZGVycy5uZXh0KCkuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24tY29udGVudCB1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWJvdHRvbVwiKS5oaWRlKCkscy5jb2xsYXBzaWJsZXx8cy5hY3RpdmUhPT0hMSYmbnVsbCE9cy5hY3RpdmV8fChzLmFjdGl2ZT0wKSwwPnMuYWN0aXZlJiYocy5hY3RpdmUrPXRoaXMuaGVhZGVycy5sZW5ndGgpLHRoaXMuYWN0aXZlPXRoaXMuX2ZpbmRBY3RpdmUocy5hY3RpdmUpLmFkZENsYXNzKFwidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmUgdWktc3RhdGUtYWN0aXZlXCIpLnRvZ2dsZUNsYXNzKFwidWktY29ybmVyLWFsbCB1aS1jb3JuZXItdG9wXCIpLHRoaXMuYWN0aXZlLm5leHQoKS5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZVwiKS5zaG93KCksdGhpcy5fY3JlYXRlSWNvbnMoKSx0aGlzLnJlZnJlc2goKSx0aGlzLmVsZW1lbnQuYXR0cihcInJvbGVcIixcInRhYmxpc3RcIiksdGhpcy5oZWFkZXJzLmF0dHIoXCJyb2xlXCIsXCJ0YWJcIikuZWFjaChmdW5jdGlvbih0KXt2YXIgcz1lKHRoaXMpLG49cy5hdHRyKFwiaWRcIiksYT1zLm5leHQoKSxvPWEuYXR0cihcImlkXCIpO258fChuPWkrXCItaGVhZGVyLVwiK3Qscy5hdHRyKFwiaWRcIixuKSksb3x8KG89aStcIi1wYW5lbC1cIit0LGEuYXR0cihcImlkXCIsbykpLHMuYXR0cihcImFyaWEtY29udHJvbHNcIixvKSxhLmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIixuKX0pLm5leHQoKS5hdHRyKFwicm9sZVwiLFwidGFicGFuZWxcIiksdGhpcy5oZWFkZXJzLm5vdCh0aGlzLmFjdGl2ZSkuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLHRhYkluZGV4Oi0xfSkubmV4dCgpLmF0dHIoe1wiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIixcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KS5oaWRlKCksdGhpcy5hY3RpdmUubGVuZ3RoP3RoaXMuYWN0aXZlLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwidHJ1ZVwiLHRhYkluZGV4OjB9KS5uZXh0KCkuYXR0cih7XCJhcmlhLWV4cGFuZGVkXCI6XCJ0cnVlXCIsXCJhcmlhLWhpZGRlblwiOlwiZmFsc2VcIn0pOnRoaXMuaGVhZGVycy5lcSgwKS5hdHRyKFwidGFiSW5kZXhcIiwwKSx0aGlzLl9vbih0aGlzLmhlYWRlcnMse2tleWRvd246XCJfa2V5ZG93blwifSksdGhpcy5fb24odGhpcy5oZWFkZXJzLm5leHQoKSx7a2V5ZG93bjpcIl9wYW5lbEtleURvd25cIn0pLHRoaXMuX3NldHVwRXZlbnRzKHMuZXZlbnQpfSxfZ2V0Q3JlYXRlRXZlbnREYXRhOmZ1bmN0aW9uKCl7cmV0dXJue2hlYWRlcjp0aGlzLmFjdGl2ZSxjb250ZW50OnRoaXMuYWN0aXZlLmxlbmd0aD90aGlzLmFjdGl2ZS5uZXh0KCk6ZSgpfX0sX2NyZWF0ZUljb25zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmljb25zO3QmJihlKFwiPHNwYW4+XCIpLmFkZENsYXNzKFwidWktYWNjb3JkaW9uLWhlYWRlci1pY29uIHVpLWljb24gXCIrdC5oZWFkZXIpLnByZXBlbmRUbyh0aGlzLmhlYWRlcnMpLHRoaXMuYWN0aXZlLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKS5yZW1vdmVDbGFzcyh0LmhlYWRlcikuYWRkQ2xhc3ModC5hY3RpdmVIZWFkZXIpLHRoaXMuaGVhZGVycy5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1pY29uc1wiKSl9LF9kZXN0cm95SWNvbnM6ZnVuY3Rpb24oKXt0aGlzLmhlYWRlcnMucmVtb3ZlQ2xhc3MoXCJ1aS1hY2NvcmRpb24taWNvbnNcIikuY2hpbGRyZW4oXCIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIpLnJlbW92ZSgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlO3RoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyhcInVpLWFjY29yZGlvbiB1aS13aWRnZXQgdWktaGVscGVyLXJlc2V0XCIpLnJlbW92ZUF0dHIoXCJyb2xlXCIpLHRoaXMuaGVhZGVycy5yZW1vdmVDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXIgdWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmUgdWktaGVscGVyLXJlc2V0IHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1hY3RpdmUgdWktc3RhdGUtZGlzYWJsZWQgdWktY29ybmVyLXRvcFwiKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1zZWxlY3RlZFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1jb250cm9sc1wiKS5yZW1vdmVBdHRyKFwidGFiSW5kZXhcIikuZWFjaChmdW5jdGlvbigpey9edWktYWNjb3JkaW9uLy50ZXN0KHRoaXMuaWQpJiZ0aGlzLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpfSksdGhpcy5fZGVzdHJveUljb25zKCksZT10aGlzLmhlYWRlcnMubmV4dCgpLmNzcyhcImRpc3BsYXlcIixcIlwiKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1leHBhbmRlZFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtbGFiZWxsZWRieVwiKS5yZW1vdmVDbGFzcyhcInVpLWhlbHBlci1yZXNldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYm90dG9tIHVpLWFjY29yZGlvbi1jb250ZW50IHVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZSB1aS1zdGF0ZS1kaXNhYmxlZFwiKS5lYWNoKGZ1bmN0aW9uKCl7L151aS1hY2NvcmRpb24vLnRlc3QodGhpcy5pZCkmJnRoaXMucmVtb3ZlQXR0cmlidXRlKFwiaWRcIil9KSxcImNvbnRlbnRcIiE9PXRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSYmZS5jc3MoXCJoZWlnaHRcIixcIlwiKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLHQpe3JldHVyblwiYWN0aXZlXCI9PT1lPyh0aGlzLl9hY3RpdmF0ZSh0KSx1bmRlZmluZWQpOihcImV2ZW50XCI9PT1lJiYodGhpcy5vcHRpb25zLmV2ZW50JiZ0aGlzLl9vZmYodGhpcy5oZWFkZXJzLHRoaXMub3B0aW9ucy5ldmVudCksdGhpcy5fc2V0dXBFdmVudHModCkpLHRoaXMuX3N1cGVyKGUsdCksXCJjb2xsYXBzaWJsZVwiIT09ZXx8dHx8dGhpcy5vcHRpb25zLmFjdGl2ZSE9PSExfHx0aGlzLl9hY3RpdmF0ZSgwKSxcImljb25zXCI9PT1lJiYodGhpcy5fZGVzdHJveUljb25zKCksdCYmdGhpcy5fY3JlYXRlSWNvbnMoKSksXCJkaXNhYmxlZFwiPT09ZSYmdGhpcy5oZWFkZXJzLmFkZCh0aGlzLmhlYWRlcnMubmV4dCgpKS50b2dnbGVDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIsISF0KSx1bmRlZmluZWQpfSxfa2V5ZG93bjpmdW5jdGlvbih0KXtpZighdC5hbHRLZXkmJiF0LmN0cmxLZXkpe3ZhciBpPWUudWkua2V5Q29kZSxzPXRoaXMuaGVhZGVycy5sZW5ndGgsbj10aGlzLmhlYWRlcnMuaW5kZXgodC50YXJnZXQpLGE9ITE7c3dpdGNoKHQua2V5Q29kZSl7Y2FzZSBpLlJJR0hUOmNhc2UgaS5ET1dOOmE9dGhpcy5oZWFkZXJzWyhuKzEpJXNdO2JyZWFrO2Nhc2UgaS5MRUZUOmNhc2UgaS5VUDphPXRoaXMuaGVhZGVyc1sobi0xK3MpJXNdO2JyZWFrO2Nhc2UgaS5TUEFDRTpjYXNlIGkuRU5URVI6dGhpcy5fZXZlbnRIYW5kbGVyKHQpO2JyZWFrO2Nhc2UgaS5IT01FOmE9dGhpcy5oZWFkZXJzWzBdO2JyZWFrO2Nhc2UgaS5FTkQ6YT10aGlzLmhlYWRlcnNbcy0xXX1hJiYoZSh0LnRhcmdldCkuYXR0cihcInRhYkluZGV4XCIsLTEpLGUoYSkuYXR0cihcInRhYkluZGV4XCIsMCksYS5mb2N1cygpLHQucHJldmVudERlZmF1bHQoKSl9fSxfcGFuZWxLZXlEb3duOmZ1bmN0aW9uKHQpe3Qua2V5Q29kZT09PWUudWkua2V5Q29kZS5VUCYmdC5jdHJsS2V5JiZlKHQuY3VycmVudFRhcmdldCkucHJldigpLmZvY3VzKCl9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgdCxpLHM9dGhpcy5vcHRpb25zLmhlaWdodFN0eWxlLG49dGhpcy5lbGVtZW50LnBhcmVudCgpO1wiZmlsbFwiPT09cz8oZS5zdXBwb3J0Lm1pbkhlaWdodHx8KGk9bi5jc3MoXCJvdmVyZmxvd1wiKSxuLmNzcyhcIm92ZXJmbG93XCIsXCJoaWRkZW5cIikpLHQ9bi5oZWlnaHQoKSx0aGlzLmVsZW1lbnQuc2libGluZ3MoXCI6dmlzaWJsZVwiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9ZSh0aGlzKSxzPWkuY3NzKFwicG9zaXRpb25cIik7XCJhYnNvbHV0ZVwiIT09cyYmXCJmaXhlZFwiIT09cyYmKHQtPWkub3V0ZXJIZWlnaHQoITApKX0pLGkmJm4uY3NzKFwib3ZlcmZsb3dcIixpKSx0aGlzLmhlYWRlcnMuZWFjaChmdW5jdGlvbigpe3QtPWUodGhpcykub3V0ZXJIZWlnaHQoITApfSksdGhpcy5oZWFkZXJzLm5leHQoKS5lYWNoKGZ1bmN0aW9uKCl7ZSh0aGlzKS5oZWlnaHQoTWF0aC5tYXgoMCx0LWUodGhpcykuaW5uZXJIZWlnaHQoKStlKHRoaXMpLmhlaWdodCgpKSl9KS5jc3MoXCJvdmVyZmxvd1wiLFwiYXV0b1wiKSk6XCJhdXRvXCI9PT1zJiYodD0wLHRoaXMuaGVhZGVycy5uZXh0KCkuZWFjaChmdW5jdGlvbigpe3Q9TWF0aC5tYXgodCxlKHRoaXMpLmNzcyhcImhlaWdodFwiLFwiXCIpLmhlaWdodCgpKX0pLmhlaWdodCh0KSl9LF9hY3RpdmF0ZTpmdW5jdGlvbih0KXt2YXIgaT10aGlzLl9maW5kQWN0aXZlKHQpWzBdO2khPT10aGlzLmFjdGl2ZVswXSYmKGk9aXx8dGhpcy5hY3RpdmVbMF0sdGhpcy5fZXZlbnRIYW5kbGVyKHt0YXJnZXQ6aSxjdXJyZW50VGFyZ2V0OmkscHJldmVudERlZmF1bHQ6ZS5ub29wfSkpfSxfZmluZEFjdGl2ZTpmdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdD90aGlzLmhlYWRlcnMuZXEodCk6ZSgpfSxfc2V0dXBFdmVudHM6ZnVuY3Rpb24odCl7dmFyIGk9e307dCYmKGUuZWFjaCh0LnNwbGl0KFwiIFwiKSxmdW5jdGlvbihlLHQpe2lbdF09XCJfZXZlbnRIYW5kbGVyXCJ9KSx0aGlzLl9vbih0aGlzLmhlYWRlcnMsaSkpfSxfZXZlbnRIYW5kbGVyOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMub3B0aW9ucyxzPXRoaXMuYWN0aXZlLG49ZSh0LmN1cnJlbnRUYXJnZXQpLGE9blswXT09PXNbMF0sbz1hJiZpLmNvbGxhcHNpYmxlLHI9bz9lKCk6bi5uZXh0KCksaD1zLm5leHQoKSxsPXtvbGRIZWFkZXI6cyxvbGRQYW5lbDpoLG5ld0hlYWRlcjpvP2UoKTpuLG5ld1BhbmVsOnJ9O3QucHJldmVudERlZmF1bHQoKSxhJiYhaS5jb2xsYXBzaWJsZXx8dGhpcy5fdHJpZ2dlcihcImJlZm9yZUFjdGl2YXRlXCIsdCxsKT09PSExfHwoaS5hY3RpdmU9bz8hMTp0aGlzLmhlYWRlcnMuaW5kZXgobiksdGhpcy5hY3RpdmU9YT9lKCk6bix0aGlzLl90b2dnbGUobCkscy5yZW1vdmVDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZVwiKSxpLmljb25zJiZzLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKS5yZW1vdmVDbGFzcyhpLmljb25zLmFjdGl2ZUhlYWRlcikuYWRkQ2xhc3MoaS5pY29ucy5oZWFkZXIpLGF8fChuLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLWFsbFwiKS5hZGRDbGFzcyhcInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIHVpLXN0YXRlLWFjdGl2ZSB1aS1jb3JuZXItdG9wXCIpLGkuaWNvbnMmJm4uY2hpbGRyZW4oXCIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIpLnJlbW92ZUNsYXNzKGkuaWNvbnMuaGVhZGVyKS5hZGRDbGFzcyhpLmljb25zLmFjdGl2ZUhlYWRlciksbi5uZXh0KCkuYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmVcIikpKX0sX3RvZ2dsZTpmdW5jdGlvbih0KXt2YXIgaT10Lm5ld1BhbmVsLHM9dGhpcy5wcmV2U2hvdy5sZW5ndGg/dGhpcy5wcmV2U2hvdzp0Lm9sZFBhbmVsO3RoaXMucHJldlNob3cuYWRkKHRoaXMucHJldkhpZGUpLnN0b3AoITAsITApLHRoaXMucHJldlNob3c9aSx0aGlzLnByZXZIaWRlPXMsdGhpcy5vcHRpb25zLmFuaW1hdGU/dGhpcy5fYW5pbWF0ZShpLHMsdCk6KHMuaGlkZSgpLGkuc2hvdygpLHRoaXMuX3RvZ2dsZUNvbXBsZXRlKHQpKSxzLmF0dHIoe1wiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIixcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KSxzLnByZXYoKS5hdHRyKFwiYXJpYS1zZWxlY3RlZFwiLFwiZmFsc2VcIiksaS5sZW5ndGgmJnMubGVuZ3RoP3MucHJldigpLmF0dHIoXCJ0YWJJbmRleFwiLC0xKTppLmxlbmd0aCYmdGhpcy5oZWFkZXJzLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiAwPT09ZSh0aGlzKS5hdHRyKFwidGFiSW5kZXhcIil9KS5hdHRyKFwidGFiSW5kZXhcIiwtMSksaS5hdHRyKHtcImFyaWEtZXhwYW5kZWRcIjpcInRydWVcIixcImFyaWEtaGlkZGVuXCI6XCJmYWxzZVwifSkucHJldigpLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwidHJ1ZVwiLHRhYkluZGV4OjB9KX0sX2FuaW1hdGU6ZnVuY3Rpb24oZSx0LG4pe3ZhciBhLG8scixoPXRoaXMsbD0wLHU9ZS5sZW5ndGgmJighdC5sZW5ndGh8fGUuaW5kZXgoKTx0LmluZGV4KCkpLGQ9dGhpcy5vcHRpb25zLmFuaW1hdGV8fHt9LGM9dSYmZC5kb3dufHxkLHA9ZnVuY3Rpb24oKXtoLl90b2dnbGVDb21wbGV0ZShuKX07cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGMmJihyPWMpLFwic3RyaW5nXCI9PXR5cGVvZiBjJiYobz1jKSxvPW98fGMuZWFzaW5nfHxkLmVhc2luZyxyPXJ8fGMuZHVyYXRpb258fGQuZHVyYXRpb24sdC5sZW5ndGg/ZS5sZW5ndGg/KGE9ZS5zaG93KCkub3V0ZXJIZWlnaHQoKSx0LmFuaW1hdGUoaSx7ZHVyYXRpb246cixlYXNpbmc6byxzdGVwOmZ1bmN0aW9uKGUsdCl7dC5ub3c9TWF0aC5yb3VuZChlKX19KSxlLmhpZGUoKS5hbmltYXRlKHMse2R1cmF0aW9uOnIsZWFzaW5nOm8sY29tcGxldGU6cCxzdGVwOmZ1bmN0aW9uKGUsaSl7aS5ub3c9TWF0aC5yb3VuZChlKSxcImhlaWdodFwiIT09aS5wcm9wP2wrPWkubm93OlwiY29udGVudFwiIT09aC5vcHRpb25zLmhlaWdodFN0eWxlJiYoaS5ub3c9TWF0aC5yb3VuZChhLXQub3V0ZXJIZWlnaHQoKS1sKSxsPTApfX0pLHVuZGVmaW5lZCk6dC5hbmltYXRlKGkscixvLHApOmUuYW5pbWF0ZShzLHIsbyxwKX0sX3RvZ2dsZUNvbXBsZXRlOmZ1bmN0aW9uKGUpe3ZhciB0PWUub2xkUGFuZWw7dC5yZW1vdmVDbGFzcyhcInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZVwiKS5wcmV2KCkucmVtb3ZlQ2xhc3MoXCJ1aS1jb3JuZXItdG9wXCIpLmFkZENsYXNzKFwidWktY29ybmVyLWFsbFwiKSx0Lmxlbmd0aCYmKHQucGFyZW50KClbMF0uY2xhc3NOYW1lPXQucGFyZW50KClbMF0uY2xhc3NOYW1lKSx0aGlzLl90cmlnZ2VyKFwiYWN0aXZhdGVcIixudWxsLGUpfX0pLGUudWlCYWNrQ29tcGF0IT09ITEmJihmdW5jdGlvbihlLHQpe2UuZXh0ZW5kKHQub3B0aW9ucyx7bmF2aWdhdGlvbjohMSxuYXZpZ2F0aW9uRmlsdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaHJlZi50b0xvd2VyQ2FzZSgpPT09bG9jYXRpb24uaHJlZi50b0xvd2VyQ2FzZSgpfX0pO3ZhciBpPXQuX2NyZWF0ZTt0Ll9jcmVhdGU9ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMubmF2aWdhdGlvbil7dmFyIHQ9dGhpcyxzPXRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5oZWFkZXIpLG49cy5uZXh0KCksYT1zLmFkZChuKS5maW5kKFwiYVwiKS5maWx0ZXIodGhpcy5vcHRpb25zLm5hdmlnYXRpb25GaWx0ZXIpWzBdO2EmJnMuYWRkKG4pLmVhY2goZnVuY3Rpb24oaSl7cmV0dXJuIGUuY29udGFpbnModGhpcyxhKT8odC5vcHRpb25zLmFjdGl2ZT1NYXRoLmZsb29yKGkvMiksITEpOnVuZGVmaW5lZH0pfWkuY2FsbCh0aGlzKX19KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSksZnVuY3Rpb24oZSx0KXtlLmV4dGVuZCh0Lm9wdGlvbnMse2hlaWdodFN0eWxlOm51bGwsYXV0b0hlaWdodDohMCxjbGVhclN0eWxlOiExLGZpbGxTcGFjZTohMX0pO3ZhciBpPXQuX2NyZWF0ZSxzPXQuX3NldE9wdGlvbjtlLmV4dGVuZCh0LHtfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmhlaWdodFN0eWxlPXRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZXx8dGhpcy5fbWVyZ2VIZWlnaHRTdHlsZSgpLGkuY2FsbCh0aGlzKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlKXsoXCJhdXRvSGVpZ2h0XCI9PT1lfHxcImNsZWFyU3R5bGVcIj09PWV8fFwiZmlsbFNwYWNlXCI9PT1lKSYmKHRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZT10aGlzLl9tZXJnZUhlaWdodFN0eWxlKCkpLHMuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxfbWVyZ2VIZWlnaHRTdHlsZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucztyZXR1cm4gZS5maWxsU3BhY2U/XCJmaWxsXCI6ZS5jbGVhclN0eWxlP1wiY29udGVudFwiOmUuYXV0b0hlaWdodD9cImF1dG9cIjp1bmRlZmluZWR9fSl9KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSksZnVuY3Rpb24oZSx0KXtlLmV4dGVuZCh0Lm9wdGlvbnMuaWNvbnMse2FjdGl2ZUhlYWRlcjpudWxsLGhlYWRlclNlbGVjdGVkOlwidWktaWNvbi10cmlhbmdsZS0xLXNcIn0pO3ZhciBpPXQuX2NyZWF0ZUljb25zO3QuX2NyZWF0ZUljb25zPWZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmljb25zJiYodGhpcy5vcHRpb25zLmljb25zLmFjdGl2ZUhlYWRlcj10aGlzLm9wdGlvbnMuaWNvbnMuYWN0aXZlSGVhZGVyfHx0aGlzLm9wdGlvbnMuaWNvbnMuaGVhZGVyU2VsZWN0ZWQpLGkuY2FsbCh0aGlzKX19KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSksZnVuY3Rpb24oZSx0KXt0LmFjdGl2YXRlPXQuX2FjdGl2YXRlO3ZhciBpPXQuX2ZpbmRBY3RpdmU7dC5fZmluZEFjdGl2ZT1mdW5jdGlvbihlKXtyZXR1cm4tMT09PWUmJihlPSExKSxlJiZcIm51bWJlclwiIT10eXBlb2YgZSYmKGU9dGhpcy5oZWFkZXJzLmluZGV4KHRoaXMuaGVhZGVycy5maWx0ZXIoZSkpLC0xPT09ZSYmKGU9ITEpKSxpLmNhbGwodGhpcyxlKX19KGpRdWVyeSxqUXVlcnkudWkuYWNjb3JkaW9uLnByb3RvdHlwZSksalF1ZXJ5LnVpLmFjY29yZGlvbi5wcm90b3R5cGUucmVzaXplPWpRdWVyeS51aS5hY2NvcmRpb24ucHJvdG90eXBlLnJlZnJlc2gsZnVuY3Rpb24oZSx0KXtlLmV4dGVuZCh0Lm9wdGlvbnMse2NoYW5nZTpudWxsLGNoYW5nZXN0YXJ0Om51bGx9KTt2YXIgaT10Ll90cmlnZ2VyO3QuX3RyaWdnZXI9ZnVuY3Rpb24oZSx0LHMpe3ZhciBuPWkuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBuPyhcImJlZm9yZUFjdGl2YXRlXCI9PT1lP249aS5jYWxsKHRoaXMsXCJjaGFuZ2VzdGFydFwiLHQse29sZEhlYWRlcjpzLm9sZEhlYWRlcixvbGRDb250ZW50OnMub2xkUGFuZWwsbmV3SGVhZGVyOnMubmV3SGVhZGVyLG5ld0NvbnRlbnQ6cy5uZXdQYW5lbH0pOlwiYWN0aXZhdGVcIj09PWUmJihuPWkuY2FsbCh0aGlzLFwiY2hhbmdlXCIsdCx7b2xkSGVhZGVyOnMub2xkSGVhZGVyLG9sZENvbnRlbnQ6cy5vbGRQYW5lbCxuZXdIZWFkZXI6cy5uZXdIZWFkZXIsbmV3Q29udGVudDpzLm5ld1BhbmVsfSkpLG4pOiExfX0oalF1ZXJ5LGpRdWVyeS51aS5hY2NvcmRpb24ucHJvdG90eXBlKSxmdW5jdGlvbihlLHQpe2UuZXh0ZW5kKHQub3B0aW9ucyx7YW5pbWF0ZTpudWxsLGFuaW1hdGVkOlwic2xpZGVcIn0pO3ZhciBpPXQuX2NyZWF0ZTt0Ll9jcmVhdGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnM7bnVsbD09PWUuYW5pbWF0ZSYmKGUuYW5pbWF0ZT1lLmFuaW1hdGVkP1wic2xpZGVcIj09PWUuYW5pbWF0ZWQ/MzAwOlwiYm91bmNlc2xpZGVcIj09PWUuYW5pbWF0ZWQ/e2R1cmF0aW9uOjIwMCxkb3duOntlYXNpbmc6XCJlYXNlT3V0Qm91bmNlXCIsZHVyYXRpb246MWUzfX06ZS5hbmltYXRlZDohMSksaS5jYWxsKHRoaXMpfX0oalF1ZXJ5LGpRdWVyeS51aS5hY2NvcmRpb24ucHJvdG90eXBlKSl9KShqUXVlcnkpOyhmdW5jdGlvbihlKXt2YXIgdD0wO2Uud2lkZ2V0KFwidWkuYXV0b2NvbXBsZXRlXCIse3ZlcnNpb246XCIxLjkuMlwiLGRlZmF1bHRFbGVtZW50OlwiPGlucHV0PlwiLG9wdGlvbnM6e2FwcGVuZFRvOlwiYm9keVwiLGF1dG9Gb2N1czohMSxkZWxheTozMDAsbWluTGVuZ3RoOjEscG9zaXRpb246e215OlwibGVmdCB0b3BcIixhdDpcImxlZnQgYm90dG9tXCIsY29sbGlzaW9uOlwibm9uZVwifSxzb3VyY2U6bnVsbCxjaGFuZ2U6bnVsbCxjbG9zZTpudWxsLGZvY3VzOm51bGwsb3BlbjpudWxsLHJlc3BvbnNlOm51bGwsc2VhcmNoOm51bGwsc2VsZWN0Om51bGx9LHBlbmRpbmc6MCxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIHQsaSxzO3RoaXMuaXNNdWx0aUxpbmU9dGhpcy5faXNNdWx0aUxpbmUoKSx0aGlzLnZhbHVlTWV0aG9kPXRoaXMuZWxlbWVudFt0aGlzLmVsZW1lbnQuaXMoXCJpbnB1dCx0ZXh0YXJlYVwiKT9cInZhbFwiOlwidGV4dFwiXSx0aGlzLmlzTmV3TWVudT0hMCx0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1hdXRvY29tcGxldGUtaW5wdXRcIikuYXR0cihcImF1dG9jb21wbGV0ZVwiLFwib2ZmXCIpLHRoaXMuX29uKHRoaXMuZWxlbWVudCx7a2V5ZG93bjpmdW5jdGlvbihuKXtpZih0aGlzLmVsZW1lbnQucHJvcChcInJlYWRPbmx5XCIpKXJldHVybiB0PSEwLHM9ITAsaT0hMCx1bmRlZmluZWQ7dD0hMSxzPSExLGk9ITE7dmFyIGE9ZS51aS5rZXlDb2RlO3N3aXRjaChuLmtleUNvZGUpe2Nhc2UgYS5QQUdFX1VQOnQ9ITAsdGhpcy5fbW92ZShcInByZXZpb3VzUGFnZVwiLG4pO2JyZWFrO2Nhc2UgYS5QQUdFX0RPV046dD0hMCx0aGlzLl9tb3ZlKFwibmV4dFBhZ2VcIixuKTticmVhaztjYXNlIGEuVVA6dD0hMCx0aGlzLl9rZXlFdmVudChcInByZXZpb3VzXCIsbik7YnJlYWs7Y2FzZSBhLkRPV046dD0hMCx0aGlzLl9rZXlFdmVudChcIm5leHRcIixuKTticmVhaztjYXNlIGEuRU5URVI6Y2FzZSBhLk5VTVBBRF9FTlRFUjp0aGlzLm1lbnUuYWN0aXZlJiYodD0hMCxuLnByZXZlbnREZWZhdWx0KCksdGhpcy5tZW51LnNlbGVjdChuKSk7YnJlYWs7Y2FzZSBhLlRBQjp0aGlzLm1lbnUuYWN0aXZlJiZ0aGlzLm1lbnUuc2VsZWN0KG4pO2JyZWFrO2Nhc2UgYS5FU0NBUEU6dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSYmKHRoaXMuX3ZhbHVlKHRoaXMudGVybSksdGhpcy5jbG9zZShuKSxuLnByZXZlbnREZWZhdWx0KCkpO2JyZWFrO2RlZmF1bHQ6aT0hMCx0aGlzLl9zZWFyY2hUaW1lb3V0KG4pfX0sa2V5cHJlc3M6ZnVuY3Rpb24ocyl7aWYodClyZXR1cm4gdD0hMSxzLnByZXZlbnREZWZhdWx0KCksdW5kZWZpbmVkO2lmKCFpKXt2YXIgbj1lLnVpLmtleUNvZGU7c3dpdGNoKHMua2V5Q29kZSl7Y2FzZSBuLlBBR0VfVVA6dGhpcy5fbW92ZShcInByZXZpb3VzUGFnZVwiLHMpO2JyZWFrO2Nhc2Ugbi5QQUdFX0RPV046dGhpcy5fbW92ZShcIm5leHRQYWdlXCIscyk7YnJlYWs7Y2FzZSBuLlVQOnRoaXMuX2tleUV2ZW50KFwicHJldmlvdXNcIixzKTticmVhaztjYXNlIG4uRE9XTjp0aGlzLl9rZXlFdmVudChcIm5leHRcIixzKX19fSxpbnB1dDpmdW5jdGlvbihlKXtyZXR1cm4gcz8ocz0hMSxlLnByZXZlbnREZWZhdWx0KCksdW5kZWZpbmVkKToodGhpcy5fc2VhcmNoVGltZW91dChlKSx1bmRlZmluZWQpfSxmb2N1czpmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWRJdGVtPW51bGwsdGhpcy5wcmV2aW91cz10aGlzLl92YWx1ZSgpfSxibHVyOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmNhbmNlbEJsdXI/KGRlbGV0ZSB0aGlzLmNhbmNlbEJsdXIsdW5kZWZpbmVkKTooY2xlYXJUaW1lb3V0KHRoaXMuc2VhcmNoaW5nKSx0aGlzLmNsb3NlKGUpLHRoaXMuX2NoYW5nZShlKSx1bmRlZmluZWQpfX0pLHRoaXMuX2luaXRTb3VyY2UoKSx0aGlzLm1lbnU9ZShcIjx1bD5cIikuYWRkQ2xhc3MoXCJ1aS1hdXRvY29tcGxldGVcIikuYXBwZW5kVG8odGhpcy5kb2N1bWVudC5maW5kKHRoaXMub3B0aW9ucy5hcHBlbmRUb3x8XCJib2R5XCIpWzBdKS5tZW51KHtpbnB1dDplKCkscm9sZTpudWxsfSkuekluZGV4KHRoaXMuZWxlbWVudC56SW5kZXgoKSsxKS5oaWRlKCkuZGF0YShcIm1lbnVcIiksdGhpcy5fb24odGhpcy5tZW51LmVsZW1lbnQse21vdXNlZG93bjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdGhpcy5jYW5jZWxCbHVyPSEwLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuY2FuY2VsQmx1cn0pO3ZhciBpPXRoaXMubWVudS5lbGVtZW50WzBdO2UodC50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIpLmxlbmd0aHx8dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZG9jdW1lbnQub25lKFwibW91c2Vkb3duXCIsZnVuY3Rpb24ocyl7cy50YXJnZXQ9PT10LmVsZW1lbnRbMF18fHMudGFyZ2V0PT09aXx8ZS5jb250YWlucyhpLHMudGFyZ2V0KXx8dC5jbG9zZSgpfSl9KX0sbWVudWZvY3VzOmZ1bmN0aW9uKHQsaSl7aWYodGhpcy5pc05ld01lbnUmJih0aGlzLmlzTmV3TWVudT0hMSx0Lm9yaWdpbmFsRXZlbnQmJi9ebW91c2UvLnRlc3QodC5vcmlnaW5hbEV2ZW50LnR5cGUpKSlyZXR1cm4gdGhpcy5tZW51LmJsdXIoKSx0aGlzLmRvY3VtZW50Lm9uZShcIm1vdXNlbW92ZVwiLGZ1bmN0aW9uKCl7ZSh0LnRhcmdldCkudHJpZ2dlcih0Lm9yaWdpbmFsRXZlbnQpfSksdW5kZWZpbmVkO3ZhciBzPWkuaXRlbS5kYXRhKFwidWktYXV0b2NvbXBsZXRlLWl0ZW1cIil8fGkuaXRlbS5kYXRhKFwiaXRlbS5hdXRvY29tcGxldGVcIik7ITEhPT10aGlzLl90cmlnZ2VyKFwiZm9jdXNcIix0LHtpdGVtOnN9KT90Lm9yaWdpbmFsRXZlbnQmJi9ea2V5Ly50ZXN0KHQub3JpZ2luYWxFdmVudC50eXBlKSYmdGhpcy5fdmFsdWUocy52YWx1ZSk6dGhpcy5saXZlUmVnaW9uLnRleHQocy52YWx1ZSl9LG1lbnVzZWxlY3Q6ZnVuY3Rpb24oZSx0KXt2YXIgaT10Lml0ZW0uZGF0YShcInVpLWF1dG9jb21wbGV0ZS1pdGVtXCIpfHx0Lml0ZW0uZGF0YShcIml0ZW0uYXV0b2NvbXBsZXRlXCIpLHM9dGhpcy5wcmV2aW91czt0aGlzLmVsZW1lbnRbMF0hPT10aGlzLmRvY3VtZW50WzBdLmFjdGl2ZUVsZW1lbnQmJih0aGlzLmVsZW1lbnQuZm9jdXMoKSx0aGlzLnByZXZpb3VzPXMsdGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLnByZXZpb3VzPXMsdGhpcy5zZWxlY3RlZEl0ZW09aX0pKSwhMSE9PXRoaXMuX3RyaWdnZXIoXCJzZWxlY3RcIixlLHtpdGVtOml9KSYmdGhpcy5fdmFsdWUoaS52YWx1ZSksdGhpcy50ZXJtPXRoaXMuX3ZhbHVlKCksdGhpcy5jbG9zZShlKSx0aGlzLnNlbGVjdGVkSXRlbT1pfX0pLHRoaXMubGl2ZVJlZ2lvbj1lKFwiPHNwYW4+XCIse3JvbGU6XCJzdGF0dXNcIixcImFyaWEtbGl2ZVwiOlwicG9saXRlXCJ9KS5hZGRDbGFzcyhcInVpLWhlbHBlci1oaWRkZW4tYWNjZXNzaWJsZVwiKS5pbnNlcnRBZnRlcih0aGlzLmVsZW1lbnQpLGUuZm4uYmdpZnJhbWUmJnRoaXMubWVudS5lbGVtZW50LmJnaWZyYW1lKCksdGhpcy5fb24odGhpcy53aW5kb3cse2JlZm9yZXVubG9hZDpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlXCIpfX0pfSxfZGVzdHJveTpmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKFwidWktYXV0b2NvbXBsZXRlLWlucHV0XCIpLnJlbW92ZUF0dHIoXCJhdXRvY29tcGxldGVcIiksdGhpcy5tZW51LmVsZW1lbnQucmVtb3ZlKCksdGhpcy5saXZlUmVnaW9uLnJlbW92ZSgpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsdCl7dGhpcy5fc3VwZXIoZSx0KSxcInNvdXJjZVwiPT09ZSYmdGhpcy5faW5pdFNvdXJjZSgpLFwiYXBwZW5kVG9cIj09PWUmJnRoaXMubWVudS5lbGVtZW50LmFwcGVuZFRvKHRoaXMuZG9jdW1lbnQuZmluZCh0fHxcImJvZHlcIilbMF0pLFwiZGlzYWJsZWRcIj09PWUmJnQmJnRoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpfSxfaXNNdWx0aUxpbmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50LmlzKFwidGV4dGFyZWFcIik/ITA6dGhpcy5lbGVtZW50LmlzKFwiaW5wdXRcIik/ITE6dGhpcy5lbGVtZW50LnByb3AoXCJpc0NvbnRlbnRFZGl0YWJsZVwiKX0sX2luaXRTb3VyY2U6ZnVuY3Rpb24oKXt2YXIgdCxpLHM9dGhpcztlLmlzQXJyYXkodGhpcy5vcHRpb25zLnNvdXJjZSk/KHQ9dGhpcy5vcHRpb25zLnNvdXJjZSx0aGlzLnNvdXJjZT1mdW5jdGlvbihpLHMpe3MoZS51aS5hdXRvY29tcGxldGUuZmlsdGVyKHQsaS50ZXJtKSl9KTpcInN0cmluZ1wiPT10eXBlb2YgdGhpcy5vcHRpb25zLnNvdXJjZT8oaT10aGlzLm9wdGlvbnMuc291cmNlLHRoaXMuc291cmNlPWZ1bmN0aW9uKHQsbil7cy54aHImJnMueGhyLmFib3J0KCkscy54aHI9ZS5hamF4KHt1cmw6aSxkYXRhOnQsZGF0YVR5cGU6XCJqc29uXCIsc3VjY2VzczpmdW5jdGlvbihlKXtuKGUpfSxlcnJvcjpmdW5jdGlvbigpe24oW10pfX0pfSk6dGhpcy5zb3VyY2U9dGhpcy5vcHRpb25zLnNvdXJjZX0sX3NlYXJjaFRpbWVvdXQ6ZnVuY3Rpb24oZSl7Y2xlYXJUaW1lb3V0KHRoaXMuc2VhcmNoaW5nKSx0aGlzLnNlYXJjaGluZz10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMudGVybSE9PXRoaXMuX3ZhbHVlKCkmJih0aGlzLnNlbGVjdGVkSXRlbT1udWxsLHRoaXMuc2VhcmNoKG51bGwsZSkpfSx0aGlzLm9wdGlvbnMuZGVsYXkpfSxzZWFyY2g6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1udWxsIT1lP2U6dGhpcy5fdmFsdWUoKSx0aGlzLnRlcm09dGhpcy5fdmFsdWUoKSxlLmxlbmd0aDx0aGlzLm9wdGlvbnMubWluTGVuZ3RoP3RoaXMuY2xvc2UodCk6dGhpcy5fdHJpZ2dlcihcInNlYXJjaFwiLHQpIT09ITE/dGhpcy5fc2VhcmNoKGUpOnVuZGVmaW5lZH0sX3NlYXJjaDpmdW5jdGlvbihlKXt0aGlzLnBlbmRpbmcrKyx0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1hdXRvY29tcGxldGUtbG9hZGluZ1wiKSx0aGlzLmNhbmNlbFNlYXJjaD0hMSx0aGlzLnNvdXJjZSh7dGVybTplfSx0aGlzLl9yZXNwb25zZSgpKX0sX3Jlc3BvbnNlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxpPSsrdDtyZXR1cm4gZnVuY3Rpb24ocyl7aT09PXQmJmUuX19yZXNwb25zZShzKSxlLnBlbmRpbmctLSxlLnBlbmRpbmd8fGUuZWxlbWVudC5yZW1vdmVDbGFzcyhcInVpLWF1dG9jb21wbGV0ZS1sb2FkaW5nXCIpfX0sX19yZXNwb25zZTpmdW5jdGlvbihlKXtlJiYoZT10aGlzLl9ub3JtYWxpemUoZSkpLHRoaXMuX3RyaWdnZXIoXCJyZXNwb25zZVwiLG51bGwse2NvbnRlbnQ6ZX0pLCF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJmUmJmUubGVuZ3RoJiYhdGhpcy5jYW5jZWxTZWFyY2g/KHRoaXMuX3N1Z2dlc3QoZSksdGhpcy5fdHJpZ2dlcihcIm9wZW5cIikpOnRoaXMuX2Nsb3NlKCl9LGNsb3NlOmZ1bmN0aW9uKGUpe3RoaXMuY2FuY2VsU2VhcmNoPSEwLHRoaXMuX2Nsb3NlKGUpfSxfY2xvc2U6ZnVuY3Rpb24oZSl7dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSYmKHRoaXMubWVudS5lbGVtZW50LmhpZGUoKSx0aGlzLm1lbnUuYmx1cigpLHRoaXMuaXNOZXdNZW51PSEwLHRoaXMuX3RyaWdnZXIoXCJjbG9zZVwiLGUpKX0sX2NoYW5nZTpmdW5jdGlvbihlKXt0aGlzLnByZXZpb3VzIT09dGhpcy5fdmFsdWUoKSYmdGhpcy5fdHJpZ2dlcihcImNoYW5nZVwiLGUse2l0ZW06dGhpcy5zZWxlY3RlZEl0ZW19KX0sX25vcm1hbGl6ZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5sZW5ndGgmJnRbMF0ubGFiZWwmJnRbMF0udmFsdWU/dDplLm1hcCh0LGZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P3tsYWJlbDp0LHZhbHVlOnR9OmUuZXh0ZW5kKHtsYWJlbDp0LmxhYmVsfHx0LnZhbHVlLHZhbHVlOnQudmFsdWV8fHQubGFiZWx9LHQpfSl9LF9zdWdnZXN0OmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMubWVudS5lbGVtZW50LmVtcHR5KCkuekluZGV4KHRoaXMuZWxlbWVudC56SW5kZXgoKSsxKTt0aGlzLl9yZW5kZXJNZW51KGksdCksdGhpcy5tZW51LnJlZnJlc2goKSxpLnNob3coKSx0aGlzLl9yZXNpemVNZW51KCksaS5wb3NpdGlvbihlLmV4dGVuZCh7b2Y6dGhpcy5lbGVtZW50fSx0aGlzLm9wdGlvbnMucG9zaXRpb24pKSx0aGlzLm9wdGlvbnMuYXV0b0ZvY3VzJiZ0aGlzLm1lbnUubmV4dCgpfSxfcmVzaXplTWVudTpmdW5jdGlvbigpe3ZhciBlPXRoaXMubWVudS5lbGVtZW50O2Uub3V0ZXJXaWR0aChNYXRoLm1heChlLndpZHRoKFwiXCIpLm91dGVyV2lkdGgoKSsxLHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCkpKX0sX3JlbmRlck1lbnU6ZnVuY3Rpb24odCxpKXt2YXIgcz10aGlzO2UuZWFjaChpLGZ1bmN0aW9uKGUsaSl7cy5fcmVuZGVySXRlbURhdGEodCxpKX0pfSxfcmVuZGVySXRlbURhdGE6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5fcmVuZGVySXRlbShlLHQpLmRhdGEoXCJ1aS1hdXRvY29tcGxldGUtaXRlbVwiLHQpfSxfcmVuZGVySXRlbTpmdW5jdGlvbih0LGkpe3JldHVybiBlKFwiPGxpPlwiKS5hcHBlbmQoZShcIjxhPlwiKS50ZXh0KGkubGFiZWwpKS5hcHBlbmRUbyh0KX0sX21vdmU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKT90aGlzLm1lbnUuaXNGaXJzdEl0ZW0oKSYmL15wcmV2aW91cy8udGVzdChlKXx8dGhpcy5tZW51LmlzTGFzdEl0ZW0oKSYmL15uZXh0Ly50ZXN0KGUpPyh0aGlzLl92YWx1ZSh0aGlzLnRlcm0pLHRoaXMubWVudS5ibHVyKCksdW5kZWZpbmVkKToodGhpcy5tZW51W2VdKHQpLHVuZGVmaW5lZCk6KHRoaXMuc2VhcmNoKG51bGwsdCksdW5kZWZpbmVkKX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubWVudS5lbGVtZW50fSxfdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZU1ldGhvZC5hcHBseSh0aGlzLmVsZW1lbnQsYXJndW1lbnRzKX0sX2tleUV2ZW50OmZ1bmN0aW9uKGUsdCl7KCF0aGlzLmlzTXVsdGlMaW5lfHx0aGlzLm1lbnUuZWxlbWVudC5pcyhcIjp2aXNpYmxlXCIpKSYmKHRoaXMuX21vdmUoZSx0KSx0LnByZXZlbnREZWZhdWx0KCkpfX0pLGUuZXh0ZW5kKGUudWkuYXV0b2NvbXBsZXRlLHtlc2NhcGVSZWdleDpmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC9bXFwtXFxbXFxde30oKSorPy4sXFxcXFxcXiR8I1xcc10vZyxcIlxcXFwkJlwiKX0sZmlsdGVyOmZ1bmN0aW9uKHQsaSl7dmFyIHM9UmVnRXhwKGUudWkuYXV0b2NvbXBsZXRlLmVzY2FwZVJlZ2V4KGkpLFwiaVwiKTtyZXR1cm4gZS5ncmVwKHQsZnVuY3Rpb24oZSl7cmV0dXJuIHMudGVzdChlLmxhYmVsfHxlLnZhbHVlfHxlKX0pfX0pLGUud2lkZ2V0KFwidWkuYXV0b2NvbXBsZXRlXCIsZS51aS5hdXRvY29tcGxldGUse29wdGlvbnM6e21lc3NhZ2VzOntub1Jlc3VsdHM6XCJObyBzZWFyY2ggcmVzdWx0cy5cIixyZXN1bHRzOmZ1bmN0aW9uKGUpe3JldHVybiBlKyhlPjE/XCIgcmVzdWx0cyBhcmVcIjpcIiByZXN1bHQgaXNcIikrXCIgYXZhaWxhYmxlLCB1c2UgdXAgYW5kIGRvd24gYXJyb3cga2V5cyB0byBuYXZpZ2F0ZS5cIn19fSxfX3Jlc3BvbnNlOmZ1bmN0aW9uKGUpe3ZhciB0O3RoaXMuX3N1cGVyQXBwbHkoYXJndW1lbnRzKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWR8fHRoaXMuY2FuY2VsU2VhcmNofHwodD1lJiZlLmxlbmd0aD90aGlzLm9wdGlvbnMubWVzc2FnZXMucmVzdWx0cyhlLmxlbmd0aCk6dGhpcy5vcHRpb25zLm1lc3NhZ2VzLm5vUmVzdWx0cyx0aGlzLmxpdmVSZWdpb24udGV4dCh0KSl9fSl9KShqUXVlcnkpOyhmdW5jdGlvbihlKXt2YXIgdCxpLHMsbixhPVwidWktYnV0dG9uIHVpLXdpZGdldCB1aS1zdGF0ZS1kZWZhdWx0IHVpLWNvcm5lci1hbGxcIixvPVwidWktc3RhdGUtaG92ZXIgdWktc3RhdGUtYWN0aXZlIFwiLHI9XCJ1aS1idXR0b24taWNvbnMtb25seSB1aS1idXR0b24taWNvbi1vbmx5IHVpLWJ1dHRvbi10ZXh0LWljb25zIHVpLWJ1dHRvbi10ZXh0LWljb24tcHJpbWFyeSB1aS1idXR0b24tdGV4dC1pY29uLXNlY29uZGFyeSB1aS1idXR0b24tdGV4dC1vbmx5XCIsaD1mdW5jdGlvbigpe3ZhciB0PWUodGhpcykuZmluZChcIjp1aS1idXR0b25cIik7c2V0VGltZW91dChmdW5jdGlvbigpe3QuYnV0dG9uKFwicmVmcmVzaFwiKX0sMSl9LGw9ZnVuY3Rpb24odCl7dmFyIGk9dC5uYW1lLHM9dC5mb3JtLG49ZShbXSk7cmV0dXJuIGkmJihuPXM/ZShzKS5maW5kKFwiW25hbWU9J1wiK2krXCInXVwiKTplKFwiW25hbWU9J1wiK2krXCInXVwiLHQub3duZXJEb2N1bWVudCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuZm9ybX0pKSxufTtlLndpZGdldChcInVpLmJ1dHRvblwiLHt2ZXJzaW9uOlwiMS45LjJcIixkZWZhdWx0RWxlbWVudDpcIjxidXR0b24+XCIsb3B0aW9uczp7ZGlzYWJsZWQ6bnVsbCx0ZXh0OiEwLGxhYmVsOm51bGwsaWNvbnM6e3ByaW1hcnk6bnVsbCxzZWNvbmRhcnk6bnVsbH19LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuY2xvc2VzdChcImZvcm1cIikudW5iaW5kKFwicmVzZXRcIit0aGlzLmV2ZW50TmFtZXNwYWNlKS5iaW5kKFwicmVzZXRcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGgpLFwiYm9vbGVhblwiIT10eXBlb2YgdGhpcy5vcHRpb25zLmRpc2FibGVkP3RoaXMub3B0aW9ucy5kaXNhYmxlZD0hIXRoaXMuZWxlbWVudC5wcm9wKFwiZGlzYWJsZWRcIik6dGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLHRoaXMub3B0aW9ucy5kaXNhYmxlZCksdGhpcy5fZGV0ZXJtaW5lQnV0dG9uVHlwZSgpLHRoaXMuaGFzVGl0bGU9ISF0aGlzLmJ1dHRvbkVsZW1lbnQuYXR0cihcInRpdGxlXCIpO3ZhciBvPXRoaXMscj10aGlzLm9wdGlvbnMsdT1cImNoZWNrYm94XCI9PT10aGlzLnR5cGV8fFwicmFkaW9cIj09PXRoaXMudHlwZSxkPXU/XCJcIjpcInVpLXN0YXRlLWFjdGl2ZVwiLGM9XCJ1aS1zdGF0ZS1mb2N1c1wiO251bGw9PT1yLmxhYmVsJiYoci5sYWJlbD1cImlucHV0XCI9PT10aGlzLnR5cGU/dGhpcy5idXR0b25FbGVtZW50LnZhbCgpOnRoaXMuYnV0dG9uRWxlbWVudC5odG1sKCkpLHRoaXMuX2hvdmVyYWJsZSh0aGlzLmJ1dHRvbkVsZW1lbnQpLHRoaXMuYnV0dG9uRWxlbWVudC5hZGRDbGFzcyhhKS5hdHRyKFwicm9sZVwiLFwiYnV0dG9uXCIpLmJpbmQoXCJtb3VzZWVudGVyXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe3IuZGlzYWJsZWR8fHRoaXM9PT10JiZlKHRoaXMpLmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpfSkuYmluZChcIm1vdXNlbGVhdmVcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7ci5kaXNhYmxlZHx8ZSh0aGlzKS5yZW1vdmVDbGFzcyhkKX0pLmJpbmQoXCJjbGlja1wiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oZSl7ci5kaXNhYmxlZCYmKGUucHJldmVudERlZmF1bHQoKSxlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpKX0pLHRoaXMuZWxlbWVudC5iaW5kKFwiZm9jdXNcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7by5idXR0b25FbGVtZW50LmFkZENsYXNzKGMpfSkuYmluZChcImJsdXJcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7by5idXR0b25FbGVtZW50LnJlbW92ZUNsYXNzKGMpfSksdSYmKHRoaXMuZWxlbWVudC5iaW5kKFwiY2hhbmdlXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe258fG8ucmVmcmVzaCgpfSksdGhpcy5idXR0b25FbGVtZW50LmJpbmQoXCJtb3VzZWRvd25cIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKGUpe3IuZGlzYWJsZWR8fChuPSExLGk9ZS5wYWdlWCxzPWUucGFnZVkpfSkuYmluZChcIm1vdXNldXBcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKGUpe3IuZGlzYWJsZWR8fChpIT09ZS5wYWdlWHx8cyE9PWUucGFnZVkpJiYobj0hMCl9KSksXCJjaGVja2JveFwiPT09dGhpcy50eXBlP3RoaXMuYnV0dG9uRWxlbWVudC5iaW5kKFwiY2xpY2tcIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZGlzYWJsZWR8fG4/ITE6KGUodGhpcykudG9nZ2xlQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIiksby5idXR0b25FbGVtZW50LmF0dHIoXCJhcmlhLXByZXNzZWRcIixvLmVsZW1lbnRbMF0uY2hlY2tlZCksdW5kZWZpbmVkKX0pOlwicmFkaW9cIj09PXRoaXMudHlwZT90aGlzLmJ1dHRvbkVsZW1lbnQuYmluZChcImNsaWNrXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe2lmKHIuZGlzYWJsZWR8fG4pcmV0dXJuITE7ZSh0aGlzKS5hZGRDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKSxvLmJ1dHRvbkVsZW1lbnQuYXR0cihcImFyaWEtcHJlc3NlZFwiLFwidHJ1ZVwiKTt2YXIgdD1vLmVsZW1lbnRbMF07bCh0KS5ub3QodCkubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcykuYnV0dG9uKFwid2lkZ2V0XCIpWzBdfSkucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIikuYXR0cihcImFyaWEtcHJlc3NlZFwiLFwiZmFsc2VcIil9KToodGhpcy5idXR0b25FbGVtZW50LmJpbmQoXCJtb3VzZWRvd25cIit0aGlzLmV2ZW50TmFtZXNwYWNlLGZ1bmN0aW9uKCl7cmV0dXJuIHIuZGlzYWJsZWQ/ITE6KGUodGhpcykuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdD10aGlzLG8uZG9jdW1lbnQub25lKFwibW91c2V1cFwiLGZ1bmN0aW9uKCl7dD1udWxsfSksdW5kZWZpbmVkKX0pLmJpbmQoXCJtb3VzZXVwXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxmdW5jdGlvbigpe3JldHVybiByLmRpc2FibGVkPyExOihlKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLHVuZGVmaW5lZCl9KS5iaW5kKFwia2V5ZG93blwiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24odCl7cmV0dXJuIHIuZGlzYWJsZWQ/ITE6KCh0LmtleUNvZGU9PT1lLnVpLmtleUNvZGUuU1BBQ0V8fHQua2V5Q29kZT09PWUudWkua2V5Q29kZS5FTlRFUikmJmUodGhpcykuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdW5kZWZpbmVkKX0pLmJpbmQoXCJrZXl1cFwiK3RoaXMuZXZlbnROYW1lc3BhY2UsZnVuY3Rpb24oKXtlKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpfSksdGhpcy5idXR0b25FbGVtZW50LmlzKFwiYVwiKSYmdGhpcy5idXR0b25FbGVtZW50LmtleXVwKGZ1bmN0aW9uKHQpe3Qua2V5Q29kZT09PWUudWkua2V5Q29kZS5TUEFDRSYmZSh0aGlzKS5jbGljaygpfSkpLHRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsci5kaXNhYmxlZCksdGhpcy5fcmVzZXRCdXR0b24oKX0sX2RldGVybWluZUJ1dHRvblR5cGU6ZnVuY3Rpb24oKXt2YXIgZSx0LGk7dGhpcy50eXBlPXRoaXMuZWxlbWVudC5pcyhcIlt0eXBlPWNoZWNrYm94XVwiKT9cImNoZWNrYm94XCI6dGhpcy5lbGVtZW50LmlzKFwiW3R5cGU9cmFkaW9dXCIpP1wicmFkaW9cIjp0aGlzLmVsZW1lbnQuaXMoXCJpbnB1dFwiKT9cImlucHV0XCI6XCJidXR0b25cIixcImNoZWNrYm94XCI9PT10aGlzLnR5cGV8fFwicmFkaW9cIj09PXRoaXMudHlwZT8oZT10aGlzLmVsZW1lbnQucGFyZW50cygpLmxhc3QoKSx0PVwibGFiZWxbZm9yPSdcIit0aGlzLmVsZW1lbnQuYXR0cihcImlkXCIpK1wiJ11cIix0aGlzLmJ1dHRvbkVsZW1lbnQ9ZS5maW5kKHQpLHRoaXMuYnV0dG9uRWxlbWVudC5sZW5ndGh8fChlPWUubGVuZ3RoP2Uuc2libGluZ3MoKTp0aGlzLmVsZW1lbnQuc2libGluZ3MoKSx0aGlzLmJ1dHRvbkVsZW1lbnQ9ZS5maWx0ZXIodCksdGhpcy5idXR0b25FbGVtZW50Lmxlbmd0aHx8KHRoaXMuYnV0dG9uRWxlbWVudD1lLmZpbmQodCkpKSx0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGVcIiksaT10aGlzLmVsZW1lbnQuaXMoXCI6Y2hlY2tlZFwiKSxpJiZ0aGlzLmJ1dHRvbkVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5idXR0b25FbGVtZW50LnByb3AoXCJhcmlhLXByZXNzZWRcIixpKSk6dGhpcy5idXR0b25FbGVtZW50PXRoaXMuZWxlbWVudH0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnV0dG9uRWxlbWVudH0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGVcIiksdGhpcy5idXR0b25FbGVtZW50LnJlbW92ZUNsYXNzKGErXCIgXCIrbytcIiBcIityKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1wcmVzc2VkXCIpLmh0bWwodGhpcy5idXR0b25FbGVtZW50LmZpbmQoXCIudWktYnV0dG9uLXRleHRcIikuaHRtbCgpKSx0aGlzLmhhc1RpdGxlfHx0aGlzLmJ1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cihcInRpdGxlXCIpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX3N1cGVyKGUsdCksXCJkaXNhYmxlZFwiPT09ZT8odD90aGlzLmVsZW1lbnQucHJvcChcImRpc2FibGVkXCIsITApOnRoaXMuZWxlbWVudC5wcm9wKFwiZGlzYWJsZWRcIiwhMSksdW5kZWZpbmVkKToodGhpcy5fcmVzZXRCdXR0b24oKSx1bmRlZmluZWQpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50LmlzKFwiaW5wdXQsIGJ1dHRvblwiKT90aGlzLmVsZW1lbnQuaXMoXCI6ZGlzYWJsZWRcIik6dGhpcy5lbGVtZW50Lmhhc0NsYXNzKFwidWktYnV0dG9uLWRpc2FibGVkXCIpO3QhPT10aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsdCksXCJyYWRpb1wiPT09dGhpcy50eXBlP2wodGhpcy5lbGVtZW50WzBdKS5lYWNoKGZ1bmN0aW9uKCl7ZSh0aGlzKS5pcyhcIjpjaGVja2VkXCIpP2UodGhpcykuYnV0dG9uKFwid2lkZ2V0XCIpLmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLmF0dHIoXCJhcmlhLXByZXNzZWRcIixcInRydWVcIik6ZSh0aGlzKS5idXR0b24oXCJ3aWRnZXRcIikucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIikuYXR0cihcImFyaWEtcHJlc3NlZFwiLFwiZmFsc2VcIil9KTpcImNoZWNrYm94XCI9PT10aGlzLnR5cGUmJih0aGlzLmVsZW1lbnQuaXMoXCI6Y2hlY2tlZFwiKT90aGlzLmJ1dHRvbkVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIikuYXR0cihcImFyaWEtcHJlc3NlZFwiLFwidHJ1ZVwiKTp0aGlzLmJ1dHRvbkVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIikuYXR0cihcImFyaWEtcHJlc3NlZFwiLFwiZmFsc2VcIikpfSxfcmVzZXRCdXR0b246ZnVuY3Rpb24oKXtpZihcImlucHV0XCI9PT10aGlzLnR5cGUpcmV0dXJuIHRoaXMub3B0aW9ucy5sYWJlbCYmdGhpcy5lbGVtZW50LnZhbCh0aGlzLm9wdGlvbnMubGFiZWwpLHVuZGVmaW5lZDt2YXIgdD10aGlzLmJ1dHRvbkVsZW1lbnQucmVtb3ZlQ2xhc3MociksaT1lKFwiPHNwYW4+PC9zcGFuPlwiLHRoaXMuZG9jdW1lbnRbMF0pLmFkZENsYXNzKFwidWktYnV0dG9uLXRleHRcIikuaHRtbCh0aGlzLm9wdGlvbnMubGFiZWwpLmFwcGVuZFRvKHQuZW1wdHkoKSkudGV4dCgpLHM9dGhpcy5vcHRpb25zLmljb25zLG49cy5wcmltYXJ5JiZzLnNlY29uZGFyeSxhPVtdO3MucHJpbWFyeXx8cy5zZWNvbmRhcnk/KHRoaXMub3B0aW9ucy50ZXh0JiZhLnB1c2goXCJ1aS1idXR0b24tdGV4dC1pY29uXCIrKG4/XCJzXCI6cy5wcmltYXJ5P1wiLXByaW1hcnlcIjpcIi1zZWNvbmRhcnlcIikpLHMucHJpbWFyeSYmdC5wcmVwZW5kKFwiPHNwYW4gY2xhc3M9J3VpLWJ1dHRvbi1pY29uLXByaW1hcnkgdWktaWNvbiBcIitzLnByaW1hcnkrXCInPjwvc3Bhbj5cIikscy5zZWNvbmRhcnkmJnQuYXBwZW5kKFwiPHNwYW4gY2xhc3M9J3VpLWJ1dHRvbi1pY29uLXNlY29uZGFyeSB1aS1pY29uIFwiK3Muc2Vjb25kYXJ5K1wiJz48L3NwYW4+XCIpLHRoaXMub3B0aW9ucy50ZXh0fHwoYS5wdXNoKG4/XCJ1aS1idXR0b24taWNvbnMtb25seVwiOlwidWktYnV0dG9uLWljb24tb25seVwiKSx0aGlzLmhhc1RpdGxlfHx0LmF0dHIoXCJ0aXRsZVwiLGUudHJpbShpKSkpKTphLnB1c2goXCJ1aS1idXR0b24tdGV4dC1vbmx5XCIpLHQuYWRkQ2xhc3MoYS5qb2luKFwiIFwiKSl9fSksZS53aWRnZXQoXCJ1aS5idXR0b25zZXRcIix7dmVyc2lvbjpcIjEuOS4yXCIsb3B0aW9uczp7aXRlbXM6XCJidXR0b24sIGlucHV0W3R5cGU9YnV0dG9uXSwgaW5wdXRbdHlwZT1zdWJtaXRdLCBpbnB1dFt0eXBlPXJlc2V0XSwgaW5wdXRbdHlwZT1jaGVja2JveF0sIGlucHV0W3R5cGU9cmFkaW9dLCBhLCA6ZGF0YShidXR0b24pXCJ9LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1idXR0b25zZXRcIil9LF9pbml0OmZ1bmN0aW9uKCl7dGhpcy5yZWZyZXNoKCl9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSx0KXtcImRpc2FibGVkXCI9PT1lJiZ0aGlzLmJ1dHRvbnMuYnV0dG9uKFwib3B0aW9uXCIsZSx0KSx0aGlzLl9zdXBlcihlLHQpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQ9XCJydGxcIj09PXRoaXMuZWxlbWVudC5jc3MoXCJkaXJlY3Rpb25cIik7dGhpcy5idXR0b25zPXRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5pdGVtcykuZmlsdGVyKFwiOnVpLWJ1dHRvblwiKS5idXR0b24oXCJyZWZyZXNoXCIpLmVuZCgpLm5vdChcIjp1aS1idXR0b25cIikuYnV0dG9uKCkuZW5kKCkubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGUodGhpcykuYnV0dG9uKFwid2lkZ2V0XCIpWzBdfSkucmVtb3ZlQ2xhc3MoXCJ1aS1jb3JuZXItYWxsIHVpLWNvcm5lci1sZWZ0IHVpLWNvcm5lci1yaWdodFwiKS5maWx0ZXIoXCI6Zmlyc3RcIikuYWRkQ2xhc3ModD9cInVpLWNvcm5lci1yaWdodFwiOlwidWktY29ybmVyLWxlZnRcIikuZW5kKCkuZmlsdGVyKFwiOmxhc3RcIikuYWRkQ2xhc3ModD9cInVpLWNvcm5lci1sZWZ0XCI6XCJ1aS1jb3JuZXItcmlnaHRcIikuZW5kKCkuZW5kKCl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKFwidWktYnV0dG9uc2V0XCIpLHRoaXMuYnV0dG9ucy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gZSh0aGlzKS5idXR0b24oXCJ3aWRnZXRcIilbMF19KS5yZW1vdmVDbGFzcyhcInVpLWNvcm5lci1sZWZ0IHVpLWNvcm5lci1yaWdodFwiKS5lbmQoKS5idXR0b24oXCJkZXN0cm95XCIpfX0pfSkoalF1ZXJ5KTsoZnVuY3Rpb24oJCx1bmRlZmluZWQpe2Z1bmN0aW9uIERhdGVwaWNrZXIoKXt0aGlzLmRlYnVnPSExLHRoaXMuX2N1ckluc3Q9bnVsbCx0aGlzLl9rZXlFdmVudD0hMSx0aGlzLl9kaXNhYmxlZElucHV0cz1bXSx0aGlzLl9kYXRlcGlja2VyU2hvd2luZz0hMSx0aGlzLl9pbkRpYWxvZz0hMSx0aGlzLl9tYWluRGl2SWQ9XCJ1aS1kYXRlcGlja2VyLWRpdlwiLHRoaXMuX2lubGluZUNsYXNzPVwidWktZGF0ZXBpY2tlci1pbmxpbmVcIix0aGlzLl9hcHBlbmRDbGFzcz1cInVpLWRhdGVwaWNrZXItYXBwZW5kXCIsdGhpcy5fdHJpZ2dlckNsYXNzPVwidWktZGF0ZXBpY2tlci10cmlnZ2VyXCIsdGhpcy5fZGlhbG9nQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWRpYWxvZ1wiLHRoaXMuX2Rpc2FibGVDbGFzcz1cInVpLWRhdGVwaWNrZXItZGlzYWJsZWRcIix0aGlzLl91bnNlbGVjdGFibGVDbGFzcz1cInVpLWRhdGVwaWNrZXItdW5zZWxlY3RhYmxlXCIsdGhpcy5fY3VycmVudENsYXNzPVwidWktZGF0ZXBpY2tlci1jdXJyZW50LWRheVwiLHRoaXMuX2RheU92ZXJDbGFzcz1cInVpLWRhdGVwaWNrZXItZGF5cy1jZWxsLW92ZXJcIix0aGlzLnJlZ2lvbmFsPVtdLHRoaXMucmVnaW9uYWxbXCJcIl09e2Nsb3NlVGV4dDpcIkRvbmVcIixwcmV2VGV4dDpcIlByZXZcIixuZXh0VGV4dDpcIk5leHRcIixjdXJyZW50VGV4dDpcIlRvZGF5XCIsbW9udGhOYW1lczpbXCJKYW51YXJ5XCIsXCJGZWJydWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl0sbW9udGhOYW1lc1Nob3J0OltcIkphblwiLFwiRmViXCIsXCJNYXJcIixcIkFwclwiLFwiTWF5XCIsXCJKdW5cIixcIkp1bFwiLFwiQXVnXCIsXCJTZXBcIixcIk9jdFwiLFwiTm92XCIsXCJEZWNcIl0sZGF5TmFtZXM6W1wiU3VuZGF5XCIsXCJNb25kYXlcIixcIlR1ZXNkYXlcIixcIldlZG5lc2RheVwiLFwiVGh1cnNkYXlcIixcIkZyaWRheVwiLFwiU2F0dXJkYXlcIl0sZGF5TmFtZXNTaG9ydDpbXCJTdW5cIixcIk1vblwiLFwiVHVlXCIsXCJXZWRcIixcIlRodVwiLFwiRnJpXCIsXCJTYXRcIl0sZGF5TmFtZXNNaW46W1wiU3VcIixcIk1vXCIsXCJUdVwiLFwiV2VcIixcIlRoXCIsXCJGclwiLFwiU2FcIl0sd2Vla0hlYWRlcjpcIldrXCIsZGF0ZUZvcm1hdDpcIm1tL2RkL3l5XCIsZmlyc3REYXk6MCxpc1JUTDohMSxzaG93TW9udGhBZnRlclllYXI6ITEseWVhclN1ZmZpeDpcIlwifSx0aGlzLl9kZWZhdWx0cz17c2hvd09uOlwiZm9jdXNcIixzaG93QW5pbTpcImZhZGVJblwiLHNob3dPcHRpb25zOnt9LGRlZmF1bHREYXRlOm51bGwsYXBwZW5kVGV4dDpcIlwiLGJ1dHRvblRleHQ6XCIuLi5cIixidXR0b25JbWFnZTpcIlwiLGJ1dHRvbkltYWdlT25seTohMSxoaWRlSWZOb1ByZXZOZXh0OiExLG5hdmlnYXRpb25Bc0RhdGVGb3JtYXQ6ITEsZ290b0N1cnJlbnQ6ITEsY2hhbmdlTW9udGg6ITEsY2hhbmdlWWVhcjohMSx5ZWFyUmFuZ2U6XCJjLTEwOmMrMTBcIixzaG93T3RoZXJNb250aHM6ITEsc2VsZWN0T3RoZXJNb250aHM6ITEsc2hvd1dlZWs6ITEsY2FsY3VsYXRlV2Vlazp0aGlzLmlzbzg2MDFXZWVrLHNob3J0WWVhckN1dG9mZjpcIisxMFwiLG1pbkRhdGU6bnVsbCxtYXhEYXRlOm51bGwsZHVyYXRpb246XCJmYXN0XCIsYmVmb3JlU2hvd0RheTpudWxsLGJlZm9yZVNob3c6bnVsbCxvblNlbGVjdDpudWxsLG9uQ2hhbmdlTW9udGhZZWFyOm51bGwsb25DbG9zZTpudWxsLG51bWJlck9mTW9udGhzOjEsc2hvd0N1cnJlbnRBdFBvczowLHN0ZXBNb250aHM6MSxzdGVwQmlnTW9udGhzOjEyLGFsdEZpZWxkOlwiXCIsYWx0Rm9ybWF0OlwiXCIsY29uc3RyYWluSW5wdXQ6ITAsc2hvd0J1dHRvblBhbmVsOiExLGF1dG9TaXplOiExLGRpc2FibGVkOiExfSwkLmV4dGVuZCh0aGlzLl9kZWZhdWx0cyx0aGlzLnJlZ2lvbmFsW1wiXCJdKSx0aGlzLmRwRGl2PWJpbmRIb3ZlcigkKCc8ZGl2IGlkPVwiJyt0aGlzLl9tYWluRGl2SWQrJ1wiIGNsYXNzPVwidWktZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGxcIj48L2Rpdj4nKSl9ZnVuY3Rpb24gYmluZEhvdmVyKGUpe3ZhciB0PVwiYnV0dG9uLCAudWktZGF0ZXBpY2tlci1wcmV2LCAudWktZGF0ZXBpY2tlci1uZXh0LCAudWktZGF0ZXBpY2tlci1jYWxlbmRhciB0ZCBhXCI7cmV0dXJuIGUuZGVsZWdhdGUodCxcIm1vdXNlb3V0XCIsZnVuY3Rpb24oKXskKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksLTEhPXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLXByZXZcIikmJiQodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXJcIiksLTEhPXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLW5leHRcIikmJiQodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXJcIil9KS5kZWxlZ2F0ZSh0LFwibW91c2VvdmVyXCIsZnVuY3Rpb24oKXskLmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKGluc3RBY3RpdmUuaW5saW5lP2UucGFyZW50KClbMF06aW5zdEFjdGl2ZS5pbnB1dFswXSl8fCgkKHRoaXMpLnBhcmVudHMoXCIudWktZGF0ZXBpY2tlci1jYWxlbmRhclwiKS5maW5kKFwiYVwiKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLCQodGhpcykuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKSwtMSE9dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItcHJldlwiKSYmJCh0aGlzKS5hZGRDbGFzcyhcInVpLWRhdGVwaWNrZXItcHJldi1ob3ZlclwiKSwtMSE9dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItbmV4dFwiKSYmJCh0aGlzKS5hZGRDbGFzcyhcInVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlclwiKSl9KX1mdW5jdGlvbiBleHRlbmRSZW1vdmUoZSx0KXskLmV4dGVuZChlLHQpO2Zvcih2YXIgaSBpbiB0KShudWxsPT10W2ldfHx0W2ldPT11bmRlZmluZWQpJiYoZVtpXT10W2ldKTtyZXR1cm4gZX0kLmV4dGVuZCgkLnVpLHtkYXRlcGlja2VyOnt2ZXJzaW9uOlwiMS45LjJcIn19KTt2YXIgUFJPUF9OQU1FPVwiZGF0ZXBpY2tlclwiLGRwdXVpZD0obmV3IERhdGUpLmdldFRpbWUoKSxpbnN0QWN0aXZlOyQuZXh0ZW5kKERhdGVwaWNrZXIucHJvdG90eXBlLHttYXJrZXJDbGFzc05hbWU6XCJoYXNEYXRlcGlja2VyXCIsbWF4Um93czo0LGxvZzpmdW5jdGlvbigpe3RoaXMuZGVidWcmJmNvbnNvbGUubG9nLmFwcGx5KFwiXCIsYXJndW1lbnRzKX0sX3dpZGdldERhdGVwaWNrZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kcERpdn0sc2V0RGVmYXVsdHM6ZnVuY3Rpb24oZSl7cmV0dXJuIGV4dGVuZFJlbW92ZSh0aGlzLl9kZWZhdWx0cyxlfHx7fSksdGhpc30sX2F0dGFjaERhdGVwaWNrZXI6ZnVuY3Rpb24odGFyZ2V0LHNldHRpbmdzKXt2YXIgaW5saW5lU2V0dGluZ3M9bnVsbDtmb3IodmFyIGF0dHJOYW1lIGluIHRoaXMuX2RlZmF1bHRzKXt2YXIgYXR0clZhbHVlPXRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRlOlwiK2F0dHJOYW1lKTtpZihhdHRyVmFsdWUpe2lubGluZVNldHRpbmdzPWlubGluZVNldHRpbmdzfHx7fTt0cnl7aW5saW5lU2V0dGluZ3NbYXR0ck5hbWVdPWV2YWwoYXR0clZhbHVlKX1jYXRjaChlcnIpe2lubGluZVNldHRpbmdzW2F0dHJOYW1lXT1hdHRyVmFsdWV9fX12YXIgbm9kZU5hbWU9dGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksaW5saW5lPVwiZGl2XCI9PW5vZGVOYW1lfHxcInNwYW5cIj09bm9kZU5hbWU7dGFyZ2V0LmlkfHwodGhpcy51dWlkKz0xLHRhcmdldC5pZD1cImRwXCIrdGhpcy51dWlkKTt2YXIgaW5zdD10aGlzLl9uZXdJbnN0KCQodGFyZ2V0KSxpbmxpbmUpO2luc3Quc2V0dGluZ3M9JC5leHRlbmQoe30sc2V0dGluZ3N8fHt9LGlubGluZVNldHRpbmdzfHx7fSksXCJpbnB1dFwiPT1ub2RlTmFtZT90aGlzLl9jb25uZWN0RGF0ZXBpY2tlcih0YXJnZXQsaW5zdCk6aW5saW5lJiZ0aGlzLl9pbmxpbmVEYXRlcGlja2VyKHRhcmdldCxpbnN0KX0sX25ld0luc3Q6ZnVuY3Rpb24oZSx0KXt2YXIgaT1lWzBdLmlkLnJlcGxhY2UoLyhbXkEtWmEtejAtOV8tXSkvZyxcIlxcXFxcXFxcJDFcIik7cmV0dXJue2lkOmksaW5wdXQ6ZSxzZWxlY3RlZERheTowLHNlbGVjdGVkTW9udGg6MCxzZWxlY3RlZFllYXI6MCxkcmF3TW9udGg6MCxkcmF3WWVhcjowLGlubGluZTp0LGRwRGl2OnQ/YmluZEhvdmVyKCQoJzxkaXYgY2xhc3M9XCInK3RoaXMuX2lubGluZUNsYXNzKycgdWktZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGxcIj48L2Rpdj4nKSk6dGhpcy5kcERpdn19LF9jb25uZWN0RGF0ZXBpY2tlcjpmdW5jdGlvbihlLHQpe3ZhciBpPSQoZSk7dC5hcHBlbmQ9JChbXSksdC50cmlnZ2VyPSQoW10pLGkuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpfHwodGhpcy5fYXR0YWNobWVudHMoaSx0KSxpLmFkZENsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS5rZXlkb3duKHRoaXMuX2RvS2V5RG93bikua2V5cHJlc3ModGhpcy5fZG9LZXlQcmVzcykua2V5dXAodGhpcy5fZG9LZXlVcCkuYmluZChcInNldERhdGEuZGF0ZXBpY2tlclwiLGZ1bmN0aW9uKGUsaSxzKXt0LnNldHRpbmdzW2ldPXN9KS5iaW5kKFwiZ2V0RGF0YS5kYXRlcGlja2VyXCIsZnVuY3Rpb24oZSxpKXtyZXR1cm4gdGhpcy5fZ2V0KHQsaSl9KSx0aGlzLl9hdXRvU2l6ZSh0KSwkLmRhdGEoZSxQUk9QX05BTUUsdCksdC5zZXR0aW5ncy5kaXNhYmxlZCYmdGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoZSkpfSxfYXR0YWNobWVudHM6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9nZXQodCxcImFwcGVuZFRleHRcIikscz10aGlzLl9nZXQodCxcImlzUlRMXCIpO3QuYXBwZW5kJiZ0LmFwcGVuZC5yZW1vdmUoKSxpJiYodC5hcHBlbmQ9JCgnPHNwYW4gY2xhc3M9XCInK3RoaXMuX2FwcGVuZENsYXNzKydcIj4nK2krXCI8L3NwYW4+XCIpLGVbcz9cImJlZm9yZVwiOlwiYWZ0ZXJcIl0odC5hcHBlbmQpKSxlLnVuYmluZChcImZvY3VzXCIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpLHQudHJpZ2dlciYmdC50cmlnZ2VyLnJlbW92ZSgpO3ZhciBuPXRoaXMuX2dldCh0LFwic2hvd09uXCIpO2lmKChcImZvY3VzXCI9PW58fFwiYm90aFwiPT1uKSYmZS5mb2N1cyh0aGlzLl9zaG93RGF0ZXBpY2tlciksXCJidXR0b25cIj09bnx8XCJib3RoXCI9PW4pe3ZhciBhPXRoaXMuX2dldCh0LFwiYnV0dG9uVGV4dFwiKSxvPXRoaXMuX2dldCh0LFwiYnV0dG9uSW1hZ2VcIik7dC50cmlnZ2VyPSQodGhpcy5fZ2V0KHQsXCJidXR0b25JbWFnZU9ubHlcIik/JChcIjxpbWcvPlwiKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLmF0dHIoe3NyYzpvLGFsdDphLHRpdGxlOmF9KTokKCc8YnV0dG9uIHR5cGU9XCJidXR0b25cIj48L2J1dHRvbj4nKS5hZGRDbGFzcyh0aGlzLl90cmlnZ2VyQ2xhc3MpLmh0bWwoXCJcIj09bz9hOiQoXCI8aW1nLz5cIikuYXR0cih7c3JjOm8sYWx0OmEsdGl0bGU6YX0pKSksZVtzP1wiYmVmb3JlXCI6XCJhZnRlclwiXSh0LnRyaWdnZXIpLHQudHJpZ2dlci5jbGljayhmdW5jdGlvbigpe3JldHVybiAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiYkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dD09ZVswXT8kLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk6JC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQhPWVbMF0/KCQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKSwkLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKGVbMF0pKTokLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKGVbMF0pLCExfSl9fSxfYXV0b1NpemU6ZnVuY3Rpb24oZSl7aWYodGhpcy5fZ2V0KGUsXCJhdXRvU2l6ZVwiKSYmIWUuaW5saW5lKXt2YXIgdD1uZXcgRGF0ZSgyMDA5LDExLDIwKSxpPXRoaXMuX2dldChlLFwiZGF0ZUZvcm1hdFwiKTtpZihpLm1hdGNoKC9bRE1dLykpe3ZhciBzPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLGk9MCxzPTA7ZS5sZW5ndGg+cztzKyspZVtzXS5sZW5ndGg+dCYmKHQ9ZVtzXS5sZW5ndGgsaT1zKTtyZXR1cm4gaX07dC5zZXRNb250aChzKHRoaXMuX2dldChlLGkubWF0Y2goL01NLyk/XCJtb250aE5hbWVzXCI6XCJtb250aE5hbWVzU2hvcnRcIikpKSx0LnNldERhdGUocyh0aGlzLl9nZXQoZSxpLm1hdGNoKC9ERC8pP1wiZGF5TmFtZXNcIjpcImRheU5hbWVzU2hvcnRcIikpKzIwLXQuZ2V0RGF5KCkpfWUuaW5wdXQuYXR0cihcInNpemVcIix0aGlzLl9mb3JtYXREYXRlKGUsdCkubGVuZ3RoKX19LF9pbmxpbmVEYXRlcGlja2VyOmZ1bmN0aW9uKGUsdCl7dmFyIGk9JChlKTtpLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKXx8KGkuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmFwcGVuZCh0LmRwRGl2KS5iaW5kKFwic2V0RGF0YS5kYXRlcGlja2VyXCIsZnVuY3Rpb24oZSxpLHMpe3Quc2V0dGluZ3NbaV09c30pLmJpbmQoXCJnZXREYXRhLmRhdGVwaWNrZXJcIixmdW5jdGlvbihlLGkpe3JldHVybiB0aGlzLl9nZXQodCxpKX0pLCQuZGF0YShlLFBST1BfTkFNRSx0KSx0aGlzLl9zZXREYXRlKHQsdGhpcy5fZ2V0RGVmYXVsdERhdGUodCksITApLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIodCksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKHQpLHQuc2V0dGluZ3MuZGlzYWJsZWQmJnRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKGUpLHQuZHBEaXYuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIikpfSxfZGlhbG9nRGF0ZXBpY2tlcjpmdW5jdGlvbihlLHQsaSxzLG4pe3ZhciBhPXRoaXMuX2RpYWxvZ0luc3Q7aWYoIWEpe3RoaXMudXVpZCs9MTt2YXIgbz1cImRwXCIrdGhpcy51dWlkO3RoaXMuX2RpYWxvZ0lucHV0PSQoJzxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiJytvKydcIiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAtMTAwcHg7IHdpZHRoOiAwcHg7XCIvPicpLHRoaXMuX2RpYWxvZ0lucHV0LmtleWRvd24odGhpcy5fZG9LZXlEb3duKSwkKFwiYm9keVwiKS5hcHBlbmQodGhpcy5fZGlhbG9nSW5wdXQpLGE9dGhpcy5fZGlhbG9nSW5zdD10aGlzLl9uZXdJbnN0KHRoaXMuX2RpYWxvZ0lucHV0LCExKSxhLnNldHRpbmdzPXt9LCQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSxQUk9QX05BTUUsYSl9aWYoZXh0ZW5kUmVtb3ZlKGEuc2V0dGluZ3Msc3x8e30pLHQ9dCYmdC5jb25zdHJ1Y3Rvcj09RGF0ZT90aGlzLl9mb3JtYXREYXRlKGEsdCk6dCx0aGlzLl9kaWFsb2dJbnB1dC52YWwodCksdGhpcy5fcG9zPW4/bi5sZW5ndGg/bjpbbi5wYWdlWCxuLnBhZ2VZXTpudWxsLCF0aGlzLl9wb3Mpe3ZhciByPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCxoPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQsbD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0LHU9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcHx8ZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7dGhpcy5fcG9zPVtyLzItMTAwK2wsaC8yLTE1MCt1XX1yZXR1cm4gdGhpcy5fZGlhbG9nSW5wdXQuY3NzKFwibGVmdFwiLHRoaXMuX3Bvc1swXSsyMCtcInB4XCIpLmNzcyhcInRvcFwiLHRoaXMuX3Bvc1sxXStcInB4XCIpLGEuc2V0dGluZ3Mub25TZWxlY3Q9aSx0aGlzLl9pbkRpYWxvZz0hMCx0aGlzLmRwRGl2LmFkZENsYXNzKHRoaXMuX2RpYWxvZ0NsYXNzKSx0aGlzLl9zaG93RGF0ZXBpY2tlcih0aGlzLl9kaWFsb2dJbnB1dFswXSksJC5ibG9ja1VJJiYkLmJsb2NrVUkodGhpcy5kcERpdiksJC5kYXRhKHRoaXMuX2RpYWxvZ0lucHV0WzBdLFBST1BfTkFNRSxhKSx0aGlzfSxfZGVzdHJveURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9JChlKSxpPSQuZGF0YShlLFBST1BfTkFNRSk7aWYodC5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkpe3ZhciBzPWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTskLnJlbW92ZURhdGEoZSxQUk9QX05BTUUpLFwiaW5wdXRcIj09cz8oaS5hcHBlbmQucmVtb3ZlKCksaS50cmlnZ2VyLnJlbW92ZSgpLHQucmVtb3ZlQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLnVuYmluZChcImZvY3VzXCIsdGhpcy5fc2hvd0RhdGVwaWNrZXIpLnVuYmluZChcImtleWRvd25cIix0aGlzLl9kb0tleURvd24pLnVuYmluZChcImtleXByZXNzXCIsdGhpcy5fZG9LZXlQcmVzcykudW5iaW5kKFwia2V5dXBcIix0aGlzLl9kb0tleVVwKSk6KFwiZGl2XCI9PXN8fFwic3BhblwiPT1zKSYmdC5yZW1vdmVDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuZW1wdHkoKX19LF9lbmFibGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciB0PSQoZSksaT0kLmRhdGEoZSxQUk9QX05BTUUpO2lmKHQuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpKXt2YXIgcz1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJpbnB1dFwiPT1zKWUuZGlzYWJsZWQ9ITEsaS50cmlnZ2VyLmZpbHRlcihcImJ1dHRvblwiKS5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5kaXNhYmxlZD0hMX0pLmVuZCgpLmZpbHRlcihcImltZ1wiKS5jc3Moe29wYWNpdHk6XCIxLjBcIixjdXJzb3I6XCJcIn0pO2Vsc2UgaWYoXCJkaXZcIj09c3x8XCJzcGFuXCI9PXMpe3ZhciBuPXQuY2hpbGRyZW4oXCIuXCIrdGhpcy5faW5saW5lQ2xhc3MpO24uY2hpbGRyZW4oKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpLG4uZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLW1vbnRoLCBzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyXCIpLnByb3AoXCJkaXNhYmxlZFwiLCExKX10aGlzLl9kaXNhYmxlZElucHV0cz0kLm1hcCh0aGlzLl9kaXNhYmxlZElucHV0cyxmdW5jdGlvbih0KXtyZXR1cm4gdD09ZT9udWxsOnR9KX19LF9kaXNhYmxlRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt2YXIgdD0kKGUpLGk9JC5kYXRhKGUsUFJPUF9OQU1FKTtpZih0Lmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSl7dmFyIHM9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwiaW5wdXRcIj09cyllLmRpc2FibGVkPSEwLGkudHJpZ2dlci5maWx0ZXIoXCJidXR0b25cIikuZWFjaChmdW5jdGlvbigpe3RoaXMuZGlzYWJsZWQ9ITB9KS5lbmQoKS5maWx0ZXIoXCJpbWdcIikuY3NzKHtvcGFjaXR5OlwiMC41XCIsY3Vyc29yOlwiZGVmYXVsdFwifSk7ZWxzZSBpZihcImRpdlwiPT1zfHxcInNwYW5cIj09cyl7dmFyIG49dC5jaGlsZHJlbihcIi5cIit0aGlzLl9pbmxpbmVDbGFzcyk7bi5jaGlsZHJlbigpLmFkZENsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIiksbi5maW5kKFwic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXJcIikucHJvcChcImRpc2FibGVkXCIsITApfXRoaXMuX2Rpc2FibGVkSW5wdXRzPSQubWFwKHRoaXMuX2Rpc2FibGVkSW5wdXRzLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1lP251bGw6dH0pLHRoaXMuX2Rpc2FibGVkSW5wdXRzW3RoaXMuX2Rpc2FibGVkSW5wdXRzLmxlbmd0aF09ZX19LF9pc0Rpc2FibGVkRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXtpZighZSlyZXR1cm4hMTtmb3IodmFyIHQ9MDt0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGg+dDt0KyspaWYodGhpcy5fZGlzYWJsZWRJbnB1dHNbdF09PWUpcmV0dXJuITA7cmV0dXJuITF9LF9nZXRJbnN0OmZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gJC5kYXRhKGUsUFJPUF9OQU1FKX1jYXRjaCh0KXt0aHJvd1wiTWlzc2luZyBpbnN0YW5jZSBkYXRhIGZvciB0aGlzIGRhdGVwaWNrZXJcIn19LF9vcHRpb25EYXRlcGlja2VyOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz10aGlzLl9nZXRJbnN0KGUpO2lmKDI9PWFyZ3VtZW50cy5sZW5ndGgmJlwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVyblwiZGVmYXVsdHNcIj09dD8kLmV4dGVuZCh7fSwkLmRhdGVwaWNrZXIuX2RlZmF1bHRzKTpzP1wiYWxsXCI9PXQ/JC5leHRlbmQoe30scy5zZXR0aW5ncyk6dGhpcy5fZ2V0KHMsdCk6bnVsbDt2YXIgbj10fHx7fTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCYmKG49e30sblt0XT1pKSxzKXt0aGlzLl9jdXJJbnN0PT1zJiZ0aGlzLl9oaWRlRGF0ZXBpY2tlcigpO3ZhciBhPXRoaXMuX2dldERhdGVEYXRlcGlja2VyKGUsITApLG89dGhpcy5fZ2V0TWluTWF4RGF0ZShzLFwibWluXCIpLHI9dGhpcy5fZ2V0TWluTWF4RGF0ZShzLFwibWF4XCIpO2V4dGVuZFJlbW92ZShzLnNldHRpbmdzLG4pLG51bGwhPT1vJiZuLmRhdGVGb3JtYXQhPT11bmRlZmluZWQmJm4ubWluRGF0ZT09PXVuZGVmaW5lZCYmKHMuc2V0dGluZ3MubWluRGF0ZT10aGlzLl9mb3JtYXREYXRlKHMsbykpLG51bGwhPT1yJiZuLmRhdGVGb3JtYXQhPT11bmRlZmluZWQmJm4ubWF4RGF0ZT09PXVuZGVmaW5lZCYmKHMuc2V0dGluZ3MubWF4RGF0ZT10aGlzLl9mb3JtYXREYXRlKHMscikpLHRoaXMuX2F0dGFjaG1lbnRzKCQoZSkscyksdGhpcy5fYXV0b1NpemUocyksdGhpcy5fc2V0RGF0ZShzLGEpLHRoaXMuX3VwZGF0ZUFsdGVybmF0ZShzKSx0aGlzLl91cGRhdGVEYXRlcGlja2VyKHMpfX0sX2NoYW5nZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSx0LGkpe3RoaXMuX29wdGlvbkRhdGVwaWNrZXIoZSx0LGkpfSxfcmVmcmVzaERhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2V0SW5zdChlKTt0JiZ0aGlzLl91cGRhdGVEYXRlcGlja2VyKHQpfSxfc2V0RGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9nZXRJbnN0KGUpO2kmJih0aGlzLl9zZXREYXRlKGksdCksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihpKSx0aGlzLl91cGRhdGVBbHRlcm5hdGUoaSkpfSxfZ2V0RGF0ZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9nZXRJbnN0KGUpO3JldHVybiBpJiYhaS5pbmxpbmUmJnRoaXMuX3NldERhdGVGcm9tRmllbGQoaSx0KSxpP3RoaXMuX2dldERhdGUoaSk6bnVsbH0sX2RvS2V5RG93bjpmdW5jdGlvbihlKXt2YXIgdD0kLmRhdGVwaWNrZXIuX2dldEluc3QoZS50YXJnZXQpLGk9ITAscz10LmRwRGl2LmlzKFwiLnVpLWRhdGVwaWNrZXItcnRsXCIpO2lmKHQuX2tleUV2ZW50PSEwLCQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcpc3dpdGNoKGUua2V5Q29kZSl7Y2FzZSA5OiQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKSxpPSExO2JyZWFrO2Nhc2UgMTM6dmFyIG49JChcInRkLlwiKyQuZGF0ZXBpY2tlci5fZGF5T3ZlckNsYXNzK1wiOm5vdCguXCIrJC5kYXRlcGlja2VyLl9jdXJyZW50Q2xhc3MrXCIpXCIsdC5kcERpdik7blswXSYmJC5kYXRlcGlja2VyLl9zZWxlY3REYXkoZS50YXJnZXQsdC5zZWxlY3RlZE1vbnRoLHQuc2VsZWN0ZWRZZWFyLG5bMF0pO3ZhciBhPSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJvblNlbGVjdFwiKTtpZihhKXt2YXIgbz0kLmRhdGVwaWNrZXIuX2Zvcm1hdERhdGUodCk7YS5hcHBseSh0LmlucHV0P3QuaW5wdXRbMF06bnVsbCxbbyx0XSl9ZWxzZSAkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7cmV0dXJuITE7Y2FzZSAyNzokLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7YnJlYWs7Y2FzZSAzMzokLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5Py0kLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcEJpZ01vbnRoc1wiKTotJC5kYXRlcGlja2VyLl9nZXQodCxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgMzQ6JC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LGUuY3RybEtleT8rJC5kYXRlcGlja2VyLl9nZXQodCxcInN0ZXBCaWdNb250aHNcIik6KyQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzdGVwTW9udGhzXCIpLFwiTVwiKTticmVhaztjYXNlIDM1OihlLmN0cmxLZXl8fGUubWV0YUtleSkmJiQuZGF0ZXBpY2tlci5fY2xlYXJEYXRlKGUudGFyZ2V0KSxpPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzY6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmJC5kYXRlcGlja2VyLl9nb3RvVG9kYXkoZS50YXJnZXQpLGk9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7Y2FzZSAzNzooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQscz8xOi0xLFwiRFwiKSxpPWUuY3RybEtleXx8ZS5tZXRhS2V5LGUub3JpZ2luYWxFdmVudC5hbHRLZXkmJiQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/LSQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzdGVwQmlnTW9udGhzXCIpOi0kLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSAzODooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsLTcsXCJEXCIpLGk9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7Y2FzZSAzOTooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQscz8tMToxLFwiRFwiKSxpPWUuY3RybEtleXx8ZS5tZXRhS2V5LGUub3JpZ2luYWxFdmVudC5hbHRLZXkmJiQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/KyQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJzdGVwQmlnTW9udGhzXCIpOiskLmRhdGVwaWNrZXIuX2dldCh0LFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSA0MDooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiYkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsNyxcIkRcIiksaT1lLmN0cmxLZXl8fGUubWV0YUtleTticmVhaztkZWZhdWx0Omk9ITF9ZWxzZSAzNj09ZS5rZXlDb2RlJiZlLmN0cmxLZXk/JC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcih0aGlzKTppPSExO2kmJihlLnByZXZlbnREZWZhdWx0KCksZS5zdG9wUHJvcGFnYXRpb24oKSl9LF9kb0tleVByZXNzOmZ1bmN0aW9uKGUpe3ZhciB0PSQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlLnRhcmdldCk7aWYoJC5kYXRlcGlja2VyLl9nZXQodCxcImNvbnN0cmFpbklucHV0XCIpKXt2YXIgaT0kLmRhdGVwaWNrZXIuX3Bvc3NpYmxlQ2hhcnMoJC5kYXRlcGlja2VyLl9nZXQodCxcImRhdGVGb3JtYXRcIikpLHM9U3RyaW5nLmZyb21DaGFyQ29kZShlLmNoYXJDb2RlPT11bmRlZmluZWQ/ZS5rZXlDb2RlOmUuY2hhckNvZGUpO3JldHVybiBlLmN0cmxLZXl8fGUubWV0YUtleXx8XCIgXCI+c3x8IWl8fGkuaW5kZXhPZihzKT4tMX19LF9kb0tleVVwOmZ1bmN0aW9uKGUpe3ZhciB0PSQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlLnRhcmdldCk7aWYodC5pbnB1dC52YWwoKSE9dC5sYXN0VmFsKXRyeXt2YXIgaT0kLmRhdGVwaWNrZXIucGFyc2VEYXRlKCQuZGF0ZXBpY2tlci5fZ2V0KHQsXCJkYXRlRm9ybWF0XCIpLHQuaW5wdXQ/dC5pbnB1dC52YWwoKTpudWxsLCQuZGF0ZXBpY2tlci5fZ2V0Rm9ybWF0Q29uZmlnKHQpKTtpJiYoJC5kYXRlcGlja2VyLl9zZXREYXRlRnJvbUZpZWxkKHQpLCQuZGF0ZXBpY2tlci5fdXBkYXRlQWx0ZXJuYXRlKHQpLCQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlcih0KSl9Y2F0Y2gocyl7JC5kYXRlcGlja2VyLmxvZyhzKX1yZXR1cm4hMH0sX3Nob3dEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe2lmKGU9ZS50YXJnZXR8fGUsXCJpbnB1dFwiIT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJihlPSQoXCJpbnB1dFwiLGUucGFyZW50Tm9kZSlbMF0pLCEkLmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKGUpJiYkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCE9ZSl7dmFyIHQ9JC5kYXRlcGlja2VyLl9nZXRJbnN0KGUpOyQuZGF0ZXBpY2tlci5fY3VySW5zdCYmJC5kYXRlcGlja2VyLl9jdXJJbnN0IT10JiYoJC5kYXRlcGlja2VyLl9jdXJJbnN0LmRwRGl2LnN0b3AoITAsITApLHQmJiQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJiQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoJC5kYXRlcGlja2VyLl9jdXJJbnN0LmlucHV0WzBdKSk7dmFyIGk9JC5kYXRlcGlja2VyLl9nZXQodCxcImJlZm9yZVNob3dcIikscz1pP2kuYXBwbHkoZSxbZSx0XSk6e307aWYocyE9PSExKXtleHRlbmRSZW1vdmUodC5zZXR0aW5ncyxzKSx0Lmxhc3RWYWw9bnVsbCwkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dD1lLCQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCh0KSwkLmRhdGVwaWNrZXIuX2luRGlhbG9nJiYoZS52YWx1ZT1cIlwiKSwkLmRhdGVwaWNrZXIuX3Bvc3x8KCQuZGF0ZXBpY2tlci5fcG9zPSQuZGF0ZXBpY2tlci5fZmluZFBvcyhlKSwkLmRhdGVwaWNrZXIuX3Bvc1sxXSs9ZS5vZmZzZXRIZWlnaHQpO3ZhciBuPSExOyQoZSkucGFyZW50cygpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gbnw9XCJmaXhlZFwiPT0kKHRoaXMpLmNzcyhcInBvc2l0aW9uXCIpLCFufSk7dmFyIGE9e2xlZnQ6JC5kYXRlcGlja2VyLl9wb3NbMF0sdG9wOiQuZGF0ZXBpY2tlci5fcG9zWzFdfTtpZigkLmRhdGVwaWNrZXIuX3Bvcz1udWxsLHQuZHBEaXYuZW1wdHkoKSx0LmRwRGl2LmNzcyh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLGRpc3BsYXk6XCJibG9ja1wiLHRvcDpcIi0xMDAwcHhcIn0pLCQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlcih0KSxhPSQuZGF0ZXBpY2tlci5fY2hlY2tPZmZzZXQodCxhLG4pLHQuZHBEaXYuY3NzKHtwb3NpdGlvbjokLmRhdGVwaWNrZXIuX2luRGlhbG9nJiYkLmJsb2NrVUk/XCJzdGF0aWNcIjpuP1wiZml4ZWRcIjpcImFic29sdXRlXCIsZGlzcGxheTpcIm5vbmVcIixsZWZ0OmEubGVmdCtcInB4XCIsdG9wOmEudG9wK1wicHhcIn0pLCF0LmlubGluZSl7dmFyIG89JC5kYXRlcGlja2VyLl9nZXQodCxcInNob3dBbmltXCIpLHI9JC5kYXRlcGlja2VyLl9nZXQodCxcImR1cmF0aW9uXCIpLGg9ZnVuY3Rpb24oKXt2YXIgZT10LmRwRGl2LmZpbmQoXCJpZnJhbWUudWktZGF0ZXBpY2tlci1jb3ZlclwiKTtpZihlLmxlbmd0aCl7dmFyIGk9JC5kYXRlcGlja2VyLl9nZXRCb3JkZXJzKHQuZHBEaXYpO2UuY3NzKHtsZWZ0Oi1pWzBdLHRvcDotaVsxXSx3aWR0aDp0LmRwRGl2Lm91dGVyV2lkdGgoKSxoZWlnaHQ6dC5kcERpdi5vdXRlckhlaWdodCgpfSl9fTt0LmRwRGl2LnpJbmRleCgkKGUpLnpJbmRleCgpKzEpLCQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmc9ITAsJC5lZmZlY3RzJiYoJC5lZmZlY3RzLmVmZmVjdFtvXXx8JC5lZmZlY3RzW29dKT90LmRwRGl2LnNob3cobywkLmRhdGVwaWNrZXIuX2dldCh0LFwic2hvd09wdGlvbnNcIikscixoKTp0LmRwRGl2W298fFwic2hvd1wiXShvP3I6bnVsbCxoKSxvJiZyfHxoKCksdC5pbnB1dC5pcyhcIjp2aXNpYmxlXCIpJiYhdC5pbnB1dC5pcyhcIjpkaXNhYmxlZFwiKSYmdC5pbnB1dC5mb2N1cygpLCQuZGF0ZXBpY2tlci5fY3VySW5zdD10fX19fSxfdXBkYXRlRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt0aGlzLm1heFJvd3M9NDt2YXIgdD0kLmRhdGVwaWNrZXIuX2dldEJvcmRlcnMoZS5kcERpdik7aW5zdEFjdGl2ZT1lLGUuZHBEaXYuZW1wdHkoKS5hcHBlbmQodGhpcy5fZ2VuZXJhdGVIVE1MKGUpKSx0aGlzLl9hdHRhY2hIYW5kbGVycyhlKTt2YXIgaT1lLmRwRGl2LmZpbmQoXCJpZnJhbWUudWktZGF0ZXBpY2tlci1jb3ZlclwiKTtpLmxlbmd0aCYmaS5jc3Moe2xlZnQ6LXRbMF0sdG9wOi10WzFdLHdpZHRoOmUuZHBEaXYub3V0ZXJXaWR0aCgpLGhlaWdodDplLmRwRGl2Lm91dGVySGVpZ2h0KCl9KSxlLmRwRGl2LmZpbmQoXCIuXCIrdGhpcy5fZGF5T3ZlckNsYXNzK1wiIGFcIikubW91c2VvdmVyKCk7dmFyIHM9dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoZSksbj1zWzFdLGE9MTc7aWYoZS5kcERpdi5yZW1vdmVDbGFzcyhcInVpLWRhdGVwaWNrZXItbXVsdGktMiB1aS1kYXRlcGlja2VyLW11bHRpLTMgdWktZGF0ZXBpY2tlci1tdWx0aS00XCIpLndpZHRoKFwiXCIpLG4+MSYmZS5kcERpdi5hZGRDbGFzcyhcInVpLWRhdGVwaWNrZXItbXVsdGktXCIrbikuY3NzKFwid2lkdGhcIixhKm4rXCJlbVwiKSxlLmRwRGl2WygxIT1zWzBdfHwxIT1zWzFdP1wiYWRkXCI6XCJyZW1vdmVcIikrXCJDbGFzc1wiXShcInVpLWRhdGVwaWNrZXItbXVsdGlcIiksZS5kcERpdlsodGhpcy5fZ2V0KGUsXCJpc1JUTFwiKT9cImFkZFwiOlwicmVtb3ZlXCIpK1wiQ2xhc3NcIl0oXCJ1aS1kYXRlcGlja2VyLXJ0bFwiKSxlPT0kLmRhdGVwaWNrZXIuX2N1ckluc3QmJiQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJmUuaW5wdXQmJmUuaW5wdXQuaXMoXCI6dmlzaWJsZVwiKSYmIWUuaW5wdXQuaXMoXCI6ZGlzYWJsZWRcIikmJmUuaW5wdXRbMF0hPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJmUuaW5wdXQuZm9jdXMoKSxlLnllYXJzaHRtbCl7dmFyIG89ZS55ZWFyc2h0bWw7c2V0VGltZW91dChmdW5jdGlvbigpe289PT1lLnllYXJzaHRtbCYmZS55ZWFyc2h0bWwmJmUuZHBEaXYuZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLXllYXI6Zmlyc3RcIikucmVwbGFjZVdpdGgoZS55ZWFyc2h0bWwpLG89ZS55ZWFyc2h0bWw9bnVsbH0sMCl9fSxfZ2V0Qm9yZGVyczpmdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbihlKXtyZXR1cm57dGhpbjoxLG1lZGl1bToyLHRoaWNrOjN9W2VdfHxlfTtyZXR1cm5bcGFyc2VGbG9hdCh0KGUuY3NzKFwiYm9yZGVyLWxlZnQtd2lkdGhcIikpKSxwYXJzZUZsb2F0KHQoZS5jc3MoXCJib3JkZXItdG9wLXdpZHRoXCIpKSldfSxfY2hlY2tPZmZzZXQ6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPWUuZHBEaXYub3V0ZXJXaWR0aCgpLG49ZS5kcERpdi5vdXRlckhlaWdodCgpLGE9ZS5pbnB1dD9lLmlucHV0Lm91dGVyV2lkdGgoKTowLG89ZS5pbnB1dD9lLmlucHV0Lm91dGVySGVpZ2h0KCk6MCxyPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCsoaT8wOiQoZG9jdW1lbnQpLnNjcm9sbExlZnQoKSksaD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KyhpPzA6JChkb2N1bWVudCkuc2Nyb2xsVG9wKCkpO3JldHVybiB0LmxlZnQtPXRoaXMuX2dldChlLFwiaXNSVExcIik/cy1hOjAsdC5sZWZ0LT1pJiZ0LmxlZnQ9PWUuaW5wdXQub2Zmc2V0KCkubGVmdD8kKGRvY3VtZW50KS5zY3JvbGxMZWZ0KCk6MCx0LnRvcC09aSYmdC50b3A9PWUuaW5wdXQub2Zmc2V0KCkudG9wK28/JChkb2N1bWVudCkuc2Nyb2xsVG9wKCk6MCx0LmxlZnQtPU1hdGgubWluKHQubGVmdCx0LmxlZnQrcz5yJiZyPnM/TWF0aC5hYnModC5sZWZ0K3Mtcik6MCksdC50b3AtPU1hdGgubWluKHQudG9wLHQudG9wK24+aCYmaD5uP01hdGguYWJzKG4rbyk6MCksdH0sX2ZpbmRQb3M6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMuX2dldEluc3QoZSksaT10aGlzLl9nZXQodCxcImlzUlRMXCIpO2UmJihcImhpZGRlblwiPT1lLnR5cGV8fDEhPWUubm9kZVR5cGV8fCQuZXhwci5maWx0ZXJzLmhpZGRlbihlKSk7KWU9ZVtpP1wicHJldmlvdXNTaWJsaW5nXCI6XCJuZXh0U2libGluZ1wiXTt2YXIgcz0kKGUpLm9mZnNldCgpO3JldHVybltzLmxlZnQscy50b3BdfSxfaGlkZURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fY3VySW5zdDtpZih0JiYoIWV8fHQ9PSQuZGF0YShlLFBST1BfTkFNRSkpJiZ0aGlzLl9kYXRlcGlja2VyU2hvd2luZyl7dmFyIGk9dGhpcy5fZ2V0KHQsXCJzaG93QW5pbVwiKSxzPXRoaXMuX2dldCh0LFwiZHVyYXRpb25cIiksbj1mdW5jdGlvbigpeyQuZGF0ZXBpY2tlci5fdGlkeURpYWxvZyh0KX07JC5lZmZlY3RzJiYoJC5lZmZlY3RzLmVmZmVjdFtpXXx8JC5lZmZlY3RzW2ldKT90LmRwRGl2LmhpZGUoaSwkLmRhdGVwaWNrZXIuX2dldCh0LFwic2hvd09wdGlvbnNcIikscyxuKTp0LmRwRGl2W1wic2xpZGVEb3duXCI9PWk/XCJzbGlkZVVwXCI6XCJmYWRlSW5cIj09aT9cImZhZGVPdXRcIjpcImhpZGVcIl0oaT9zOm51bGwsbiksaXx8bigpLHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nPSExO3ZhciBhPXRoaXMuX2dldCh0LFwib25DbG9zZVwiKTthJiZhLmFwcGx5KHQuaW5wdXQ/dC5pbnB1dFswXTpudWxsLFt0LmlucHV0P3QuaW5wdXQudmFsKCk6XCJcIix0XSksdGhpcy5fbGFzdElucHV0PW51bGwsdGhpcy5faW5EaWFsb2cmJih0aGlzLl9kaWFsb2dJbnB1dC5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OlwiMFwiLHRvcDpcIi0xMDBweFwifSksJC5ibG9ja1VJJiYoJC51bmJsb2NrVUkoKSwkKFwiYm9keVwiKS5hcHBlbmQodGhpcy5kcERpdikpKSx0aGlzLl9pbkRpYWxvZz0hMX19LF90aWR5RGlhbG9nOmZ1bmN0aW9uKGUpe2UuZHBEaXYucmVtb3ZlQ2xhc3ModGhpcy5fZGlhbG9nQ2xhc3MpLnVuYmluZChcIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyXCIpfSxfY2hlY2tFeHRlcm5hbENsaWNrOmZ1bmN0aW9uKGUpe2lmKCQuZGF0ZXBpY2tlci5fY3VySW5zdCl7dmFyIHQ9JChlLnRhcmdldCksaT0kLmRhdGVwaWNrZXIuX2dldEluc3QodFswXSk7KHRbMF0uaWQhPSQuZGF0ZXBpY2tlci5fbWFpbkRpdklkJiYwPT10LnBhcmVudHMoXCIjXCIrJC5kYXRlcGlja2VyLl9tYWluRGl2SWQpLmxlbmd0aCYmIXQuaGFzQ2xhc3MoJC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSkmJiF0LmNsb3Nlc3QoXCIuXCIrJC5kYXRlcGlja2VyLl90cmlnZ2VyQ2xhc3MpLmxlbmd0aCYmJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmKCEkLmRhdGVwaWNrZXIuX2luRGlhbG9nfHwhJC5ibG9ja1VJKXx8dC5oYXNDbGFzcygkLmRhdGVwaWNrZXIubWFya2VyQ2xhc3NOYW1lKSYmJC5kYXRlcGlja2VyLl9jdXJJbnN0IT1pKSYmJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfX0sX2FkanVzdERhdGU6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPSQoZSksbj10aGlzLl9nZXRJbnN0KHNbMF0pO3RoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKHNbMF0pfHwodGhpcy5fYWRqdXN0SW5zdERhdGUobix0KyhcIk1cIj09aT90aGlzLl9nZXQobixcInNob3dDdXJyZW50QXRQb3NcIik6MCksaSksdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihuKSl9LF9nb3RvVG9kYXk6ZnVuY3Rpb24oZSl7dmFyIHQ9JChlKSxpPXRoaXMuX2dldEluc3QodFswXSk7aWYodGhpcy5fZ2V0KGksXCJnb3RvQ3VycmVudFwiKSYmaS5jdXJyZW50RGF5KWkuc2VsZWN0ZWREYXk9aS5jdXJyZW50RGF5LGkuZHJhd01vbnRoPWkuc2VsZWN0ZWRNb250aD1pLmN1cnJlbnRNb250aCxpLmRyYXdZZWFyPWkuc2VsZWN0ZWRZZWFyPWkuY3VycmVudFllYXI7ZWxzZXt2YXIgcz1uZXcgRGF0ZTtpLnNlbGVjdGVkRGF5PXMuZ2V0RGF0ZSgpLGkuZHJhd01vbnRoPWkuc2VsZWN0ZWRNb250aD1zLmdldE1vbnRoKCksaS5kcmF3WWVhcj1pLnNlbGVjdGVkWWVhcj1zLmdldEZ1bGxZZWFyKCl9dGhpcy5fbm90aWZ5Q2hhbmdlKGkpLHRoaXMuX2FkanVzdERhdGUodCl9LF9zZWxlY3RNb250aFllYXI6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPSQoZSksbj10aGlzLl9nZXRJbnN0KHNbMF0pO25bXCJzZWxlY3RlZFwiKyhcIk1cIj09aT9cIk1vbnRoXCI6XCJZZWFyXCIpXT1uW1wiZHJhd1wiKyhcIk1cIj09aT9cIk1vbnRoXCI6XCJZZWFyXCIpXT1wYXJzZUludCh0Lm9wdGlvbnNbdC5zZWxlY3RlZEluZGV4XS52YWx1ZSwxMCksdGhpcy5fbm90aWZ5Q2hhbmdlKG4pLHRoaXMuX2FkanVzdERhdGUocyl9LF9zZWxlY3REYXk6ZnVuY3Rpb24oZSx0LGkscyl7dmFyIG49JChlKTtpZighJChzKS5oYXNDbGFzcyh0aGlzLl91bnNlbGVjdGFibGVDbGFzcykmJiF0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihuWzBdKSl7dmFyIGE9dGhpcy5fZ2V0SW5zdChuWzBdKTthLnNlbGVjdGVkRGF5PWEuY3VycmVudERheT0kKFwiYVwiLHMpLmh0bWwoKSxhLnNlbGVjdGVkTW9udGg9YS5jdXJyZW50TW9udGg9dCxhLnNlbGVjdGVkWWVhcj1hLmN1cnJlbnRZZWFyPWksdGhpcy5fc2VsZWN0RGF0ZShlLHRoaXMuX2Zvcm1hdERhdGUoYSxhLmN1cnJlbnREYXksYS5jdXJyZW50TW9udGgsYS5jdXJyZW50WWVhcikpfX0sX2NsZWFyRGF0ZTpmdW5jdGlvbihlKXt2YXIgdD0kKGUpO3RoaXMuX2dldEluc3QodFswXSksdGhpcy5fc2VsZWN0RGF0ZSh0LFwiXCIpfSxfc2VsZWN0RGF0ZTpmdW5jdGlvbihlLHQpe3ZhciBpPSQoZSkscz10aGlzLl9nZXRJbnN0KGlbMF0pO3Q9bnVsbCE9dD90OnRoaXMuX2Zvcm1hdERhdGUocykscy5pbnB1dCYmcy5pbnB1dC52YWwodCksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKHMpO3ZhciBuPXRoaXMuX2dldChzLFwib25TZWxlY3RcIik7bj9uLmFwcGx5KHMuaW5wdXQ/cy5pbnB1dFswXTpudWxsLFt0LHNdKTpzLmlucHV0JiZzLmlucHV0LnRyaWdnZXIoXCJjaGFuZ2VcIikscy5pbmxpbmU/dGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihzKToodGhpcy5faGlkZURhdGVwaWNrZXIoKSx0aGlzLl9sYXN0SW5wdXQ9cy5pbnB1dFswXSxcIm9iamVjdFwiIT10eXBlb2Ygcy5pbnB1dFswXSYmcy5pbnB1dC5mb2N1cygpLHRoaXMuX2xhc3RJbnB1dD1udWxsKX0sX3VwZGF0ZUFsdGVybmF0ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLl9nZXQoZSxcImFsdEZpZWxkXCIpO2lmKHQpe3ZhciBpPXRoaXMuX2dldChlLFwiYWx0Rm9ybWF0XCIpfHx0aGlzLl9nZXQoZSxcImRhdGVGb3JtYXRcIikscz10aGlzLl9nZXREYXRlKGUpLG49dGhpcy5mb3JtYXREYXRlKGkscyx0aGlzLl9nZXRGb3JtYXRDb25maWcoZSkpOyQodCkuZWFjaChmdW5jdGlvbigpeyQodGhpcykudmFsKG4pfSl9fSxub1dlZWtlbmRzOmZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0RGF5KCk7cmV0dXJuW3Q+MCYmNj50LFwiXCJdfSxpc284NjAxV2VlazpmdW5jdGlvbihlKXt2YXIgdD1uZXcgRGF0ZShlLmdldFRpbWUoKSk7dC5zZXREYXRlKHQuZ2V0RGF0ZSgpKzQtKHQuZ2V0RGF5KCl8fDcpKTt2YXIgaT10LmdldFRpbWUoKTtyZXR1cm4gdC5zZXRNb250aCgwKSx0LnNldERhdGUoMSksTWF0aC5mbG9vcihNYXRoLnJvdW5kKChpLXQpLzg2NGU1KS83KSsxfSxwYXJzZURhdGU6ZnVuY3Rpb24oZSx0LGkpe2lmKG51bGw9PWV8fG51bGw9PXQpdGhyb3dcIkludmFsaWQgYXJndW1lbnRzXCI7aWYodD1cIm9iamVjdFwiPT10eXBlb2YgdD9cIlwiK3Q6dCtcIlwiLFwiXCI9PXQpcmV0dXJuIG51bGw7dmFyIHM9KGk/aS5zaG9ydFllYXJDdXRvZmY6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLnNob3J0WWVhckN1dG9mZjtzPVwic3RyaW5nXCIhPXR5cGVvZiBzP3M6KG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCtwYXJzZUludChzLDEwKTtmb3IodmFyIG49KGk/aS5kYXlOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LGE9KGk/aS5kYXlOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsbz0oaT9pLm1vbnRoTmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LHI9KGk/aS5tb250aE5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLGg9LTEsbD0tMSx1PS0xLGQ9LTEsYz0hMSxwPWZ1bmN0aW9uKHQpe3ZhciBpPWUubGVuZ3RoPl8rMSYmZS5jaGFyQXQoXysxKT09dDtyZXR1cm4gaSYmXysrLGl9LGY9ZnVuY3Rpb24oZSl7dmFyIGk9cChlKSxzPVwiQFwiPT1lPzE0OlwiIVwiPT1lPzIwOlwieVwiPT1lJiZpPzQ6XCJvXCI9PWU/MzoyLG49UmVnRXhwKFwiXlxcXFxkezEsXCIrcytcIn1cIiksYT10LnN1YnN0cmluZyh2KS5tYXRjaChuKTtpZighYSl0aHJvd1wiTWlzc2luZyBudW1iZXIgYXQgcG9zaXRpb24gXCIrdjtyZXR1cm4gdis9YVswXS5sZW5ndGgscGFyc2VJbnQoYVswXSwxMCl9LG09ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPSQubWFwKHAoZSk/czppLGZ1bmN0aW9uKGUsdCl7cmV0dXJuW1t0LGVdXX0pLnNvcnQoZnVuY3Rpb24oZSx0KXtyZXR1cm4tKGVbMV0ubGVuZ3RoLXRbMV0ubGVuZ3RoKX0pLGE9LTE7aWYoJC5lYWNoKG4sZnVuY3Rpb24oZSxpKXt2YXIgcz1pWzFdO3JldHVybiB0LnN1YnN0cih2LHMubGVuZ3RoKS50b0xvd2VyQ2FzZSgpPT1zLnRvTG93ZXJDYXNlKCk/KGE9aVswXSx2Kz1zLmxlbmd0aCwhMSk6dW5kZWZpbmVkfSksLTEhPWEpcmV0dXJuIGErMTt0aHJvd1wiVW5rbm93biBuYW1lIGF0IHBvc2l0aW9uIFwiK3Z9LGc9ZnVuY3Rpb24oKXtpZih0LmNoYXJBdCh2KSE9ZS5jaGFyQXQoXykpdGhyb3dcIlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiBcIit2O3YrK30sdj0wLF89MDtlLmxlbmd0aD5fO18rKylpZihjKVwiJ1wiIT1lLmNoYXJBdChfKXx8cChcIidcIik/ZygpOmM9ITE7ZWxzZSBzd2l0Y2goZS5jaGFyQXQoXykpe2Nhc2VcImRcIjp1PWYoXCJkXCIpO2JyZWFrO2Nhc2VcIkRcIjptKFwiRFwiLG4sYSk7YnJlYWs7Y2FzZVwib1wiOmQ9ZihcIm9cIik7YnJlYWs7Y2FzZVwibVwiOmw9ZihcIm1cIik7YnJlYWs7Y2FzZVwiTVwiOmw9bShcIk1cIixvLHIpO2JyZWFrO2Nhc2VcInlcIjpoPWYoXCJ5XCIpO2JyZWFrO2Nhc2VcIkBcIjp2YXIgeT1uZXcgRGF0ZShmKFwiQFwiKSk7aD15LmdldEZ1bGxZZWFyKCksbD15LmdldE1vbnRoKCkrMSx1PXkuZ2V0RGF0ZSgpO2JyZWFrO2Nhc2VcIiFcIjp2YXIgeT1uZXcgRGF0ZSgoZihcIiFcIiktdGhpcy5fdGlja3NUbzE5NzApLzFlNCk7aD15LmdldEZ1bGxZZWFyKCksbD15LmdldE1vbnRoKCkrMSx1PXkuZ2V0RGF0ZSgpO2JyZWFrO2Nhc2VcIidcIjpwKFwiJ1wiKT9nKCk6Yz0hMDticmVhaztkZWZhdWx0OmcoKX1pZih0Lmxlbmd0aD52KXt2YXIgYj10LnN1YnN0cih2KTtpZighL15cXHMrLy50ZXN0KGIpKXRocm93XCJFeHRyYS91bnBhcnNlZCBjaGFyYWN0ZXJzIGZvdW5kIGluIGRhdGU6IFwiK2J9aWYoLTE9PWg/aD0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCk6MTAwPmgmJihoKz0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCktKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCsocz49aD8wOi0xMDApKSxkPi0xKWZvcihsPTEsdT1kOzspe3ZhciB4PXRoaXMuX2dldERheXNJbk1vbnRoKGgsbC0xKTtpZih4Pj11KWJyZWFrO2wrKyx1LT14fXZhciB5PXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGgsbC0xLHUpKTtpZih5LmdldEZ1bGxZZWFyKCkhPWh8fHkuZ2V0TW9udGgoKSsxIT1sfHx5LmdldERhdGUoKSE9dSl0aHJvd1wiSW52YWxpZCBkYXRlXCI7cmV0dXJuIHl9LEFUT006XCJ5eS1tbS1kZFwiLENPT0tJRTpcIkQsIGRkIE0geXlcIixJU09fODYwMTpcInl5LW1tLWRkXCIsUkZDXzgyMjpcIkQsIGQgTSB5XCIsUkZDXzg1MDpcIkRELCBkZC1NLXlcIixSRkNfMTAzNjpcIkQsIGQgTSB5XCIsUkZDXzExMjM6XCJELCBkIE0geXlcIixSRkNfMjgyMjpcIkQsIGQgTSB5eVwiLFJTUzpcIkQsIGQgTSB5XCIsVElDS1M6XCIhXCIsVElNRVNUQU1QOlwiQFwiLFczQzpcInl5LW1tLWRkXCIsX3RpY2tzVG8xOTcwOjFlNyo2MCo2MCoyNCooNzE4Njg1K01hdGguZmxvb3IoNDkyLjUpLU1hdGguZmxvb3IoMTkuNykrTWF0aC5mbG9vcig0LjkyNSkpLGZvcm1hdERhdGU6ZnVuY3Rpb24oZSx0LGkpe2lmKCF0KXJldHVyblwiXCI7dmFyIHM9KGk/aS5kYXlOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LG49KGk/aS5kYXlOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsYT0oaT9pLm1vbnRoTmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LG89KGk/aS5tb250aE5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLHI9ZnVuY3Rpb24odCl7dmFyIGk9ZS5sZW5ndGg+YysxJiZlLmNoYXJBdChjKzEpPT10O3JldHVybiBpJiZjKyssaX0saD1mdW5jdGlvbihlLHQsaSl7dmFyIHM9XCJcIit0O2lmKHIoZSkpZm9yKDtpPnMubGVuZ3RoOylzPVwiMFwiK3M7cmV0dXJuIHN9LGw9ZnVuY3Rpb24oZSx0LGkscyl7cmV0dXJuIHIoZSk/c1t0XTppW3RdfSx1PVwiXCIsZD0hMTtpZih0KWZvcih2YXIgYz0wO2UubGVuZ3RoPmM7YysrKWlmKGQpXCInXCIhPWUuY2hhckF0KGMpfHxyKFwiJ1wiKT91Kz1lLmNoYXJBdChjKTpkPSExO2Vsc2Ugc3dpdGNoKGUuY2hhckF0KGMpKXtjYXNlXCJkXCI6dSs9aChcImRcIix0LmdldERhdGUoKSwyKTticmVhaztjYXNlXCJEXCI6dSs9bChcIkRcIix0LmdldERheSgpLHMsbik7YnJlYWs7Y2FzZVwib1wiOnUrPWgoXCJvXCIsTWF0aC5yb3VuZCgobmV3IERhdGUodC5nZXRGdWxsWWVhcigpLHQuZ2V0TW9udGgoKSx0LmdldERhdGUoKSkuZ2V0VGltZSgpLW5ldyBEYXRlKHQuZ2V0RnVsbFllYXIoKSwwLDApLmdldFRpbWUoKSkvODY0ZTUpLDMpO2JyZWFrO2Nhc2VcIm1cIjp1Kz1oKFwibVwiLHQuZ2V0TW9udGgoKSsxLDIpO2JyZWFrO2Nhc2VcIk1cIjp1Kz1sKFwiTVwiLHQuZ2V0TW9udGgoKSxhLG8pO2JyZWFrO2Nhc2VcInlcIjp1Kz1yKFwieVwiKT90LmdldEZ1bGxZZWFyKCk6KDEwPnQuZ2V0WWVhcigpJTEwMD9cIjBcIjpcIlwiKSt0LmdldFllYXIoKSUxMDA7YnJlYWs7Y2FzZVwiQFwiOnUrPXQuZ2V0VGltZSgpO2JyZWFrO2Nhc2VcIiFcIjp1Kz0xZTQqdC5nZXRUaW1lKCkrdGhpcy5fdGlja3NUbzE5NzA7YnJlYWs7Y2FzZVwiJ1wiOnIoXCInXCIpP3UrPVwiJ1wiOmQ9ITA7YnJlYWs7ZGVmYXVsdDp1Kz1lLmNoYXJBdChjKX1yZXR1cm4gdX0sX3Bvc3NpYmxlQ2hhcnM6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVwiXCIsaT0hMSxzPWZ1bmN0aW9uKHQpe3ZhciBpPWUubGVuZ3RoPm4rMSYmZS5jaGFyQXQobisxKT09dDtyZXR1cm4gaSYmbisrLGl9LG49MDtlLmxlbmd0aD5uO24rKylpZihpKVwiJ1wiIT1lLmNoYXJBdChuKXx8cyhcIidcIik/dCs9ZS5jaGFyQXQobik6aT0hMTtlbHNlIHN3aXRjaChlLmNoYXJBdChuKSl7Y2FzZVwiZFwiOmNhc2VcIm1cIjpjYXNlXCJ5XCI6Y2FzZVwiQFwiOnQrPVwiMDEyMzQ1Njc4OVwiO2JyZWFrO2Nhc2VcIkRcIjpjYXNlXCJNXCI6cmV0dXJuIG51bGw7Y2FzZVwiJ1wiOnMoXCInXCIpP3QrPVwiJ1wiOmk9ITA7YnJlYWs7ZGVmYXVsdDp0Kz1lLmNoYXJBdChuKX1yZXR1cm4gdH0sX2dldDpmdW5jdGlvbihlLHQpe3JldHVybiBlLnNldHRpbmdzW3RdIT09dW5kZWZpbmVkP2Uuc2V0dGluZ3NbdF06dGhpcy5fZGVmYXVsdHNbdF19LF9zZXREYXRlRnJvbUZpZWxkOmZ1bmN0aW9uKGUsdCl7aWYoZS5pbnB1dC52YWwoKSE9ZS5sYXN0VmFsKXt2YXIgaSxzLG49dGhpcy5fZ2V0KGUsXCJkYXRlRm9ybWF0XCIpLGE9ZS5sYXN0VmFsPWUuaW5wdXQ/ZS5pbnB1dC52YWwoKTpudWxsO2k9cz10aGlzLl9nZXREZWZhdWx0RGF0ZShlKTt2YXIgbz10aGlzLl9nZXRGb3JtYXRDb25maWcoZSk7dHJ5e2k9dGhpcy5wYXJzZURhdGUobixhLG8pfHxzfWNhdGNoKHIpe3RoaXMubG9nKHIpLGE9dD9cIlwiOmF9ZS5zZWxlY3RlZERheT1pLmdldERhdGUoKSxlLmRyYXdNb250aD1lLnNlbGVjdGVkTW9udGg9aS5nZXRNb250aCgpLGUuZHJhd1llYXI9ZS5zZWxlY3RlZFllYXI9aS5nZXRGdWxsWWVhcigpLGUuY3VycmVudERheT1hP2kuZ2V0RGF0ZSgpOjAsZS5jdXJyZW50TW9udGg9YT9pLmdldE1vbnRoKCk6MCxlLmN1cnJlbnRZZWFyPWE/aS5nZXRGdWxsWWVhcigpOjAsdGhpcy5fYWRqdXN0SW5zdERhdGUoZSl9fSxfZ2V0RGVmYXVsdERhdGU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3Jlc3RyaWN0TWluTWF4KGUsdGhpcy5fZGV0ZXJtaW5lRGF0ZShlLHRoaXMuX2dldChlLFwiZGVmYXVsdERhdGVcIiksbmV3IERhdGUpKX0sX2RldGVybWluZURhdGU6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBEYXRlO3JldHVybiB0LnNldERhdGUodC5nZXREYXRlKCkrZSksdH0sbj1mdW5jdGlvbih0KXt0cnl7cmV0dXJuICQuZGF0ZXBpY2tlci5wYXJzZURhdGUoJC5kYXRlcGlja2VyLl9nZXQoZSxcImRhdGVGb3JtYXRcIiksdCwkLmRhdGVwaWNrZXIuX2dldEZvcm1hdENvbmZpZyhlKSl9Y2F0Y2goaSl7fWZvcih2YXIgcz0odC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9eYy8pPyQuZGF0ZXBpY2tlci5fZ2V0RGF0ZShlKTpudWxsKXx8bmV3IERhdGUsbj1zLmdldEZ1bGxZZWFyKCksYT1zLmdldE1vbnRoKCksbz1zLmdldERhdGUoKSxyPS8oWystXT9bMC05XSspXFxzKihkfER8d3xXfG18TXx5fFkpPy9nLGg9ci5leGVjKHQpO2g7KXtzd2l0Y2goaFsyXXx8XCJkXCIpe2Nhc2VcImRcIjpjYXNlXCJEXCI6bys9cGFyc2VJbnQoaFsxXSwxMCk7YnJlYWs7Y2FzZVwid1wiOmNhc2VcIldcIjpvKz03KnBhcnNlSW50KGhbMV0sMTApO2JyZWFrO2Nhc2VcIm1cIjpjYXNlXCJNXCI6YSs9cGFyc2VJbnQoaFsxXSwxMCksbz1NYXRoLm1pbihvLCQuZGF0ZXBpY2tlci5fZ2V0RGF5c0luTW9udGgobixhKSk7YnJlYWs7Y2FzZVwieVwiOmNhc2VcIllcIjpuKz1wYXJzZUludChoWzFdLDEwKSxvPU1hdGgubWluKG8sJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aChuLGEpKX1oPXIuZXhlYyh0KX1yZXR1cm4gbmV3IERhdGUobixhLG8pfSxhPW51bGw9PXR8fFwiXCI9PT10P2k6XCJzdHJpbmdcIj09dHlwZW9mIHQ/bih0KTpcIm51bWJlclwiPT10eXBlb2YgdD9pc05hTih0KT9pOnModCk6bmV3IERhdGUodC5nZXRUaW1lKCkpO3JldHVybiBhPWEmJlwiSW52YWxpZCBEYXRlXCI9PVwiXCIrYT9pOmEsYSYmKGEuc2V0SG91cnMoMCksYS5zZXRNaW51dGVzKDApLGEuc2V0U2Vjb25kcygwKSxhLnNldE1pbGxpc2Vjb25kcygwKSksdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoYSl9LF9kYXlsaWdodFNhdmluZ0FkanVzdDpmdW5jdGlvbihlKXtyZXR1cm4gZT8oZS5zZXRIb3VycyhlLmdldEhvdXJzKCk+MTI/ZS5nZXRIb3VycygpKzI6MCksZSk6bnVsbH0sX3NldERhdGU6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzPSF0LG49ZS5zZWxlY3RlZE1vbnRoLGE9ZS5zZWxlY3RlZFllYXIsbz10aGlzLl9yZXN0cmljdE1pbk1heChlLHRoaXMuX2RldGVybWluZURhdGUoZSx0LG5ldyBEYXRlKSk7ZS5zZWxlY3RlZERheT1lLmN1cnJlbnREYXk9by5nZXREYXRlKCksZS5kcmF3TW9udGg9ZS5zZWxlY3RlZE1vbnRoPWUuY3VycmVudE1vbnRoPW8uZ2V0TW9udGgoKSxlLmRyYXdZZWFyPWUuc2VsZWN0ZWRZZWFyPWUuY3VycmVudFllYXI9by5nZXRGdWxsWWVhcigpLG49PWUuc2VsZWN0ZWRNb250aCYmYT09ZS5zZWxlY3RlZFllYXJ8fGl8fHRoaXMuX25vdGlmeUNoYW5nZShlKSx0aGlzLl9hZGp1c3RJbnN0RGF0ZShlKSxlLmlucHV0JiZlLmlucHV0LnZhbChzP1wiXCI6dGhpcy5fZm9ybWF0RGF0ZShlKSl9LF9nZXREYXRlOmZ1bmN0aW9uKGUpe3ZhciB0PSFlLmN1cnJlbnRZZWFyfHxlLmlucHV0JiZcIlwiPT1lLmlucHV0LnZhbCgpP251bGw6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZS5jdXJyZW50WWVhcixlLmN1cnJlbnRNb250aCxlLmN1cnJlbnREYXkpKTtyZXR1cm4gdH0sX2F0dGFjaEhhbmRsZXJzOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldChlLFwic3RlcE1vbnRoc1wiKSxpPVwiI1wiK2UuaWQucmVwbGFjZSgvXFxcXFxcXFwvZyxcIlxcXFxcIik7ZS5kcERpdi5maW5kKFwiW2RhdGEtaGFuZGxlcl1cIikubWFwKGZ1bmN0aW9uKCl7dmFyIGU9e3ByZXY6ZnVuY3Rpb24oKXt3aW5kb3dbXCJEUF9qUXVlcnlfXCIrZHB1dWlkXS5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGksLXQsXCJNXCIpfSxuZXh0OmZ1bmN0aW9uKCl7d2luZG93W1wiRFBfalF1ZXJ5X1wiK2RwdXVpZF0uZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShpLCt0LFwiTVwiKX0saGlkZTpmdW5jdGlvbigpe3dpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCl9LHRvZGF5OmZ1bmN0aW9uKCl7d2luZG93W1wiRFBfalF1ZXJ5X1wiK2RwdXVpZF0uZGF0ZXBpY2tlci5fZ290b1RvZGF5KGkpfSxzZWxlY3REYXk6ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93W1wiRFBfalF1ZXJ5X1wiK2RwdXVpZF0uZGF0ZXBpY2tlci5fc2VsZWN0RGF5KGksK3RoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1tb250aFwiKSwrdGhpcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXllYXJcIiksdGhpcyksITF9LHNlbGVjdE1vbnRoOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhcihpLHRoaXMsXCJNXCIpLCExfSxzZWxlY3RZZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdLmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhcihpLHRoaXMsXCJZXCIpLCExfX07JCh0aGlzKS5iaW5kKHRoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1ldmVudFwiKSxlW3RoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1oYW5kbGVyXCIpXSl9KX0sX2dlbmVyYXRlSFRNTDpmdW5jdGlvbihlKXt2YXIgdD1uZXcgRGF0ZTt0PXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHQuZ2V0RnVsbFllYXIoKSx0LmdldE1vbnRoKCksdC5nZXREYXRlKCkpKTt2YXIgaT10aGlzLl9nZXQoZSxcImlzUlRMXCIpLHM9dGhpcy5fZ2V0KGUsXCJzaG93QnV0dG9uUGFuZWxcIiksbj10aGlzLl9nZXQoZSxcImhpZGVJZk5vUHJldk5leHRcIiksYT10aGlzLl9nZXQoZSxcIm5hdmlnYXRpb25Bc0RhdGVGb3JtYXRcIiksbz10aGlzLl9nZXROdW1iZXJPZk1vbnRocyhlKSxyPXRoaXMuX2dldChlLFwic2hvd0N1cnJlbnRBdFBvc1wiKSxoPXRoaXMuX2dldChlLFwic3RlcE1vbnRoc1wiKSxsPTEhPW9bMF18fDEhPW9bMV0sdT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChlLmN1cnJlbnREYXk/bmV3IERhdGUoZS5jdXJyZW50WWVhcixlLmN1cnJlbnRNb250aCxlLmN1cnJlbnREYXkpOm5ldyBEYXRlKDk5OTksOSw5KSksZD10aGlzLl9nZXRNaW5NYXhEYXRlKGUsXCJtaW5cIiksYz10aGlzLl9nZXRNaW5NYXhEYXRlKGUsXCJtYXhcIikscD1lLmRyYXdNb250aC1yLGY9ZS5kcmF3WWVhcjtpZigwPnAmJihwKz0xMixmLS0pLGMpe3ZhciBtPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGMuZ2V0RnVsbFllYXIoKSxjLmdldE1vbnRoKCktb1swXSpvWzFdKzEsYy5nZXREYXRlKCkpKTtmb3IobT1kJiZkPm0/ZDptO3RoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKGYscCwxKSk+bTspcC0tLDA+cCYmKHA9MTEsZi0tKX1lLmRyYXdNb250aD1wLGUuZHJhd1llYXI9Zjt2YXIgZz10aGlzLl9nZXQoZSxcInByZXZUZXh0XCIpO2c9YT90aGlzLmZvcm1hdERhdGUoZyx0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShmLHAtaCwxKSksdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGUpKTpnO3ZhciB2PXRoaXMuX2NhbkFkanVzdE1vbnRoKGUsLTEsZixwKT8nPGEgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbFwiIGRhdGEtaGFuZGxlcj1cInByZXZcIiBkYXRhLWV2ZW50PVwiY2xpY2tcIiB0aXRsZT1cIicrZysnXCI+PHNwYW4gY2xhc3M9XCJ1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLScrKGk/XCJlXCI6XCJ3XCIpKydcIj4nK2crXCI8L3NwYW4+PC9hPlwiOm4/XCJcIjonPGEgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZFwiIHRpdGxlPVwiJytnKydcIj48c3BhbiBjbGFzcz1cInVpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtJysoaT9cImVcIjpcIndcIikrJ1wiPicrZytcIjwvc3Bhbj48L2E+XCIsXz10aGlzLl9nZXQoZSxcIm5leHRUZXh0XCIpO189YT90aGlzLmZvcm1hdERhdGUoXyx0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShmLHAraCwxKSksdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGUpKTpfO3ZhciB5PXRoaXMuX2NhbkFkanVzdE1vbnRoKGUsMSxmLHApPyc8YSBjbGFzcz1cInVpLWRhdGVwaWNrZXItbmV4dCB1aS1jb3JuZXItYWxsXCIgZGF0YS1oYW5kbGVyPVwibmV4dFwiIGRhdGEtZXZlbnQ9XCJjbGlja1wiIHRpdGxlPVwiJytfKydcIj48c3BhbiBjbGFzcz1cInVpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtJysoaT9cIndcIjpcImVcIikrJ1wiPicrXytcIjwvc3Bhbj48L2E+XCI6bj9cIlwiOic8YSBjbGFzcz1cInVpLWRhdGVwaWNrZXItbmV4dCB1aS1jb3JuZXItYWxsIHVpLXN0YXRlLWRpc2FibGVkXCIgdGl0bGU9XCInK18rJ1wiPjxzcGFuIGNsYXNzPVwidWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0nKyhpP1wid1wiOlwiZVwiKSsnXCI+JytfK1wiPC9zcGFuPjwvYT5cIixiPXRoaXMuX2dldChlLFwiY3VycmVudFRleHRcIikseD10aGlzLl9nZXQoZSxcImdvdG9DdXJyZW50XCIpJiZlLmN1cnJlbnREYXk/dTp0O2I9YT90aGlzLmZvcm1hdERhdGUoYix4LHRoaXMuX2dldEZvcm1hdENvbmZpZyhlKSk6Yjt2YXIgdz1lLmlubGluZT9cIlwiOic8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cInVpLWRhdGVwaWNrZXItY2xvc2UgdWktc3RhdGUtZGVmYXVsdCB1aS1wcmlvcml0eS1wcmltYXJ5IHVpLWNvcm5lci1hbGxcIiBkYXRhLWhhbmRsZXI9XCJoaWRlXCIgZGF0YS1ldmVudD1cImNsaWNrXCI+Jyt0aGlzLl9nZXQoZSxcImNsb3NlVGV4dFwiKStcIjwvYnV0dG9uPlwiLGs9cz8nPGRpdiBjbGFzcz1cInVpLWRhdGVwaWNrZXItYnV0dG9ucGFuZSB1aS13aWRnZXQtY29udGVudFwiPicrKGk/dzpcIlwiKSsodGhpcy5faXNJblJhbmdlKGUseCk/JzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwidWktZGF0ZXBpY2tlci1jdXJyZW50IHVpLXN0YXRlLWRlZmF1bHQgdWktcHJpb3JpdHktc2Vjb25kYXJ5IHVpLWNvcm5lci1hbGxcIiBkYXRhLWhhbmRsZXI9XCJ0b2RheVwiIGRhdGEtZXZlbnQ9XCJjbGlja1wiPicrYitcIjwvYnV0dG9uPlwiOlwiXCIpKyhpP1wiXCI6dykrXCI8L2Rpdj5cIjpcIlwiLEQ9cGFyc2VJbnQodGhpcy5fZ2V0KGUsXCJmaXJzdERheVwiKSwxMCk7RD1pc05hTihEKT8wOkQ7dmFyIFQ9dGhpcy5fZ2V0KGUsXCJzaG93V2Vla1wiKSxTPXRoaXMuX2dldChlLFwiZGF5TmFtZXNcIik7dGhpcy5fZ2V0KGUsXCJkYXlOYW1lc1Nob3J0XCIpO3ZhciBNPXRoaXMuX2dldChlLFwiZGF5TmFtZXNNaW5cIiksTj10aGlzLl9nZXQoZSxcIm1vbnRoTmFtZXNcIiksQz10aGlzLl9nZXQoZSxcIm1vbnRoTmFtZXNTaG9ydFwiKSxQPXRoaXMuX2dldChlLFwiYmVmb3JlU2hvd0RheVwiKSxBPXRoaXMuX2dldChlLFwic2hvd090aGVyTW9udGhzXCIpLEk9dGhpcy5fZ2V0KGUsXCJzZWxlY3RPdGhlck1vbnRoc1wiKTt0aGlzLl9nZXQoZSxcImNhbGN1bGF0ZVdlZWtcIil8fHRoaXMuaXNvODYwMVdlZWs7Zm9yKHZhciBIPXRoaXMuX2dldERlZmF1bHREYXRlKGUpLHo9XCJcIixGPTA7b1swXT5GO0YrKyl7dmFyIEU9XCJcIjt0aGlzLm1heFJvd3M9NDtmb3IodmFyIE89MDtvWzFdPk87TysrKXt2YXIgVz10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShmLHAsZS5zZWxlY3RlZERheSkpLGo9XCIgdWktY29ybmVyLWFsbFwiLEw9XCJcIjtpZihsKXtpZihMKz0nPGRpdiBjbGFzcz1cInVpLWRhdGVwaWNrZXItZ3JvdXAnLG9bMV0+MSlzd2l0Y2goTyl7Y2FzZSAwOkwrPVwiIHVpLWRhdGVwaWNrZXItZ3JvdXAtZmlyc3RcIixqPVwiIHVpLWNvcm5lci1cIisoaT9cInJpZ2h0XCI6XCJsZWZ0XCIpO2JyZWFrO2Nhc2Ugb1sxXS0xOkwrPVwiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbGFzdFwiLGo9XCIgdWktY29ybmVyLVwiKyhpP1wibGVmdFwiOlwicmlnaHRcIik7YnJlYWs7ZGVmYXVsdDpMKz1cIiB1aS1kYXRlcGlja2VyLWdyb3VwLW1pZGRsZVwiLGo9XCJcIn1MKz0nXCI+J31MKz0nPGRpdiBjbGFzcz1cInVpLWRhdGVwaWNrZXItaGVhZGVyIHVpLXdpZGdldC1oZWFkZXIgdWktaGVscGVyLWNsZWFyZml4JytqKydcIj4nKygvYWxsfGxlZnQvLnRlc3QoaikmJjA9PUY/aT95OnY6XCJcIikrKC9hbGx8cmlnaHQvLnRlc3QoaikmJjA9PUY/aT92Onk6XCJcIikrdGhpcy5fZ2VuZXJhdGVNb250aFllYXJIZWFkZXIoZSxwLGYsZCxjLEY+MHx8Tz4wLE4sQykrJzwvZGl2Pjx0YWJsZSBjbGFzcz1cInVpLWRhdGVwaWNrZXItY2FsZW5kYXJcIj48dGhlYWQ+JytcIjx0cj5cIjtmb3IodmFyIFI9VD8nPHRoIGNsYXNzPVwidWktZGF0ZXBpY2tlci13ZWVrLWNvbFwiPicrdGhpcy5fZ2V0KGUsXCJ3ZWVrSGVhZGVyXCIpK1wiPC90aD5cIjpcIlwiLFk9MDs3Plk7WSsrKXt2YXIgQj0oWStEKSU3O1IrPVwiPHRoXCIrKChZK0QrNiklNz49NT8nIGNsYXNzPVwidWktZGF0ZXBpY2tlci13ZWVrLWVuZFwiJzpcIlwiKStcIj5cIisnPHNwYW4gdGl0bGU9XCInK1NbQl0rJ1wiPicrTVtCXStcIjwvc3Bhbj48L3RoPlwifUwrPVIrXCI8L3RyPjwvdGhlYWQ+PHRib2R5PlwiO3ZhciBKPXRoaXMuX2dldERheXNJbk1vbnRoKGYscCk7Zj09ZS5zZWxlY3RlZFllYXImJnA9PWUuc2VsZWN0ZWRNb250aCYmKGUuc2VsZWN0ZWREYXk9TWF0aC5taW4oZS5zZWxlY3RlZERheSxKKSk7dmFyIEs9KHRoaXMuX2dldEZpcnN0RGF5T2ZNb250aChmLHApLUQrNyklNyxWPU1hdGguY2VpbCgoSytKKS83KSxVPWw/dGhpcy5tYXhSb3dzPlY/dGhpcy5tYXhSb3dzOlY6Vjt0aGlzLm1heFJvd3M9VTtmb3IodmFyIHE9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZixwLDEtSykpLFE9MDtVPlE7USsrKXtMKz1cIjx0cj5cIjtmb3IodmFyIEc9VD8nPHRkIGNsYXNzPVwidWktZGF0ZXBpY2tlci13ZWVrLWNvbFwiPicrdGhpcy5fZ2V0KGUsXCJjYWxjdWxhdGVXZWVrXCIpKHEpK1wiPC90ZD5cIjpcIlwiLFk9MDs3Plk7WSsrKXt2YXIgWD1QP1AuYXBwbHkoZS5pbnB1dD9lLmlucHV0WzBdOm51bGwsW3FdKTpbITAsXCJcIl0sWj1xLmdldE1vbnRoKCkhPXAsZXQ9WiYmIUl8fCFYWzBdfHxkJiZkPnF8fGMmJnE+YztHKz0nPHRkIGNsYXNzPVwiJysoKFkrRCs2KSU3Pj01P1wiIHVpLWRhdGVwaWNrZXItd2Vlay1lbmRcIjpcIlwiKSsoWj9cIiB1aS1kYXRlcGlja2VyLW90aGVyLW1vbnRoXCI6XCJcIikrKHEuZ2V0VGltZSgpPT1XLmdldFRpbWUoKSYmcD09ZS5zZWxlY3RlZE1vbnRoJiZlLl9rZXlFdmVudHx8SC5nZXRUaW1lKCk9PXEuZ2V0VGltZSgpJiZILmdldFRpbWUoKT09Vy5nZXRUaW1lKCk/XCIgXCIrdGhpcy5fZGF5T3ZlckNsYXNzOlwiXCIpKyhldD9cIiBcIit0aGlzLl91bnNlbGVjdGFibGVDbGFzcytcIiB1aS1zdGF0ZS1kaXNhYmxlZFwiOlwiXCIpKyhaJiYhQT9cIlwiOlwiIFwiK1hbMV0rKHEuZ2V0VGltZSgpPT11LmdldFRpbWUoKT9cIiBcIit0aGlzLl9jdXJyZW50Q2xhc3M6XCJcIikrKHEuZ2V0VGltZSgpPT10LmdldFRpbWUoKT9cIiB1aS1kYXRlcGlja2VyLXRvZGF5XCI6XCJcIikpKydcIicrKFomJiFBfHwhWFsyXT9cIlwiOicgdGl0bGU9XCInK1hbMl0rJ1wiJykrKGV0P1wiXCI6JyBkYXRhLWhhbmRsZXI9XCJzZWxlY3REYXlcIiBkYXRhLWV2ZW50PVwiY2xpY2tcIiBkYXRhLW1vbnRoPVwiJytxLmdldE1vbnRoKCkrJ1wiIGRhdGEteWVhcj1cIicrcS5nZXRGdWxsWWVhcigpKydcIicpK1wiPlwiKyhaJiYhQT9cIiYjeGEwO1wiOmV0Pyc8c3BhbiBjbGFzcz1cInVpLXN0YXRlLWRlZmF1bHRcIj4nK3EuZ2V0RGF0ZSgpK1wiPC9zcGFuPlwiOic8YSBjbGFzcz1cInVpLXN0YXRlLWRlZmF1bHQnKyhxLmdldFRpbWUoKT09dC5nZXRUaW1lKCk/XCIgdWktc3RhdGUtaGlnaGxpZ2h0XCI6XCJcIikrKHEuZ2V0VGltZSgpPT11LmdldFRpbWUoKT9cIiB1aS1zdGF0ZS1hY3RpdmVcIjpcIlwiKSsoWj9cIiB1aS1wcmlvcml0eS1zZWNvbmRhcnlcIjpcIlwiKSsnXCIgaHJlZj1cIiNcIj4nK3EuZ2V0RGF0ZSgpK1wiPC9hPlwiKStcIjwvdGQ+XCIscS5zZXREYXRlKHEuZ2V0RGF0ZSgpKzEpLHE9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QocSlcbn1MKz1HK1wiPC90cj5cIn1wKysscD4xMSYmKHA9MCxmKyspLEwrPVwiPC90Ym9keT48L3RhYmxlPlwiKyhsP1wiPC9kaXY+XCIrKG9bMF0+MCYmTz09b1sxXS0xPyc8ZGl2IGNsYXNzPVwidWktZGF0ZXBpY2tlci1yb3ctYnJlYWtcIj48L2Rpdj4nOlwiXCIpOlwiXCIpLEUrPUx9eis9RX1yZXR1cm4geis9aysoJC51aS5pZTYmJiFlLmlubGluZT8nPGlmcmFtZSBzcmM9XCJqYXZhc2NyaXB0OmZhbHNlO1wiIGNsYXNzPVwidWktZGF0ZXBpY2tlci1jb3ZlclwiIGZyYW1lYm9yZGVyPVwiMFwiPjwvaWZyYW1lPic6XCJcIiksZS5fa2V5RXZlbnQ9ITEsen0sX2dlbmVyYXRlTW9udGhZZWFySGVhZGVyOmZ1bmN0aW9uKGUsdCxpLHMsbixhLG8scil7dmFyIGg9dGhpcy5fZ2V0KGUsXCJjaGFuZ2VNb250aFwiKSxsPXRoaXMuX2dldChlLFwiY2hhbmdlWWVhclwiKSx1PXRoaXMuX2dldChlLFwic2hvd01vbnRoQWZ0ZXJZZWFyXCIpLGQ9JzxkaXYgY2xhc3M9XCJ1aS1kYXRlcGlja2VyLXRpdGxlXCI+JyxjPVwiXCI7aWYoYXx8IWgpYys9JzxzcGFuIGNsYXNzPVwidWktZGF0ZXBpY2tlci1tb250aFwiPicrb1t0XStcIjwvc3Bhbj5cIjtlbHNle3ZhciBwPXMmJnMuZ2V0RnVsbFllYXIoKT09aSxmPW4mJm4uZ2V0RnVsbFllYXIoKT09aTtjKz0nPHNlbGVjdCBjbGFzcz1cInVpLWRhdGVwaWNrZXItbW9udGhcIiBkYXRhLWhhbmRsZXI9XCJzZWxlY3RNb250aFwiIGRhdGEtZXZlbnQ9XCJjaGFuZ2VcIj4nO2Zvcih2YXIgbT0wOzEyPm07bSsrKSghcHx8bT49cy5nZXRNb250aCgpKSYmKCFmfHxuLmdldE1vbnRoKCk+PW0pJiYoYys9JzxvcHRpb24gdmFsdWU9XCInK20rJ1wiJysobT09dD8nIHNlbGVjdGVkPVwic2VsZWN0ZWRcIic6XCJcIikrXCI+XCIrclttXStcIjwvb3B0aW9uPlwiKTtjKz1cIjwvc2VsZWN0PlwifWlmKHV8fChkKz1jKyghYSYmaCYmbD9cIlwiOlwiJiN4YTA7XCIpKSwhZS55ZWFyc2h0bWwpaWYoZS55ZWFyc2h0bWw9XCJcIixhfHwhbClkKz0nPHNwYW4gY2xhc3M9XCJ1aS1kYXRlcGlja2VyLXllYXJcIj4nK2krXCI8L3NwYW4+XCI7ZWxzZXt2YXIgZz10aGlzLl9nZXQoZSxcInllYXJSYW5nZVwiKS5zcGxpdChcIjpcIiksdj0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCksXz1mdW5jdGlvbihlKXt2YXIgdD1lLm1hdGNoKC9jWystXS4qLyk/aStwYXJzZUludChlLnN1YnN0cmluZygxKSwxMCk6ZS5tYXRjaCgvWystXS4qLyk/ditwYXJzZUludChlLDEwKTpwYXJzZUludChlLDEwKTtyZXR1cm4gaXNOYU4odCk/djp0fSx5PV8oZ1swXSksYj1NYXRoLm1heCh5LF8oZ1sxXXx8XCJcIikpO2Zvcih5PXM/TWF0aC5tYXgoeSxzLmdldEZ1bGxZZWFyKCkpOnksYj1uP01hdGgubWluKGIsbi5nZXRGdWxsWWVhcigpKTpiLGUueWVhcnNodG1sKz0nPHNlbGVjdCBjbGFzcz1cInVpLWRhdGVwaWNrZXIteWVhclwiIGRhdGEtaGFuZGxlcj1cInNlbGVjdFllYXJcIiBkYXRhLWV2ZW50PVwiY2hhbmdlXCI+JztiPj15O3krKyllLnllYXJzaHRtbCs9JzxvcHRpb24gdmFsdWU9XCInK3krJ1wiJysoeT09aT8nIHNlbGVjdGVkPVwic2VsZWN0ZWRcIic6XCJcIikrXCI+XCIreStcIjwvb3B0aW9uPlwiO2UueWVhcnNodG1sKz1cIjwvc2VsZWN0PlwiLGQrPWUueWVhcnNodG1sLGUueWVhcnNodG1sPW51bGx9cmV0dXJuIGQrPXRoaXMuX2dldChlLFwieWVhclN1ZmZpeFwiKSx1JiYoZCs9KCFhJiZoJiZsP1wiXCI6XCImI3hhMDtcIikrYyksZCs9XCI8L2Rpdj5cIn0sX2FkanVzdEluc3REYXRlOmZ1bmN0aW9uKGUsdCxpKXt2YXIgcz1lLmRyYXdZZWFyKyhcIllcIj09aT90OjApLG49ZS5kcmF3TW9udGgrKFwiTVwiPT1pP3Q6MCksYT1NYXRoLm1pbihlLnNlbGVjdGVkRGF5LHRoaXMuX2dldERheXNJbk1vbnRoKHMsbikpKyhcIkRcIj09aT90OjApLG89dGhpcy5fcmVzdHJpY3RNaW5NYXgoZSx0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShzLG4sYSkpKTtlLnNlbGVjdGVkRGF5PW8uZ2V0RGF0ZSgpLGUuZHJhd01vbnRoPWUuc2VsZWN0ZWRNb250aD1vLmdldE1vbnRoKCksZS5kcmF3WWVhcj1lLnNlbGVjdGVkWWVhcj1vLmdldEZ1bGxZZWFyKCksKFwiTVwiPT1pfHxcIllcIj09aSkmJnRoaXMuX25vdGlmeUNoYW5nZShlKX0sX3Jlc3RyaWN0TWluTWF4OmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWluXCIpLHM9dGhpcy5fZ2V0TWluTWF4RGF0ZShlLFwibWF4XCIpLG49aSYmaT50P2k6dDtyZXR1cm4gbj1zJiZuPnM/czpufSxfbm90aWZ5Q2hhbmdlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX2dldChlLFwib25DaGFuZ2VNb250aFllYXJcIik7dCYmdC5hcHBseShlLmlucHV0P2UuaW5wdXRbMF06bnVsbCxbZS5zZWxlY3RlZFllYXIsZS5zZWxlY3RlZE1vbnRoKzEsZV0pfSxfZ2V0TnVtYmVyT2ZNb250aHM6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2V0KGUsXCJudW1iZXJPZk1vbnRoc1wiKTtyZXR1cm4gbnVsbD09dD9bMSwxXTpcIm51bWJlclwiPT10eXBlb2YgdD9bMSx0XTp0fSxfZ2V0TWluTWF4RGF0ZTpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9kZXRlcm1pbmVEYXRlKGUsdGhpcy5fZ2V0KGUsdCtcIkRhdGVcIiksbnVsbCl9LF9nZXREYXlzSW5Nb250aDpmdW5jdGlvbihlLHQpe3JldHVybiAzMi10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShlLHQsMzIpKS5nZXREYXRlKCl9LF9nZXRGaXJzdERheU9mTW9udGg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IERhdGUoZSx0LDEpLmdldERheSgpfSxfY2FuQWRqdXN0TW9udGg6ZnVuY3Rpb24oZSx0LGkscyl7dmFyIG49dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoZSksYT10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShpLHMrKDA+dD90Om5bMF0qblsxXSksMSkpO3JldHVybiAwPnQmJmEuc2V0RGF0ZSh0aGlzLl9nZXREYXlzSW5Nb250aChhLmdldEZ1bGxZZWFyKCksYS5nZXRNb250aCgpKSksdGhpcy5faXNJblJhbmdlKGUsYSl9LF9pc0luUmFuZ2U6ZnVuY3Rpb24oZSx0KXt2YXIgaT10aGlzLl9nZXRNaW5NYXhEYXRlKGUsXCJtaW5cIikscz10aGlzLl9nZXRNaW5NYXhEYXRlKGUsXCJtYXhcIik7cmV0dXJuKCFpfHx0LmdldFRpbWUoKT49aS5nZXRUaW1lKCkpJiYoIXN8fHQuZ2V0VGltZSgpPD1zLmdldFRpbWUoKSl9LF9nZXRGb3JtYXRDb25maWc6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fZ2V0KGUsXCJzaG9ydFllYXJDdXRvZmZcIik7cmV0dXJuIHQ9XCJzdHJpbmdcIiE9dHlwZW9mIHQ/dDoobmV3IERhdGUpLmdldEZ1bGxZZWFyKCklMTAwK3BhcnNlSW50KHQsMTApLHtzaG9ydFllYXJDdXRvZmY6dCxkYXlOYW1lc1Nob3J0OnRoaXMuX2dldChlLFwiZGF5TmFtZXNTaG9ydFwiKSxkYXlOYW1lczp0aGlzLl9nZXQoZSxcImRheU5hbWVzXCIpLG1vbnRoTmFtZXNTaG9ydDp0aGlzLl9nZXQoZSxcIm1vbnRoTmFtZXNTaG9ydFwiKSxtb250aE5hbWVzOnRoaXMuX2dldChlLFwibW9udGhOYW1lc1wiKX19LF9mb3JtYXREYXRlOmZ1bmN0aW9uKGUsdCxpLHMpe3R8fChlLmN1cnJlbnREYXk9ZS5zZWxlY3RlZERheSxlLmN1cnJlbnRNb250aD1lLnNlbGVjdGVkTW9udGgsZS5jdXJyZW50WWVhcj1lLnNlbGVjdGVkWWVhcik7dmFyIG49dD9cIm9iamVjdFwiPT10eXBlb2YgdD90OnRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHMsaSx0KSk6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUoZS5jdXJyZW50WWVhcixlLmN1cnJlbnRNb250aCxlLmN1cnJlbnREYXkpKTtyZXR1cm4gdGhpcy5mb3JtYXREYXRlKHRoaXMuX2dldChlLFwiZGF0ZUZvcm1hdFwiKSxuLHRoaXMuX2dldEZvcm1hdENvbmZpZyhlKSl9fSksJC5mbi5kYXRlcGlja2VyPWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmxlbmd0aClyZXR1cm4gdGhpczskLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWR8fCgkKGRvY3VtZW50KS5tb3VzZWRvd24oJC5kYXRlcGlja2VyLl9jaGVja0V4dGVybmFsQ2xpY2spLmZpbmQoZG9jdW1lbnQuYm9keSkuYXBwZW5kKCQuZGF0ZXBpY2tlci5kcERpdiksJC5kYXRlcGlja2VyLmluaXRpYWxpemVkPSEwKTt2YXIgdD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGV8fFwiaXNEaXNhYmxlZFwiIT1lJiZcImdldERhdGVcIiE9ZSYmXCJ3aWRnZXRcIiE9ZT9cIm9wdGlvblwiPT1lJiYyPT1hcmd1bWVudHMubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgYXJndW1lbnRzWzFdPyQuZGF0ZXBpY2tlcltcIl9cIitlK1wiRGF0ZXBpY2tlclwiXS5hcHBseSgkLmRhdGVwaWNrZXIsW3RoaXNbMF1dLmNvbmNhdCh0KSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7XCJzdHJpbmdcIj09dHlwZW9mIGU/JC5kYXRlcGlja2VyW1wiX1wiK2UrXCJEYXRlcGlja2VyXCJdLmFwcGx5KCQuZGF0ZXBpY2tlcixbdGhpc10uY29uY2F0KHQpKTokLmRhdGVwaWNrZXIuX2F0dGFjaERhdGVwaWNrZXIodGhpcyxlKX0pOiQuZGF0ZXBpY2tlcltcIl9cIitlK1wiRGF0ZXBpY2tlclwiXS5hcHBseSgkLmRhdGVwaWNrZXIsW3RoaXNbMF1dLmNvbmNhdCh0KSl9LCQuZGF0ZXBpY2tlcj1uZXcgRGF0ZXBpY2tlciwkLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQ9ITEsJC5kYXRlcGlja2VyLnV1aWQ9KG5ldyBEYXRlKS5nZXRUaW1lKCksJC5kYXRlcGlja2VyLnZlcnNpb249XCIxLjkuMlwiLHdpbmRvd1tcIkRQX2pRdWVyeV9cIitkcHV1aWRdPSR9KShqUXVlcnkpOyhmdW5jdGlvbihlLHQpe3ZhciBpPVwidWktZGlhbG9nIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYWxsIFwiLHM9e2J1dHRvbnM6ITAsaGVpZ2h0OiEwLG1heEhlaWdodDohMCxtYXhXaWR0aDohMCxtaW5IZWlnaHQ6ITAsbWluV2lkdGg6ITAsd2lkdGg6ITB9LG49e21heEhlaWdodDohMCxtYXhXaWR0aDohMCxtaW5IZWlnaHQ6ITAsbWluV2lkdGg6ITB9O2Uud2lkZ2V0KFwidWkuZGlhbG9nXCIse3ZlcnNpb246XCIxLjkuMlwiLG9wdGlvbnM6e2F1dG9PcGVuOiEwLGJ1dHRvbnM6e30sY2xvc2VPbkVzY2FwZTohMCxjbG9zZVRleHQ6XCJjbG9zZVwiLGRpYWxvZ0NsYXNzOlwiXCIsZHJhZ2dhYmxlOiEwLGhpZGU6bnVsbCxoZWlnaHQ6XCJhdXRvXCIsbWF4SGVpZ2h0OiExLG1heFdpZHRoOiExLG1pbkhlaWdodDoxNTAsbWluV2lkdGg6MTUwLG1vZGFsOiExLHBvc2l0aW9uOntteTpcImNlbnRlclwiLGF0OlwiY2VudGVyXCIsb2Y6d2luZG93LGNvbGxpc2lvbjpcImZpdFwiLHVzaW5nOmZ1bmN0aW9uKHQpe3ZhciBpPWUodGhpcykuY3NzKHQpLm9mZnNldCgpLnRvcDswPmkmJmUodGhpcykuY3NzKFwidG9wXCIsdC50b3AtaSl9fSxyZXNpemFibGU6ITAsc2hvdzpudWxsLHN0YWNrOiEwLHRpdGxlOlwiXCIsd2lkdGg6MzAwLHpJbmRleDoxZTN9LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLm9yaWdpbmFsVGl0bGU9dGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiKSxcInN0cmluZ1wiIT10eXBlb2YgdGhpcy5vcmlnaW5hbFRpdGxlJiYodGhpcy5vcmlnaW5hbFRpdGxlPVwiXCIpLHRoaXMub2xkUG9zaXRpb249e3BhcmVudDp0aGlzLmVsZW1lbnQucGFyZW50KCksaW5kZXg6dGhpcy5lbGVtZW50LnBhcmVudCgpLmNoaWxkcmVuKCkuaW5kZXgodGhpcy5lbGVtZW50KX0sdGhpcy5vcHRpb25zLnRpdGxlPXRoaXMub3B0aW9ucy50aXRsZXx8dGhpcy5vcmlnaW5hbFRpdGxlO3ZhciBzLG4sYSxvLHIsaD10aGlzLGw9dGhpcy5vcHRpb25zLHU9bC50aXRsZXx8XCImIzE2MDtcIjtzPSh0aGlzLnVpRGlhbG9nPWUoXCI8ZGl2PlwiKSkuYWRkQ2xhc3MoaStsLmRpYWxvZ0NsYXNzKS5jc3Moe2Rpc3BsYXk6XCJub25lXCIsb3V0bGluZTowLHpJbmRleDpsLnpJbmRleH0pLmF0dHIoXCJ0YWJJbmRleFwiLC0xKS5rZXlkb3duKGZ1bmN0aW9uKHQpe2wuY2xvc2VPbkVzY2FwZSYmIXQuaXNEZWZhdWx0UHJldmVudGVkKCkmJnQua2V5Q29kZSYmdC5rZXlDb2RlPT09ZS51aS5rZXlDb2RlLkVTQ0FQRSYmKGguY2xvc2UodCksdC5wcmV2ZW50RGVmYXVsdCgpKX0pLm1vdXNlZG93bihmdW5jdGlvbihlKXtoLm1vdmVUb1RvcCghMSxlKX0pLmFwcGVuZFRvKFwiYm9keVwiKSx0aGlzLmVsZW1lbnQuc2hvdygpLnJlbW92ZUF0dHIoXCJ0aXRsZVwiKS5hZGRDbGFzcyhcInVpLWRpYWxvZy1jb250ZW50IHVpLXdpZGdldC1jb250ZW50XCIpLmFwcGVuZFRvKHMpLG49KHRoaXMudWlEaWFsb2dUaXRsZWJhcj1lKFwiPGRpdj5cIikpLmFkZENsYXNzKFwidWktZGlhbG9nLXRpdGxlYmFyICB1aS13aWRnZXQtaGVhZGVyICB1aS1jb3JuZXItYWxsICB1aS1oZWxwZXItY2xlYXJmaXhcIikuYmluZChcIm1vdXNlZG93blwiLGZ1bmN0aW9uKCl7cy5mb2N1cygpfSkucHJlcGVuZFRvKHMpLGE9ZShcIjxhIGhyZWY9JyMnPjwvYT5cIikuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctdGl0bGViYXItY2xvc2UgIHVpLWNvcm5lci1hbGxcIikuYXR0cihcInJvbGVcIixcImJ1dHRvblwiKS5jbGljayhmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksaC5jbG9zZShlKX0pLmFwcGVuZFRvKG4pLCh0aGlzLnVpRGlhbG9nVGl0bGViYXJDbG9zZVRleHQ9ZShcIjxzcGFuPlwiKSkuYWRkQ2xhc3MoXCJ1aS1pY29uIHVpLWljb24tY2xvc2V0aGlja1wiKS50ZXh0KGwuY2xvc2VUZXh0KS5hcHBlbmRUbyhhKSxvPWUoXCI8c3Bhbj5cIikudW5pcXVlSWQoKS5hZGRDbGFzcyhcInVpLWRpYWxvZy10aXRsZVwiKS5odG1sKHUpLnByZXBlbmRUbyhuKSxyPSh0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZT1lKFwiPGRpdj5cIikpLmFkZENsYXNzKFwidWktZGlhbG9nLWJ1dHRvbnBhbmUgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4XCIpLCh0aGlzLnVpQnV0dG9uU2V0PWUoXCI8ZGl2PlwiKSkuYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctYnV0dG9uc2V0XCIpLmFwcGVuZFRvKHIpLHMuYXR0cih7cm9sZTpcImRpYWxvZ1wiLFwiYXJpYS1sYWJlbGxlZGJ5XCI6by5hdHRyKFwiaWRcIil9KSxuLmZpbmQoXCIqXCIpLmFkZChuKS5kaXNhYmxlU2VsZWN0aW9uKCksdGhpcy5faG92ZXJhYmxlKGEpLHRoaXMuX2ZvY3VzYWJsZShhKSxsLmRyYWdnYWJsZSYmZS5mbi5kcmFnZ2FibGUmJnRoaXMuX21ha2VEcmFnZ2FibGUoKSxsLnJlc2l6YWJsZSYmZS5mbi5yZXNpemFibGUmJnRoaXMuX21ha2VSZXNpemFibGUoKSx0aGlzLl9jcmVhdGVCdXR0b25zKGwuYnV0dG9ucyksdGhpcy5faXNPcGVuPSExLGUuZm4uYmdpZnJhbWUmJnMuYmdpZnJhbWUoKSx0aGlzLl9vbihzLHtrZXlkb3duOmZ1bmN0aW9uKGkpe2lmKGwubW9kYWwmJmkua2V5Q29kZT09PWUudWkua2V5Q29kZS5UQUIpe3ZhciBuPWUoXCI6dGFiYmFibGVcIixzKSxhPW4uZmlsdGVyKFwiOmZpcnN0XCIpLG89bi5maWx0ZXIoXCI6bGFzdFwiKTtyZXR1cm4gaS50YXJnZXQhPT1vWzBdfHxpLnNoaWZ0S2V5P2kudGFyZ2V0PT09YVswXSYmaS5zaGlmdEtleT8oby5mb2N1cygxKSwhMSk6dDooYS5mb2N1cygxKSwhMSl9fX0pfSxfaW5pdDpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5hdXRvT3BlbiYmdGhpcy5vcGVuKCl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dmFyIGUsdD10aGlzLm9sZFBvc2l0aW9uO3RoaXMub3ZlcmxheSYmdGhpcy5vdmVybGF5LmRlc3Ryb3koKSx0aGlzLnVpRGlhbG9nLmhpZGUoKSx0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoXCJ1aS1kaWFsb2ctY29udGVudCB1aS13aWRnZXQtY29udGVudFwiKS5oaWRlKCkuYXBwZW5kVG8oXCJib2R5XCIpLHRoaXMudWlEaWFsb2cucmVtb3ZlKCksdGhpcy5vcmlnaW5hbFRpdGxlJiZ0aGlzLmVsZW1lbnQuYXR0cihcInRpdGxlXCIsdGhpcy5vcmlnaW5hbFRpdGxlKSxlPXQucGFyZW50LmNoaWxkcmVuKCkuZXEodC5pbmRleCksZS5sZW5ndGgmJmVbMF0hPT10aGlzLmVsZW1lbnRbMF0/ZS5iZWZvcmUodGhpcy5lbGVtZW50KTp0LnBhcmVudC5hcHBlbmQodGhpcy5lbGVtZW50KX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudWlEaWFsb2d9LGNsb3NlOmZ1bmN0aW9uKHQpe3ZhciBpLHMsbj10aGlzO2lmKHRoaXMuX2lzT3BlbiYmITEhPT10aGlzLl90cmlnZ2VyKFwiYmVmb3JlQ2xvc2VcIix0KSlyZXR1cm4gdGhpcy5faXNPcGVuPSExLHRoaXMub3ZlcmxheSYmdGhpcy5vdmVybGF5LmRlc3Ryb3koKSx0aGlzLm9wdGlvbnMuaGlkZT90aGlzLl9oaWRlKHRoaXMudWlEaWFsb2csdGhpcy5vcHRpb25zLmhpZGUsZnVuY3Rpb24oKXtuLl90cmlnZ2VyKFwiY2xvc2VcIix0KX0pOih0aGlzLnVpRGlhbG9nLmhpZGUoKSx0aGlzLl90cmlnZ2VyKFwiY2xvc2VcIix0KSksZS51aS5kaWFsb2cub3ZlcmxheS5yZXNpemUoKSx0aGlzLm9wdGlvbnMubW9kYWwmJihpPTAsZShcIi51aS1kaWFsb2dcIikuZWFjaChmdW5jdGlvbigpe3RoaXMhPT1uLnVpRGlhbG9nWzBdJiYocz1lKHRoaXMpLmNzcyhcInotaW5kZXhcIiksaXNOYU4ocyl8fChpPU1hdGgubWF4KGkscykpKX0pLGUudWkuZGlhbG9nLm1heFo9aSksdGhpc30saXNPcGVuOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzT3Blbn0sbW92ZVRvVG9wOmZ1bmN0aW9uKHQsaSl7dmFyIHMsbj10aGlzLm9wdGlvbnM7cmV0dXJuIG4ubW9kYWwmJiF0fHwhbi5zdGFjayYmIW4ubW9kYWw/dGhpcy5fdHJpZ2dlcihcImZvY3VzXCIsaSk6KG4uekluZGV4PmUudWkuZGlhbG9nLm1heFomJihlLnVpLmRpYWxvZy5tYXhaPW4uekluZGV4KSx0aGlzLm92ZXJsYXkmJihlLnVpLmRpYWxvZy5tYXhaKz0xLGUudWkuZGlhbG9nLm92ZXJsYXkubWF4Wj1lLnVpLmRpYWxvZy5tYXhaLHRoaXMub3ZlcmxheS4kZWwuY3NzKFwiei1pbmRleFwiLGUudWkuZGlhbG9nLm92ZXJsYXkubWF4WikpLHM9e3Njcm9sbFRvcDp0aGlzLmVsZW1lbnQuc2Nyb2xsVG9wKCksc2Nyb2xsTGVmdDp0aGlzLmVsZW1lbnQuc2Nyb2xsTGVmdCgpfSxlLnVpLmRpYWxvZy5tYXhaKz0xLHRoaXMudWlEaWFsb2cuY3NzKFwiei1pbmRleFwiLGUudWkuZGlhbG9nLm1heFopLHRoaXMuZWxlbWVudC5hdHRyKHMpLHRoaXMuX3RyaWdnZXIoXCJmb2N1c1wiLGkpLHRoaXMpfSxvcGVuOmZ1bmN0aW9uKCl7aWYoIXRoaXMuX2lzT3Blbil7dmFyIHQsaT10aGlzLm9wdGlvbnMscz10aGlzLnVpRGlhbG9nO3JldHVybiB0aGlzLl9zaXplKCksdGhpcy5fcG9zaXRpb24oaS5wb3NpdGlvbikscy5zaG93KGkuc2hvdyksdGhpcy5vdmVybGF5PWkubW9kYWw/bmV3IGUudWkuZGlhbG9nLm92ZXJsYXkodGhpcyk6bnVsbCx0aGlzLm1vdmVUb1RvcCghMCksdD10aGlzLmVsZW1lbnQuZmluZChcIjp0YWJiYWJsZVwiKSx0Lmxlbmd0aHx8KHQ9dGhpcy51aURpYWxvZ0J1dHRvblBhbmUuZmluZChcIjp0YWJiYWJsZVwiKSx0Lmxlbmd0aHx8KHQ9cykpLHQuZXEoMCkuZm9jdXMoKSx0aGlzLl9pc09wZW49ITAsdGhpcy5fdHJpZ2dlcihcIm9wZW5cIiksdGhpc319LF9jcmVhdGVCdXR0b25zOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMscz0hMTt0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZS5yZW1vdmUoKSx0aGlzLnVpQnV0dG9uU2V0LmVtcHR5KCksXCJvYmplY3RcIj09dHlwZW9mIHQmJm51bGwhPT10JiZlLmVhY2godCxmdW5jdGlvbigpe3JldHVybiEocz0hMCl9KSxzPyhlLmVhY2godCxmdW5jdGlvbih0LHMpe3ZhciBuLGE7cz1lLmlzRnVuY3Rpb24ocyk/e2NsaWNrOnMsdGV4dDp0fTpzLHM9ZS5leHRlbmQoe3R5cGU6XCJidXR0b25cIn0scyksYT1zLmNsaWNrLHMuY2xpY2s9ZnVuY3Rpb24oKXthLmFwcGx5KGkuZWxlbWVudFswXSxhcmd1bWVudHMpfSxuPWUoXCI8YnV0dG9uPjwvYnV0dG9uPlwiLHMpLmFwcGVuZFRvKGkudWlCdXR0b25TZXQpLGUuZm4uYnV0dG9uJiZuLmJ1dHRvbigpfSksdGhpcy51aURpYWxvZy5hZGRDbGFzcyhcInVpLWRpYWxvZy1idXR0b25zXCIpLHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLmFwcGVuZFRvKHRoaXMudWlEaWFsb2cpKTp0aGlzLnVpRGlhbG9nLnJlbW92ZUNsYXNzKFwidWktZGlhbG9nLWJ1dHRvbnNcIil9LF9tYWtlRHJhZ2dhYmxlOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXtyZXR1cm57cG9zaXRpb246ZS5wb3NpdGlvbixvZmZzZXQ6ZS5vZmZzZXR9fXZhciBpPXRoaXMscz10aGlzLm9wdGlvbnM7dGhpcy51aURpYWxvZy5kcmFnZ2FibGUoe2NhbmNlbDpcIi51aS1kaWFsb2ctY29udGVudCwgLnVpLWRpYWxvZy10aXRsZWJhci1jbG9zZVwiLGhhbmRsZTpcIi51aS1kaWFsb2ctdGl0bGViYXJcIixjb250YWlubWVudDpcImRvY3VtZW50XCIsc3RhcnQ6ZnVuY3Rpb24ocyxuKXtlKHRoaXMpLmFkZENsYXNzKFwidWktZGlhbG9nLWRyYWdnaW5nXCIpLGkuX3RyaWdnZXIoXCJkcmFnU3RhcnRcIixzLHQobikpfSxkcmFnOmZ1bmN0aW9uKGUscyl7aS5fdHJpZ2dlcihcImRyYWdcIixlLHQocykpfSxzdG9wOmZ1bmN0aW9uKG4sYSl7cy5wb3NpdGlvbj1bYS5wb3NpdGlvbi5sZWZ0LWkuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLGEucG9zaXRpb24udG9wLWkuZG9jdW1lbnQuc2Nyb2xsVG9wKCldLGUodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1kaWFsb2ctZHJhZ2dpbmdcIiksaS5fdHJpZ2dlcihcImRyYWdTdG9wXCIsbix0KGEpKSxlLnVpLmRpYWxvZy5vdmVybGF5LnJlc2l6ZSgpfX0pfSxfbWFrZVJlc2l6YWJsZTpmdW5jdGlvbihpKXtmdW5jdGlvbiBzKGUpe3JldHVybntvcmlnaW5hbFBvc2l0aW9uOmUub3JpZ2luYWxQb3NpdGlvbixvcmlnaW5hbFNpemU6ZS5vcmlnaW5hbFNpemUscG9zaXRpb246ZS5wb3NpdGlvbixzaXplOmUuc2l6ZX19aT1pPT09dD90aGlzLm9wdGlvbnMucmVzaXphYmxlOmk7dmFyIG49dGhpcyxhPXRoaXMub3B0aW9ucyxvPXRoaXMudWlEaWFsb2cuY3NzKFwicG9zaXRpb25cIikscj1cInN0cmluZ1wiPT10eXBlb2YgaT9pOlwibixlLHMsdyxzZSxzdyxuZSxud1wiO3RoaXMudWlEaWFsb2cucmVzaXphYmxlKHtjYW5jZWw6XCIudWktZGlhbG9nLWNvbnRlbnRcIixjb250YWlubWVudDpcImRvY3VtZW50XCIsYWxzb1Jlc2l6ZTp0aGlzLmVsZW1lbnQsbWF4V2lkdGg6YS5tYXhXaWR0aCxtYXhIZWlnaHQ6YS5tYXhIZWlnaHQsbWluV2lkdGg6YS5taW5XaWR0aCxtaW5IZWlnaHQ6dGhpcy5fbWluSGVpZ2h0KCksaGFuZGxlczpyLHN0YXJ0OmZ1bmN0aW9uKHQsaSl7ZSh0aGlzKS5hZGRDbGFzcyhcInVpLWRpYWxvZy1yZXNpemluZ1wiKSxuLl90cmlnZ2VyKFwicmVzaXplU3RhcnRcIix0LHMoaSkpfSxyZXNpemU6ZnVuY3Rpb24oZSx0KXtuLl90cmlnZ2VyKFwicmVzaXplXCIsZSxzKHQpKX0sc3RvcDpmdW5jdGlvbih0LGkpe2UodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1kaWFsb2ctcmVzaXppbmdcIiksYS5oZWlnaHQ9ZSh0aGlzKS5oZWlnaHQoKSxhLndpZHRoPWUodGhpcykud2lkdGgoKSxuLl90cmlnZ2VyKFwicmVzaXplU3RvcFwiLHQscyhpKSksZS51aS5kaWFsb2cub3ZlcmxheS5yZXNpemUoKX19KS5jc3MoXCJwb3NpdGlvblwiLG8pLmZpbmQoXCIudWktcmVzaXphYmxlLXNlXCIpLmFkZENsYXNzKFwidWktaWNvbiB1aS1pY29uLWdyaXAtZGlhZ29uYWwtc2VcIil9LF9taW5IZWlnaHQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnM7cmV0dXJuXCJhdXRvXCI9PT1lLmhlaWdodD9lLm1pbkhlaWdodDpNYXRoLm1pbihlLm1pbkhlaWdodCxlLmhlaWdodCl9LF9wb3NpdGlvbjpmdW5jdGlvbih0KXt2YXIgaSxzPVtdLG49WzAsMF07dD8oKFwic3RyaW5nXCI9PXR5cGVvZiB0fHxcIm9iamVjdFwiPT10eXBlb2YgdCYmXCIwXCJpbiB0KSYmKHM9dC5zcGxpdD90LnNwbGl0KFwiIFwiKTpbdFswXSx0WzFdXSwxPT09cy5sZW5ndGgmJihzWzFdPXNbMF0pLGUuZWFjaChbXCJsZWZ0XCIsXCJ0b3BcIl0sZnVuY3Rpb24oZSx0KXsrc1tlXT09PXNbZV0mJihuW2VdPXNbZV0sc1tlXT10KX0pLHQ9e215OnNbMF0rKDA+blswXT9uWzBdOlwiK1wiK25bMF0pK1wiIFwiK3NbMV0rKDA+blsxXT9uWzFdOlwiK1wiK25bMV0pLGF0OnMuam9pbihcIiBcIil9KSx0PWUuZXh0ZW5kKHt9LGUudWkuZGlhbG9nLnByb3RvdHlwZS5vcHRpb25zLnBvc2l0aW9uLHQpKTp0PWUudWkuZGlhbG9nLnByb3RvdHlwZS5vcHRpb25zLnBvc2l0aW9uLGk9dGhpcy51aURpYWxvZy5pcyhcIjp2aXNpYmxlXCIpLGl8fHRoaXMudWlEaWFsb2cuc2hvdygpLHRoaXMudWlEaWFsb2cucG9zaXRpb24odCksaXx8dGhpcy51aURpYWxvZy5oaWRlKCl9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXMsYT17fSxvPSExO2UuZWFjaCh0LGZ1bmN0aW9uKGUsdCl7aS5fc2V0T3B0aW9uKGUsdCksZSBpbiBzJiYobz0hMCksZSBpbiBuJiYoYVtlXT10KX0pLG8mJnRoaXMuX3NpemUoKSx0aGlzLnVpRGlhbG9nLmlzKFwiOmRhdGEocmVzaXphYmxlKVwiKSYmdGhpcy51aURpYWxvZy5yZXNpemFibGUoXCJvcHRpb25cIixhKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LHMpe3ZhciBuLGEsbz10aGlzLnVpRGlhbG9nO3N3aXRjaCh0KXtjYXNlXCJidXR0b25zXCI6dGhpcy5fY3JlYXRlQnV0dG9ucyhzKTticmVhaztjYXNlXCJjbG9zZVRleHRcIjp0aGlzLnVpRGlhbG9nVGl0bGViYXJDbG9zZVRleHQudGV4dChcIlwiK3MpO2JyZWFrO2Nhc2VcImRpYWxvZ0NsYXNzXCI6by5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MpLmFkZENsYXNzKGkrcyk7YnJlYWs7Y2FzZVwiZGlzYWJsZWRcIjpzP28uYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctZGlzYWJsZWRcIik6by5yZW1vdmVDbGFzcyhcInVpLWRpYWxvZy1kaXNhYmxlZFwiKTticmVhaztjYXNlXCJkcmFnZ2FibGVcIjpuPW8uaXMoXCI6ZGF0YShkcmFnZ2FibGUpXCIpLG4mJiFzJiZvLmRyYWdnYWJsZShcImRlc3Ryb3lcIiksIW4mJnMmJnRoaXMuX21ha2VEcmFnZ2FibGUoKTticmVhaztjYXNlXCJwb3NpdGlvblwiOnRoaXMuX3Bvc2l0aW9uKHMpO2JyZWFrO2Nhc2VcInJlc2l6YWJsZVwiOmE9by5pcyhcIjpkYXRhKHJlc2l6YWJsZSlcIiksYSYmIXMmJm8ucmVzaXphYmxlKFwiZGVzdHJveVwiKSxhJiZcInN0cmluZ1wiPT10eXBlb2YgcyYmby5yZXNpemFibGUoXCJvcHRpb25cIixcImhhbmRsZXNcIixzKSxhfHxzPT09ITF8fHRoaXMuX21ha2VSZXNpemFibGUocyk7YnJlYWs7Y2FzZVwidGl0bGVcIjplKFwiLnVpLWRpYWxvZy10aXRsZVwiLHRoaXMudWlEaWFsb2dUaXRsZWJhcikuaHRtbChcIlwiKyhzfHxcIiYjMTYwO1wiKSl9dGhpcy5fc3VwZXIodCxzKX0sX3NpemU6ZnVuY3Rpb24oKXt2YXIgdCxpLHMsbj10aGlzLm9wdGlvbnMsYT10aGlzLnVpRGlhbG9nLmlzKFwiOnZpc2libGVcIik7dGhpcy5lbGVtZW50LnNob3coKS5jc3Moe3dpZHRoOlwiYXV0b1wiLG1pbkhlaWdodDowLGhlaWdodDowfSksbi5taW5XaWR0aD5uLndpZHRoJiYobi53aWR0aD1uLm1pbldpZHRoKSx0PXRoaXMudWlEaWFsb2cuY3NzKHtoZWlnaHQ6XCJhdXRvXCIsd2lkdGg6bi53aWR0aH0pLm91dGVySGVpZ2h0KCksaT1NYXRoLm1heCgwLG4ubWluSGVpZ2h0LXQpLFwiYXV0b1wiPT09bi5oZWlnaHQ/ZS5zdXBwb3J0Lm1pbkhlaWdodD90aGlzLmVsZW1lbnQuY3NzKHttaW5IZWlnaHQ6aSxoZWlnaHQ6XCJhdXRvXCJ9KToodGhpcy51aURpYWxvZy5zaG93KCkscz10aGlzLmVsZW1lbnQuY3NzKFwiaGVpZ2h0XCIsXCJhdXRvXCIpLmhlaWdodCgpLGF8fHRoaXMudWlEaWFsb2cuaGlkZSgpLHRoaXMuZWxlbWVudC5oZWlnaHQoTWF0aC5tYXgocyxpKSkpOnRoaXMuZWxlbWVudC5oZWlnaHQoTWF0aC5tYXgobi5oZWlnaHQtdCwwKSksdGhpcy51aURpYWxvZy5pcyhcIjpkYXRhKHJlc2l6YWJsZSlcIikmJnRoaXMudWlEaWFsb2cucmVzaXphYmxlKFwib3B0aW9uXCIsXCJtaW5IZWlnaHRcIix0aGlzLl9taW5IZWlnaHQoKSl9fSksZS5leHRlbmQoZS51aS5kaWFsb2cse3V1aWQ6MCxtYXhaOjAsZ2V0VGl0bGVJZDpmdW5jdGlvbihlKXt2YXIgdD1lLmF0dHIoXCJpZFwiKTtyZXR1cm4gdHx8KHRoaXMudXVpZCs9MSx0PXRoaXMudXVpZCksXCJ1aS1kaWFsb2ctdGl0bGUtXCIrdH0sb3ZlcmxheTpmdW5jdGlvbih0KXt0aGlzLiRlbD1lLnVpLmRpYWxvZy5vdmVybGF5LmNyZWF0ZSh0KX19KSxlLmV4dGVuZChlLnVpLmRpYWxvZy5vdmVybGF5LHtpbnN0YW5jZXM6W10sb2xkSW5zdGFuY2VzOltdLG1heFo6MCxldmVudHM6ZS5tYXAoXCJmb2N1cyxtb3VzZWRvd24sbW91c2V1cCxrZXlkb3duLGtleXByZXNzLGNsaWNrXCIuc3BsaXQoXCIsXCIpLGZ1bmN0aW9uKGUpe3JldHVybiBlK1wiLmRpYWxvZy1vdmVybGF5XCJ9KS5qb2luKFwiIFwiKSxjcmVhdGU6ZnVuY3Rpb24oaSl7MD09PXRoaXMuaW5zdGFuY2VzLmxlbmd0aCYmKHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLnVpLmRpYWxvZy5vdmVybGF5Lmluc3RhbmNlcy5sZW5ndGgmJmUoZG9jdW1lbnQpLmJpbmQoZS51aS5kaWFsb2cub3ZlcmxheS5ldmVudHMsZnVuY3Rpb24oaSl7cmV0dXJuIGUoaS50YXJnZXQpLnpJbmRleCgpPGUudWkuZGlhbG9nLm92ZXJsYXkubWF4Wj8hMTp0fSl9LDEpLGUod2luZG93KS5iaW5kKFwicmVzaXplLmRpYWxvZy1vdmVybGF5XCIsZS51aS5kaWFsb2cub3ZlcmxheS5yZXNpemUpKTt2YXIgcz10aGlzLm9sZEluc3RhbmNlcy5wb3AoKXx8ZShcIjxkaXY+XCIpLmFkZENsYXNzKFwidWktd2lkZ2V0LW92ZXJsYXlcIik7cmV0dXJuIGUoZG9jdW1lbnQpLmJpbmQoXCJrZXlkb3duLmRpYWxvZy1vdmVybGF5XCIsZnVuY3Rpb24odCl7dmFyIG49ZS51aS5kaWFsb2cub3ZlcmxheS5pbnN0YW5jZXM7MCE9PW4ubGVuZ3RoJiZuW24ubGVuZ3RoLTFdPT09cyYmaS5vcHRpb25zLmNsb3NlT25Fc2NhcGUmJiF0LmlzRGVmYXVsdFByZXZlbnRlZCgpJiZ0LmtleUNvZGUmJnQua2V5Q29kZT09PWUudWkua2V5Q29kZS5FU0NBUEUmJihpLmNsb3NlKHQpLHQucHJldmVudERlZmF1bHQoKSl9KSxzLmFwcGVuZFRvKGRvY3VtZW50LmJvZHkpLmNzcyh7d2lkdGg6dGhpcy53aWR0aCgpLGhlaWdodDp0aGlzLmhlaWdodCgpfSksZS5mbi5iZ2lmcmFtZSYmcy5iZ2lmcmFtZSgpLHRoaXMuaW5zdGFuY2VzLnB1c2gocyksc30sZGVzdHJveTpmdW5jdGlvbih0KXt2YXIgaT1lLmluQXJyYXkodCx0aGlzLmluc3RhbmNlcykscz0wOy0xIT09aSYmdGhpcy5vbGRJbnN0YW5jZXMucHVzaCh0aGlzLmluc3RhbmNlcy5zcGxpY2UoaSwxKVswXSksMD09PXRoaXMuaW5zdGFuY2VzLmxlbmd0aCYmZShbZG9jdW1lbnQsd2luZG93XSkudW5iaW5kKFwiLmRpYWxvZy1vdmVybGF5XCIpLHQuaGVpZ2h0KDApLndpZHRoKDApLnJlbW92ZSgpLGUuZWFjaCh0aGlzLmluc3RhbmNlcyxmdW5jdGlvbigpe3M9TWF0aC5tYXgocyx0aGlzLmNzcyhcInotaW5kZXhcIikpfSksdGhpcy5tYXhaPXN9LGhlaWdodDpmdW5jdGlvbigpe3ZhciB0LGk7cmV0dXJuIGUudWkuaWU/KHQ9TWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCxkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCksaT1NYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0LGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0KSxpPnQ/ZSh3aW5kb3cpLmhlaWdodCgpK1wicHhcIjp0K1wicHhcIik6ZShkb2N1bWVudCkuaGVpZ2h0KCkrXCJweFwifSx3aWR0aDpmdW5jdGlvbigpe3ZhciB0LGk7cmV0dXJuIGUudWkuaWU/KHQ9TWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFdpZHRoLGRvY3VtZW50LmJvZHkuc2Nyb2xsV2lkdGgpLGk9TWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldFdpZHRoLGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGgpLGk+dD9lKHdpbmRvdykud2lkdGgoKStcInB4XCI6dCtcInB4XCIpOmUoZG9jdW1lbnQpLndpZHRoKCkrXCJweFwifSxyZXNpemU6ZnVuY3Rpb24oKXt2YXIgdD1lKFtdKTtlLmVhY2goZS51aS5kaWFsb2cub3ZlcmxheS5pbnN0YW5jZXMsZnVuY3Rpb24oKXt0PXQuYWRkKHRoaXMpfSksdC5jc3Moe3dpZHRoOjAsaGVpZ2h0OjB9KS5jc3Moe3dpZHRoOmUudWkuZGlhbG9nLm92ZXJsYXkud2lkdGgoKSxoZWlnaHQ6ZS51aS5kaWFsb2cub3ZlcmxheS5oZWlnaHQoKX0pfX0pLGUuZXh0ZW5kKGUudWkuZGlhbG9nLm92ZXJsYXkucHJvdG90eXBlLHtkZXN0cm95OmZ1bmN0aW9uKCl7ZS51aS5kaWFsb2cub3ZlcmxheS5kZXN0cm95KHRoaXMuJGVsKX19KX0pKGpRdWVyeSk7KGZ1bmN0aW9uKGUpe3ZhciB0PSExO2Uud2lkZ2V0KFwidWkubWVudVwiLHt2ZXJzaW9uOlwiMS45LjJcIixkZWZhdWx0RWxlbWVudDpcIjx1bD5cIixkZWxheTozMDAsb3B0aW9uczp7aWNvbnM6e3N1Ym1lbnU6XCJ1aS1pY29uLWNhcmF0LTEtZVwifSxtZW51czpcInVsXCIscG9zaXRpb246e215OlwibGVmdCB0b3BcIixhdDpcInJpZ2h0IHRvcFwifSxyb2xlOlwibWVudVwiLGJsdXI6bnVsbCxmb2N1czpudWxsLHNlbGVjdDpudWxsfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5hY3RpdmVNZW51PXRoaXMuZWxlbWVudCx0aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hZGRDbGFzcyhcInVpLW1lbnUgdWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWNvcm5lci1hbGxcIikudG9nZ2xlQ2xhc3MoXCJ1aS1tZW51LWljb25zXCIsISF0aGlzLmVsZW1lbnQuZmluZChcIi51aS1pY29uXCIpLmxlbmd0aCkuYXR0cih7cm9sZTp0aGlzLm9wdGlvbnMucm9sZSx0YWJJbmRleDowfSkuYmluZChcImNsaWNrXCIrdGhpcy5ldmVudE5hbWVzcGFjZSxlLnByb3h5KGZ1bmN0aW9uKGUpe3RoaXMub3B0aW9ucy5kaXNhYmxlZCYmZS5wcmV2ZW50RGVmYXVsdCgpfSx0aGlzKSksdGhpcy5vcHRpb25zLmRpc2FibGVkJiZ0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSx0aGlzLl9vbih7XCJtb3VzZWRvd24gLnVpLW1lbnUtaXRlbSA+IGFcIjpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCl9LFwiY2xpY2sgLnVpLXN0YXRlLWRpc2FibGVkID4gYVwiOmZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKX0sXCJjbGljayAudWktbWVudS1pdGVtOmhhcyhhKVwiOmZ1bmN0aW9uKGkpe3ZhciBzPWUoaS50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudS1pdGVtXCIpOyF0JiZzLm5vdChcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKS5sZW5ndGgmJih0PSEwLHRoaXMuc2VsZWN0KGkpLHMuaGFzKFwiLnVpLW1lbnVcIikubGVuZ3RoP3RoaXMuZXhwYW5kKGkpOnRoaXMuZWxlbWVudC5pcyhcIjpmb2N1c1wiKXx8KHRoaXMuZWxlbWVudC50cmlnZ2VyKFwiZm9jdXNcIixbITBdKSx0aGlzLmFjdGl2ZSYmMT09PXRoaXMuYWN0aXZlLnBhcmVudHMoXCIudWktbWVudVwiKS5sZW5ndGgmJmNsZWFyVGltZW91dCh0aGlzLnRpbWVyKSkpfSxcIm1vdXNlZW50ZXIgLnVpLW1lbnUtaXRlbVwiOmZ1bmN0aW9uKHQpe3ZhciBpPWUodC5jdXJyZW50VGFyZ2V0KTtpLnNpYmxpbmdzKCkuY2hpbGRyZW4oXCIudWktc3RhdGUtYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuZm9jdXModCxpKX0sbW91c2VsZWF2ZTpcImNvbGxhcHNlQWxsXCIsXCJtb3VzZWxlYXZlIC51aS1tZW51XCI6XCJjb2xsYXBzZUFsbFwiLGZvY3VzOmZ1bmN0aW9uKGUsdCl7dmFyIGk9dGhpcy5hY3RpdmV8fHRoaXMuZWxlbWVudC5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW1cIikuZXEoMCk7dHx8dGhpcy5mb2N1cyhlLGkpfSxibHVyOmZ1bmN0aW9uKHQpe3RoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7ZS5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sdGhpcy5kb2N1bWVudFswXS5hY3RpdmVFbGVtZW50KXx8dGhpcy5jb2xsYXBzZUFsbCh0KX0pfSxrZXlkb3duOlwiX2tleWRvd25cIn0pLHRoaXMucmVmcmVzaCgpLHRoaXMuX29uKHRoaXMuZG9jdW1lbnQse2NsaWNrOmZ1bmN0aW9uKGkpe2UoaS50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudVwiKS5sZW5ndGh8fHRoaXMuY29sbGFwc2VBbGwoaSksdD0hMX19KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcImFyaWEtYWN0aXZlZGVzY2VuZGFudFwiKS5maW5kKFwiLnVpLW1lbnVcIikuYW5kU2VsZigpLnJlbW92ZUNsYXNzKFwidWktbWVudSB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbCB1aS1tZW51LWljb25zXCIpLnJlbW92ZUF0dHIoXCJyb2xlXCIpLnJlbW92ZUF0dHIoXCJ0YWJJbmRleFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1sYWJlbGxlZGJ5XCIpLnJlbW92ZUF0dHIoXCJhcmlhLWV4cGFuZGVkXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlblwiKS5yZW1vdmVBdHRyKFwiYXJpYS1kaXNhYmxlZFwiKS5yZW1vdmVVbmlxdWVJZCgpLnNob3coKSx0aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51LWl0ZW1cIikucmVtb3ZlQ2xhc3MoXCJ1aS1tZW51LWl0ZW1cIikucmVtb3ZlQXR0cihcInJvbGVcIikucmVtb3ZlQXR0cihcImFyaWEtZGlzYWJsZWRcIikuY2hpbGRyZW4oXCJhXCIpLnJlbW92ZVVuaXF1ZUlkKCkucmVtb3ZlQ2xhc3MoXCJ1aS1jb3JuZXItYWxsIHVpLXN0YXRlLWhvdmVyXCIpLnJlbW92ZUF0dHIoXCJ0YWJJbmRleFwiKS5yZW1vdmVBdHRyKFwicm9sZVwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oYXNwb3B1cFwiKS5jaGlsZHJlbigpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1lKHRoaXMpO3QuZGF0YShcInVpLW1lbnUtc3VibWVudS1jYXJhdFwiKSYmdC5yZW1vdmUoKX0pLHRoaXMuZWxlbWVudC5maW5kKFwiLnVpLW1lbnUtZGl2aWRlclwiKS5yZW1vdmVDbGFzcyhcInVpLW1lbnUtZGl2aWRlciB1aS13aWRnZXQtY29udGVudFwiKX0sX2tleWRvd246ZnVuY3Rpb24odCl7ZnVuY3Rpb24gaShlKXtyZXR1cm4gZS5yZXBsYWNlKC9bXFwtXFxbXFxde30oKSorPy4sXFxcXFxcXiR8I1xcc10vZyxcIlxcXFwkJlwiKX12YXIgcyxuLGEsbyxyLGg9ITA7c3dpdGNoKHQua2V5Q29kZSl7Y2FzZSBlLnVpLmtleUNvZGUuUEFHRV9VUDp0aGlzLnByZXZpb3VzUGFnZSh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5QQUdFX0RPV046dGhpcy5uZXh0UGFnZSh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5IT01FOnRoaXMuX21vdmUoXCJmaXJzdFwiLFwiZmlyc3RcIix0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5FTkQ6dGhpcy5fbW92ZShcImxhc3RcIixcImxhc3RcIix0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5VUDp0aGlzLnByZXZpb3VzKHQpO2JyZWFrO2Nhc2UgZS51aS5rZXlDb2RlLkRPV046dGhpcy5uZXh0KHQpO2JyZWFrO2Nhc2UgZS51aS5rZXlDb2RlLkxFRlQ6dGhpcy5jb2xsYXBzZSh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5SSUdIVDp0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLmlzKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpJiZ0aGlzLmV4cGFuZCh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5FTlRFUjpjYXNlIGUudWkua2V5Q29kZS5TUEFDRTp0aGlzLl9hY3RpdmF0ZSh0KTticmVhaztjYXNlIGUudWkua2V5Q29kZS5FU0NBUEU6dGhpcy5jb2xsYXBzZSh0KTticmVhaztkZWZhdWx0Omg9ITEsbj10aGlzLnByZXZpb3VzRmlsdGVyfHxcIlwiLGE9U3RyaW5nLmZyb21DaGFyQ29kZSh0LmtleUNvZGUpLG89ITEsY2xlYXJUaW1lb3V0KHRoaXMuZmlsdGVyVGltZXIpLGE9PT1uP289ITA6YT1uK2Escj1SZWdFeHAoXCJeXCIraShhKSxcImlcIikscz10aGlzLmFjdGl2ZU1lbnUuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtXCIpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiByLnRlc3QoZSh0aGlzKS5jaGlsZHJlbihcImFcIikudGV4dCgpKX0pLHM9byYmLTEhPT1zLmluZGV4KHRoaXMuYWN0aXZlLm5leHQoKSk/dGhpcy5hY3RpdmUubmV4dEFsbChcIi51aS1tZW51LWl0ZW1cIik6cyxzLmxlbmd0aHx8KGE9U3RyaW5nLmZyb21DaGFyQ29kZSh0LmtleUNvZGUpLHI9UmVnRXhwKFwiXlwiK2koYSksXCJpXCIpLHM9dGhpcy5hY3RpdmVNZW51LmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gci50ZXN0KGUodGhpcykuY2hpbGRyZW4oXCJhXCIpLnRleHQoKSl9KSkscy5sZW5ndGg/KHRoaXMuZm9jdXModCxzKSxzLmxlbmd0aD4xPyh0aGlzLnByZXZpb3VzRmlsdGVyPWEsdGhpcy5maWx0ZXJUaW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyfSwxZTMpKTpkZWxldGUgdGhpcy5wcmV2aW91c0ZpbHRlcik6ZGVsZXRlIHRoaXMucHJldmlvdXNGaWx0ZXJ9aCYmdC5wcmV2ZW50RGVmYXVsdCgpfSxfYWN0aXZhdGU6ZnVuY3Rpb24oZSl7dGhpcy5hY3RpdmUuaXMoXCIudWktc3RhdGUtZGlzYWJsZWRcIil8fCh0aGlzLmFjdGl2ZS5jaGlsZHJlbihcImFbYXJpYS1oYXNwb3B1cD0ndHJ1ZSddXCIpLmxlbmd0aD90aGlzLmV4cGFuZChlKTp0aGlzLnNlbGVjdChlKSl9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgdCxpPXRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51LHM9dGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLm1lbnVzKTtzLmZpbHRlcihcIjpub3QoLnVpLW1lbnUpXCIpLmFkZENsYXNzKFwidWktbWVudSB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWFsbFwiKS5oaWRlKCkuYXR0cih7cm9sZTp0aGlzLm9wdGlvbnMucm9sZSxcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwifSkuZWFjaChmdW5jdGlvbigpe3ZhciB0PWUodGhpcykscz10LnByZXYoXCJhXCIpLG49ZShcIjxzcGFuPlwiKS5hZGRDbGFzcyhcInVpLW1lbnUtaWNvbiB1aS1pY29uIFwiK2kpLmRhdGEoXCJ1aS1tZW51LXN1Ym1lbnUtY2FyYXRcIiwhMCk7cy5hdHRyKFwiYXJpYS1oYXNwb3B1cFwiLFwidHJ1ZVwiKS5wcmVwZW5kKG4pLHQuYXR0cihcImFyaWEtbGFiZWxsZWRieVwiLHMuYXR0cihcImlkXCIpKX0pLHQ9cy5hZGQodGhpcy5lbGVtZW50KSx0LmNoaWxkcmVuKFwiOm5vdCgudWktbWVudS1pdGVtKTpoYXMoYSlcIikuYWRkQ2xhc3MoXCJ1aS1tZW51LWl0ZW1cIikuYXR0cihcInJvbGVcIixcInByZXNlbnRhdGlvblwiKS5jaGlsZHJlbihcImFcIikudW5pcXVlSWQoKS5hZGRDbGFzcyhcInVpLWNvcm5lci1hbGxcIikuYXR0cih7dGFiSW5kZXg6LTEscm9sZTp0aGlzLl9pdGVtUm9sZSgpfSksdC5jaGlsZHJlbihcIjpub3QoLnVpLW1lbnUtaXRlbSlcIikuZWFjaChmdW5jdGlvbigpe3ZhciB0PWUodGhpcyk7L1teXFwt4oCU4oCTXFxzXS8udGVzdCh0LnRleHQoKSl8fHQuYWRkQ2xhc3MoXCJ1aS13aWRnZXQtY29udGVudCB1aS1tZW51LWRpdmlkZXJcIil9KSx0LmNoaWxkcmVuKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLHRoaXMuYWN0aXZlJiYhZS5jb250YWlucyh0aGlzLmVsZW1lbnRbMF0sdGhpcy5hY3RpdmVbMF0pJiZ0aGlzLmJsdXIoKX0sX2l0ZW1Sb2xlOmZ1bmN0aW9uKCl7cmV0dXJue21lbnU6XCJtZW51aXRlbVwiLGxpc3Rib3g6XCJvcHRpb25cIn1bdGhpcy5vcHRpb25zLnJvbGVdfSxmb2N1czpmdW5jdGlvbihlLHQpe3ZhciBpLHM7dGhpcy5ibHVyKGUsZSYmXCJmb2N1c1wiPT09ZS50eXBlKSx0aGlzLl9zY3JvbGxJbnRvVmlldyh0KSx0aGlzLmFjdGl2ZT10LmZpcnN0KCkscz10aGlzLmFjdGl2ZS5jaGlsZHJlbihcImFcIikuYWRkQ2xhc3MoXCJ1aS1zdGF0ZS1mb2N1c1wiKSx0aGlzLm9wdGlvbnMucm9sZSYmdGhpcy5lbGVtZW50LmF0dHIoXCJhcmlhLWFjdGl2ZWRlc2NlbmRhbnRcIixzLmF0dHIoXCJpZFwiKSksdGhpcy5hY3RpdmUucGFyZW50KCkuY2xvc2VzdChcIi51aS1tZW51LWl0ZW1cIikuY2hpbGRyZW4oXCJhOmZpcnN0XCIpLmFkZENsYXNzKFwidWktc3RhdGUtYWN0aXZlXCIpLGUmJlwia2V5ZG93blwiPT09ZS50eXBlP3RoaXMuX2Nsb3NlKCk6dGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuX2Nsb3NlKCl9LHRoaXMuZGVsYXkpLGk9dC5jaGlsZHJlbihcIi51aS1tZW51XCIpLGkubGVuZ3RoJiYvXm1vdXNlLy50ZXN0KGUudHlwZSkmJnRoaXMuX3N0YXJ0T3BlbmluZyhpKSx0aGlzLmFjdGl2ZU1lbnU9dC5wYXJlbnQoKSx0aGlzLl90cmlnZ2VyKFwiZm9jdXNcIixlLHtpdGVtOnR9KX0sX3Njcm9sbEludG9WaWV3OmZ1bmN0aW9uKHQpe3ZhciBpLHMsbixhLG8scjt0aGlzLl9oYXNTY3JvbGwoKSYmKGk9cGFyc2VGbG9hdChlLmNzcyh0aGlzLmFjdGl2ZU1lbnVbMF0sXCJib3JkZXJUb3BXaWR0aFwiKSl8fDAscz1wYXJzZUZsb2F0KGUuY3NzKHRoaXMuYWN0aXZlTWVudVswXSxcInBhZGRpbmdUb3BcIikpfHwwLG49dC5vZmZzZXQoKS50b3AtdGhpcy5hY3RpdmVNZW51Lm9mZnNldCgpLnRvcC1pLXMsYT10aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKCksbz10aGlzLmFjdGl2ZU1lbnUuaGVpZ2h0KCkscj10LmhlaWdodCgpLDA+bj90aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKGErbik6bityPm8mJnRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoYStuLW8rcikpfSxibHVyOmZ1bmN0aW9uKGUsdCl7dHx8Y2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLHRoaXMuYWN0aXZlJiYodGhpcy5hY3RpdmUuY2hpbGRyZW4oXCJhXCIpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtZm9jdXNcIiksdGhpcy5hY3RpdmU9bnVsbCx0aGlzLl90cmlnZ2VyKFwiYmx1clwiLGUse2l0ZW06dGhpcy5hY3RpdmV9KSl9LF9zdGFydE9wZW5pbmc6ZnVuY3Rpb24oZSl7Y2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLFwidHJ1ZVwiPT09ZS5hdHRyKFwiYXJpYS1oaWRkZW5cIikmJih0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5fY2xvc2UoKSx0aGlzLl9vcGVuKGUpfSx0aGlzLmRlbGF5KSl9LF9vcGVuOmZ1bmN0aW9uKHQpe3ZhciBpPWUuZXh0ZW5kKHtvZjp0aGlzLmFjdGl2ZX0sdGhpcy5vcHRpb25zLnBvc2l0aW9uKTtjbGVhclRpbWVvdXQodGhpcy50aW1lciksdGhpcy5lbGVtZW50LmZpbmQoXCIudWktbWVudVwiKS5ub3QodC5wYXJlbnRzKFwiLnVpLW1lbnVcIikpLmhpZGUoKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksdC5zaG93KCkucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJ0cnVlXCIpLnBvc2l0aW9uKGkpfSxjb2xsYXBzZUFsbDpmdW5jdGlvbih0LGkpe2NsZWFyVGltZW91dCh0aGlzLnRpbWVyKSx0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dmFyIHM9aT90aGlzLmVsZW1lbnQ6ZSh0JiZ0LnRhcmdldCkuY2xvc2VzdCh0aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51XCIpKTtzLmxlbmd0aHx8KHM9dGhpcy5lbGVtZW50KSx0aGlzLl9jbG9zZShzKSx0aGlzLmJsdXIodCksdGhpcy5hY3RpdmVNZW51PXN9LHRoaXMuZGVsYXkpfSxfY2xvc2U6ZnVuY3Rpb24oZSl7ZXx8KGU9dGhpcy5hY3RpdmU/dGhpcy5hY3RpdmUucGFyZW50KCk6dGhpcy5lbGVtZW50KSxlLmZpbmQoXCIudWktbWVudVwiKS5oaWRlKCkuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsXCJmYWxzZVwiKS5lbmQoKS5maW5kKFwiYS51aS1zdGF0ZS1hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJ1aS1zdGF0ZS1hY3RpdmVcIil9LGNvbGxhcHNlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuYWN0aXZlJiZ0aGlzLmFjdGl2ZS5wYXJlbnQoKS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiLHRoaXMuZWxlbWVudCk7dCYmdC5sZW5ndGgmJih0aGlzLl9jbG9zZSgpLHRoaXMuZm9jdXMoZSx0KSl9LGV4cGFuZDpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmFjdGl2ZSYmdGhpcy5hY3RpdmUuY2hpbGRyZW4oXCIudWktbWVudSBcIikuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtXCIpLmZpcnN0KCk7dCYmdC5sZW5ndGgmJih0aGlzLl9vcGVuKHQucGFyZW50KCkpLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5mb2N1cyhlLHQpfSkpfSxuZXh0OmZ1bmN0aW9uKGUpe3RoaXMuX21vdmUoXCJuZXh0XCIsXCJmaXJzdFwiLGUpfSxwcmV2aW91czpmdW5jdGlvbihlKXt0aGlzLl9tb3ZlKFwicHJldlwiLFwibGFzdFwiLGUpfSxpc0ZpcnN0SXRlbTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLnByZXZBbGwoXCIudWktbWVudS1pdGVtXCIpLmxlbmd0aH0saXNMYXN0SXRlbTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLm5leHRBbGwoXCIudWktbWVudS1pdGVtXCIpLmxlbmd0aH0sX21vdmU6ZnVuY3Rpb24oZSx0LGkpe3ZhciBzO3RoaXMuYWN0aXZlJiYocz1cImZpcnN0XCI9PT1lfHxcImxhc3RcIj09PWU/dGhpcy5hY3RpdmVbXCJmaXJzdFwiPT09ZT9cInByZXZBbGxcIjpcIm5leHRBbGxcIl0oXCIudWktbWVudS1pdGVtXCIpLmVxKC0xKTp0aGlzLmFjdGl2ZVtlK1wiQWxsXCJdKFwiLnVpLW1lbnUtaXRlbVwiKS5lcSgwKSkscyYmcy5sZW5ndGgmJnRoaXMuYWN0aXZlfHwocz10aGlzLmFjdGl2ZU1lbnUuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtXCIpW3RdKCkpLHRoaXMuZm9jdXMoaSxzKX0sbmV4dFBhZ2U6ZnVuY3Rpb24odCl7dmFyIGkscyxuO3JldHVybiB0aGlzLmFjdGl2ZT8odGhpcy5pc0xhc3RJdGVtKCl8fCh0aGlzLl9oYXNTY3JvbGwoKT8ocz10aGlzLmFjdGl2ZS5vZmZzZXQoKS50b3Asbj10aGlzLmVsZW1lbnQuaGVpZ2h0KCksdGhpcy5hY3RpdmUubmV4dEFsbChcIi51aS1tZW51LWl0ZW1cIikuZWFjaChmdW5jdGlvbigpe3JldHVybiBpPWUodGhpcyksMD5pLm9mZnNldCgpLnRvcC1zLW59KSx0aGlzLmZvY3VzKHQsaSkpOnRoaXMuZm9jdXModCx0aGlzLmFjdGl2ZU1lbnUuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtXCIpW3RoaXMuYWN0aXZlP1wibGFzdFwiOlwiZmlyc3RcIl0oKSkpLHVuZGVmaW5lZCk6KHRoaXMubmV4dCh0KSx1bmRlZmluZWQpfSxwcmV2aW91c1BhZ2U6ZnVuY3Rpb24odCl7dmFyIGkscyxuO3JldHVybiB0aGlzLmFjdGl2ZT8odGhpcy5pc0ZpcnN0SXRlbSgpfHwodGhpcy5faGFzU2Nyb2xsKCk/KHM9dGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wLG49dGhpcy5lbGVtZW50LmhlaWdodCgpLHRoaXMuYWN0aXZlLnByZXZBbGwoXCIudWktbWVudS1pdGVtXCIpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gaT1lKHRoaXMpLGkub2Zmc2V0KCkudG9wLXMrbj4wfSksdGhpcy5mb2N1cyh0LGkpKTp0aGlzLmZvY3VzKHQsdGhpcy5hY3RpdmVNZW51LmNoaWxkcmVuKFwiLnVpLW1lbnUtaXRlbVwiKS5maXJzdCgpKSksdW5kZWZpbmVkKToodGhpcy5uZXh0KHQpLHVuZGVmaW5lZCl9LF9oYXNTY3JvbGw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCk8dGhpcy5lbGVtZW50LnByb3AoXCJzY3JvbGxIZWlnaHRcIil9LHNlbGVjdDpmdW5jdGlvbih0KXt0aGlzLmFjdGl2ZT10aGlzLmFjdGl2ZXx8ZSh0LnRhcmdldCkuY2xvc2VzdChcIi51aS1tZW51LWl0ZW1cIik7dmFyIGk9e2l0ZW06dGhpcy5hY3RpdmV9O3RoaXMuYWN0aXZlLmhhcyhcIi51aS1tZW51XCIpLmxlbmd0aHx8dGhpcy5jb2xsYXBzZUFsbCh0LCEwKSx0aGlzLl90cmlnZ2VyKFwic2VsZWN0XCIsdCxpKX19KX0pKGpRdWVyeSk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2pxdWVyeS9saWIvanF1ZXJ5LXVpLm1pbi5qc1xuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qXG4gKiBqUXVlcnkgQkJROiBCYWNrIEJ1dHRvbiAmIFF1ZXJ5IExpYnJhcnkgLSB2MS4yLjEgLSAyLzE3LzIwMTBcbiAqIGh0dHA6Ly9iZW5hbG1hbi5jb20vcHJvamVjdHMvanF1ZXJ5LWJicS1wbHVnaW4vXG4gKiBcbiAqIENvcHlyaWdodCAoYykgMjAxMCBcIkNvd2JveVwiIEJlbiBBbG1hblxuICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGFuZCBHUEwgbGljZW5zZXMuXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL2Fib3V0L2xpY2Vuc2UvXG4gKi9cbihmdW5jdGlvbiAoJCwgcCkge1xuICAgIHZhciBpLCBtID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLCByID0gZGVjb2RlVVJJQ29tcG9uZW50LCBhID0gJC5wYXJhbSwgYywgbCwgdiwgYiA9ICQuYmJxID0gJC5iYnEgfHwge30sIHEsIHUsIGosIGUgPSAkLmV2ZW50LnNwZWNpYWwsIGQgPSBcImhhc2hjaGFuZ2VcIiwgQSA9IFwicXVlcnlzdHJpbmdcIiwgRCA9IFwiZnJhZ21lbnRcIiwgeSA9IFwiZWxlbVVybEF0dHJcIiwgZyA9IFwibG9jYXRpb25cIiwgayA9IFwiaHJlZlwiLCB0ID0gXCJzcmNcIiwgeCA9IC9eLipcXD98Iy4qJC9nLCB3ID0gL14uKlxcIy8sIGgsIEMgPSB7fTtcblxuICAgIGZ1bmN0aW9uIEUoRikge1xuICAgICAgICByZXR1cm4gdHlwZW9mIEYgPT09IFwic3RyaW5nXCJcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBCKEcpIHtcbiAgICAgICAgdmFyIEYgPSBtLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBHLmFwcGx5KHRoaXMsIEYuY29uY2F0KG0uY2FsbChhcmd1bWVudHMpKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG4oRikge1xuICAgICAgICByZXR1cm4gRi5yZXBsYWNlKC9eW14jXSojPyguKikkLywgXCIkMVwiKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIG8oRikge1xuICAgICAgICByZXR1cm4gRi5yZXBsYWNlKC8oPzpeW14/I10qXFw/KFteI10qKS4qJCk/LiovLCBcIiQxXCIpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZihILCBNLCBGLCBJLCBHKSB7XG4gICAgICAgIHZhciBPLCBMLCBLLCBOLCBKO1xuICAgICAgICBpZiAoSSAhPT0gaSkge1xuICAgICAgICAgICAgSyA9IEYubWF0Y2goSCA/IC9eKFteI10qKVxcIz8oLiopJC8gOiAvXihbXiM/XSopXFw/PyhbXiNdKikoIz8uKikvKTtcbiAgICAgICAgICAgIEogPSBLWzNdIHx8IFwiXCI7XG4gICAgICAgICAgICBpZiAoRyA9PT0gMiAmJiBFKEkpKSB7XG4gICAgICAgICAgICAgICAgTCA9IEkucmVwbGFjZShIID8gdyA6IHgsIFwiXCIpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIE4gPSBsKEtbMl0pO1xuICAgICAgICAgICAgICAgIEkgPSBFKEkpID8gbFtIID8gRCA6IEFdKEkpIDogSTtcbiAgICAgICAgICAgICAgICBMID0gRyA9PT0gMiA/IEkgOiBHID09PSAxID8gJC5leHRlbmQoe30sIEksIE4pIDogJC5leHRlbmQoe30sIE4sIEkpO1xuICAgICAgICAgICAgICAgIEwgPSBhKEwpO1xuICAgICAgICAgICAgICAgIGlmIChIKSB7XG4gICAgICAgICAgICAgICAgICAgIEwgPSBMLnJlcGxhY2UoaCwgcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBPID0gS1sxXSArIChIID8gXCIjXCIgOiBMIHx8ICFLWzFdID8gXCI/XCIgOiBcIlwiKSArIEwgKyBKXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPID0gTShGICE9PSBpID8gRiA6IHBbZ11ba10pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9cbiAgICB9XG5cbiAgICBhW0FdID0gQihmLCAwLCBvKTtcbiAgICBhW0RdID0gYyA9IEIoZiwgMSwgbik7XG4gICAgYy5ub0VzY2FwZSA9IGZ1bmN0aW9uIChHKSB7XG4gICAgICAgIEcgPSBHIHx8IFwiXCI7XG4gICAgICAgIHZhciBGID0gJC5tYXAoRy5zcGxpdChcIlwiKSwgZW5jb2RlVVJJQ29tcG9uZW50KTtcbiAgICAgICAgaCA9IG5ldyBSZWdFeHAoRi5qb2luKFwifFwiKSwgXCJnXCIpXG4gICAgfTtcbiAgICBjLm5vRXNjYXBlKFwiLC9cIik7XG4gICAgJC5kZXBhcmFtID0gbCA9IGZ1bmN0aW9uIChJLCBGKSB7XG4gICAgICAgIHZhciBIID0ge30sIEcgPSB7XCJ0cnVlXCI6ICEwLCBcImZhbHNlXCI6ICExLCBcIm51bGxcIjogbnVsbH07XG4gICAgICAgICQuZWFjaChJLnJlcGxhY2UoL1xcKy9nLCBcIiBcIikuc3BsaXQoXCImXCIpLCBmdW5jdGlvbiAoTCwgUSkge1xuICAgICAgICAgICAgdmFyIEsgPSBRLnNwbGl0KFwiPVwiKSwgUCA9IHIoS1swXSksIEosIE8gPSBILCBNID0gMCwgUiA9IFAuc3BsaXQoXCJdW1wiKSwgTiA9IFIubGVuZ3RoIC0gMTtcbiAgICAgICAgICAgIGlmICgvXFxbLy50ZXN0KFJbMF0pICYmIC9cXF0kLy50ZXN0KFJbTl0pKSB7XG4gICAgICAgICAgICAgICAgUltOXSA9IFJbTl0ucmVwbGFjZSgvXFxdJC8sIFwiXCIpO1xuICAgICAgICAgICAgICAgIFIgPSBSLnNoaWZ0KCkuc3BsaXQoXCJbXCIpLmNvbmNhdChSKTtcbiAgICAgICAgICAgICAgICBOID0gUi5sZW5ndGggLSAxXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIE4gPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoSy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgICAgICBKID0gcihLWzFdKTtcbiAgICAgICAgICAgICAgICBpZiAoRikge1xuICAgICAgICAgICAgICAgICAgICBKID0gSiAmJiAhaXNOYU4oSikgPyArSiA6IEogPT09IFwidW5kZWZpbmVkXCIgPyBpIDogR1tKXSAhPT0gaSA/IEdbSl0gOiBKXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChOKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoOyBNIDw9IE47IE0rKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgUCA9IFJbTV0gPT09IFwiXCIgPyBPLmxlbmd0aCA6IFJbTV07XG4gICAgICAgICAgICAgICAgICAgICAgICBPID0gT1tQXSA9IE0gPCBOID8gT1tQXSB8fCAoUltNICsgMV0gJiYgaXNOYU4oUltNICsgMV0pID8ge30gOiBbXSkgOiBKXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJC5pc0FycmF5KEhbUF0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBIW1BdLnB1c2goSilcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChIW1BdICE9PSBpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSFtQXSA9IFtIW1BdLCBKXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIW1BdID0gSlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoUCkge1xuICAgICAgICAgICAgICAgICAgICBIW1BdID0gRiA/IGkgOiBcIlwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIEhcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHooSCwgRiwgRykge1xuICAgICAgICBpZiAoRiA9PT0gaSB8fCB0eXBlb2YgRiA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgICAgIEcgPSBGO1xuICAgICAgICAgICAgRiA9IGFbSCA/IEQgOiBBXSgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBGID0gRShGKSA/IEYucmVwbGFjZShIID8gdyA6IHgsIFwiXCIpIDogRlxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsKEYsIEcpXG4gICAgfVxuXG4gICAgbFtBXSA9IEIoeiwgMCk7XG4gICAgbFtEXSA9IHYgPSBCKHosIDEpO1xuICAgICRbeV0gfHwgKCRbeV0gPSBmdW5jdGlvbiAoRikge1xuICAgICAgICByZXR1cm4gJC5leHRlbmQoQywgRilcbiAgICB9KSh7YTogaywgYmFzZTogaywgaWZyYW1lOiB0LCBpbWc6IHQsIGlucHV0OiB0LCBmb3JtOiBcImFjdGlvblwiLCBsaW5rOiBrLCBzY3JpcHQ6IHR9KTtcbiAgICBqID0gJFt5XTtcbiAgICBmdW5jdGlvbiBzKEksIEcsIEgsIEYpIHtcbiAgICAgICAgaWYgKCFFKEgpICYmIHR5cGVvZiBIICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBGID0gSDtcbiAgICAgICAgICAgIEggPSBHO1xuICAgICAgICAgICAgRyA9IGlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBMID0gJCh0aGlzKSwgSiA9IEcgfHwgaigpWyh0aGlzLm5vZGVOYW1lIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCldIHx8IFwiXCIsIEsgPSBKICYmIEwuYXR0cihKKSB8fCBcIlwiO1xuICAgICAgICAgICAgTC5hdHRyKEosIGFbSV0oSywgSCwgRikpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJC5mbltBXSA9IEIocywgQSk7XG4gICAgJC5mbltEXSA9IEIocywgRCk7XG4gICAgYi5wdXNoU3RhdGUgPSBxID0gZnVuY3Rpb24gKEksIEYpIHtcbiAgICAgICAgaWYgKEUoSSkgJiYgL14jLy50ZXN0KEkpICYmIEYgPT09IGkpIHtcbiAgICAgICAgICAgIEYgPSAyXG4gICAgICAgIH1cbiAgICAgICAgdmFyIEggPSBJICE9PSBpLCBHID0gYyhwW2ddW2tdLCBIID8gSSA6IHt9LCBIID8gRiA6IDIpO1xuICAgICAgICBwW2ddW2tdID0gRyArICgvIy8udGVzdChHKSA/IFwiXCIgOiBcIiNcIilcbiAgICB9O1xuICAgIGIuZ2V0U3RhdGUgPSB1ID0gZnVuY3Rpb24gKEYsIEcpIHtcbiAgICAgICAgcmV0dXJuIEYgPT09IGkgfHwgdHlwZW9mIEYgPT09IFwiYm9vbGVhblwiID8gdihGKSA6IHYoRylbRl1cbiAgICB9O1xuICAgIGIucmVtb3ZlU3RhdGUgPSBmdW5jdGlvbiAoRikge1xuICAgICAgICB2YXIgRyA9IHt9O1xuICAgICAgICBpZiAoRiAhPT0gaSkge1xuICAgICAgICAgICAgRyA9IHUoKTtcbiAgICAgICAgICAgICQuZWFjaCgkLmlzQXJyYXkoRikgPyBGIDogYXJndW1lbnRzLCBmdW5jdGlvbiAoSSwgSCkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBHW0hdXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIHEoRywgMilcbiAgICB9O1xuICAgIGVbZF0gPSAkLmV4dGVuZChlW2RdLCB7XG4gICAgICAgIGFkZDogZnVuY3Rpb24gKEYpIHtcbiAgICAgICAgICAgIHZhciBIO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBHKEopIHtcbiAgICAgICAgICAgICAgICB2YXIgSSA9IEpbRF0gPSBjKCk7XG4gICAgICAgICAgICAgICAgSi5nZXRTdGF0ZSA9IGZ1bmN0aW9uIChLLCBMKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBLID09PSBpIHx8IHR5cGVvZiBLID09PSBcImJvb2xlYW5cIiA/IGwoSSwgSykgOiBsKEksIEwpW0tdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBILmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCQuaXNGdW5jdGlvbihGKSkge1xuICAgICAgICAgICAgICAgIEggPSBGO1xuICAgICAgICAgICAgICAgIHJldHVybiBHXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIEggPSBGLmhhbmRsZXI7XG4gICAgICAgICAgICAgICAgRi5oYW5kbGVyID0gR1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbn0pKGpRdWVyeSwgd2luZG93KTtcbi8qXG4gKiBqUXVlcnkgaGFzaGNoYW5nZSBldmVudCAtIHYxLjIgLSAyLzExLzIwMTBcbiAqIGh0dHA6Ly9iZW5hbG1hbi5jb20vcHJvamVjdHMvanF1ZXJ5LWhhc2hjaGFuZ2UtcGx1Z2luL1xuICogXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTAgXCJDb3dib3lcIiBCZW4gQWxtYW5cbiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLlxuICogaHR0cDovL2JlbmFsbWFuLmNvbS9hYm91dC9saWNlbnNlL1xuICovXG4oZnVuY3Rpb24gKCQsIGksIGIpIHtcbiAgICB2YXIgaiwgayA9ICQuZXZlbnQuc3BlY2lhbCwgYyA9IFwibG9jYXRpb25cIiwgZCA9IFwiaGFzaGNoYW5nZVwiLCBsID0gXCJocmVmXCIsIGYgPSAkLmJyb3dzZXIsIGcgPSBkb2N1bWVudC5kb2N1bWVudE1vZGUsIGggPSBmLm1zaWUgJiYgKGcgPT09IGIgfHwgZyA8IDgpLCBlID0gXCJvblwiICsgZCBpbiBpICYmICFoO1xuXG4gICAgZnVuY3Rpb24gYShtKSB7XG4gICAgICAgIG0gPSBtIHx8IGlbY11bbF07XG4gICAgICAgIHJldHVybiBtLnJlcGxhY2UoL15bXiNdKiM/KC4qKSQvLCBcIiQxXCIpXG4gICAgfVxuXG4gICAgJFtkICsgXCJEZWxheVwiXSA9IDEwMDtcbiAgICBrW2RdID0gJC5leHRlbmQoa1tkXSwge1xuICAgICAgICBzZXR1cDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICQoai5zdGFydClcbiAgICAgICAgfSwgdGVhcmRvd246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkKGouc3RvcClcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGogPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbSA9IHt9LCByLCBuLCBvLCBxO1xuXG4gICAgICAgIGZ1bmN0aW9uIHAoKSB7XG4gICAgICAgICAgICBvID0gcSA9IGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoaCkge1xuICAgICAgICAgICAgICAgIG4gPSAkKCc8aWZyYW1lIHNyYz1cImphdmFzY3JpcHQ6MFwiLz4nKS5oaWRlKCkuaW5zZXJ0QWZ0ZXIoXCJib2R5XCIpWzBdLmNvbnRlbnRXaW5kb3c7XG4gICAgICAgICAgICAgICAgcSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGEobi5kb2N1bWVudFtjXVtsXSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG8gPSBmdW5jdGlvbiAodSwgcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodSAhPT0gcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHQgPSBuLmRvY3VtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgdC5vcGVuKCkuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRbY10uaGFzaCA9IFwiI1wiICsgdVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBvKGEoKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIG0uc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAocikge1xuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHQgPSBhKCk7XG4gICAgICAgICAgICBvIHx8IHAoKTtcbiAgICAgICAgICAgIChmdW5jdGlvbiBzKCkge1xuICAgICAgICAgICAgICAgIHZhciB2ID0gYSgpLCB1ID0gcSh0KTtcbiAgICAgICAgICAgICAgICBpZiAodiAhPT0gdCkge1xuICAgICAgICAgICAgICAgICAgICBvKHQgPSB2LCB1KTtcbiAgICAgICAgICAgICAgICAgICAgJChpKS50cmlnZ2VyKGQpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHUgIT09IHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlbY11bbF0gPSBpW2NdW2xdLnJlcGxhY2UoLyMuKi8sIFwiXCIpICsgXCIjXCIgKyB1XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgciA9IHNldFRpbWVvdXQocywgJFtkICsgXCJEZWxheVwiXSlcbiAgICAgICAgICAgIH0pKClcbiAgICAgICAgfTtcbiAgICAgICAgbS5zdG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCFuKSB7XG4gICAgICAgICAgICAgICAgciAmJiBjbGVhclRpbWVvdXQocik7XG4gICAgICAgICAgICAgICAgciA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG1cbiAgICB9KSgpXG59KShqUXVlcnksIHdpbmRvdyk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2pxdWVyeS9saWIvanF1ZXJ5LmJhLWJicS5taW4uanNcbiAqKiBtb2R1bGUgaWQgPSA2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIGJ4U2xpZGVyIHY0LjIuMTFcbiAqIENvcHlyaWdodCAyMDEzLTIwMTUgU3RldmVuIFdhbmRlcnNraVxuICogV3JpdHRlbiB3aGlsZSBkcmlua2luZyBCZWxnaWFuIGFsZXMgYW5kIGxpc3RlbmluZyB0byBqYXp6XG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHA6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVQpXG4gKi9cblxuOyhmdW5jdGlvbigkKSB7XG5cbiAgdmFyIGRlZmF1bHRzID0ge1xuXG4gICAgLy8gR0VORVJBTFxuICAgIG1vZGU6ICdob3Jpem9udGFsJyxcbiAgICBzbGlkZVNlbGVjdG9yOiAnJyxcbiAgICBpbmZpbml0ZUxvb3A6IHRydWUsXG4gICAgaGlkZUNvbnRyb2xPbkVuZDogZmFsc2UsXG4gICAgc3BlZWQ6IDUwMCxcbiAgICBlYXNpbmc6IG51bGwsXG4gICAgc2xpZGVNYXJnaW46IDAsXG4gICAgc3RhcnRTbGlkZTogMCxcbiAgICByYW5kb21TdGFydDogZmFsc2UsXG4gICAgY2FwdGlvbnM6IGZhbHNlLFxuICAgIHRpY2tlcjogZmFsc2UsXG4gICAgdGlja2VySG92ZXI6IGZhbHNlLFxuICAgIGFkYXB0aXZlSGVpZ2h0OiBmYWxzZSxcbiAgICBhZGFwdGl2ZUhlaWdodFNwZWVkOiA1MDAsXG4gICAgdmlkZW86IGZhbHNlLFxuICAgIHVzZUNTUzogdHJ1ZSxcbiAgICBwcmVsb2FkSW1hZ2VzOiAndmlzaWJsZScsXG4gICAgcmVzcG9uc2l2ZTogdHJ1ZSxcbiAgICBzbGlkZVpJbmRleDogNTAsXG4gICAgd3JhcHBlckNsYXNzOiAnYngtd3JhcHBlcicsXG5cbiAgICAvLyBUT1VDSFxuICAgIHRvdWNoRW5hYmxlZDogdHJ1ZSxcbiAgICBzd2lwZVRocmVzaG9sZDogNTAsXG4gICAgb25lVG9PbmVUb3VjaDogdHJ1ZSxcbiAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWDogdHJ1ZSxcbiAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWTogZmFsc2UsXG5cbiAgICAvLyBBQ0NFU1NJQklMSVRZXG4gICAgYXJpYUxpdmU6IHRydWUsXG4gICAgYXJpYUhpZGRlbjogdHJ1ZSxcblxuICAgIC8vIEtFWUJPQVJEXG4gICAga2V5Ym9hcmRFbmFibGVkOiBmYWxzZSxcblxuICAgIC8vIFBBR0VSXG4gICAgcGFnZXI6IHRydWUsXG4gICAgcGFnZXJUeXBlOiAnZnVsbCcsXG4gICAgcGFnZXJTaG9ydFNlcGFyYXRvcjogJyAvICcsXG4gICAgcGFnZXJTZWxlY3RvcjogbnVsbCxcbiAgICBidWlsZFBhZ2VyOiBudWxsLFxuICAgIHBhZ2VyQ3VzdG9tOiBudWxsLFxuXG4gICAgLy8gQ09OVFJPTFNcbiAgICBjb250cm9sczogdHJ1ZSxcbiAgICBuZXh0VGV4dDogJ05leHQnLFxuICAgIHByZXZUZXh0OiAnUHJldicsXG4gICAgbmV4dFNlbGVjdG9yOiBudWxsLFxuICAgIHByZXZTZWxlY3RvcjogbnVsbCxcbiAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgIHN0YXJ0VGV4dDogJ1N0YXJ0JyxcbiAgICBzdG9wVGV4dDogJ1N0b3AnLFxuICAgIGF1dG9Db250cm9sc0NvbWJpbmU6IGZhbHNlLFxuICAgIGF1dG9Db250cm9sc1NlbGVjdG9yOiBudWxsLFxuXG4gICAgLy8gQVVUT1xuICAgIGF1dG86IGZhbHNlLFxuICAgIHBhdXNlOiA0MDAwLFxuICAgIGF1dG9TdGFydDogdHJ1ZSxcbiAgICBhdXRvRGlyZWN0aW9uOiAnbmV4dCcsXG4gICAgc3RvcEF1dG9PbkNsaWNrOiBmYWxzZSxcbiAgICBhdXRvSG92ZXI6IGZhbHNlLFxuICAgIGF1dG9EZWxheTogMCxcbiAgICBhdXRvU2xpZGVGb3JPbmVQYWdlOiBmYWxzZSxcblxuICAgIC8vIENBUk9VU0VMXG4gICAgbWluU2xpZGVzOiAxLFxuICAgIG1heFNsaWRlczogMSxcbiAgICBtb3ZlU2xpZGVzOiAwLFxuICAgIHNsaWRlV2lkdGg6IDAsXG4gICAgc2hyaW5rSXRlbXM6IGZhbHNlLFxuXG4gICAgLy8gQ0FMTEJBQ0tTXG4gICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXG4gICAgb25TbGlkZUJlZm9yZTogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxuICAgIG9uU2xpZGVBZnRlcjogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9LFxuICAgIG9uU2xpZGVOZXh0OiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0sXG4gICAgb25TbGlkZVByZXY6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcbiAgICBvblNsaWRlclJlc2l6ZTogZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9XG4gIH07XG5cbiAgJC5mbi5ieFNsaWRlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcblxuICAgIGlmICh0aGlzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLy8gc3VwcG9ydCBtdWx0aXBsZSBlbGVtZW50c1xuICAgIGlmICh0aGlzLmxlbmd0aCA+IDEpIHtcbiAgICAgIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgJCh0aGlzKS5ieFNsaWRlcihvcHRpb25zKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLy8gY3JlYXRlIGEgbmFtZXNwYWNlIHRvIGJlIHVzZWQgdGhyb3VnaG91dCB0aGUgcGx1Z2luXG4gICAgdmFyIHNsaWRlciA9IHt9LFxuICAgIC8vIHNldCBhIHJlZmVyZW5jZSB0byBvdXIgc2xpZGVyIGVsZW1lbnRcbiAgICBlbCA9IHRoaXMsXG4gICAgLy8gZ2V0IHRoZSBvcmlnaW5hbCB3aW5kb3cgZGltZW5zICh0aGFua3MgYSBsb3QgSUUpXG4gICAgd2luZG93V2lkdGggPSAkKHdpbmRvdykud2lkdGgoKSxcbiAgICB3aW5kb3dIZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCk7XG5cbiAgICAvLyBSZXR1cm4gaWYgc2xpZGVyIGlzIGFscmVhZHkgaW5pdGlhbGl6ZWRcbiAgICBpZiAoJChlbCkuZGF0YSgnYnhTbGlkZXInKSkgeyByZXR1cm47IH1cblxuICAgIC8qKlxuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICogPSBQUklWQVRFIEZVTkNUSU9OU1xuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyBuYW1lc3BhY2Ugc2V0dGluZ3MgdG8gYmUgdXNlZCB0aHJvdWdob3V0IHBsdWdpblxuICAgICAqL1xuICAgIHZhciBpbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBSZXR1cm4gaWYgc2xpZGVyIGlzIGFscmVhZHkgaW5pdGlhbGl6ZWRcbiAgICAgIGlmICgkKGVsKS5kYXRhKCdieFNsaWRlcicpKSB7IHJldHVybjsgfVxuICAgICAgLy8gbWVyZ2UgdXNlci1zdXBwbGllZCBvcHRpb25zIHdpdGggdGhlIGRlZmF1bHRzXG4gICAgICBzbGlkZXIuc2V0dGluZ3MgPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgICAgLy8gcGFyc2Ugc2xpZGVXaWR0aCBzZXR0aW5nXG4gICAgICBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCA9IHBhcnNlSW50KHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoKTtcbiAgICAgIC8vIHN0b3JlIHRoZSBvcmlnaW5hbCBjaGlsZHJlblxuICAgICAgc2xpZGVyLmNoaWxkcmVuID0gZWwuY2hpbGRyZW4oc2xpZGVyLnNldHRpbmdzLnNsaWRlU2VsZWN0b3IpO1xuICAgICAgLy8gY2hlY2sgaWYgYWN0dWFsIG51bWJlciBvZiBzbGlkZXMgaXMgbGVzcyB0aGFuIG1pblNsaWRlcyAvIG1heFNsaWRlc1xuICAgICAgaWYgKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggPCBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzKSB7IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgPSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoOyB9XG4gICAgICBpZiAoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCA8IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpIHsgc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7IH1cbiAgICAgIC8vIGlmIHJhbmRvbSBzdGFydCwgc2V0IHRoZSBzdGFydFNsaWRlIHNldHRpbmcgdG8gcmFuZG9tIG51bWJlclxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5yYW5kb21TdGFydCkgeyBzbGlkZXIuc2V0dGluZ3Muc3RhcnRTbGlkZSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNsaWRlci5jaGlsZHJlbi5sZW5ndGgpOyB9XG4gICAgICAvLyBzdG9yZSBhY3RpdmUgc2xpZGUgaW5mb3JtYXRpb25cbiAgICAgIHNsaWRlci5hY3RpdmUgPSB7IGluZGV4OiBzbGlkZXIuc2V0dGluZ3Muc3RhcnRTbGlkZSB9O1xuICAgICAgLy8gc3RvcmUgaWYgdGhlIHNsaWRlciBpcyBpbiBjYXJvdXNlbCBtb2RlIChkaXNwbGF5aW5nIC8gbW92aW5nIG11bHRpcGxlIHNsaWRlcylcbiAgICAgIHNsaWRlci5jYXJvdXNlbCA9IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgPiAxIHx8IHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMgPiAxID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgLy8gaWYgY2Fyb3VzZWwsIGZvcmNlIHByZWxvYWRJbWFnZXMgPSAnYWxsJ1xuICAgICAgaWYgKHNsaWRlci5jYXJvdXNlbCkgeyBzbGlkZXIuc2V0dGluZ3MucHJlbG9hZEltYWdlcyA9ICdhbGwnOyB9XG4gICAgICAvLyBjYWxjdWxhdGUgdGhlIG1pbiAvIG1heCB3aWR0aCB0aHJlc2hvbGRzIGJhc2VkIG9uIG1pbiAvIG1heCBudW1iZXIgb2Ygc2xpZGVzXG4gICAgICAvLyB1c2VkIHRvIHNldHVwIGFuZCB1cGRhdGUgY2Fyb3VzZWwgc2xpZGVzIGRpbWVuc2lvbnNcbiAgICAgIHNsaWRlci5taW5UaHJlc2hvbGQgPSAoc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoKSArICgoc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlcyAtIDEpICogc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTtcbiAgICAgIHNsaWRlci5tYXhUaHJlc2hvbGQgPSAoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoKSArICgoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAtIDEpICogc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTtcbiAgICAgIC8vIHN0b3JlIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBzbGlkZXIgKGlmIGN1cnJlbnRseSBhbmltYXRpbmcsIHdvcmtpbmcgaXMgdHJ1ZSlcbiAgICAgIHNsaWRlci53b3JraW5nID0gZmFsc2U7XG4gICAgICAvLyBpbml0aWFsaXplIHRoZSBjb250cm9scyBvYmplY3RcbiAgICAgIHNsaWRlci5jb250cm9scyA9IHt9O1xuICAgICAgLy8gaW5pdGlhbGl6ZSBhbiBhdXRvIGludGVydmFsXG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBudWxsO1xuICAgICAgLy8gZGV0ZXJtaW5lIHdoaWNoIHByb3BlcnR5IHRvIHVzZSBmb3IgdHJhbnNpdGlvbnNcbiAgICAgIHNsaWRlci5hbmltUHJvcCA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnID8gJ3RvcCcgOiAnbGVmdCc7XG4gICAgICAvLyBkZXRlcm1pbmUgaWYgaGFyZHdhcmUgYWNjZWxlcmF0aW9uIGNhbiBiZSB1c2VkXG4gICAgICBzbGlkZXIudXNpbmdDU1MgPSBzbGlkZXIuc2V0dGluZ3MudXNlQ1NTICYmIHNsaWRlci5zZXR0aW5ncy5tb2RlICE9PSAnZmFkZScgJiYgKGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBjcmVhdGUgb3VyIHRlc3QgZGl2IGVsZW1lbnRcbiAgICAgICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpLFxuICAgICAgICAvLyBjc3MgdHJhbnNpdGlvbiBwcm9wZXJ0aWVzXG4gICAgICAgIHByb3BzID0gWydXZWJraXRQZXJzcGVjdGl2ZScsICdNb3pQZXJzcGVjdGl2ZScsICdPUGVyc3BlY3RpdmUnLCAnbXNQZXJzcGVjdGl2ZSddO1xuICAgICAgICAvLyB0ZXN0IGZvciBlYWNoIHByb3BlcnR5XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAoZGl2LnN0eWxlW3Byb3BzW2ldXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBzbGlkZXIuY3NzUHJlZml4ID0gcHJvcHNbaV0ucmVwbGFjZSgnUGVyc3BlY3RpdmUnLCAnJykudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIHNsaWRlci5hbmltUHJvcCA9ICctJyArIHNsaWRlci5jc3NQcmVmaXggKyAnLXRyYW5zZm9ybSc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSgpKTtcbiAgICAgIC8vIGlmIHZlcnRpY2FsIG1vZGUgYWx3YXlzIG1ha2UgbWF4U2xpZGVzIGFuZCBtaW5TbGlkZXMgZXF1YWxcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykgeyBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzID0gc2xpZGVyLnNldHRpbmdzLm1pblNsaWRlczsgfVxuICAgICAgLy8gc2F2ZSBvcmlnaW5hbCBzdHlsZSBkYXRhXG4gICAgICBlbC5kYXRhKCdvcmlnU3R5bGUnLCBlbC5hdHRyKCdzdHlsZScpKTtcbiAgICAgIGVsLmNoaWxkcmVuKHNsaWRlci5zZXR0aW5ncy5zbGlkZVNlbGVjdG9yKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScsICQodGhpcykuYXR0cignc3R5bGUnKSk7XG4gICAgICB9KTtcblxuICAgICAgLy8gcGVyZm9ybSBhbGwgRE9NIC8gQ1NTIG1vZGlmaWNhdGlvbnNcbiAgICAgIHNldHVwKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIGFsbCBET00gYW5kIENTUyBtb2RpZmljYXRpb25zXG4gICAgICovXG4gICAgdmFyIHNldHVwID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcHJlbG9hZFNlbGVjdG9yID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlKTsgLy8gc2V0IHRoZSBkZWZhdWx0IHByZWxvYWQgc2VsZWN0b3IgKHZpc2libGUpXG5cbiAgICAgIC8vIHdyYXAgZWwgaW4gYSB3cmFwcGVyXG4gICAgICBlbC53cmFwKCc8ZGl2IGNsYXNzPVwiJyArIHNsaWRlci5zZXR0aW5ncy53cmFwcGVyQ2xhc3MgKyAnXCI+PGRpdiBjbGFzcz1cImJ4LXZpZXdwb3J0XCI+PC9kaXY+PC9kaXY+Jyk7XG4gICAgICAvLyBzdG9yZSBhIG5hbWVzcGFjZSByZWZlcmVuY2UgdG8gLmJ4LXZpZXdwb3J0XG4gICAgICBzbGlkZXIudmlld3BvcnQgPSBlbC5wYXJlbnQoKTtcblxuICAgICAgLy8gYWRkIGFyaWEtbGl2ZSBpZiB0aGUgc2V0dGluZyBpcyBlbmFibGVkIGFuZCB0aWNrZXIgbW9kZSBpcyBkaXNhYmxlZFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hcmlhTGl2ZSAmJiAhc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xuICAgICAgICBzbGlkZXIudmlld3BvcnQuYXR0cignYXJpYS1saXZlJywgJ3BvbGl0ZScpO1xuICAgICAgfVxuICAgICAgLy8gYWRkIGEgbG9hZGluZyBkaXYgdG8gZGlzcGxheSB3aGlsZSBpbWFnZXMgYXJlIGxvYWRpbmdcbiAgICAgIHNsaWRlci5sb2FkZXIgPSAkKCc8ZGl2IGNsYXNzPVwiYngtbG9hZGluZ1wiIC8+Jyk7XG4gICAgICBzbGlkZXIudmlld3BvcnQucHJlcGVuZChzbGlkZXIubG9hZGVyKTtcbiAgICAgIC8vIHNldCBlbCB0byBhIG1hc3NpdmUgd2lkdGgsIHRvIGhvbGQgYW55IG5lZWRlZCBzbGlkZXNcbiAgICAgIC8vIGFsc28gc3RyaXAgYW55IG1hcmdpbiBhbmQgcGFkZGluZyBmcm9tIGVsXG4gICAgICBlbC5jc3Moe1xuICAgICAgICB3aWR0aDogc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoICogMTAwMCArIDIxNSkgKyAnJScgOiAnYXV0bycsXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gICAgICB9KTtcbiAgICAgIC8vIGlmIHVzaW5nIENTUywgYWRkIHRoZSBlYXNpbmcgcHJvcGVydHlcbiAgICAgIGlmIChzbGlkZXIudXNpbmdDU1MgJiYgc2xpZGVyLnNldHRpbmdzLmVhc2luZykge1xuICAgICAgICBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24nLCBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nKTtcbiAgICAgIC8vIGlmIG5vdCB1c2luZyBDU1MgYW5kIG5vIGVhc2luZyB2YWx1ZSB3YXMgc3VwcGxpZWQsIHVzZSB0aGUgZGVmYXVsdCBKUyBhbmltYXRpb24gZWFzaW5nIChzd2luZylcbiAgICAgIH0gZWxzZSBpZiAoIXNsaWRlci5zZXR0aW5ncy5lYXNpbmcpIHtcbiAgICAgICAgc2xpZGVyLnNldHRpbmdzLmVhc2luZyA9ICdzd2luZyc7XG4gICAgICB9XG4gICAgICAvLyBtYWtlIG1vZGlmaWNhdGlvbnMgdG8gdGhlIHZpZXdwb3J0ICguYngtdmlld3BvcnQpXG4gICAgICBzbGlkZXIudmlld3BvcnQuY3NzKHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuICAgICAgfSk7XG4gICAgICBzbGlkZXIudmlld3BvcnQucGFyZW50KCkuY3NzKHtcbiAgICAgICAgbWF4V2lkdGg6IGdldFZpZXdwb3J0TWF4V2lkdGgoKVxuICAgICAgfSk7XG4gICAgICAvLyBhcHBseSBjc3MgdG8gYWxsIHNsaWRlciBjaGlsZHJlblxuICAgICAgc2xpZGVyLmNoaWxkcmVuLmNzcyh7XG4gICAgICAgIGZsb2F0OiBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gJ2xlZnQnIDogJ25vbmUnLFxuICAgICAgICBsaXN0U3R5bGU6ICdub25lJyxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgICAgIH0pO1xuICAgICAgLy8gYXBwbHkgdGhlIGNhbGN1bGF0ZWQgd2lkdGggYWZ0ZXIgdGhlIGZsb2F0IGlzIGFwcGxpZWQgdG8gcHJldmVudCBzY3JvbGxiYXIgaW50ZXJmZXJlbmNlXG4gICAgICBzbGlkZXIuY2hpbGRyZW4uY3NzKCd3aWR0aCcsIGdldFNsaWRlV2lkdGgoKSk7XG4gICAgICAvLyBpZiBzbGlkZU1hcmdpbiBpcyBzdXBwbGllZCwgYWRkIHRoZSBjc3NcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnICYmIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbiA+IDApIHsgc2xpZGVyLmNoaWxkcmVuLmNzcygnbWFyZ2luUmlnaHQnLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pOyB9XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgJiYgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luID4gMCkgeyBzbGlkZXIuY2hpbGRyZW4uY3NzKCdtYXJnaW5Cb3R0b20nLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pOyB9XG4gICAgICAvLyBpZiBcImZhZGVcIiBtb2RlLCBhZGQgcG9zaXRpb25pbmcgYW5kIHotaW5kZXggQ1NTXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdmYWRlJykge1xuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uY3NzKHtcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICB6SW5kZXg6IDAsXG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnXG4gICAgICAgIH0pO1xuICAgICAgICAvLyBwcmVwYXJlIHRoZSB6LWluZGV4IG9uIHRoZSBzaG93aW5nIGVsZW1lbnRcbiAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlKS5jc3Moe3pJbmRleDogc2xpZGVyLnNldHRpbmdzLnNsaWRlWkluZGV4LCBkaXNwbGF5OiAnYmxvY2snfSk7XG4gICAgICB9XG4gICAgICAvLyBjcmVhdGUgYW4gZWxlbWVudCB0byBjb250YWluIGFsbCBzbGlkZXIgY29udHJvbHMgKHBhZ2VyLCBzdGFydCAvIHN0b3AsIGV0YylcbiAgICAgIHNsaWRlci5jb250cm9scy5lbCA9ICQoJzxkaXYgY2xhc3M9XCJieC1jb250cm9sc1wiIC8+Jyk7XG4gICAgICAvLyBpZiBjYXB0aW9ucyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5jYXB0aW9ucykgeyBhcHBlbmRDYXB0aW9ucygpOyB9XG4gICAgICAvLyBjaGVjayBpZiBzdGFydFNsaWRlIGlzIGxhc3Qgc2xpZGVcbiAgICAgIHNsaWRlci5hY3RpdmUubGFzdCA9IHNsaWRlci5zZXR0aW5ncy5zdGFydFNsaWRlID09PSBnZXRQYWdlclF0eSgpIC0gMTtcbiAgICAgIC8vIGlmIHZpZGVvIGlzIHRydWUsIHNldCB1cCB0aGUgZml0VmlkcyBwbHVnaW5cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MudmlkZW8pIHsgZWwuZml0VmlkcygpOyB9XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnByZWxvYWRJbWFnZXMgPT09ICdhbGwnIHx8IHNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHsgcHJlbG9hZFNlbGVjdG9yID0gc2xpZGVyLmNoaWxkcmVuOyB9XG4gICAgICAvLyBvbmx5IGNoZWNrIGZvciBjb250cm9sIGFkZGl0aW9uIGlmIG5vdCBpbiBcInRpY2tlclwiIG1vZGVcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xuICAgICAgICAvLyBpZiBjb250cm9scyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmNvbnRyb2xzKSB7IGFwcGVuZENvbnRyb2xzKCk7IH1cbiAgICAgICAgLy8gaWYgYXV0byBpcyB0cnVlLCBhbmQgYXV0byBjb250cm9scyBhcmUgcmVxdWVzdGVkLCBhZGQgdGhlbVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scykgeyBhcHBlbmRDb250cm9sc0F1dG8oKTsgfVxuICAgICAgICAvLyBpZiBwYWdlciBpcyByZXF1ZXN0ZWQsIGFkZCBpdFxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyKSB7IGFwcGVuZFBhZ2VyKCk7IH1cbiAgICAgICAgLy8gaWYgYW55IGNvbnRyb2wgb3B0aW9uIGlzIHJlcXVlc3RlZCwgYWRkIHRoZSBjb250cm9scyB3cmFwcGVyXG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMgfHwgc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9scyB8fCBzbGlkZXIuc2V0dGluZ3MucGFnZXIpIHsgc2xpZGVyLnZpZXdwb3J0LmFmdGVyKHNsaWRlci5jb250cm9scy5lbCk7IH1cbiAgICAgIC8vIGlmIHRpY2tlciBtb2RlLCBkbyBub3QgYWxsb3cgYSBwYWdlclxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVyLnNldHRpbmdzLnBhZ2VyID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBsb2FkRWxlbWVudHMocHJlbG9hZFNlbGVjdG9yLCBzdGFydCk7XG4gICAgfTtcblxuICAgIHZhciBsb2FkRWxlbWVudHMgPSBmdW5jdGlvbihzZWxlY3RvciwgY2FsbGJhY2spIHtcbiAgICAgIHZhciB0b3RhbCA9IHNlbGVjdG9yLmZpbmQoJ2ltZzpub3QoW3NyYz1cIlwiXSksIGlmcmFtZScpLmxlbmd0aCxcbiAgICAgIGNvdW50ID0gMDtcbiAgICAgIGlmICh0b3RhbCA9PT0gMCkge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZWxlY3Rvci5maW5kKCdpbWc6bm90KFtzcmM9XCJcIl0pLCBpZnJhbWUnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLm9uZSgnbG9hZCBlcnJvcicsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmICgrK2NvdW50ID09PSB0b3RhbCkgeyBjYWxsYmFjaygpOyB9XG4gICAgICAgIH0pLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKHRoaXMuY29tcGxldGUpIHsgJCh0aGlzKS50cmlnZ2VyKCdsb2FkJyk7IH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3RhcnQgdGhlIHNsaWRlclxuICAgICAqL1xuICAgIHZhciBzdGFydCA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgaW5maW5pdGUgbG9vcCwgcHJlcGFyZSBhZGRpdGlvbmFsIHNsaWRlc1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3AgJiYgc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICdmYWRlJyAmJiAhc2xpZGVyLnNldHRpbmdzLnRpY2tlcikge1xuICAgICAgICB2YXIgc2xpY2UgICAgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJyA/IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgOiBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzLFxuICAgICAgICBzbGljZUFwcGVuZCAgPSBzbGlkZXIuY2hpbGRyZW4uc2xpY2UoMCwgc2xpY2UpLmNsb25lKHRydWUpLmFkZENsYXNzKCdieC1jbG9uZScpLFxuICAgICAgICBzbGljZVByZXBlbmQgPSBzbGlkZXIuY2hpbGRyZW4uc2xpY2UoLXNsaWNlKS5jbG9uZSh0cnVlKS5hZGRDbGFzcygnYngtY2xvbmUnKTtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hcmlhSGlkZGVuKSB7XG4gICAgICAgICAgc2xpY2VBcHBlbmQuYXR0cignYXJpYS1oaWRkZW4nLCB0cnVlKTtcbiAgICAgICAgICBzbGljZVByZXBlbmQuYXR0cignYXJpYS1oaWRkZW4nLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbC5hcHBlbmQoc2xpY2VBcHBlbmQpLnByZXBlbmQoc2xpY2VQcmVwZW5kKTtcbiAgICAgIH1cbiAgICAgIC8vIHJlbW92ZSB0aGUgbG9hZGluZyBET00gZWxlbWVudFxuICAgICAgc2xpZGVyLmxvYWRlci5yZW1vdmUoKTtcbiAgICAgIC8vIHNldCB0aGUgbGVmdCAvIHRvcCBwb3NpdGlvbiBvZiBcImVsXCJcbiAgICAgIHNldFNsaWRlUG9zaXRpb24oKTtcbiAgICAgIC8vIGlmIFwidmVydGljYWxcIiBtb2RlLCBhbHdheXMgdXNlIGFkYXB0aXZlSGVpZ2h0IHRvIHByZXZlbnQgb2RkIGJlaGF2aW9yXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHsgc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0ID0gdHJ1ZTsgfVxuICAgICAgLy8gc2V0IHRoZSB2aWV3cG9ydCBoZWlnaHRcbiAgICAgIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoZ2V0Vmlld3BvcnRIZWlnaHQoKSk7XG4gICAgICAvLyBtYWtlIHN1cmUgZXZlcnl0aGluZyBpcyBwb3NpdGlvbmVkIGp1c3QgcmlnaHQgKHNhbWUgYXMgYSB3aW5kb3cgcmVzaXplKVxuICAgICAgZWwucmVkcmF3U2xpZGVyKCk7XG4gICAgICAvLyBvblNsaWRlckxvYWQgY2FsbGJhY2tcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5vblNsaWRlckxvYWQuY2FsbChlbCwgc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG4gICAgICAvLyBzbGlkZXIgaGFzIGJlZW4gZnVsbHkgaW5pdGlhbGl6ZWRcbiAgICAgIHNsaWRlci5pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAvLyBiaW5kIHRoZSByZXNpemUgY2FsbCB0byB0aGUgd2luZG93XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnJlc3BvbnNpdmUpIHsgJCh3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsIHJlc2l6ZVdpbmRvdyk7IH1cbiAgICAgIC8vIGlmIGF1dG8gaXMgdHJ1ZSBhbmQgaGFzIG1vcmUgdGhhbiAxIHBhZ2UsIHN0YXJ0IHRoZSBzaG93XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLmF1dG9TdGFydCAmJiAoZ2V0UGFnZXJRdHkoKSA+IDEgfHwgc2xpZGVyLnNldHRpbmdzLmF1dG9TbGlkZUZvck9uZVBhZ2UpKSB7IGluaXRBdXRvKCk7IH1cbiAgICAgIC8vIGlmIHRpY2tlciBpcyB0cnVlLCBzdGFydCB0aGUgdGlja2VyXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnRpY2tlcikgeyBpbml0VGlja2VyKCk7IH1cbiAgICAgIC8vIGlmIHBhZ2VyIGlzIHJlcXVlc3RlZCwgbWFrZSB0aGUgYXBwcm9wcmlhdGUgcGFnZXIgbGluayBhY3RpdmVcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucGFnZXIpIHsgdXBkYXRlUGFnZXJBY3RpdmUoc2xpZGVyLnNldHRpbmdzLnN0YXJ0U2xpZGUpOyB9XG4gICAgICAvLyBjaGVjayBmb3IgYW55IHVwZGF0ZXMgdG8gdGhlIGNvbnRyb2xzIChsaWtlIGhpZGVDb250cm9sT25FbmQgdXBkYXRlcylcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMpIHsgdXBkYXRlRGlyZWN0aW9uQ29udHJvbHMoKTsgfVxuICAgICAgLy8gaWYgdG91Y2hFbmFibGVkIGlzIHRydWUsIHNldHVwIHRoZSB0b3VjaCBldmVudHNcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MudG91Y2hFbmFibGVkICYmICFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7IGluaXRUb3VjaCgpOyB9XG4gICAgICAvLyBpZiBrZXlib2FyZEVuYWJsZWQgaXMgdHJ1ZSwgc2V0dXAgdGhlIGtleWJvYXJkIGV2ZW50c1xuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5rZXlib2FyZEVuYWJsZWQgJiYgIXNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHtcbiAgICAgICAgJChkb2N1bWVudCkua2V5ZG93bihrZXlQcmVzcyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydCwgdXNlZCB0byBkZXRlcm1pbmUgZWl0aGVyIGFkYXB0aXZlSGVpZ2h0IG9yIHRoZSBtYXhIZWlnaHQgdmFsdWVcbiAgICAgKi9cbiAgICB2YXIgZ2V0Vmlld3BvcnRIZWlnaHQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBoZWlnaHQgPSAwO1xuICAgICAgLy8gZmlyc3QgZGV0ZXJtaW5lIHdoaWNoIGNoaWxkcmVuIChzbGlkZXMpIHNob3VsZCBiZSB1c2VkIGluIG91ciBoZWlnaHQgY2FsY3VsYXRpb25cbiAgICAgIHZhciBjaGlsZHJlbiA9ICQoKTtcbiAgICAgIC8vIGlmIG1vZGUgaXMgbm90IFwidmVydGljYWxcIiBhbmQgYWRhcHRpdmVIZWlnaHQgaXMgZmFsc2UsIGluY2x1ZGUgYWxsIGNoaWxkcmVuXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICd2ZXJ0aWNhbCcgJiYgIXNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodCkge1xuICAgICAgICBjaGlsZHJlbiA9IHNsaWRlci5jaGlsZHJlbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGlmIG5vdCBjYXJvdXNlbCwgcmV0dXJuIHRoZSBzaW5nbGUgYWN0aXZlIGNoaWxkXG4gICAgICAgIGlmICghc2xpZGVyLmNhcm91c2VsKSB7XG4gICAgICAgICAgY2hpbGRyZW4gPSBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG4gICAgICAgIC8vIGlmIGNhcm91c2VsLCByZXR1cm4gYSBzbGljZSBvZiBjaGlsZHJlblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGdldCB0aGUgaW5kaXZpZHVhbCBzbGlkZSBpbmRleFxuICAgICAgICAgIHZhciBjdXJyZW50SW5kZXggPSBzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA9PT0gMSA/IHNsaWRlci5hY3RpdmUuaW5kZXggOiBzbGlkZXIuYWN0aXZlLmluZGV4ICogZ2V0TW92ZUJ5KCk7XG4gICAgICAgICAgLy8gYWRkIHRoZSBjdXJyZW50IHNsaWRlIHRvIHRoZSBjaGlsZHJlblxuICAgICAgICAgIGNoaWxkcmVuID0gc2xpZGVyLmNoaWxkcmVuLmVxKGN1cnJlbnRJbmRleCk7XG4gICAgICAgICAgLy8gY3ljbGUgdGhyb3VnaCB0aGUgcmVtYWluaW5nIFwic2hvd2luZ1wiIHNsaWRlc1xuICAgICAgICAgIGZvciAoaSA9IDE7IGkgPD0gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAtIDE7IGkrKykge1xuICAgICAgICAgICAgLy8gaWYgbG9vcGVkIGJhY2sgdG8gdGhlIHN0YXJ0XG4gICAgICAgICAgICBpZiAoY3VycmVudEluZGV4ICsgaSA+PSBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGNoaWxkcmVuID0gY2hpbGRyZW4uYWRkKHNsaWRlci5jaGlsZHJlbi5lcShpIC0gMSkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbi5hZGQoc2xpZGVyLmNoaWxkcmVuLmVxKGN1cnJlbnRJbmRleCArIGkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIGlmIFwidmVydGljYWxcIiBtb2RlLCBjYWxjdWxhdGUgdGhlIHN1bSBvZiB0aGUgaGVpZ2h0cyBvZiB0aGUgY2hpbGRyZW5cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgICBjaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgaGVpZ2h0ICs9ICQodGhpcykub3V0ZXJIZWlnaHQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGFkZCB1c2VyLXN1cHBsaWVkIG1hcmdpbnNcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbiA+IDApIHtcbiAgICAgICAgICBoZWlnaHQgKz0gc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luICogKHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXMgLSAxKTtcbiAgICAgICAgfVxuICAgICAgLy8gaWYgbm90IFwidmVydGljYWxcIiBtb2RlLCBjYWxjdWxhdGUgdGhlIG1heCBoZWlnaHQgb2YgdGhlIGNoaWxkcmVuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoZWlnaHQgPSBNYXRoLm1heC5hcHBseShNYXRoLCBjaGlsZHJlbi5tYXAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuICQodGhpcykub3V0ZXJIZWlnaHQoZmFsc2UpO1xuICAgICAgICB9KS5nZXQoKSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzbGlkZXIudmlld3BvcnQuY3NzKCdib3gtc2l6aW5nJykgPT09ICdib3JkZXItYm94Jykge1xuICAgICAgICBoZWlnaHQgKz0gcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdwYWRkaW5nLXRvcCcpKSArIHBhcnNlRmxvYXQoc2xpZGVyLnZpZXdwb3J0LmNzcygncGFkZGluZy1ib3R0b20nKSkgK1xuICAgICAgICAgICAgICBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ2JvcmRlci10b3Atd2lkdGgnKSkgKyBwYXJzZUZsb2F0KHNsaWRlci52aWV3cG9ydC5jc3MoJ2JvcmRlci1ib3R0b20td2lkdGgnKSk7XG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci52aWV3cG9ydC5jc3MoJ2JveC1zaXppbmcnKSA9PT0gJ3BhZGRpbmctYm94Jykge1xuICAgICAgICBoZWlnaHQgKz0gcGFyc2VGbG9hdChzbGlkZXIudmlld3BvcnQuY3NzKCdwYWRkaW5nLXRvcCcpKSArIHBhcnNlRmxvYXQoc2xpZGVyLnZpZXdwb3J0LmNzcygncGFkZGluZy1ib3R0b20nKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBoZWlnaHQ7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgd2lkdGggdG8gYmUgdXNlZCBmb3IgdGhlIG91dGVyIHdyYXBwZXIgLyB2aWV3cG9ydFxuICAgICAqL1xuICAgIHZhciBnZXRWaWV3cG9ydE1heFdpZHRoID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgd2lkdGggPSAnMTAwJSc7XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPiAwKSB7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgICAgd2lkdGggPSAoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAqIHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoKSArICgoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyAtIDEpICogc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aWR0aCA9IHNsaWRlci5zZXR0aW5ncy5zbGlkZVdpZHRoO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gd2lkdGg7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNhbGN1bGF0ZWQgd2lkdGggdG8gYmUgYXBwbGllZCB0byBlYWNoIHNsaWRlXG4gICAgICovXG4gICAgdmFyIGdldFNsaWRlV2lkdGggPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBuZXdFbFdpZHRoID0gc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGgsIC8vIHN0YXJ0IHdpdGggYW55IHVzZXItc3VwcGxpZWQgc2xpZGUgd2lkdGhcbiAgICAgIHdyYXBXaWR0aCAgICAgID0gc2xpZGVyLnZpZXdwb3J0LndpZHRoKCk7ICAgIC8vIGdldCB0aGUgY3VycmVudCB2aWV3cG9ydCB3aWR0aFxuICAgICAgLy8gaWYgc2xpZGUgd2lkdGggd2FzIG5vdCBzdXBwbGllZCwgb3IgaXMgbGFyZ2VyIHRoYW4gdGhlIHZpZXdwb3J0IHVzZSB0aGUgdmlld3BvcnQgd2lkdGhcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCA9PT0gMCB8fFxuICAgICAgICAoc2xpZGVyLnNldHRpbmdzLnNsaWRlV2lkdGggPiB3cmFwV2lkdGggJiYgIXNsaWRlci5jYXJvdXNlbCkgfHxcbiAgICAgICAgc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgbmV3RWxXaWR0aCA9IHdyYXBXaWR0aDtcbiAgICAgIC8vIGlmIGNhcm91c2VsLCB1c2UgdGhlIHRocmVzaG9sZHMgdG8gZGV0ZXJtaW5lIHRoZSB3aWR0aFxuICAgICAgfSBlbHNlIGlmIChzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzID4gMSAmJiBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgIGlmICh3cmFwV2lkdGggPiBzbGlkZXIubWF4VGhyZXNob2xkKSB7XG4gICAgICAgICAgcmV0dXJuIG5ld0VsV2lkdGg7XG4gICAgICAgIH0gZWxzZSBpZiAod3JhcFdpZHRoIDwgc2xpZGVyLm1pblRocmVzaG9sZCkge1xuICAgICAgICAgIG5ld0VsV2lkdGggPSAod3JhcFdpZHRoIC0gKHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbiAqIChzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzIC0gMSkpKSAvIHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7XG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLnNldHRpbmdzLnNocmlua0l0ZW1zKSB7XG4gICAgICAgICAgbmV3RWxXaWR0aCA9IE1hdGguZmxvb3IoKHdyYXBXaWR0aCArIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbikgLyAoTWF0aC5jZWlsKCh3cmFwV2lkdGggKyBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pIC8gKG5ld0VsV2lkdGggKyBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pKSkgLSBzbGlkZXIuc2V0dGluZ3Muc2xpZGVNYXJnaW4pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3RWxXaWR0aDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHNsaWRlcyBjdXJyZW50bHkgdmlzaWJsZSBpbiB0aGUgdmlld3BvcnQgKGluY2x1ZGVzIHBhcnRpYWxseSB2aXNpYmxlIHNsaWRlcylcbiAgICAgKi9cbiAgICB2YXIgZ2V0TnVtYmVyU2xpZGVzU2hvd2luZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHNsaWRlc1Nob3dpbmcgPSAxLFxuICAgICAgY2hpbGRXaWR0aCA9IG51bGw7XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyAmJiBzbGlkZXIuc2V0dGluZ3Muc2xpZGVXaWR0aCA+IDApIHtcbiAgICAgICAgLy8gaWYgdmlld3BvcnQgaXMgc21hbGxlciB0aGFuIG1pblRocmVzaG9sZCwgcmV0dXJuIG1pblNsaWRlc1xuICAgICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LndpZHRoKCkgPCBzbGlkZXIubWluVGhyZXNob2xkKSB7XG4gICAgICAgICAgc2xpZGVzU2hvd2luZyA9IHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7XG4gICAgICAgIC8vIGlmIHZpZXdwb3J0IGlzIGxhcmdlciB0aGFuIG1heFRocmVzaG9sZCwgcmV0dXJuIG1heFNsaWRlc1xuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci52aWV3cG9ydC53aWR0aCgpID4gc2xpZGVyLm1heFRocmVzaG9sZCkge1xuICAgICAgICAgIHNsaWRlc1Nob3dpbmcgPSBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzO1xuICAgICAgICAvLyBpZiB2aWV3cG9ydCBpcyBiZXR3ZWVuIG1pbiAvIG1heCB0aHJlc2hvbGRzLCBkaXZpZGUgdmlld3BvcnQgd2lkdGggYnkgZmlyc3QgY2hpbGQgd2lkdGhcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGlsZFdpZHRoID0gc2xpZGVyLmNoaWxkcmVuLmZpcnN0KCkud2lkdGgoKSArIHNsaWRlci5zZXR0aW5ncy5zbGlkZU1hcmdpbjtcbiAgICAgICAgICBzbGlkZXNTaG93aW5nID0gTWF0aC5mbG9vcigoc2xpZGVyLnZpZXdwb3J0LndpZHRoKCkgK1xuICAgICAgICAgICAgc2xpZGVyLnNldHRpbmdzLnNsaWRlTWFyZ2luKSAvIGNoaWxkV2lkdGgpO1xuICAgICAgICB9XG4gICAgICAvLyBpZiBcInZlcnRpY2FsXCIgbW9kZSwgc2xpZGVzIHNob3dpbmcgd2lsbCBhbHdheXMgYmUgbWluU2xpZGVzXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7XG4gICAgICAgIHNsaWRlc1Nob3dpbmcgPSBzbGlkZXIuc2V0dGluZ3MubWluU2xpZGVzO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNsaWRlc1Nob3dpbmc7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIG51bWJlciBvZiBwYWdlcyAob25lIGZ1bGwgdmlld3BvcnQgb2Ygc2xpZGVzIGlzIG9uZSBcInBhZ2VcIilcbiAgICAgKi9cbiAgICB2YXIgZ2V0UGFnZXJRdHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBwYWdlclF0eSA9IDAsXG4gICAgICBicmVha1BvaW50ID0gMCxcbiAgICAgIGNvdW50ZXIgPSAwO1xuICAgICAgLy8gaWYgbW92ZVNsaWRlcyBpcyBzcGVjaWZpZWQgYnkgdGhlIHVzZXJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW92ZVNsaWRlcyA+IDApIHtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3ApIHtcbiAgICAgICAgICBwYWdlclF0eSA9IE1hdGguY2VpbChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC8gZ2V0TW92ZUJ5KCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIHdoZW4gYnJlYWtwb2ludCBnb2VzIGFib3ZlIGNoaWxkcmVuIGxlbmd0aCwgY291bnRlciBpcyB0aGUgbnVtYmVyIG9mIHBhZ2VzXG4gICAgICAgICAgd2hpbGUgKGJyZWFrUG9pbnQgPCBzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICArK3BhZ2VyUXR5O1xuICAgICAgICAgICAgYnJlYWtQb2ludCA9IGNvdW50ZXIgKyBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XG4gICAgICAgICAgICBjb3VudGVyICs9IHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzIDw9IGdldE51bWJlclNsaWRlc1Nob3dpbmcoKSA/IHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzIDogZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgLy8gaWYgbW92ZVNsaWRlcyBpcyAwIChhdXRvKSBkaXZpZGUgY2hpbGRyZW4gbGVuZ3RoIGJ5IHNpZGVzIHNob3dpbmcsIHRoZW4gcm91bmQgdXBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhZ2VyUXR5ID0gTWF0aC5jZWlsKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggLyBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHBhZ2VyUXR5O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBudW1iZXIgb2YgaW5kaXZpZHVhbCBzbGlkZXMgYnkgd2hpY2ggdG8gc2hpZnQgdGhlIHNsaWRlclxuICAgICAqL1xuICAgIHZhciBnZXRNb3ZlQnkgPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGlmIG1vdmVTbGlkZXMgd2FzIHNldCBieSB0aGUgdXNlciBhbmQgbW92ZVNsaWRlcyBpcyBsZXNzIHRoYW4gbnVtYmVyIG9mIHNsaWRlcyBzaG93aW5nXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPiAwICYmIHNsaWRlci5zZXR0aW5ncy5tb3ZlU2xpZGVzIDw9IGdldE51bWJlclNsaWRlc1Nob3dpbmcoKSkge1xuICAgICAgICByZXR1cm4gc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXM7XG4gICAgICB9XG4gICAgICAvLyBpZiBtb3ZlU2xpZGVzIGlzIDAgKGF1dG8pXG4gICAgICByZXR1cm4gZ2V0TnVtYmVyU2xpZGVzU2hvd2luZygpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBzbGlkZXIncyAoZWwpIGxlZnQgb3IgdG9wIHBvc2l0aW9uXG4gICAgICovXG4gICAgdmFyIHNldFNsaWRlUG9zaXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBwb3NpdGlvbiwgbGFzdENoaWxkLCBsYXN0U2hvd2luZ0luZGV4O1xuICAgICAgLy8gaWYgbGFzdCBzbGlkZSwgbm90IGluZmluaXRlIGxvb3AsIGFuZCBudW1iZXIgb2YgY2hpbGRyZW4gaXMgbGFyZ2VyIHRoYW4gc3BlY2lmaWVkIG1heFNsaWRlc1xuICAgICAgaWYgKHNsaWRlci5jaGlsZHJlbi5sZW5ndGggPiBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzICYmIHNsaWRlci5hY3RpdmUubGFzdCAmJiAhc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCkge1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBjaGlsZCdzIHBvc2l0aW9uXG4gICAgICAgICAgbGFzdENoaWxkID0gc2xpZGVyLmNoaWxkcmVuLmxhc3QoKTtcbiAgICAgICAgICBwb3NpdGlvbiA9IGxhc3RDaGlsZC5wb3NpdGlvbigpO1xuICAgICAgICAgIC8vIHNldCB0aGUgbGVmdCBwb3NpdGlvblxuICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoLShwb3NpdGlvbi5sZWZ0IC0gKHNsaWRlci52aWV3cG9ydC53aWR0aCgpIC0gbGFzdENoaWxkLm91dGVyV2lkdGgoKSkpLCAncmVzZXQnLCAwKTtcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBzaG93aW5nIGluZGV4J3MgcG9zaXRpb25cbiAgICAgICAgICBsYXN0U2hvd2luZ0luZGV4ID0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAtIHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7XG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEobGFzdFNob3dpbmdJbmRleCkucG9zaXRpb24oKTtcbiAgICAgICAgICAvLyBzZXQgdGhlIHRvcCBwb3NpdGlvblxuICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkoLXBvc2l0aW9uLnRvcCwgJ3Jlc2V0JywgMCk7XG4gICAgICAgIH1cbiAgICAgIC8vIGlmIG5vdCBsYXN0IHNsaWRlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBnZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBzaG93aW5nIHNsaWRlXG4gICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKHNsaWRlci5hY3RpdmUuaW5kZXggKiBnZXRNb3ZlQnkoKSkucG9zaXRpb24oKTtcbiAgICAgICAgLy8gY2hlY2sgZm9yIGxhc3Qgc2xpZGVcbiAgICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IGdldFBhZ2VyUXR5KCkgLSAxKSB7IHNsaWRlci5hY3RpdmUubGFzdCA9IHRydWU7IH1cbiAgICAgICAgLy8gc2V0IHRoZSByZXNwZWN0aXZlIHBvc2l0aW9uXG4gICAgICAgIGlmIChwb3NpdGlvbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcpIHsgc2V0UG9zaXRpb25Qcm9wZXJ0eSgtcG9zaXRpb24ubGVmdCwgJ3Jlc2V0JywgMCk7IH1cbiAgICAgICAgICBlbHNlIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ3ZlcnRpY2FsJykgeyBzZXRQb3NpdGlvblByb3BlcnR5KC1wb3NpdGlvbi50b3AsICdyZXNldCcsIDApOyB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZWwncyBhbmltYXRpbmcgcHJvcGVydHkgcG9zaXRpb24gKHdoaWNoIGluIHR1cm4gd2lsbCBzb21ldGltZXMgYW5pbWF0ZSBlbCkuXG4gICAgICogSWYgdXNpbmcgQ1NTLCBzZXRzIHRoZSB0cmFuc2Zvcm0gcHJvcGVydHkuIElmIG5vdCB1c2luZyBDU1MsIHNldHMgdGhlIHRvcCAvIGxlZnQgcHJvcGVydHkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgKGludClcbiAgICAgKiAgLSB0aGUgYW5pbWF0aW5nIHByb3BlcnR5J3MgdmFsdWVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlIChzdHJpbmcpICdzbGlkZScsICdyZXNldCcsICd0aWNrZXInXG4gICAgICogIC0gdGhlIHR5cGUgb2YgaW5zdGFuY2UgZm9yIHdoaWNoIHRoZSBmdW5jdGlvbiBpcyBiZWluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIGR1cmF0aW9uIChpbnQpXG4gICAgICogIC0gdGhlIGFtb3VudCBvZiB0aW1lIChpbiBtcykgdGhlIHRyYW5zaXRpb24gc2hvdWxkIG9jY3VweVxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcmFtcyAoYXJyYXkpIG9wdGlvbmFsXG4gICAgICogIC0gYW4gb3B0aW9uYWwgcGFyYW1ldGVyIGNvbnRhaW5pbmcgYW55IHZhcmlhYmxlcyB0aGF0IG5lZWQgdG8gYmUgcGFzc2VkIGluXG4gICAgICovXG4gICAgdmFyIHNldFBvc2l0aW9uUHJvcGVydHkgPSBmdW5jdGlvbih2YWx1ZSwgdHlwZSwgZHVyYXRpb24sIHBhcmFtcykge1xuICAgICAgdmFyIGFuaW1hdGVPYmosIHByb3BWYWx1ZTtcbiAgICAgIC8vIHVzZSBDU1MgdHJhbnNmb3JtXG4gICAgICBpZiAoc2xpZGVyLnVzaW5nQ1NTKSB7XG4gICAgICAgIC8vIGRldGVybWluZSB0aGUgdHJhbnNsYXRlM2QgdmFsdWVcbiAgICAgICAgcHJvcFZhbHVlID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICd2ZXJ0aWNhbCcgPyAndHJhbnNsYXRlM2QoMCwgJyArIHZhbHVlICsgJ3B4LCAwKScgOiAndHJhbnNsYXRlM2QoJyArIHZhbHVlICsgJ3B4LCAwLCAwKSc7XG4gICAgICAgIC8vIGFkZCB0aGUgQ1NTIHRyYW5zaXRpb24tZHVyYXRpb25cbiAgICAgICAgZWwuY3NzKCctJyArIHNsaWRlci5jc3NQcmVmaXggKyAnLXRyYW5zaXRpb24tZHVyYXRpb24nLCBkdXJhdGlvbiAvIDEwMDAgKyAncycpO1xuICAgICAgICBpZiAodHlwZSA9PT0gJ3NsaWRlJykge1xuICAgICAgICAgIC8vIHNldCB0aGUgcHJvcGVydHkgdmFsdWVcbiAgICAgICAgICBlbC5jc3Moc2xpZGVyLmFuaW1Qcm9wLCBwcm9wVmFsdWUpO1xuICAgICAgICAgIGlmIChkdXJhdGlvbiAhPT0gMCkge1xuICAgICAgICAgICAgLy8gYmluZCBhIGNhbGxiYWNrIG1ldGhvZCAtIGV4ZWN1dGVzIHdoZW4gQ1NTIHRyYW5zaXRpb24gY29tcGxldGVzXG4gICAgICAgICAgICBlbC5iaW5kKCd0cmFuc2l0aW9uZW5kIHdlYmtpdFRyYW5zaXRpb25FbmQgb1RyYW5zaXRpb25FbmQgTVNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBpdCdzIHRoZSBjb3JyZWN0IG9uZVxuICAgICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmlzKGVsKSkgeyByZXR1cm47IH1cbiAgICAgICAgICAgICAgLy8gdW5iaW5kIHRoZSBjYWxsYmFja1xuICAgICAgICAgICAgICBlbC51bmJpbmQoJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnKTtcbiAgICAgICAgICAgICAgdXBkYXRlQWZ0ZXJTbGlkZVRyYW5zaXRpb24oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7IC8vZHVyYXRpb24gPSAwXG4gICAgICAgICAgICB1cGRhdGVBZnRlclNsaWRlVHJhbnNpdGlvbigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAncmVzZXQnKSB7XG4gICAgICAgICAgZWwuY3NzKHNsaWRlci5hbmltUHJvcCwgcHJvcFZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAndGlja2VyJykge1xuICAgICAgICAgIC8vIG1ha2UgdGhlIHRyYW5zaXRpb24gdXNlICdsaW5lYXInXG4gICAgICAgICAgZWwuY3NzKCctJyArIHNsaWRlci5jc3NQcmVmaXggKyAnLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJywgJ2xpbmVhcicpO1xuICAgICAgICAgIGVsLmNzcyhzbGlkZXIuYW5pbVByb3AsIHByb3BWYWx1ZSk7XG4gICAgICAgICAgaWYgKGR1cmF0aW9uICE9PSAwKSB7XG4gICAgICAgICAgICBlbC5iaW5kKCd0cmFuc2l0aW9uZW5kIHdlYmtpdFRyYW5zaXRpb25FbmQgb1RyYW5zaXRpb25FbmQgTVNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBpdCdzIHRoZSBjb3JyZWN0IG9uZVxuICAgICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmlzKGVsKSkgeyByZXR1cm47IH1cbiAgICAgICAgICAgICAgLy8gdW5iaW5kIHRoZSBjYWxsYmFja1xuICAgICAgICAgICAgICBlbC51bmJpbmQoJ3RyYW5zaXRpb25lbmQgd2Via2l0VHJhbnNpdGlvbkVuZCBvVHJhbnNpdGlvbkVuZCBNU1RyYW5zaXRpb25FbmQnKTtcbiAgICAgICAgICAgICAgLy8gcmVzZXQgdGhlIHBvc2l0aW9uXG4gICAgICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkocGFyYW1zLnJlc2V0VmFsdWUsICdyZXNldCcsIDApO1xuICAgICAgICAgICAgICAvLyBzdGFydCB0aGUgbG9vcCBhZ2FpblxuICAgICAgICAgICAgICB0aWNrZXJMb29wKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2UgeyAvL2R1cmF0aW9uID0gMFxuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShwYXJhbXMucmVzZXRWYWx1ZSwgJ3Jlc2V0JywgMCk7XG4gICAgICAgICAgICB0aWNrZXJMb29wKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAvLyB1c2UgSlMgYW5pbWF0ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYW5pbWF0ZU9iaiA9IHt9O1xuICAgICAgICBhbmltYXRlT2JqW3NsaWRlci5hbmltUHJvcF0gPSB2YWx1ZTtcbiAgICAgICAgaWYgKHR5cGUgPT09ICdzbGlkZScpIHtcbiAgICAgICAgICBlbC5hbmltYXRlKGFuaW1hdGVPYmosIGR1cmF0aW9uLCBzbGlkZXIuc2V0dGluZ3MuZWFzaW5nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHVwZGF0ZUFmdGVyU2xpZGVUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3Jlc2V0Jykge1xuICAgICAgICAgIGVsLmNzcyhzbGlkZXIuYW5pbVByb3AsIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAndGlja2VyJykge1xuICAgICAgICAgIGVsLmFuaW1hdGUoYW5pbWF0ZU9iaiwgZHVyYXRpb24sICdsaW5lYXInLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNldFBvc2l0aW9uUHJvcGVydHkocGFyYW1zLnJlc2V0VmFsdWUsICdyZXNldCcsIDApO1xuICAgICAgICAgICAgLy8gcnVuIHRoZSByZWN1cnNpdmUgbG9vcCBhZnRlciBhbmltYXRpb25cbiAgICAgICAgICAgIHRpY2tlckxvb3AoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQb3B1bGF0ZXMgdGhlIHBhZ2VyIHdpdGggcHJvcGVyIGFtb3VudCBvZiBwYWdlc1xuICAgICAqL1xuICAgIHZhciBwb3B1bGF0ZVBhZ2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcGFnZXJIdG1sID0gJycsXG4gICAgICBsaW5rQ29udGVudCA9ICcnLFxuICAgICAgcGFnZXJRdHkgPSBnZXRQYWdlclF0eSgpO1xuICAgICAgLy8gbG9vcCB0aHJvdWdoIGVhY2ggcGFnZXIgaXRlbVxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWdlclF0eTsgaSsrKSB7XG4gICAgICAgIGxpbmtDb250ZW50ID0gJyc7XG4gICAgICAgIC8vIGlmIGEgYnVpbGRQYWdlciBmdW5jdGlvbiBpcyBzdXBwbGllZCwgdXNlIGl0IHRvIGdldCBwYWdlciBsaW5rIHZhbHVlLCBlbHNlIHVzZSBpbmRleCArIDFcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5idWlsZFBhZ2VyICYmICQuaXNGdW5jdGlvbihzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcikgfHwgc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKTtcbiAgICAgICAgICBzbGlkZXIucGFnZXJFbC5hZGRDbGFzcygnYngtY3VzdG9tLXBhZ2VyJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGlua0NvbnRlbnQgPSBpICsgMTtcbiAgICAgICAgICBzbGlkZXIucGFnZXJFbC5hZGRDbGFzcygnYngtZGVmYXVsdC1wYWdlcicpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHZhciBsaW5rQ29udGVudCA9IHNsaWRlci5zZXR0aW5ncy5idWlsZFBhZ2VyICYmICQuaXNGdW5jdGlvbihzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcikgPyBzbGlkZXIuc2V0dGluZ3MuYnVpbGRQYWdlcihpKSA6IGkgKyAxO1xuICAgICAgICAvLyBhZGQgdGhlIG1hcmt1cCB0byB0aGUgc3RyaW5nXG4gICAgICAgIHBhZ2VySHRtbCArPSAnPGRpdiBjbGFzcz1cImJ4LXBhZ2VyLWl0ZW1cIj48YSBocmVmPVwiXCIgZGF0YS1zbGlkZS1pbmRleD1cIicgKyBpICsgJ1wiIGNsYXNzPVwiYngtcGFnZXItbGlua1wiPicgKyBsaW5rQ29udGVudCArICc8L2E+PC9kaXY+JztcbiAgICAgIH1cbiAgICAgIC8vIHBvcHVsYXRlIHRoZSBwYWdlciBlbGVtZW50IHdpdGggcGFnZXIgbGlua3NcbiAgICAgIHNsaWRlci5wYWdlckVsLmh0bWwocGFnZXJIdG1sKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwZW5kcyB0aGUgcGFnZXIgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kUGFnZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XG4gICAgICAgIC8vIGNyZWF0ZSB0aGUgcGFnZXIgRE9NIGVsZW1lbnRcbiAgICAgICAgc2xpZGVyLnBhZ2VyRWwgPSAkKCc8ZGl2IGNsYXNzPVwiYngtcGFnZXJcIiAvPicpO1xuICAgICAgICAvLyBpZiBhIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXQgd2l0aCB0aGUgcGFnZXJcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5wYWdlclNlbGVjdG9yKSB7XG4gICAgICAgICAgJChzbGlkZXIuc2V0dGluZ3MucGFnZXJTZWxlY3RvcikuaHRtbChzbGlkZXIucGFnZXJFbCk7XG4gICAgICAgIC8vIGlmIG5vIHBhZ2VyIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgYWRkIGl0IGFmdGVyIHRoZSB3cmFwcGVyXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLmFkZENsYXNzKCdieC1oYXMtcGFnZXInKS5hcHBlbmQoc2xpZGVyLnBhZ2VyRWwpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHBvcHVsYXRlIHRoZSBwYWdlclxuICAgICAgICBwb3B1bGF0ZVBhZ2VyKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXIucGFnZXJFbCA9ICQoc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKTtcbiAgICAgIH1cbiAgICAgIC8vIGFzc2lnbiB0aGUgcGFnZXIgY2xpY2sgYmluZGluZ1xuICAgICAgc2xpZGVyLnBhZ2VyRWwub24oJ2NsaWNrIHRvdWNoZW5kJywgJ2EnLCBjbGlja1BhZ2VyQmluZCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFwcGVuZHMgcHJldiAvIG5leHQgY29udHJvbHMgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kQ29udHJvbHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHNsaWRlci5jb250cm9scy5uZXh0ID0gJCgnPGEgY2xhc3M9XCJieC1uZXh0XCIgaHJlZj1cIlwiPicgKyBzbGlkZXIuc2V0dGluZ3MubmV4dFRleHQgKyAnPC9hPicpO1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYgPSAkKCc8YSBjbGFzcz1cImJ4LXByZXZcIiBocmVmPVwiXCI+JyArIHNsaWRlci5zZXR0aW5ncy5wcmV2VGV4dCArICc8L2E+Jyk7XG4gICAgICAvLyBiaW5kIGNsaWNrIGFjdGlvbnMgdG8gdGhlIGNvbnRyb2xzXG4gICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5iaW5kKCdjbGljayB0b3VjaGVuZCcsIGNsaWNrTmV4dEJpbmQpO1xuICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYuYmluZCgnY2xpY2sgdG91Y2hlbmQnLCBjbGlja1ByZXZCaW5kKTtcbiAgICAgIC8vIGlmIG5leHRTZWxlY3RvciB3YXMgc3VwcGxpZWQsIHBvcHVsYXRlIGl0XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm5leHRTZWxlY3Rvcikge1xuICAgICAgICAkKHNsaWRlci5zZXR0aW5ncy5uZXh0U2VsZWN0b3IpLmFwcGVuZChzbGlkZXIuY29udHJvbHMubmV4dCk7XG4gICAgICB9XG4gICAgICAvLyBpZiBwcmV2U2VsZWN0b3Igd2FzIHN1cHBsaWVkLCBwb3B1bGF0ZSBpdFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5wcmV2U2VsZWN0b3IpIHtcbiAgICAgICAgJChzbGlkZXIuc2V0dGluZ3MucHJldlNlbGVjdG9yKS5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLnByZXYpO1xuICAgICAgfVxuICAgICAgLy8gaWYgbm8gY3VzdG9tIHNlbGVjdG9ycyB3ZXJlIHN1cHBsaWVkXG4gICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5uZXh0U2VsZWN0b3IgJiYgIXNsaWRlci5zZXR0aW5ncy5wcmV2U2VsZWN0b3IpIHtcbiAgICAgICAgLy8gYWRkIHRoZSBjb250cm9scyB0byB0aGUgRE9NXG4gICAgICAgIHNsaWRlci5jb250cm9scy5kaXJlY3Rpb25FbCA9ICQoJzxkaXYgY2xhc3M9XCJieC1jb250cm9scy1kaXJlY3Rpb25cIiAvPicpO1xuICAgICAgICAvLyBhZGQgdGhlIGNvbnRyb2wgZWxlbWVudHMgdG8gdGhlIGRpcmVjdGlvbkVsXG4gICAgICAgIHNsaWRlci5jb250cm9scy5kaXJlY3Rpb25FbC5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLnByZXYpLmFwcGVuZChzbGlkZXIuY29udHJvbHMubmV4dCk7XG4gICAgICAgIC8vIHNsaWRlci52aWV3cG9ydC5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLmRpcmVjdGlvbkVsKTtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLmFkZENsYXNzKCdieC1oYXMtY29udHJvbHMtZGlyZWN0aW9uJykuYXBwZW5kKHNsaWRlci5jb250cm9scy5kaXJlY3Rpb25FbCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEFwcGVuZHMgc3RhcnQgLyBzdG9wIGF1dG8gY29udHJvbHMgdG8gdGhlIGNvbnRyb2xzIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgYXBwZW5kQ29udHJvbHNBdXRvID0gZnVuY3Rpb24oKSB7XG4gICAgICBzbGlkZXIuY29udHJvbHMuc3RhcnQgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtYXV0by1pdGVtXCI+PGEgY2xhc3M9XCJieC1zdGFydFwiIGhyZWY9XCJcIj4nICsgc2xpZGVyLnNldHRpbmdzLnN0YXJ0VGV4dCArICc8L2E+PC9kaXY+Jyk7XG4gICAgICBzbGlkZXIuY29udHJvbHMuc3RvcCA9ICQoJzxkaXYgY2xhc3M9XCJieC1jb250cm9scy1hdXRvLWl0ZW1cIj48YSBjbGFzcz1cImJ4LXN0b3BcIiBocmVmPVwiXCI+JyArIHNsaWRlci5zZXR0aW5ncy5zdG9wVGV4dCArICc8L2E+PC9kaXY+Jyk7XG4gICAgICAvLyBhZGQgdGhlIGNvbnRyb2xzIHRvIHRoZSBET01cbiAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwgPSAkKCc8ZGl2IGNsYXNzPVwiYngtY29udHJvbHMtYXV0b1wiIC8+Jyk7XG4gICAgICAvLyBiaW5kIGNsaWNrIGFjdGlvbnMgdG8gdGhlIGNvbnRyb2xzXG4gICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLm9uKCdjbGljaycsICcuYngtc3RhcnQnLCBjbGlja1N0YXJ0QmluZCk7XG4gICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLm9uKCdjbGljaycsICcuYngtc3RvcCcsIGNsaWNrU3RvcEJpbmQpO1xuICAgICAgLy8gaWYgYXV0b0NvbnRyb2xzQ29tYmluZSwgaW5zZXJ0IG9ubHkgdGhlIFwic3RhcnRcIiBjb250cm9sXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9Db250cm9sc0NvbWJpbmUpIHtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmF1dG9FbC5hcHBlbmQoc2xpZGVyLmNvbnRyb2xzLnN0YXJ0KTtcbiAgICAgIC8vIGlmIGF1dG9Db250cm9sc0NvbWJpbmUgaXMgZmFsc2UsIGluc2VydCBib3RoIGNvbnRyb2xzXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLmFwcGVuZChzbGlkZXIuY29udHJvbHMuc3RhcnQpLmFwcGVuZChzbGlkZXIuY29udHJvbHMuc3RvcCk7XG4gICAgICB9XG4gICAgICAvLyBpZiBhdXRvIGNvbnRyb2xzIHNlbGVjdG9yIHdhcyBzdXBwbGllZCwgcG9wdWxhdGUgaXQgd2l0aCB0aGUgY29udHJvbHNcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzU2VsZWN0b3IpIHtcbiAgICAgICAgJChzbGlkZXIuc2V0dGluZ3MuYXV0b0NvbnRyb2xzU2VsZWN0b3IpLmh0bWwoc2xpZGVyLmNvbnRyb2xzLmF1dG9FbCk7XG4gICAgICAvLyBpZiBhdXRvIGNvbnRyb2xzIHNlbGVjdG9yIHdhcyBub3Qgc3VwcGxpZWQsIGFkZCBpdCBhZnRlciB0aGUgd3JhcHBlclxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVyLmNvbnRyb2xzLmVsLmFkZENsYXNzKCdieC1oYXMtY29udHJvbHMtYXV0bycpLmFwcGVuZChzbGlkZXIuY29udHJvbHMuYXV0b0VsKTtcbiAgICAgIH1cbiAgICAgIC8vIHVwZGF0ZSB0aGUgYXV0byBjb250cm9sc1xuICAgICAgdXBkYXRlQXV0b0NvbnRyb2xzKHNsaWRlci5zZXR0aW5ncy5hdXRvU3RhcnQgPyAnc3RvcCcgOiAnc3RhcnQnKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQXBwZW5kcyBpbWFnZSBjYXB0aW9ucyB0byB0aGUgRE9NXG4gICAgICovXG4gICAgdmFyIGFwcGVuZENhcHRpb25zID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBjeWNsZSB0aHJvdWdoIGVhY2ggY2hpbGRcbiAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIC8vIGdldCB0aGUgaW1hZ2UgdGl0bGUgYXR0cmlidXRlXG4gICAgICAgIHZhciB0aXRsZSA9ICQodGhpcykuZmluZCgnaW1nOmZpcnN0JykuYXR0cigndGl0bGUnKTtcbiAgICAgICAgLy8gYXBwZW5kIHRoZSBjYXB0aW9uXG4gICAgICAgIGlmICh0aXRsZSAhPT0gdW5kZWZpbmVkICYmICgnJyArIHRpdGxlKS5sZW5ndGgpIHtcbiAgICAgICAgICAkKHRoaXMpLmFwcGVuZCgnPGRpdiBjbGFzcz1cImJ4LWNhcHRpb25cIj48c3Bhbj4nICsgdGl0bGUgKyAnPC9zcGFuPjwvZGl2PicpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2xpY2sgbmV4dCBiaW5kaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBjbGlja05leHRCaW5kID0gZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5lbC5oYXNDbGFzcygnZGlzYWJsZWQnKSkgeyByZXR1cm47IH1cbiAgICAgIC8vIGlmIGF1dG8gc2hvdyBpcyBydW5uaW5nLCBzdG9wIGl0XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gJiYgc2xpZGVyLnNldHRpbmdzLnN0b3BBdXRvT25DbGljaykgeyBlbC5zdG9wQXV0bygpOyB9XG4gICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENsaWNrIHByZXYgYmluZGluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgY2xpY2tQcmV2QmluZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMuZWwuaGFzQ2xhc3MoJ2Rpc2FibGVkJykpIHsgcmV0dXJuOyB9XG4gICAgICAvLyBpZiBhdXRvIHNob3cgaXMgcnVubmluZywgc3RvcCBpdFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvICYmIHNsaWRlci5zZXR0aW5ncy5zdG9wQXV0b09uQ2xpY2spIHsgZWwuc3RvcEF1dG8oKTsgfVxuICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbGljayBzdGFydCBiaW5kaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBjbGlja1N0YXJ0QmluZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIGVsLnN0YXJ0QXV0bygpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbGljayBzdG9wIGJpbmRpbmdcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIGNsaWNrU3RvcEJpbmQgPSBmdW5jdGlvbihlKSB7XG4gICAgICBlbC5zdG9wQXV0bygpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbGljayBwYWdlciBiaW5kaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBjbGlja1BhZ2VyQmluZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBwYWdlckxpbmssIHBhZ2VySW5kZXg7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLmVsLmhhc0NsYXNzKCdkaXNhYmxlZCcpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIGlmIGF1dG8gc2hvdyBpcyBydW5uaW5nLCBzdG9wIGl0XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG8gICYmIHNsaWRlci5zZXR0aW5ncy5zdG9wQXV0b09uQ2xpY2spIHsgZWwuc3RvcEF1dG8oKTsgfVxuICAgICAgcGFnZXJMaW5rID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuICAgICAgaWYgKHBhZ2VyTGluay5hdHRyKCdkYXRhLXNsaWRlLWluZGV4JykgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBwYWdlckluZGV4ID0gcGFyc2VJbnQocGFnZXJMaW5rLmF0dHIoJ2RhdGEtc2xpZGUtaW5kZXgnKSk7XG4gICAgICAgIC8vIGlmIGNsaWNrZWQgcGFnZXIgbGluayBpcyBub3QgYWN0aXZlLCBjb250aW51ZSB3aXRoIHRoZSBnb1RvU2xpZGUgY2FsbFxuICAgICAgICBpZiAocGFnZXJJbmRleCAhPT0gc2xpZGVyLmFjdGl2ZS5pbmRleCkgeyBlbC5nb1RvU2xpZGUocGFnZXJJbmRleCk7IH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgcGFnZXIgbGlua3Mgd2l0aCBhbiBhY3RpdmUgY2xhc3NcbiAgICAgKlxuICAgICAqIEBwYXJhbSBzbGlkZUluZGV4IChpbnQpXG4gICAgICogIC0gaW5kZXggb2Ygc2xpZGUgdG8gbWFrZSBhY3RpdmVcbiAgICAgKi9cbiAgICB2YXIgdXBkYXRlUGFnZXJBY3RpdmUgPSBmdW5jdGlvbihzbGlkZUluZGV4KSB7XG4gICAgICAvLyBpZiBcInNob3J0XCIgcGFnZXIgdHlwZVxuICAgICAgdmFyIGxlbiA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7IC8vIG5iIG9mIGNoaWxkcmVuXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyVHlwZSA9PT0gJ3Nob3J0Jykge1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyA+IDEpIHtcbiAgICAgICAgICBsZW4gPSBNYXRoLmNlaWwoc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAvIHNsaWRlci5zZXR0aW5ncy5tYXhTbGlkZXMpO1xuICAgICAgICB9XG4gICAgICAgIHNsaWRlci5wYWdlckVsLmh0bWwoKHNsaWRlSW5kZXggKyAxKSArIHNsaWRlci5zZXR0aW5ncy5wYWdlclNob3J0U2VwYXJhdG9yICsgbGVuKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gcmVtb3ZlIGFsbCBwYWdlciBhY3RpdmUgY2xhc3Nlc1xuICAgICAgc2xpZGVyLnBhZ2VyRWwuZmluZCgnYScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgIC8vIGFwcGx5IHRoZSBhY3RpdmUgY2xhc3MgZm9yIGFsbCBwYWdlcnNcbiAgICAgIHNsaWRlci5wYWdlckVsLmVhY2goZnVuY3Rpb24oaSwgZWwpIHsgJChlbCkuZmluZCgnYScpLmVxKHNsaWRlSW5kZXgpLmFkZENsYXNzKCdhY3RpdmUnKTsgfSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIG5lZWRlZCBhY3Rpb25zIGFmdGVyIGEgc2xpZGUgdHJhbnNpdGlvblxuICAgICAqL1xuICAgIHZhciB1cGRhdGVBZnRlclNsaWRlVHJhbnNpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgaW5maW5pdGUgbG9vcCBpcyB0cnVlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCkge1xuICAgICAgICB2YXIgcG9zaXRpb24gPSAnJztcbiAgICAgICAgLy8gZmlyc3Qgc2xpZGVcbiAgICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IDApIHtcbiAgICAgICAgICAvLyBzZXQgdGhlIG5ldyBwb3NpdGlvblxuICAgICAgICAgIHBvc2l0aW9uID0gc2xpZGVyLmNoaWxkcmVuLmVxKDApLnBvc2l0aW9uKCk7XG4gICAgICAgIC8vIGNhcm91c2VsLCBsYXN0IHNsaWRlXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gZ2V0UGFnZXJRdHkoKSAtIDEgJiYgc2xpZGVyLmNhcm91c2VsKSB7XG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEoKGdldFBhZ2VyUXR5KCkgLSAxKSAqIGdldE1vdmVCeSgpKS5wb3NpdGlvbigpO1xuICAgICAgICAvLyBsYXN0IHNsaWRlXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gMSkucG9zaXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24pIHtcbiAgICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykgeyBzZXRQb3NpdGlvblByb3BlcnR5KC1wb3NpdGlvbi5sZWZ0LCAncmVzZXQnLCAwKTsgfVxuICAgICAgICAgIGVsc2UgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAndmVydGljYWwnKSB7IHNldFBvc2l0aW9uUHJvcGVydHkoLXBvc2l0aW9uLnRvcCwgJ3Jlc2V0JywgMCk7IH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gZGVjbGFyZSB0aGF0IHRoZSB0cmFuc2l0aW9uIGlzIGNvbXBsZXRlXG4gICAgICBzbGlkZXIud29ya2luZyA9IGZhbHNlO1xuICAgICAgLy8gb25TbGlkZUFmdGVyIGNhbGxiYWNrXG4gICAgICBzbGlkZXIuc2V0dGluZ3Mub25TbGlkZUFmdGVyLmNhbGwoZWwsIHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuYWN0aXZlLmluZGV4KSwgc2xpZGVyLm9sZEluZGV4LCBzbGlkZXIuYWN0aXZlLmluZGV4KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgYXV0byBjb250cm9scyBzdGF0ZSAoZWl0aGVyIGFjdGl2ZSwgb3IgY29tYmluZWQgc3dpdGNoKVxuICAgICAqXG4gICAgICogQHBhcmFtIHN0YXRlIChzdHJpbmcpIFwic3RhcnRcIiwgXCJzdG9wXCJcbiAgICAgKiAgLSB0aGUgbmV3IHN0YXRlIG9mIHRoZSBhdXRvIHNob3dcbiAgICAgKi9cbiAgICB2YXIgdXBkYXRlQXV0b0NvbnRyb2xzID0gZnVuY3Rpb24oc3RhdGUpIHtcbiAgICAgIC8vIGlmIGF1dG9Db250cm9sc0NvbWJpbmUgaXMgdHJ1ZSwgcmVwbGFjZSB0aGUgY3VycmVudCBjb250cm9sIHdpdGggdGhlIG5ldyBzdGF0ZVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHNDb21iaW5lKSB7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwuaHRtbChzbGlkZXIuY29udHJvbHNbc3RhdGVdKTtcbiAgICAgIC8vIGlmIGF1dG9Db250cm9sc0NvbWJpbmUgaXMgZmFsc2UsIGFwcGx5IHRoZSBcImFjdGl2ZVwiIGNsYXNzIHRvIHRoZSBhcHByb3ByaWF0ZSBjb250cm9sXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzbGlkZXIuY29udHJvbHMuYXV0b0VsLmZpbmQoJ2EnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5hdXRvRWwuZmluZCgnYTpub3QoLmJ4LScgKyBzdGF0ZSArICcpJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBkaXJlY3Rpb24gY29udHJvbHMgKGNoZWNrcyBpZiBlaXRoZXIgc2hvdWxkIGJlIGhpZGRlbilcbiAgICAgKi9cbiAgICB2YXIgdXBkYXRlRGlyZWN0aW9uQ29udHJvbHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChnZXRQYWdlclF0eSgpID09PSAxKSB7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5wcmV2LmFkZENsYXNzKCdkaXNhYmxlZCcpO1xuICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5hZGRDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgIH0gZWxzZSBpZiAoIXNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3AgJiYgc2xpZGVyLnNldHRpbmdzLmhpZGVDb250cm9sT25FbmQpIHtcbiAgICAgICAgLy8gaWYgZmlyc3Qgc2xpZGVcbiAgICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IDApIHtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMucHJldi5hZGRDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgICBzbGlkZXIuY29udHJvbHMubmV4dC5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgICAgLy8gaWYgbGFzdCBzbGlkZVxuICAgICAgICB9IGVsc2UgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPT09IGdldFBhZ2VyUXR5KCkgLSAxKSB7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLm5leHQuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgIC8vIGlmIGFueSBzbGlkZSBpbiB0aGUgbWlkZGxlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLnByZXYucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgc2xpZGVyLmNvbnRyb2xzLm5leHQucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIGF1dG8gcHJvY2Vzc1xuICAgICAqL1xuICAgIHZhciBpbml0QXV0byA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgYXV0b0RlbGF5IHdhcyBzdXBwbGllZCwgbGF1bmNoIHRoZSBhdXRvIHNob3cgdXNpbmcgYSBzZXRUaW1lb3V0KCkgY2FsbFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvRGVsYXkgPiAwKSB7XG4gICAgICAgIHZhciB0aW1lb3V0ID0gc2V0VGltZW91dChlbC5zdGFydEF1dG8sIHNsaWRlci5zZXR0aW5ncy5hdXRvRGVsYXkpO1xuICAgICAgLy8gaWYgYXV0b0RlbGF5IHdhcyBub3Qgc3VwcGxpZWQsIHN0YXJ0IHRoZSBhdXRvIHNob3cgbm9ybWFsbHlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsLnN0YXJ0QXV0bygpO1xuXG4gICAgICAgIC8vYWRkIGZvY3VzIGFuZCBibHVyIGV2ZW50cyB0byBlbnN1cmUgaXRzIHJ1bm5pbmcgaWYgdGltZW91dCBnZXRzIHBhdXNlZFxuICAgICAgICAkKHdpbmRvdykuZm9jdXMoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZWwuc3RhcnRBdXRvKCk7XG4gICAgICAgIH0pLmJsdXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZWwuc3RvcEF1dG8oKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICAvLyBpZiBhdXRvSG92ZXIgaXMgcmVxdWVzdGVkXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmF1dG9Ib3Zlcikge1xuICAgICAgICAvLyBvbiBlbCBob3ZlclxuICAgICAgICBlbC5ob3ZlcihmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyBpZiB0aGUgYXV0byBzaG93IGlzIGN1cnJlbnRseSBwbGF5aW5nIChoYXMgYW4gYWN0aXZlIGludGVydmFsKVxuICAgICAgICAgIGlmIChzbGlkZXIuaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgIC8vIHN0b3AgdGhlIGF1dG8gc2hvdyBhbmQgcGFzcyB0cnVlIGFyZ3VtZW50IHdoaWNoIHdpbGwgcHJldmVudCBjb250cm9sIHVwZGF0ZVxuICAgICAgICAgICAgZWwuc3RvcEF1dG8odHJ1ZSk7XG4gICAgICAgICAgICAvLyBjcmVhdGUgYSBuZXcgYXV0b1BhdXNlZCB2YWx1ZSB3aGljaCB3aWxsIGJlIHVzZWQgYnkgdGhlIHJlbGF0aXZlIFwibW91c2VvdXRcIiBldmVudFxuICAgICAgICAgICAgc2xpZGVyLmF1dG9QYXVzZWQgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgLy8gaWYgdGhlIGF1dG9QYXVzZWQgdmFsdWUgd2FzIGNyZWF0ZWQgYmUgdGhlIHByaW9yIFwibW91c2VvdmVyXCIgZXZlbnRcbiAgICAgICAgICBpZiAoc2xpZGVyLmF1dG9QYXVzZWQpIHtcbiAgICAgICAgICAgIC8vIHN0YXJ0IHRoZSBhdXRvIHNob3cgYW5kIHBhc3MgdHJ1ZSBhcmd1bWVudCB3aGljaCB3aWxsIHByZXZlbnQgY29udHJvbCB1cGRhdGVcbiAgICAgICAgICAgIGVsLnN0YXJ0QXV0byh0cnVlKTtcbiAgICAgICAgICAgIC8vIHJlc2V0IHRoZSBhdXRvUGF1c2VkIHZhbHVlXG4gICAgICAgICAgICBzbGlkZXIuYXV0b1BhdXNlZCA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIHRpY2tlciBwcm9jZXNzXG4gICAgICovXG4gICAgdmFyIGluaXRUaWNrZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzdGFydFBvc2l0aW9uID0gMCxcbiAgICAgIHBvc2l0aW9uLCB0cmFuc2Zvcm0sIHZhbHVlLCBpZHgsIHJhdGlvLCBwcm9wZXJ0eSwgbmV3U3BlZWQsIHRvdGFsRGltZW5zO1xuICAgICAgLy8gaWYgYXV0b0RpcmVjdGlvbiBpcyBcIm5leHRcIiwgYXBwZW5kIGEgY2xvbmUgb2YgdGhlIGVudGlyZSBzbGlkZXJcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXV0b0RpcmVjdGlvbiA9PT0gJ25leHQnKSB7XG4gICAgICAgIGVsLmFwcGVuZChzbGlkZXIuY2hpbGRyZW4uY2xvbmUoKS5hZGRDbGFzcygnYngtY2xvbmUnKSk7XG4gICAgICAvLyBpZiBhdXRvRGlyZWN0aW9uIGlzIFwicHJldlwiLCBwcmVwZW5kIGEgY2xvbmUgb2YgdGhlIGVudGlyZSBzbGlkZXIsIGFuZCBzZXQgdGhlIGxlZnQgcG9zaXRpb25cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsLnByZXBlbmQoc2xpZGVyLmNoaWxkcmVuLmNsb25lKCkuYWRkQ2xhc3MoJ2J4LWNsb25lJykpO1xuICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5maXJzdCgpLnBvc2l0aW9uKCk7XG4gICAgICAgIHN0YXJ0UG9zaXRpb24gPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLXBvc2l0aW9uLmxlZnQgOiAtcG9zaXRpb24udG9wO1xuICAgICAgfVxuICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShzdGFydFBvc2l0aW9uLCAncmVzZXQnLCAwKTtcbiAgICAgIC8vIGRvIG5vdCBhbGxvdyBjb250cm9scyBpbiB0aWNrZXIgbW9kZVxuICAgICAgc2xpZGVyLnNldHRpbmdzLnBhZ2VyID0gZmFsc2U7XG4gICAgICBzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMgPSBmYWxzZTtcbiAgICAgIHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgPSBmYWxzZTtcbiAgICAgIC8vIGlmIGF1dG9Ib3ZlciBpcyByZXF1ZXN0ZWRcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MudGlja2VySG92ZXIpIHtcbiAgICAgICAgaWYgKHNsaWRlci51c2luZ0NTUykge1xuICAgICAgICAgIGlkeCA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyA0IDogNTtcbiAgICAgICAgICBzbGlkZXIudmlld3BvcnQuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm0gPSBlbC5jc3MoJy0nICsgc2xpZGVyLmNzc1ByZWZpeCArICctdHJhbnNmb3JtJyk7XG4gICAgICAgICAgICB2YWx1ZSA9IHBhcnNlRmxvYXQodHJhbnNmb3JtLnNwbGl0KCcsJylbaWR4XSk7XG4gICAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAncmVzZXQnLCAwKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRvdGFsRGltZW5zID0gMDtcbiAgICAgICAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICAgIHRvdGFsRGltZW5zICs9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAkKHRoaXMpLm91dGVyV2lkdGgodHJ1ZSkgOiAkKHRoaXMpLm91dGVySGVpZ2h0KHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHNwZWVkIHJhdGlvICh1c2VkIHRvIGRldGVybWluZSB0aGUgbmV3IHNwZWVkIHRvIGZpbmlzaCB0aGUgcGF1c2VkIGFuaW1hdGlvbilcbiAgICAgICAgICAgIHJhdGlvID0gc2xpZGVyLnNldHRpbmdzLnNwZWVkIC8gdG90YWxEaW1lbnM7XG4gICAgICAgICAgICAvLyBkZXRlcm1pbmUgd2hpY2ggcHJvcGVydHkgdG8gdXNlXG4gICAgICAgICAgICBwcm9wZXJ0eSA9IHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnaG9yaXpvbnRhbCcgPyAnbGVmdCcgOiAndG9wJztcbiAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgbmV3IHNwZWVkXG4gICAgICAgICAgICBuZXdTcGVlZCA9IHJhdGlvICogKHRvdGFsRGltZW5zIC0gKE1hdGguYWJzKHBhcnNlSW50KHZhbHVlKSkpKTtcbiAgICAgICAgICAgIHRpY2tlckxvb3AobmV3U3BlZWQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIG9uIGVsIGhvdmVyXG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmhvdmVyKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZWwuc3RvcCgpO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSB0b3RhbCB3aWR0aCBvZiBjaGlsZHJlbiAodXNlZCB0byBjYWxjdWxhdGUgdGhlIHNwZWVkIHJhdGlvKVxuICAgICAgICAgICAgdG90YWxEaW1lbnMgPSAwO1xuICAgICAgICAgICAgc2xpZGVyLmNoaWxkcmVuLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgICAgdG90YWxEaW1lbnMgKz0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/ICQodGhpcykub3V0ZXJXaWR0aCh0cnVlKSA6ICQodGhpcykub3V0ZXJIZWlnaHQodHJ1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgc3BlZWQgcmF0aW8gKHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBuZXcgc3BlZWQgdG8gZmluaXNoIHRoZSBwYXVzZWQgYW5pbWF0aW9uKVxuICAgICAgICAgICAgcmF0aW8gPSBzbGlkZXIuc2V0dGluZ3Muc3BlZWQgLyB0b3RhbERpbWVucztcbiAgICAgICAgICAgIC8vIGRldGVybWluZSB3aGljaCBwcm9wZXJ0eSB0byB1c2VcbiAgICAgICAgICAgIHByb3BlcnR5ID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/ICdsZWZ0JyA6ICd0b3AnO1xuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBuZXcgc3BlZWRcbiAgICAgICAgICAgIG5ld1NwZWVkID0gcmF0aW8gKiAodG90YWxEaW1lbnMgLSAoTWF0aC5hYnMocGFyc2VJbnQoZWwuY3NzKHByb3BlcnR5KSkpKSk7XG4gICAgICAgICAgICB0aWNrZXJMb29wKG5ld1NwZWVkKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gc3RhcnQgdGhlIHRpY2tlciBsb29wXG4gICAgICB0aWNrZXJMb29wKCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJ1bnMgYSBjb250aW51b3VzIGxvb3AsIG5ld3MgdGlja2VyLXN0eWxlXG4gICAgICovXG4gICAgdmFyIHRpY2tlckxvb3AgPSBmdW5jdGlvbihyZXN1bWVTcGVlZCkge1xuICAgICAgdmFyIHNwZWVkID0gcmVzdW1lU3BlZWQgPyByZXN1bWVTcGVlZCA6IHNsaWRlci5zZXR0aW5ncy5zcGVlZCxcbiAgICAgIHBvc2l0aW9uID0ge2xlZnQ6IDAsIHRvcDogMH0sXG4gICAgICByZXNldCA9IHtsZWZ0OiAwLCB0b3A6IDB9LFxuICAgICAgYW5pbWF0ZVByb3BlcnR5LCByZXNldFZhbHVlLCBwYXJhbXM7XG5cbiAgICAgIC8vIGlmIFwibmV4dFwiIGFuaW1hdGUgbGVmdCBwb3NpdGlvbiB0byBsYXN0IGNoaWxkLCB0aGVuIHJlc2V0IGxlZnQgdG8gMFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgcG9zaXRpb24gPSBlbC5maW5kKCcuYngtY2xvbmUnKS5maXJzdCgpLnBvc2l0aW9uKCk7XG4gICAgICAvLyBpZiBcInByZXZcIiBhbmltYXRlIGxlZnQgcG9zaXRpb24gdG8gMCwgdGhlbiByZXNldCBsZWZ0IHRvIGZpcnN0IG5vbi1jbG9uZSBjaGlsZFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzZXQgPSBzbGlkZXIuY2hpbGRyZW4uZmlyc3QoKS5wb3NpdGlvbigpO1xuICAgICAgfVxuICAgICAgYW5pbWF0ZVByb3BlcnR5ID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IC1wb3NpdGlvbi5sZWZ0IDogLXBvc2l0aW9uLnRvcDtcbiAgICAgIHJlc2V0VmFsdWUgPSBzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnID8gLXJlc2V0LmxlZnQgOiAtcmVzZXQudG9wO1xuICAgICAgcGFyYW1zID0ge3Jlc2V0VmFsdWU6IHJlc2V0VmFsdWV9O1xuICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShhbmltYXRlUHJvcGVydHksICd0aWNrZXInLCBzcGVlZCwgcGFyYW1zKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgZWwgaXMgb24gc2NyZWVuXG4gICAgICovXG4gICAgdmFyIGlzT25TY3JlZW4gPSBmdW5jdGlvbihlbCkge1xuICAgICAgdmFyIHdpbiA9ICQod2luZG93KSxcbiAgICAgIHZpZXdwb3J0ID0ge1xuICAgICAgICB0b3A6IHdpbi5zY3JvbGxUb3AoKSxcbiAgICAgICAgbGVmdDogd2luLnNjcm9sbExlZnQoKVxuICAgICAgfSxcbiAgICAgIGJvdW5kcyA9IGVsLm9mZnNldCgpO1xuXG4gICAgICB2aWV3cG9ydC5yaWdodCA9IHZpZXdwb3J0LmxlZnQgKyB3aW4ud2lkdGgoKTtcbiAgICAgIHZpZXdwb3J0LmJvdHRvbSA9IHZpZXdwb3J0LnRvcCArIHdpbi5oZWlnaHQoKTtcbiAgICAgIGJvdW5kcy5yaWdodCA9IGJvdW5kcy5sZWZ0ICsgZWwub3V0ZXJXaWR0aCgpO1xuICAgICAgYm91bmRzLmJvdHRvbSA9IGJvdW5kcy50b3AgKyBlbC5vdXRlckhlaWdodCgpO1xuXG4gICAgICByZXR1cm4gKCEodmlld3BvcnQucmlnaHQgPCBib3VuZHMubGVmdCB8fCB2aWV3cG9ydC5sZWZ0ID4gYm91bmRzLnJpZ2h0IHx8IHZpZXdwb3J0LmJvdHRvbSA8IGJvdW5kcy50b3AgfHwgdmlld3BvcnQudG9wID4gYm91bmRzLmJvdHRvbSkpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyBrZXlib2FyZCBldmVudHNcbiAgICAgKi9cbiAgICB2YXIga2V5UHJlc3MgPSBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgYWN0aXZlRWxlbWVudFRhZyA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgdGFnRmlsdGVycyA9ICdpbnB1dHx0ZXh0YXJlYScsXG4gICAgICBwID0gbmV3IFJlZ0V4cChhY3RpdmVFbGVtZW50VGFnLFsnaSddKSxcbiAgICAgIHJlc3VsdCA9IHAuZXhlYyh0YWdGaWx0ZXJzKTtcblxuICAgICAgaWYgKHJlc3VsdCA9PSBudWxsICYmIGlzT25TY3JlZW4oZWwpKSB7XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDM5KSB7XG4gICAgICAgICAgY2xpY2tOZXh0QmluZChlKTtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09PSAzNykge1xuICAgICAgICAgIGNsaWNrUHJldkJpbmQoZSk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRvdWNoIGV2ZW50c1xuICAgICAqL1xuICAgIHZhciBpbml0VG91Y2ggPSBmdW5jdGlvbigpIHtcbiAgICAgIC8vIGluaXRpYWxpemUgb2JqZWN0IHRvIGNvbnRhaW4gYWxsIHRvdWNoIHZhbHVlc1xuICAgICAgc2xpZGVyLnRvdWNoID0ge1xuICAgICAgICBzdGFydDoge3g6IDAsIHk6IDB9LFxuICAgICAgICBlbmQ6IHt4OiAwLCB5OiAwfVxuICAgICAgfTtcbiAgICAgIHNsaWRlci52aWV3cG9ydC5iaW5kKCd0b3VjaHN0YXJ0IE1TUG9pbnRlckRvd24gcG9pbnRlcmRvd24nLCBvblRvdWNoU3RhcnQpO1xuXG4gICAgICAvL2ZvciBicm93c2VycyB0aGF0IGhhdmUgaW1wbGVtZW50ZWQgcG9pbnRlciBldmVudHMgYW5kIGZpcmUgYSBjbGljayBhZnRlclxuICAgICAgLy9ldmVyeSBwb2ludGVydXAgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHBvaW50ZXJ1cCBpcyBvbiBzYW1lIHNjcmVlbiBsb2NhdGlvbiBhcyBwb2ludGVyZG93biBvciBub3RcbiAgICAgIHNsaWRlci52aWV3cG9ydC5vbignY2xpY2snLCAnLmJ4c2xpZGVyIGEnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmIChzbGlkZXIudmlld3BvcnQuaGFzQ2xhc3MoJ2NsaWNrLWRpc2FibGVkJykpIHtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgc2xpZGVyLnZpZXdwb3J0LnJlbW92ZUNsYXNzKCdjbGljay1kaXNhYmxlZCcpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogRXZlbnQgaGFuZGxlciBmb3IgXCJ0b3VjaHN0YXJ0XCJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIG9uVG91Y2hTdGFydCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIC8vZGlzYWJsZSBzbGlkZXIgY29udHJvbHMgd2hpbGUgdXNlciBpcyBpbnRlcmFjdGluZyB3aXRoIHNsaWRlcyB0byBhdm9pZCBzbGlkZXIgZnJlZXplIHRoYXQgaGFwcGVucyBvbiB0b3VjaCBkZXZpY2VzIHdoZW4gYSBzbGlkZSBzd2lwZSBoYXBwZW5zIGltbWVkaWF0ZWx5IGFmdGVyIGludGVyYWN0aW5nIHdpdGggc2xpZGVyIGNvbnRyb2xzXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwuYWRkQ2xhc3MoJ2Rpc2FibGVkJyk7XG5cbiAgICAgIGlmIChzbGlkZXIud29ya2luZykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNsaWRlci5jb250cm9scy5lbC5yZW1vdmVDbGFzcygnZGlzYWJsZWQnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHJlY29yZCB0aGUgb3JpZ2luYWwgcG9zaXRpb24gd2hlbiB0b3VjaCBzdGFydHNcbiAgICAgICAgc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zID0gZWwucG9zaXRpb24oKTtcbiAgICAgICAgdmFyIG9yaWcgPSBlLm9yaWdpbmFsRXZlbnQsXG4gICAgICAgIHRvdWNoUG9pbnRzID0gKHR5cGVvZiBvcmlnLmNoYW5nZWRUb3VjaGVzICE9PSAndW5kZWZpbmVkJykgPyBvcmlnLmNoYW5nZWRUb3VjaGVzIDogW29yaWddO1xuICAgICAgICAvLyByZWNvcmQgdGhlIHN0YXJ0aW5nIHRvdWNoIHgsIHkgY29vcmRpbmF0ZXNcbiAgICAgICAgc2xpZGVyLnRvdWNoLnN0YXJ0LnggPSB0b3VjaFBvaW50c1swXS5wYWdlWDtcbiAgICAgICAgc2xpZGVyLnRvdWNoLnN0YXJ0LnkgPSB0b3VjaFBvaW50c1swXS5wYWdlWTtcblxuICAgICAgICBpZiAoc2xpZGVyLnZpZXdwb3J0LmdldCgwKS5zZXRQb2ludGVyQ2FwdHVyZSkge1xuICAgICAgICAgIHNsaWRlci5wb2ludGVySWQgPSBvcmlnLnBvaW50ZXJJZDtcbiAgICAgICAgICBzbGlkZXIudmlld3BvcnQuZ2V0KDApLnNldFBvaW50ZXJDYXB0dXJlKHNsaWRlci5wb2ludGVySWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGJpbmQgYSBcInRvdWNobW92ZVwiIGV2ZW50IHRvIHRoZSB2aWV3cG9ydFxuICAgICAgICBzbGlkZXIudmlld3BvcnQuYmluZCgndG91Y2htb3ZlIE1TUG9pbnRlck1vdmUgcG9pbnRlcm1vdmUnLCBvblRvdWNoTW92ZSk7XG4gICAgICAgIC8vIGJpbmQgYSBcInRvdWNoZW5kXCIgZXZlbnQgdG8gdGhlIHZpZXdwb3J0XG4gICAgICAgIHNsaWRlci52aWV3cG9ydC5iaW5kKCd0b3VjaGVuZCBNU1BvaW50ZXJVcCBwb2ludGVydXAnLCBvblRvdWNoRW5kKTtcbiAgICAgICAgc2xpZGVyLnZpZXdwb3J0LmJpbmQoJ01TUG9pbnRlckNhbmNlbCBwb2ludGVyY2FuY2VsJywgb25Qb2ludGVyQ2FuY2VsKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ2FuY2VsIFBvaW50ZXIgZm9yIFdpbmRvd3MgUGhvbmVcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlIChldmVudClcbiAgICAgKiAgLSBET00gZXZlbnQgb2JqZWN0XG4gICAgICovXG4gICAgdmFyIG9uUG9pbnRlckNhbmNlbCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIC8qIG9uUG9pbnRlckNhbmNlbCBoYW5kbGVyIGlzIG5lZWRlZCB0byBkZWFsIHdpdGggc2l0dWF0aW9ucyB3aGVuIGEgdG91Y2hlbmRcbiAgICAgIGRvZXNuJ3QgZmlyZSBhZnRlciBhIHRvdWNoc3RhcnQgKHRoaXMgaGFwcGVucyBvbiB3aW5kb3dzIHBob25lcyBvbmx5KSAqL1xuICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eShzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdCwgJ3Jlc2V0JywgMCk7XG5cbiAgICAgIC8vcmVtb3ZlIGhhbmRsZXJzXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICBzbGlkZXIudmlld3BvcnQudW5iaW5kKCdNU1BvaW50ZXJDYW5jZWwgcG9pbnRlcmNhbmNlbCcsIG9uUG9pbnRlckNhbmNlbCk7XG4gICAgICBzbGlkZXIudmlld3BvcnQudW5iaW5kKCd0b3VjaG1vdmUgTVNQb2ludGVyTW92ZSBwb2ludGVybW92ZScsIG9uVG91Y2hNb3ZlKTtcbiAgICAgIHNsaWRlci52aWV3cG9ydC51bmJpbmQoJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIG9uVG91Y2hFbmQpO1xuICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5nZXQoMCkucmVsZWFzZVBvaW50ZXJDYXB0dXJlKSB7XG4gICAgICAgIHNsaWRlci52aWV3cG9ydC5nZXQoMCkucmVsZWFzZVBvaW50ZXJDYXB0dXJlKHNsaWRlci5wb2ludGVySWQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBFdmVudCBoYW5kbGVyIGZvciBcInRvdWNobW92ZVwiXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZSAoZXZlbnQpXG4gICAgICogIC0gRE9NIGV2ZW50IG9iamVjdFxuICAgICAqL1xuICAgIHZhciBvblRvdWNoTW92ZSA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciBvcmlnID0gZS5vcmlnaW5hbEV2ZW50LFxuICAgICAgdG91Y2hQb2ludHMgPSAodHlwZW9mIG9yaWcuY2hhbmdlZFRvdWNoZXMgIT09ICd1bmRlZmluZWQnKSA/IG9yaWcuY2hhbmdlZFRvdWNoZXMgOiBbb3JpZ10sXG4gICAgICAvLyBpZiBzY3JvbGxpbmcgb24geSBheGlzLCBkbyBub3QgcHJldmVudCBkZWZhdWx0XG4gICAgICB4TW92ZW1lbnQgPSBNYXRoLmFicyh0b3VjaFBvaW50c1swXS5wYWdlWCAtIHNsaWRlci50b3VjaC5zdGFydC54KSxcbiAgICAgIHlNb3ZlbWVudCA9IE1hdGguYWJzKHRvdWNoUG9pbnRzWzBdLnBhZ2VZIC0gc2xpZGVyLnRvdWNoLnN0YXJ0LnkpLFxuICAgICAgdmFsdWUgPSAwLFxuICAgICAgY2hhbmdlID0gMDtcblxuICAgICAgLy8geCBheGlzIHN3aXBlXG4gICAgICBpZiAoKHhNb3ZlbWVudCAqIDMpID4geU1vdmVtZW50ICYmIHNsaWRlci5zZXR0aW5ncy5wcmV2ZW50RGVmYXVsdFN3aXBlWCkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAvLyB5IGF4aXMgc3dpcGVcbiAgICAgIH0gZWxzZSBpZiAoKHlNb3ZlbWVudCAqIDMpID4geE1vdmVtZW50ICYmIHNsaWRlci5zZXR0aW5ncy5wcmV2ZW50RGVmYXVsdFN3aXBlWSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgIT09ICdmYWRlJyAmJiBzbGlkZXIuc2V0dGluZ3Mub25lVG9PbmVUb3VjaCkge1xuICAgICAgICAvLyBpZiBob3Jpem9udGFsLCBkcmFnIGFsb25nIHggYXhpc1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIGNoYW5nZSA9IHRvdWNoUG9pbnRzWzBdLnBhZ2VYIC0gc2xpZGVyLnRvdWNoLnN0YXJ0Lng7XG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdCArIGNoYW5nZTtcbiAgICAgICAgLy8gaWYgdmVydGljYWwsIGRyYWcgYWxvbmcgeSBheGlzXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlID0gdG91Y2hQb2ludHNbMF0ucGFnZVkgLSBzbGlkZXIudG91Y2guc3RhcnQueTtcbiAgICAgICAgICB2YWx1ZSA9IHNsaWRlci50b3VjaC5vcmlnaW5hbFBvcy50b3AgKyBjaGFuZ2U7XG4gICAgICAgIH1cbiAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGhhbmRsZXIgZm9yIFwidG91Y2hlbmRcIlxuICAgICAqXG4gICAgICogQHBhcmFtIGUgKGV2ZW50KVxuICAgICAqICAtIERPTSBldmVudCBvYmplY3RcbiAgICAgKi9cbiAgICB2YXIgb25Ub3VjaEVuZCA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHNsaWRlci52aWV3cG9ydC51bmJpbmQoJ3RvdWNobW92ZSBNU1BvaW50ZXJNb3ZlIHBvaW50ZXJtb3ZlJywgb25Ub3VjaE1vdmUpO1xuICAgICAgLy9lbmFibGUgc2xpZGVyIGNvbnRyb2xzIGFzIHNvb24gYXMgdXNlciBzdG9wcyBpbnRlcmFjaW5nIHdpdGggc2xpZGVzXG4gICAgICBzbGlkZXIuY29udHJvbHMuZWwucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XG4gICAgICB2YXIgb3JpZyAgICA9IGUub3JpZ2luYWxFdmVudCxcbiAgICAgIHRvdWNoUG9pbnRzID0gKHR5cGVvZiBvcmlnLmNoYW5nZWRUb3VjaGVzICE9PSAndW5kZWZpbmVkJykgPyBvcmlnLmNoYW5nZWRUb3VjaGVzIDogW29yaWddLFxuICAgICAgdmFsdWUgICAgICAgPSAwLFxuICAgICAgZGlzdGFuY2UgICAgPSAwO1xuICAgICAgLy8gcmVjb3JkIGVuZCB4LCB5IHBvc2l0aW9uc1xuICAgICAgc2xpZGVyLnRvdWNoLmVuZC54ID0gdG91Y2hQb2ludHNbMF0ucGFnZVg7XG4gICAgICBzbGlkZXIudG91Y2guZW5kLnkgPSB0b3VjaFBvaW50c1swXS5wYWdlWTtcbiAgICAgIC8vIGlmIGZhZGUgbW9kZSwgY2hlY2sgaWYgYWJzb2x1dGUgeCBkaXN0YW5jZSBjbGVhcnMgdGhlIHRocmVzaG9sZFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5tb2RlID09PSAnZmFkZScpIHtcbiAgICAgICAgZGlzdGFuY2UgPSBNYXRoLmFicyhzbGlkZXIudG91Y2guc3RhcnQueCAtIHNsaWRlci50b3VjaC5lbmQueCk7XG4gICAgICAgIGlmIChkaXN0YW5jZSA+PSBzbGlkZXIuc2V0dGluZ3Muc3dpcGVUaHJlc2hvbGQpIHtcbiAgICAgICAgICBpZiAoc2xpZGVyLnRvdWNoLnN0YXJ0LnggPiBzbGlkZXIudG91Y2guZW5kLngpIHtcbiAgICAgICAgICAgIGVsLmdvVG9OZXh0U2xpZGUoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbC5zdG9wQXV0bygpO1xuICAgICAgICB9XG4gICAgICAvLyBub3QgZmFkZSBtb2RlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBjYWxjdWxhdGUgZGlzdGFuY2UgYW5kIGVsJ3MgYW5pbWF0ZSBwcm9wZXJ0eVxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgIGRpc3RhbmNlID0gc2xpZGVyLnRvdWNoLmVuZC54IC0gc2xpZGVyLnRvdWNoLnN0YXJ0Lng7XG4gICAgICAgICAgdmFsdWUgPSBzbGlkZXIudG91Y2gub3JpZ2luYWxQb3MubGVmdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkaXN0YW5jZSA9IHNsaWRlci50b3VjaC5lbmQueSAtIHNsaWRlci50b3VjaC5zdGFydC55O1xuICAgICAgICAgIHZhbHVlID0gc2xpZGVyLnRvdWNoLm9yaWdpbmFsUG9zLnRvcDtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBub3QgaW5maW5pdGUgbG9vcCBhbmQgZmlyc3QgLyBsYXN0IHNsaWRlLCBkbyBub3QgYXR0ZW1wdCBhIHNsaWRlIHRyYW5zaXRpb25cbiAgICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmICgoc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCAmJiBkaXN0YW5jZSA+IDApIHx8IChzbGlkZXIuYWN0aXZlLmxhc3QgJiYgZGlzdGFuY2UgPCAwKSkpIHtcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAncmVzZXQnLCAyMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGNoZWNrIGlmIGRpc3RhbmNlIGNsZWFycyB0aHJlc2hvbGRcbiAgICAgICAgICBpZiAoTWF0aC5hYnMoZGlzdGFuY2UpID49IHNsaWRlci5zZXR0aW5ncy5zd2lwZVRocmVzaG9sZCkge1xuICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDwgMCkge1xuICAgICAgICAgICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBlbC5nb1RvUHJldlNsaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbC5zdG9wQXV0bygpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBlbC5hbmltYXRlKHByb3BlcnR5LCAyMDApO1xuICAgICAgICAgICAgc2V0UG9zaXRpb25Qcm9wZXJ0eSh2YWx1ZSwgJ3Jlc2V0JywgMjAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHNsaWRlci52aWV3cG9ydC51bmJpbmQoJ3RvdWNoZW5kIE1TUG9pbnRlclVwIHBvaW50ZXJ1cCcsIG9uVG91Y2hFbmQpO1xuICAgICAgaWYgKHNsaWRlci52aWV3cG9ydC5nZXQoMCkucmVsZWFzZVBvaW50ZXJDYXB0dXJlKSB7XG4gICAgICAgIHNsaWRlci52aWV3cG9ydC5nZXQoMCkucmVsZWFzZVBvaW50ZXJDYXB0dXJlKHNsaWRlci5wb2ludGVySWQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBXaW5kb3cgcmVzaXplIGV2ZW50IGNhbGxiYWNrXG4gICAgICovXG4gICAgdmFyIHJlc2l6ZVdpbmRvdyA9IGZ1bmN0aW9uKGUpIHtcbiAgICAgIC8vIGRvbid0IGRvIGFueXRoaW5nIGlmIHNsaWRlciBpc24ndCBpbml0aWFsaXplZC5cbiAgICAgIGlmICghc2xpZGVyLmluaXRpYWxpemVkKSB7IHJldHVybjsgfVxuICAgICAgLy8gRGVsYXkgaWYgc2xpZGVyIHdvcmtpbmcuXG4gICAgICBpZiAoc2xpZGVyLndvcmtpbmcpIHtcbiAgICAgICAgd2luZG93LnNldFRpbWVvdXQocmVzaXplV2luZG93LCAxMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBnZXQgdGhlIG5ldyB3aW5kb3cgZGltZW5zIChhZ2FpbiwgdGhhbmsgeW91IElFKVxuICAgICAgICB2YXIgd2luZG93V2lkdGhOZXcgPSAkKHdpbmRvdykud2lkdGgoKSxcbiAgICAgICAgd2luZG93SGVpZ2h0TmV3ID0gJCh3aW5kb3cpLmhlaWdodCgpO1xuICAgICAgICAvLyBtYWtlIHN1cmUgdGhhdCBpdCBpcyBhIHRydWUgd2luZG93IHJlc2l6ZVxuICAgICAgICAvLyAqd2UgbXVzdCBjaGVjayB0aGlzIGJlY2F1c2Ugb3VyIGRpbm9zYXVyIGZyaWVuZCBJRSBmaXJlcyBhIHdpbmRvdyByZXNpemUgZXZlbnQgd2hlbiBjZXJ0YWluIERPTSBlbGVtZW50c1xuICAgICAgICAvLyBhcmUgcmVzaXplZC4gQ2FuIHlvdSBqdXN0IGRpZSBhbHJlYWR5PypcbiAgICAgICAgaWYgKHdpbmRvd1dpZHRoICE9PSB3aW5kb3dXaWR0aE5ldyB8fCB3aW5kb3dIZWlnaHQgIT09IHdpbmRvd0hlaWdodE5ldykge1xuICAgICAgICAgIC8vIHNldCB0aGUgbmV3IHdpbmRvdyBkaW1lbnNcbiAgICAgICAgICB3aW5kb3dXaWR0aCA9IHdpbmRvd1dpZHRoTmV3O1xuICAgICAgICAgIHdpbmRvd0hlaWdodCA9IHdpbmRvd0hlaWdodE5ldztcbiAgICAgICAgICAvLyB1cGRhdGUgYWxsIGR5bmFtaWMgZWxlbWVudHNcbiAgICAgICAgICBlbC5yZWRyYXdTbGlkZXIoKTtcbiAgICAgICAgICAvLyBDYWxsIHVzZXIgcmVzaXplIGhhbmRsZXJcbiAgICAgICAgICBzbGlkZXIuc2V0dGluZ3Mub25TbGlkZXJSZXNpemUuY2FsbChlbCwgc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBhbiBhcmlhLWhpZGRlbj10cnVlIGF0dHJpYnV0ZSB0byBlYWNoIGVsZW1lbnRcbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdGFydFZpc2libGVJbmRleCAoaW50KVxuICAgICAqICAtIHRoZSBmaXJzdCB2aXNpYmxlIGVsZW1lbnQncyBpbmRleFxuICAgICAqL1xuICAgIHZhciBhcHBseUFyaWFIaWRkZW5BdHRyaWJ1dGVzID0gZnVuY3Rpb24oc3RhcnRWaXNpYmxlSW5kZXgpIHtcbiAgICAgIHZhciBudW1iZXJPZlNsaWRlc1Nob3dpbmcgPSBnZXROdW1iZXJTbGlkZXNTaG93aW5nKCk7XG4gICAgICAvLyBvbmx5IGFwcGx5IGF0dHJpYnV0ZXMgaWYgdGhlIHNldHRpbmcgaXMgZW5hYmxlZCBhbmQgbm90IGluIHRpY2tlciBtb2RlXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFIaWRkZW4gJiYgIXNsaWRlci5zZXR0aW5ncy50aWNrZXIpIHtcbiAgICAgICAgLy8gYWRkIGFyaWEtaGlkZGVuPXRydWUgdG8gYWxsIGVsZW1lbnRzXG4gICAgICAgIHNsaWRlci5jaGlsZHJlbi5hdHRyKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gICAgICAgIC8vIGdldCB0aGUgdmlzaWJsZSBlbGVtZW50cyBhbmQgY2hhbmdlIHRvIGFyaWEtaGlkZGVuPWZhbHNlXG4gICAgICAgIHNsaWRlci5jaGlsZHJlbi5zbGljZShzdGFydFZpc2libGVJbmRleCwgc3RhcnRWaXNpYmxlSW5kZXggKyBudW1iZXJPZlNsaWRlc1Nob3dpbmcpLmF0dHIoJ2FyaWEtaGlkZGVuJywgJ2ZhbHNlJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgaW5kZXggYWNjb3JkaW5nIHRvIHByZXNlbnQgcGFnZSByYW5nZVxuICAgICAqXG4gICAgICogQHBhcmFtIHNsaWRlT25kZXggKGludClcbiAgICAgKiAgLSB0aGUgZGVzaXJlZCBzbGlkZSBpbmRleFxuICAgICAqL1xuICAgIHZhciBzZXRTbGlkZUluZGV4ID0gZnVuY3Rpb24oc2xpZGVJbmRleCkge1xuICAgICAgaWYgKHNsaWRlSW5kZXggPCAwKSB7XG4gICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wKSB7XG4gICAgICAgICAgcmV0dXJuIGdldFBhZ2VyUXR5KCkgLSAxO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgLy93ZSBkb24ndCBnbyB0byB1bmRlZmluZWQgc2xpZGVzXG4gICAgICAgICAgcmV0dXJuIHNsaWRlci5hY3RpdmUuaW5kZXg7XG4gICAgICAgIH1cbiAgICAgIC8vIGlmIHNsaWRlSW5kZXggaXMgZ3JlYXRlciB0aGFuIGNoaWxkcmVuIGxlbmd0aCwgc2V0IGFjdGl2ZSBpbmRleCB0byAwICh0aGlzIGhhcHBlbnMgZHVyaW5nIGluZmluaXRlIGxvb3ApXG4gICAgICB9IGVsc2UgaWYgKHNsaWRlSW5kZXggPj0gZ2V0UGFnZXJRdHkoKSkge1xuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCkge1xuICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vd2UgZG9uJ3QgbW92ZSB0byB1bmRlZmluZWQgcGFnZXNcbiAgICAgICAgICByZXR1cm4gc2xpZGVyLmFjdGl2ZS5pbmRleDtcbiAgICAgICAgfVxuICAgICAgLy8gc2V0IGFjdGl2ZSBpbmRleCB0byByZXF1ZXN0ZWQgc2xpZGVcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBzbGlkZUluZGV4O1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgICAqID0gUFVCTElDIEZVTkNUSU9OU1xuICAgICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtcyBzbGlkZSB0cmFuc2l0aW9uIHRvIHRoZSBzcGVjaWZpZWQgc2xpZGVcbiAgICAgKlxuICAgICAqIEBwYXJhbSBzbGlkZUluZGV4IChpbnQpXG4gICAgICogIC0gdGhlIGRlc3RpbmF0aW9uIHNsaWRlJ3MgaW5kZXggKHplcm8tYmFzZWQpXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZGlyZWN0aW9uIChzdHJpbmcpXG4gICAgICogIC0gSU5URVJOQUwgVVNFIE9OTFkgLSB0aGUgZGlyZWN0aW9uIG9mIHRyYXZlbCAoXCJwcmV2XCIgLyBcIm5leHRcIilcbiAgICAgKi9cbiAgICBlbC5nb1RvU2xpZGUgPSBmdW5jdGlvbihzbGlkZUluZGV4LCBkaXJlY3Rpb24pIHtcbiAgICAgIC8vIG9uU2xpZGVCZWZvcmUsIG9uU2xpZGVOZXh0LCBvblNsaWRlUHJldiBjYWxsYmFja3NcbiAgICAgIC8vIEFsbG93IHRyYW5zaXRpb24gY2FuY2VsaW5nIGJhc2VkIG9uIHJldHVybmVkIHZhbHVlXG4gICAgICB2YXIgcGVyZm9ybVRyYW5zaXRpb24gPSB0cnVlLFxuICAgICAgbW92ZUJ5ID0gMCxcbiAgICAgIHBvc2l0aW9uID0ge2xlZnQ6IDAsIHRvcDogMH0sXG4gICAgICBsYXN0Q2hpbGQgPSBudWxsLFxuICAgICAgbGFzdFNob3dpbmdJbmRleCwgZXEsIHZhbHVlLCByZXF1ZXN0RWw7XG4gICAgICAvLyBzdG9yZSB0aGUgb2xkIGluZGV4XG4gICAgICBzbGlkZXIub2xkSW5kZXggPSBzbGlkZXIuYWN0aXZlLmluZGV4O1xuICAgICAgLy9zZXQgbmV3IGluZGV4XG4gICAgICBzbGlkZXIuYWN0aXZlLmluZGV4ID0gc2V0U2xpZGVJbmRleChzbGlkZUluZGV4KTtcblxuICAgICAgLy8gaWYgcGx1Z2luIGlzIGN1cnJlbnRseSBpbiBtb3Rpb24sIGlnbm9yZSByZXF1ZXN0XG4gICAgICBpZiAoc2xpZGVyLndvcmtpbmcgfHwgc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gc2xpZGVyLm9sZEluZGV4KSB7IHJldHVybjsgfVxuICAgICAgLy8gZGVjbGFyZSB0aGF0IHBsdWdpbiBpcyBpbiBtb3Rpb25cbiAgICAgIHNsaWRlci53b3JraW5nID0gdHJ1ZTtcblxuICAgICAgcGVyZm9ybVRyYW5zaXRpb24gPSBzbGlkZXIuc2V0dGluZ3Mub25TbGlkZUJlZm9yZS5jYWxsKGVsLCBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCksIHNsaWRlci5vbGRJbmRleCwgc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG5cbiAgICAgIC8vIElmIHRyYW5zaXRpb25zIGNhbmNlbGVkLCByZXNldCBhbmQgcmV0dXJuXG4gICAgICBpZiAodHlwZW9mIChwZXJmb3JtVHJhbnNpdGlvbikgIT09ICd1bmRlZmluZWQnICYmICFwZXJmb3JtVHJhbnNpdGlvbikge1xuICAgICAgICBzbGlkZXIuYWN0aXZlLmluZGV4ID0gc2xpZGVyLm9sZEluZGV4OyAvLyByZXN0b3JlIG9sZCBpbmRleFxuICAgICAgICBzbGlkZXIud29ya2luZyA9IGZhbHNlOyAvLyBpcyBub3QgaW4gbW90aW9uXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ25leHQnKSB7XG4gICAgICAgIC8vIFByZXZlbnQgY2FuY2VsaW5nIGluIGZ1dHVyZSBmdW5jdGlvbnMgb3IgbGFjayB0aGVyZS1vZiBmcm9tIG5lZ2F0aW5nIHByZXZpb3VzIGNvbW1hbmRzIHRvIGNhbmNlbFxuICAgICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5vblNsaWRlTmV4dC5jYWxsKGVsLCBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCksIHNsaWRlci5vbGRJbmRleCwgc2xpZGVyLmFjdGl2ZS5pbmRleCkpIHtcbiAgICAgICAgICBwZXJmb3JtVHJhbnNpdGlvbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XG4gICAgICAgIC8vIFByZXZlbnQgY2FuY2VsaW5nIGluIGZ1dHVyZSBmdW5jdGlvbnMgb3IgbGFjayB0aGVyZS1vZiBmcm9tIG5lZ2F0aW5nIHByZXZpb3VzIGNvbW1hbmRzIHRvIGNhbmNlbFxuICAgICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5vblNsaWRlUHJldi5jYWxsKGVsLCBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCksIHNsaWRlci5vbGRJbmRleCwgc2xpZGVyLmFjdGl2ZS5pbmRleCkpIHtcbiAgICAgICAgICBwZXJmb3JtVHJhbnNpdGlvbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGNoZWNrIGlmIGxhc3Qgc2xpZGVcbiAgICAgIHNsaWRlci5hY3RpdmUubGFzdCA9IHNsaWRlci5hY3RpdmUuaW5kZXggPj0gZ2V0UGFnZXJRdHkoKSAtIDE7XG4gICAgICAvLyB1cGRhdGUgdGhlIHBhZ2VyIHdpdGggYWN0aXZlIGNsYXNzXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLnBhZ2VyIHx8IHNsaWRlci5zZXR0aW5ncy5wYWdlckN1c3RvbSkgeyB1cGRhdGVQYWdlckFjdGl2ZShzbGlkZXIuYWN0aXZlLmluZGV4KTsgfVxuICAgICAgLy8gLy8gY2hlY2sgZm9yIGRpcmVjdGlvbiBjb250cm9sIHVwZGF0ZVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5jb250cm9scykgeyB1cGRhdGVEaXJlY3Rpb25Db250cm9scygpOyB9XG4gICAgICAvLyBpZiBzbGlkZXIgaXMgc2V0IHRvIG1vZGU6IFwiZmFkZVwiXG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdmYWRlJykge1xuICAgICAgICAvLyBpZiBhZGFwdGl2ZUhlaWdodCBpcyB0cnVlIGFuZCBuZXh0IGhlaWdodCBpcyBkaWZmZXJlbnQgZnJvbSBjdXJyZW50IGhlaWdodCwgYW5pbWF0ZSB0byB0aGUgbmV3IGhlaWdodFxuICAgICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0ICYmIHNsaWRlci52aWV3cG9ydC5oZWlnaHQoKSAhPT0gZ2V0Vmlld3BvcnRIZWlnaHQoKSkge1xuICAgICAgICAgIHNsaWRlci52aWV3cG9ydC5hbmltYXRlKHtoZWlnaHQ6IGdldFZpZXdwb3J0SGVpZ2h0KCl9LCBzbGlkZXIuc2V0dGluZ3MuYWRhcHRpdmVIZWlnaHRTcGVlZCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZmFkZSBvdXQgdGhlIHZpc2libGUgY2hpbGQgYW5kIHJlc2V0IGl0cyB6LWluZGV4IHZhbHVlXG4gICAgICAgIHNsaWRlci5jaGlsZHJlbi5maWx0ZXIoJzp2aXNpYmxlJykuZmFkZU91dChzbGlkZXIuc2V0dGluZ3Muc3BlZWQpLmNzcyh7ekluZGV4OiAwfSk7XG4gICAgICAgIC8vIGZhZGUgaW4gdGhlIG5ld2x5IHJlcXVlc3RlZCBzbGlkZVxuICAgICAgICBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCkuY3NzKCd6SW5kZXgnLCBzbGlkZXIuc2V0dGluZ3Muc2xpZGVaSW5kZXggKyAxKS5mYWRlSW4oc2xpZGVyLnNldHRpbmdzLnNwZWVkLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAkKHRoaXMpLmNzcygnekluZGV4Jywgc2xpZGVyLnNldHRpbmdzLnNsaWRlWkluZGV4KTtcbiAgICAgICAgICB1cGRhdGVBZnRlclNsaWRlVHJhbnNpdGlvbigpO1xuICAgICAgICB9KTtcbiAgICAgIC8vIHNsaWRlciBtb2RlIGlzIG5vdCBcImZhZGVcIlxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gaWYgYWRhcHRpdmVIZWlnaHQgaXMgdHJ1ZSBhbmQgbmV4dCBoZWlnaHQgaXMgZGlmZmVyZW50IGZyb20gY3VycmVudCBoZWlnaHQsIGFuaW1hdGUgdG8gdGhlIG5ldyBoZWlnaHRcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hZGFwdGl2ZUhlaWdodCAmJiBzbGlkZXIudmlld3BvcnQuaGVpZ2h0KCkgIT09IGdldFZpZXdwb3J0SGVpZ2h0KCkpIHtcbiAgICAgICAgICBzbGlkZXIudmlld3BvcnQuYW5pbWF0ZSh7aGVpZ2h0OiBnZXRWaWV3cG9ydEhlaWdodCgpfSwgc2xpZGVyLnNldHRpbmdzLmFkYXB0aXZlSGVpZ2h0U3BlZWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGlmIGNhcm91c2VsIGFuZCBub3QgaW5maW5pdGUgbG9vcFxuICAgICAgICBpZiAoIXNsaWRlci5zZXR0aW5ncy5pbmZpbml0ZUxvb3AgJiYgc2xpZGVyLmNhcm91c2VsICYmIHNsaWRlci5hY3RpdmUubGFzdCkge1xuICAgICAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MubW9kZSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgICAgICAvLyBnZXQgdGhlIGxhc3QgY2hpbGQgcG9zaXRpb25cbiAgICAgICAgICAgIGxhc3RDaGlsZCA9IHNsaWRlci5jaGlsZHJlbi5lcShzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IGxhc3RDaGlsZC5wb3NpdGlvbigpO1xuICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgbGFzdCBzbGlkZVxuICAgICAgICAgICAgbW92ZUJ5ID0gc2xpZGVyLnZpZXdwb3J0LndpZHRoKCkgLSBsYXN0Q2hpbGQub3V0ZXJXaWR0aCgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBnZXQgbGFzdCBzaG93aW5nIGluZGV4IHBvc2l0aW9uXG4gICAgICAgICAgICBsYXN0U2hvd2luZ0luZGV4ID0gc2xpZGVyLmNoaWxkcmVuLmxlbmd0aCAtIHNsaWRlci5zZXR0aW5ncy5taW5TbGlkZXM7XG4gICAgICAgICAgICBwb3NpdGlvbiA9IHNsaWRlci5jaGlsZHJlbi5lcShsYXN0U2hvd2luZ0luZGV4KS5wb3NpdGlvbigpO1xuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBob3Jpem9udGFsIGNhcm91c2VsLCBnb2luZyBwcmV2aW91cyB3aGlsZSBvbiBmaXJzdCBzbGlkZSAoaW5maW5pdGVMb29wIG1vZGUpXG4gICAgICAgIH0gZWxzZSBpZiAoc2xpZGVyLmNhcm91c2VsICYmIHNsaWRlci5hY3RpdmUubGFzdCAmJiBkaXJlY3Rpb24gPT09ICdwcmV2Jykge1xuICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBjaGlsZCBwb3NpdGlvblxuICAgICAgICAgIGVxID0gc2xpZGVyLnNldHRpbmdzLm1vdmVTbGlkZXMgPT09IDEgPyBzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzIC0gZ2V0TW92ZUJ5KCkgOiAoKGdldFBhZ2VyUXR5KCkgLSAxKSAqIGdldE1vdmVCeSgpKSAtIChzbGlkZXIuY2hpbGRyZW4ubGVuZ3RoIC0gc2xpZGVyLnNldHRpbmdzLm1heFNsaWRlcyk7XG4gICAgICAgICAgbGFzdENoaWxkID0gZWwuY2hpbGRyZW4oJy5ieC1jbG9uZScpLmVxKGVxKTtcbiAgICAgICAgICBwb3NpdGlvbiA9IGxhc3RDaGlsZC5wb3NpdGlvbigpO1xuICAgICAgICAvLyBpZiBpbmZpbml0ZSBsb29wIGFuZCBcIk5leHRcIiBpcyBjbGlja2VkIG9uIHRoZSBsYXN0IHNsaWRlXG4gICAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnbmV4dCcgJiYgc2xpZGVyLmFjdGl2ZS5pbmRleCA9PT0gMCkge1xuICAgICAgICAgIC8vIGdldCB0aGUgbGFzdCBjbG9uZSBwb3NpdGlvblxuICAgICAgICAgIHBvc2l0aW9uID0gZWwuZmluZCgnPiAuYngtY2xvbmUnKS5lcShzbGlkZXIuc2V0dGluZ3MubWF4U2xpZGVzKS5wb3NpdGlvbigpO1xuICAgICAgICAgIHNsaWRlci5hY3RpdmUubGFzdCA9IGZhbHNlO1xuICAgICAgICAvLyBub3JtYWwgbm9uLXplcm8gcmVxdWVzdHNcbiAgICAgICAgfSBlbHNlIGlmIChzbGlkZUluZGV4ID49IDApIHtcbiAgICAgICAgICAvL3BhcnNlSW50IGlzIGFwcGxpZWQgdG8gYWxsb3cgZmxvYXRzIGZvciBzbGlkZXMvcGFnZVxuICAgICAgICAgIHJlcXVlc3RFbCA9IHNsaWRlSW5kZXggKiBwYXJzZUludChnZXRNb3ZlQnkoKSk7XG4gICAgICAgICAgcG9zaXRpb24gPSBzbGlkZXIuY2hpbGRyZW4uZXEocmVxdWVzdEVsKS5wb3NpdGlvbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyogSWYgdGhlIHBvc2l0aW9uIGRvZXNuJ3QgZXhpc3RcbiAgICAgICAgICogKGUuZy4gaWYgeW91IGRlc3Ryb3kgdGhlIHNsaWRlciBvbiBhIG5leHQgY2xpY2spLFxuICAgICAgICAgKiBpdCBkb2Vzbid0IHRocm93IGFuIGVycm9yLlxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKHR5cGVvZiAocG9zaXRpb24pICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHZhbHVlID0gc2xpZGVyLnNldHRpbmdzLm1vZGUgPT09ICdob3Jpem9udGFsJyA/IC0ocG9zaXRpb24ubGVmdCAtIG1vdmVCeSkgOiAtcG9zaXRpb24udG9wO1xuICAgICAgICAgIC8vIHBsdWdpbiB2YWx1ZXMgdG8gYmUgYW5pbWF0ZWRcbiAgICAgICAgICBzZXRQb3NpdGlvblByb3BlcnR5KHZhbHVlLCAnc2xpZGUnLCBzbGlkZXIuc2V0dGluZ3Muc3BlZWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNsaWRlci53b3JraW5nID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MuYXJpYUhpZGRlbikgeyBhcHBseUFyaWFIaWRkZW5BdHRyaWJ1dGVzKHNsaWRlci5hY3RpdmUuaW5kZXggKiBnZXRNb3ZlQnkoKSk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVHJhbnNpdGlvbnMgdG8gdGhlIG5leHQgc2xpZGUgaW4gdGhlIHNob3dcbiAgICAgKi9cbiAgICBlbC5nb1RvTmV4dFNsaWRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBpZiBpbmZpbml0ZUxvb3AgaXMgZmFsc2UgYW5kIGxhc3QgcGFnZSBpcyBzaG93aW5nLCBkaXNyZWdhcmQgY2FsbFxuICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MuaW5maW5pdGVMb29wICYmIHNsaWRlci5hY3RpdmUubGFzdCkgeyByZXR1cm47IH1cbiAgICAgIHZhciBwYWdlckluZGV4ID0gcGFyc2VJbnQoc2xpZGVyLmFjdGl2ZS5pbmRleCkgKyAxO1xuICAgICAgZWwuZ29Ub1NsaWRlKHBhZ2VySW5kZXgsICduZXh0Jyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFRyYW5zaXRpb25zIHRvIHRoZSBwcmV2IHNsaWRlIGluIHRoZSBzaG93XG4gICAgICovXG4gICAgZWwuZ29Ub1ByZXZTbGlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgLy8gaWYgaW5maW5pdGVMb29wIGlzIGZhbHNlIGFuZCBsYXN0IHBhZ2UgaXMgc2hvd2luZywgZGlzcmVnYXJkIGNhbGxcbiAgICAgIGlmICghc2xpZGVyLnNldHRpbmdzLmluZmluaXRlTG9vcCAmJiBzbGlkZXIuYWN0aXZlLmluZGV4ID09PSAwKSB7IHJldHVybjsgfVxuICAgICAgdmFyIHBhZ2VySW5kZXggPSBwYXJzZUludChzbGlkZXIuYWN0aXZlLmluZGV4KSAtIDE7XG4gICAgICBlbC5nb1RvU2xpZGUocGFnZXJJbmRleCwgJ3ByZXYnKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3RhcnRzIHRoZSBhdXRvIHNob3dcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwcmV2ZW50Q29udHJvbFVwZGF0ZSAoYm9vbGVhbilcbiAgICAgKiAgLSBpZiB0cnVlLCBhdXRvIGNvbnRyb2xzIHN0YXRlIHdpbGwgbm90IGJlIHVwZGF0ZWRcbiAgICAgKi9cbiAgICBlbC5zdGFydEF1dG8gPSBmdW5jdGlvbihwcmV2ZW50Q29udHJvbFVwZGF0ZSkge1xuICAgICAgLy8gaWYgYW4gaW50ZXJ2YWwgYWxyZWFkeSBleGlzdHMsIGRpc3JlZ2FyZCBjYWxsXG4gICAgICBpZiAoc2xpZGVyLmludGVydmFsKSB7IHJldHVybjsgfVxuICAgICAgLy8gY3JlYXRlIGFuIGludGVydmFsXG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgICAgICBlbC5nb1RvTmV4dFNsaWRlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWwuZ29Ub1ByZXZTbGlkZSgpO1xuICAgICAgICB9XG4gICAgICB9LCBzbGlkZXIuc2V0dGluZ3MucGF1c2UpO1xuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBhcmUgZGlzcGxheWVkIGFuZCBwcmV2ZW50Q29udHJvbFVwZGF0ZSBpcyBub3QgdHJ1ZVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgJiYgcHJldmVudENvbnRyb2xVcGRhdGUgIT09IHRydWUpIHsgdXBkYXRlQXV0b0NvbnRyb2xzKCdzdG9wJyk7IH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogU3RvcHMgdGhlIGF1dG8gc2hvd1xuICAgICAqXG4gICAgICogQHBhcmFtIHByZXZlbnRDb250cm9sVXBkYXRlIChib29sZWFuKVxuICAgICAqICAtIGlmIHRydWUsIGF1dG8gY29udHJvbHMgc3RhdGUgd2lsbCBub3QgYmUgdXBkYXRlZFxuICAgICAqL1xuICAgIGVsLnN0b3BBdXRvID0gZnVuY3Rpb24ocHJldmVudENvbnRyb2xVcGRhdGUpIHtcbiAgICAgIC8vIGlmIG5vIGludGVydmFsIGV4aXN0cywgZGlzcmVnYXJkIGNhbGxcbiAgICAgIGlmICghc2xpZGVyLmludGVydmFsKSB7IHJldHVybjsgfVxuICAgICAgLy8gY2xlYXIgdGhlIGludGVydmFsXG4gICAgICBjbGVhckludGVydmFsKHNsaWRlci5pbnRlcnZhbCk7XG4gICAgICBzbGlkZXIuaW50ZXJ2YWwgPSBudWxsO1xuICAgICAgLy8gaWYgYXV0byBjb250cm9scyBhcmUgZGlzcGxheWVkIGFuZCBwcmV2ZW50Q29udHJvbFVwZGF0ZSBpcyBub3QgdHJ1ZVxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5hdXRvQ29udHJvbHMgJiYgcHJldmVudENvbnRyb2xVcGRhdGUgIT09IHRydWUpIHsgdXBkYXRlQXV0b0NvbnRyb2xzKCdzdGFydCcpOyB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgY3VycmVudCBzbGlkZSBpbmRleCAoemVyby1iYXNlZClcbiAgICAgKi9cbiAgICBlbC5nZXRDdXJyZW50U2xpZGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzbGlkZXIuYWN0aXZlLmluZGV4O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGN1cnJlbnQgc2xpZGUgZWxlbWVudFxuICAgICAqL1xuICAgIGVsLmdldEN1cnJlbnRTbGlkZUVsZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzbGlkZXIuY2hpbGRyZW4uZXEoc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzbGlkZSBlbGVtZW50XG4gICAgICogQHBhcmFtIGluZGV4IChpbnQpXG4gICAgICogIC0gVGhlIGluZGV4ICh6ZXJvLWJhc2VkKSBvZiB0aGUgZWxlbWVudCB5b3Ugd2FudCByZXR1cm5lZC5cbiAgICAgKi9cbiAgICBlbC5nZXRTbGlkZUVsZW1lbnQgPSBmdW5jdGlvbihpbmRleCkge1xuICAgICAgcmV0dXJuIHNsaWRlci5jaGlsZHJlbi5lcShpbmRleCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgbnVtYmVyIG9mIHNsaWRlcyBpbiBzaG93XG4gICAgICovXG4gICAgZWwuZ2V0U2xpZGVDb3VudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybiBzbGlkZXIud29ya2luZyB2YXJpYWJsZVxuICAgICAqL1xuICAgIGVsLmlzV29ya2luZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHNsaWRlci53b3JraW5nO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGUgYWxsIGR5bmFtaWMgc2xpZGVyIGVsZW1lbnRzXG4gICAgICovXG4gICAgZWwucmVkcmF3U2xpZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyByZXNpemUgYWxsIGNoaWxkcmVuIGluIHJhdGlvIHRvIG5ldyBzY3JlZW4gc2l6ZVxuICAgICAgc2xpZGVyLmNoaWxkcmVuLmFkZChlbC5maW5kKCcuYngtY2xvbmUnKSkub3V0ZXJXaWR0aChnZXRTbGlkZVdpZHRoKCkpO1xuICAgICAgLy8gYWRqdXN0IHRoZSBoZWlnaHRcbiAgICAgIHNsaWRlci52aWV3cG9ydC5jc3MoJ2hlaWdodCcsIGdldFZpZXdwb3J0SGVpZ2h0KCkpO1xuICAgICAgLy8gdXBkYXRlIHRoZSBzbGlkZSBwb3NpdGlvblxuICAgICAgaWYgKCFzbGlkZXIuc2V0dGluZ3MudGlja2VyKSB7IHNldFNsaWRlUG9zaXRpb24oKTsgfVxuICAgICAgLy8gaWYgYWN0aXZlLmxhc3Qgd2FzIHRydWUgYmVmb3JlIHRoZSBzY3JlZW4gcmVzaXplLCB3ZSB3YW50XG4gICAgICAvLyB0byBrZWVwIGl0IGxhc3Qgbm8gbWF0dGVyIHdoYXQgc2NyZWVuIHNpemUgd2UgZW5kIG9uXG4gICAgICBpZiAoc2xpZGVyLmFjdGl2ZS5sYXN0KSB7IHNsaWRlci5hY3RpdmUuaW5kZXggPSBnZXRQYWdlclF0eSgpIC0gMTsgfVxuICAgICAgLy8gaWYgdGhlIGFjdGl2ZSBpbmRleCAocGFnZSkgbm8gbG9uZ2VyIGV4aXN0cyBkdWUgdG8gdGhlIHJlc2l6ZSwgc2ltcGx5IHNldCB0aGUgaW5kZXggYXMgbGFzdFxuICAgICAgaWYgKHNsaWRlci5hY3RpdmUuaW5kZXggPj0gZ2V0UGFnZXJRdHkoKSkgeyBzbGlkZXIuYWN0aXZlLmxhc3QgPSB0cnVlOyB9XG4gICAgICAvLyBpZiBhIHBhZ2VyIGlzIGJlaW5nIGRpc3BsYXllZCBhbmQgYSBjdXN0b20gcGFnZXIgaXMgbm90IGJlaW5nIHVzZWQsIHVwZGF0ZSBpdFxuICAgICAgaWYgKHNsaWRlci5zZXR0aW5ncy5wYWdlciAmJiAhc2xpZGVyLnNldHRpbmdzLnBhZ2VyQ3VzdG9tKSB7XG4gICAgICAgIHBvcHVsYXRlUGFnZXIoKTtcbiAgICAgICAgdXBkYXRlUGFnZXJBY3RpdmUoc2xpZGVyLmFjdGl2ZS5pbmRleCk7XG4gICAgICB9XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmFyaWFIaWRkZW4pIHsgYXBwbHlBcmlhSGlkZGVuQXR0cmlidXRlcyhzbGlkZXIuYWN0aXZlLmluZGV4ICogZ2V0TW92ZUJ5KCkpOyB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIERlc3Ryb3kgdGhlIGN1cnJlbnQgaW5zdGFuY2Ugb2YgdGhlIHNsaWRlciAocmV2ZXJ0IGV2ZXJ5dGhpbmcgYmFjayB0byBvcmlnaW5hbCBzdGF0ZSlcbiAgICAgKi9cbiAgICBlbC5kZXN0cm95U2xpZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAvLyBkb24ndCBkbyBhbnl0aGluZyBpZiBzbGlkZXIgaGFzIGFscmVhZHkgYmVlbiBkZXN0cm95ZWRcbiAgICAgIGlmICghc2xpZGVyLmluaXRpYWxpemVkKSB7IHJldHVybjsgfVxuICAgICAgc2xpZGVyLmluaXRpYWxpemVkID0gZmFsc2U7XG4gICAgICAkKCcuYngtY2xvbmUnLCB0aGlzKS5yZW1vdmUoKTtcbiAgICAgIHNsaWRlci5jaGlsZHJlbi5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoJCh0aGlzKS5kYXRhKCdvcmlnU3R5bGUnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgJCh0aGlzKS5hdHRyKCdzdHlsZScsICQodGhpcykuZGF0YSgnb3JpZ1N0eWxlJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICQodGhpcykucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBpZiAoJCh0aGlzKS5kYXRhKCdvcmlnU3R5bGUnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuYXR0cignc3R5bGUnLCAkKHRoaXMpLmRhdGEoJ29yaWdTdHlsZScpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICQodGhpcykucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgIH1cbiAgICAgICQodGhpcykudW53cmFwKCkudW53cmFwKCk7XG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLmVsKSB7IHNsaWRlci5jb250cm9scy5lbC5yZW1vdmUoKTsgfVxuICAgICAgaWYgKHNsaWRlci5jb250cm9scy5uZXh0KSB7IHNsaWRlci5jb250cm9scy5uZXh0LnJlbW92ZSgpOyB9XG4gICAgICBpZiAoc2xpZGVyLmNvbnRyb2xzLnByZXYpIHsgc2xpZGVyLmNvbnRyb2xzLnByZXYucmVtb3ZlKCk7IH1cbiAgICAgIGlmIChzbGlkZXIucGFnZXJFbCAmJiBzbGlkZXIuc2V0dGluZ3MuY29udHJvbHMgJiYgIXNsaWRlci5zZXR0aW5ncy5wYWdlckN1c3RvbSkgeyBzbGlkZXIucGFnZXJFbC5yZW1vdmUoKTsgfVxuICAgICAgJCgnLmJ4LWNhcHRpb24nLCB0aGlzKS5yZW1vdmUoKTtcbiAgICAgIGlmIChzbGlkZXIuY29udHJvbHMuYXV0b0VsKSB7IHNsaWRlci5jb250cm9scy5hdXRvRWwucmVtb3ZlKCk7IH1cbiAgICAgIGNsZWFySW50ZXJ2YWwoc2xpZGVyLmludGVydmFsKTtcbiAgICAgIGlmIChzbGlkZXIuc2V0dGluZ3MucmVzcG9uc2l2ZSkgeyAkKHdpbmRvdykudW5iaW5kKCdyZXNpemUnLCByZXNpemVXaW5kb3cpOyB9XG4gICAgICBpZiAoc2xpZGVyLnNldHRpbmdzLmtleWJvYXJkRW5hYmxlZCkgeyAkKGRvY3VtZW50KS51bmJpbmQoJ2tleWRvd24nLCBrZXlQcmVzcyk7IH1cbiAgICAgIC8vcmVtb3ZlIHNlbGYgcmVmZXJlbmNlIGluIGRhdGFcbiAgICAgICQodGhpcykucmVtb3ZlRGF0YSgnYnhTbGlkZXInKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVsb2FkIHRoZSBzbGlkZXIgKHJldmVydCBhbGwgRE9NIGNoYW5nZXMsIGFuZCByZS1pbml0aWFsaXplKVxuICAgICAqL1xuICAgIGVsLnJlbG9hZFNsaWRlciA9IGZ1bmN0aW9uKHNldHRpbmdzKSB7XG4gICAgICBpZiAoc2V0dGluZ3MgIT09IHVuZGVmaW5lZCkgeyBvcHRpb25zID0gc2V0dGluZ3M7IH1cbiAgICAgIGVsLmRlc3Ryb3lTbGlkZXIoKTtcbiAgICAgIGluaXQoKTtcbiAgICAgIC8vc3RvcmUgcmVmZXJlbmNlIHRvIHNlbGYgaW4gb3JkZXIgdG8gYWNjZXNzIHB1YmxpYyBmdW5jdGlvbnMgbGF0ZXJcbiAgICAgICQoZWwpLmRhdGEoJ2J4U2xpZGVyJywgdGhpcyk7XG4gICAgfTtcblxuICAgIGluaXQoKTtcblxuICAgICQoZWwpLmRhdGEoJ2J4U2xpZGVyJywgdGhpcyk7XG5cbiAgICAvLyByZXR1cm5zIHRoZSBjdXJyZW50IGpRdWVyeSBvYmplY3RcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxufSkoalF1ZXJ5KTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2J4c2xpZGVyL2Rpc3QvanF1ZXJ5LmJ4c2xpZGVyLmpzXG4gKiogbW9kdWxlIGlkID0gN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiLypcbiAqIGpRdWVyeSBwbHVnaW4gdG8gd3JhcCBlbGVtZW50c1xuICpcbiAqIGh0dHA6Ly9qc2Jpbi5jb20vaWRpemVcbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJCkge1xuXG4gICAgJC5mbi53cmFwQ2hpbGRyZW4gPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICBjaGlsZEVsZW06IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNldHM6IDEsXG4gICAgICAgICAgICB3cmFwcGVyOiAnZGl2J1xuICAgICAgICB9LCBvcHRpb25zIHx8IHt9KTtcblxuICAgICAgICBpZiAob3B0aW9ucy5jaGlsZEVsZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWxlbXMgPSAkKHRoaXMpLmNoaWxkcmVuKG9wdGlvbnMuY2hpbGRFbGVtKTtcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0gW107XG5cbiAgICAgICAgICAgICAgICBlbGVtcy5lYWNoKGZ1bmN0aW9uIChpLCB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBhcnIucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICgoKGkgKyAxKSAlIG9wdGlvbnMuc2V0cyA9PT0gMCkgfHwgKGkgPT09IGVsZW1zLmxlbmd0aCAtIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2V0ID0gJChhcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJyID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXQud3JhcEFsbChkb2N1bWVudC5jcmVhdGVFbGVtZW50KG9wdGlvbnMud3JhcHBlcikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LmlkaXplLmpzXG4gKiogbW9kdWxlIGlkID0gOFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJCkge1xuICAgIHZhciBwYWdlRHJvcGRvd25zID0gW107XG4gICAgdmFyIGNsb3NlUGFnZURyb3Bkb3ducyA9IGZ1bmN0aW9uIChleGNlcHQpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWdlRHJvcGRvd25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYWdlRHJvcGRvd25zW2ldLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBwYWdlRHJvcGRvd24gPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICghZXhjZXB0IHx8IGV4Y2VwdC5sZW5ndGggIT0gMSB8fCBwYWdlRHJvcGRvd24uZ2V0KDApICE9IGV4Y2VwdC5nZXQoMCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFnZURyb3Bkb3duLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAkKCdib2R5JykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICBjbG9zZVBhZ2VEcm9wZG93bnMobnVsbCk7XG4gICAgfSk7XG5cbiAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uIChkcm9wZG93bnMsIG9wdCkge1xuICAgICAgICB2YXIgX29wdCA9ICQuZXh0ZW5kKHtjaGFuZ2VMaXN0ZW5lcnM6IFtdLCBpc01lbnU6IGZhbHNlfSwgb3B0KTtcblxuICAgICAgICBwYWdlRHJvcGRvd25zLnB1c2goZHJvcGRvd25zKTtcblxuICAgICAgICBkcm9wZG93bnMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZHJvcGRvd24gPSAkKHRoaXMpO1xuICAgICAgICAgICAgZHJvcGRvd24uZGF0YSgnZHJvcGRvd24tb3B0aW9ucycsIF9vcHQpO1xuXG4gICAgICAgICAgICBkcm9wZG93bi5maW5kKCdhLmRpc3BsYXknKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZHJvcGRvd24udG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAgIGNsb3NlUGFnZURyb3Bkb3ducyhkcm9wZG93bik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChvcHQgJiYgb3B0LnZhbHVlcykge1xuICAgICAgICAgICAgICAgIHNldE9wdGlvbnMoZHJvcGRvd24sIG9wdC52YWx1ZXMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAob3B0ICYmIG9wdC5pbml0aWFsVmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzZWxlY3QoZHJvcGRvd24sIG9wdC5pbml0aWFsVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5pdE9wdGlvbnMoZHJvcGRvd24sIHRydWUpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgdmFyIG9wdGlvblZhbHVlID0gZnVuY3Rpb24gKGRyb3Bkb3duLCBrZXkpIHtcbiAgICAgICAgdmFyIG9wdCA9IGRyb3Bkb3duLmRhdGEoJ2Ryb3Bkb3duLW9wdGlvbnMnKTtcbiAgICAgICAgcmV0dXJuIG9wdCA/IG9wdFtrZXldIDogbnVsbDtcbiAgICB9O1xuXG4gICAgdmFyIGludm9rZU9wdGlvbkV4dCA9IGZ1bmN0aW9uIChkcm9wZG93biwgZmtleSwgYSwgYiwgYykge1xuICAgICAgICB2YXIgZiA9IG9wdGlvblZhbHVlKGRyb3Bkb3duLCBma2V5KTtcbiAgICAgICAgaWYgKGYpIHtcbiAgICAgICAgICAgIGYoYSwgYiwgYyk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGluaXRPcHRpb25zID0gZnVuY3Rpb24gKGRyb3Bkb3duLCByZWFkSW5wdXRWYWx1ZSkge1xuICAgICAgICB2YXIgb3B0aW9ucyA9IGRyb3Bkb3duLmZpbmQoJy5vcHRpb25zID4gYScpO1xuICAgICAgICBkcm9wZG93bi50b2dnbGVDbGFzcygnZGlzYWJsZWQnLCBvcHRpb25zLmxlbmd0aCA8IDIpO1xuICAgICAgICBpZiAoIWRyb3Bkb3duLmRhdGEoJ2Ryb3Bkb3duLW9wdGlvbnMnKS5pc01lbnUpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNlbGVjdEFuZE5vdGlmeShkcm9wZG93biwgJCh0aGlzKS5hdHRyKCdkYXRhLXZhbHVlJykpO1xuICAgICAgICAgICAgICAgIGNsb3NlUGFnZURyb3Bkb3ducyhkcm9wZG93bik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChyZWFkSW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciB2ID0gZHJvcGRvd24uZmluZCgnaW5wdXQ6aGlkZGVuJykudmFsKCk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3QoZHJvcGRvd24sIHYpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgZmlyZU9uU2VsZWN0ID0gZnVuY3Rpb24gKGRyb3Bkb3duKSB7XG4gICAgICAgIHZhciBvcHQgPSBkcm9wZG93bi5kYXRhKCdkcm9wZG93bi1vcHRpb25zJyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb3B0LmNoYW5nZUxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgb3B0LmNoYW5nZUxpc3RlbmVyc1tpXSgpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHZhciBzZWxlY3RBbmROb3RpZnkgPSBmdW5jdGlvbiAoZHJvcGRvd24sIHZhbHVlKSB7XG4gICAgICAgIHNlbGVjdChkcm9wZG93biwgdmFsdWUpO1xuICAgICAgICBmaXJlT25TZWxlY3QoZHJvcGRvd24pO1xuICAgICAgICBpbnZva2VPcHRpb25FeHQoZHJvcGRvd24sICdvbnNlbGVjdCcsIHZhbHVlKTtcbiAgICB9O1xuXG4gICAgdmFyIHNlbGVjdCA9IGZ1bmN0aW9uIChkcm9wZG93biwgdmFsdWUpIHtcbiAgICAgICAgdmFyIGxpbmsgPSBkcm9wZG93bi5maW5kKCdhW2RhdGEtdmFsdWU9XCInICsgdmFsdWUgKyAnXCJdJyk7XG4gICAgICAgIGRyb3Bkb3duLmZpbmQoJ2EuZGlzcGxheSBzcGFuJykuaHRtbChsaW5rLmh0bWwoKSk7XG4gICAgICAgIGxpbmsuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgIGRyb3Bkb3duLmZpbmQoJ2FbZGF0YS12YWx1ZSE9XCInICsgdmFsdWUgKyAnXCJdJykucmVtb3ZlQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgIGRyb3Bkb3duLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgZHJvcGRvd24uZmluZCgnaW5wdXQ6aGlkZGVuJykudmFsKHZhbHVlKTtcbiAgICB9O1xuXG4gICAgdmFyIHNldE9wdGlvbnMgPSBmdW5jdGlvbiAoZHJvcGRvd24sIG9wdGlvbnMsIHNlbGVjdGVkS2V5KSB7XG4gICAgICAgIHZhciBvcHRpb25zQ29udGFpbmVyID0gZHJvcGRvd24uZmluZCgnLm9wdGlvbnMnKTtcbiAgICAgICAgb3B0aW9uc0NvbnRhaW5lci5lbXB0eSgpO1xuICAgICAgICB2YXIgc2VsZWN0ZWQgPSBudWxsO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9wdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBvID0gb3B0aW9uc1tpXTtcbiAgICAgICAgICAgIHZhciBpc1NlbGVjdGVkID0gb1swXSA9PSBzZWxlY3RlZEtleTtcbiAgICAgICAgICAgIGlmIChpc1NlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSBvO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkKCc8YSBocmVmPVwiI1wiPjwvYT4nKS5hdHRyKCdkYXRhLXZhbHVlJywgb1swXSkuaHRtbChvWzFdKS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnLCBpc1NlbGVjdGVkKS5hcHBlbmRUbyhvcHRpb25zQ29udGFpbmVyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgICAgICAgZHJvcGRvd24uZmluZCgnYS5kaXNwbGF5IHNwYW4nKS5odG1sKHNlbGVjdGVkWzFdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGluaXRPcHRpb25zKGRyb3Bkb3duLCBmYWxzZSk7XG4gICAgfTtcblxuICAgIHZhciB2YWx1ZSA9IGZ1bmN0aW9uIChkcm9wZG93bikge1xuICAgICAgICByZXR1cm4gZHJvcGRvd24uZmluZCgnLm9wdGlvbnMgYS5zZWxlY3RlZCcpLmF0dHIoJ2RhdGEtdmFsdWUnKTtcbiAgICB9O1xuXG4gICAgdmFyIGFkZENoYW5nZUxpc3RlbmVyID0gZnVuY3Rpb24gKGRyb3Bkb3ducywgbGlzdGVuZXIpIHtcbiAgICAgICAgZHJvcGRvd25zLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGRyb3Bkb3duID0gJCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBvcHQgPSBkcm9wZG93bi5kYXRhKCdkcm9wZG93bi1vcHRpb25zJyk7XG4gICAgICAgICAgICBvcHQuY2hhbmdlTGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICAgICAgZHJvcGRvd24uZGF0YSgnZHJvcGRvd24tb3B0aW9ucycsIG9wdCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkLmZuLmNpdHlEcm9wZG93biA9IGZ1bmN0aW9uIChvcHQsIHAxLCBwMikge1xuICAgICAgICBpZiAodHlwZW9mIG9wdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHN3aXRjaCAob3B0KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnZGlzYWJsZSc6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2VuYWJsZSc6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3NlbGVjdCc6XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdCh0aGlzLCBwMSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3NldE9wdGlvbnMnOlxuICAgICAgICAgICAgICAgICAgICBzZXRPcHRpb25zKHRoaXMsIHAxLCBwMik7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3ZhbHVlJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlKHRoaXMpO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2NoYW5nZSc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLCBwMSk7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbml0KHRoaXMsIG9wdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbn07XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vanF1ZXJ5L2pxdWVyeS5jaXR5ZHJvcGRvd24uanNcbiAqKiBtb2R1bGUgaWQgPSA5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkKSB7XG5cbiAgICB2YXIgc2Nyb2xsVG8gPSByZXF1aXJlKCcuLi8uLi91dGlscy9zY3JvbGwtdG8nKSxcblxuICAgICAgICBpbml0ID0gZnVuY3Rpb24gKHdpZGdldHMpIHtcbiAgICAgICAgICAgIHZhciB3ID0gJCh3aW5kb3cpLFxuICAgICAgICAgICAgICAgIG1hcCA9IHt9O1xuXG4gICAgICAgICAgICB3aWRnZXRzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB3aWRnZXQgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50UGFuZWxzID0gd2lkZ2V0LmZpbmQoXCI+ZGl2ID4uY29udGVudC1wYW5lbFwiKSxcblxuICAgICAgICAgICAgICAgICAgICBpZCA9IHdpZGdldC5hdHRyKCdpZCcpIHx8ICd0YWInLFxuICAgICAgICAgICAgICAgICAgICBhY3RpdmF0ZSA9IGZ1bmN0aW9uIChhbmNob3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IChhbmNob3IuYXR0cignaHJlZicpIHx8ICcnKS5tYXRjaCgvXiMoLispJC8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld0hlYWRlciA9IGFuY2hvci5wYXJlbnQoXCJoMlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNUYWIgPSBhbmNob3IucGFyZW50KCdsaScpLmxlbmd0aCA+IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFscmVhZHlTZWxlY3RlZCA9ICFpc1RhYiAmJiBhbmNob3IuY2xvc2VzdCgnLnRhYi1wYW5lbCcpLmhhc0NsYXNzKCdzZWxlY3RlZCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50UGFuZWwgPSBhbmNob3IuY2xvc2VzdCgnLnRhYi1wYW5lbCcpLmZpbmQoJy5wYW5lbC1jb250ZW50Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXNbaWRdID0gYWxyZWFkeVNlbGVjdGVkID8gbnVsbCA6IG1hdGNoWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdCh3aWRnZXQsIHBhcmFtc1tpZF0gfHwgZmFsc2UpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkLmlzRW1wdHlPYmplY3QobmV3SGVhZGVyLm9mZnNldCgpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCdodG1sOm5vdCg6YW5pbWF0ZWQpLCBib2R5Om5vdCg6YW5pbWF0ZWQpJykuYW5pbWF0ZSh7c2Nyb2xsVG9wOiBuZXdIZWFkZXIub2Zmc2V0KCkudG9wfSwgJ3Nsb3cnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50UGFuZWxzLnJlbW92ZUF0dHIoJ3RhYmluZGV4Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW5jaG9yLnBhcmVudCgpLmhhc0NsYXNzKCdhY2NvcmRpb24tdG9vZ2xlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFBhbmVsLmF0dHIoJ3RhYmluZGV4JywgJzAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFBhbmVsLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5jaG9yLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJC5iYnEucHVzaFN0YXRlKHBhcmFtcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAkKCdhW2hyZWZePVwiIycgKyBpZCArICc9XCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3IgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2ggPSBhbmNob3IuYXR0cignaHJlZicpLm1hdGNoKC8jKFthLXpBLVowLTldKyk9W2EtekEtWjAtOV0rLyk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbmNob3IuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiAkKCcjJyArIGlkKS5vZmZzZXQoKS50b3BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAyMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIG1hcFtpZF0gPSB3aWRnZXQ7XG5cbiAgICAgICAgICAgICAgICB3aWRnZXQuZmluZCgnPnVsIGEsID4udGFiLXBhbmVsID4uYWNjb3JkaW9uLXRvb2dsZSBhJykuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aXZhdGUoJCh0aGlzKSk7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9KS5rZXlkb3duKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLndoaWNoID09PSAzNykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZhdGUoJCh0aGlzKS5wYXJlbnQoKS5wcmV2KCkuY2hpbGRyZW4oJ2EnKSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZS53aGljaCA9PT0gMzkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2YXRlKCQodGhpcykucGFyZW50KCkubmV4dCgpLmNoaWxkcmVuKCdhJykpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdy5vbignaGFzaGNoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgcGFyYW1zID0gJC5iYnEuZ2V0U3RhdGUoKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpZCBpbiBtYXApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hcC5oYXNPd25Qcm9wZXJ0eShpZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdChtYXBbaWRdLCBwYXJhbXNbaWRdIHx8IGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB3LnRyaWdnZXIoXCJoYXNoY2hhbmdlXCIpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNlbGVjdCA9IGZ1bmN0aW9uICh3aWRnZXQsIGlkKSB7XG4gICAgICAgICAgICB3aWRnZXQuZmluZCgnPi50YWItcGFuZWwuZGVmYXVsdCcpLnJlbW92ZUNsYXNzKCdkZWZhdWx0Jyk7XG4gICAgICAgICAgICB3aWRnZXQuZmluZCgnPnVsIC5zZWxlY3RlZCwgPi50YWItcGFuZWwuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcblxuICAgICAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgICAgICAgdmFyIGhhc2ggPSAnIycgKyBpZDtcblxuICAgICAgICAgICAgICAgIHdpZGdldC5maW5kKCc+dWwgYVtocmVmPVwiJyArIGhhc2ggKyAnXCJdJykuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgICAgICAgICAgd2lkZ2V0LmZpbmQoaGFzaCkuYWRkQ2xhc3MoJ3NlbGVjdGVkJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHdpZGdldC5maW5kKCc+dWwgbGknKS5maXJzdCgpLmZpbmQoJ2EnKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICB3aWRnZXQuZmluZCgnPi50YWItcGFuZWwnKS5maXJzdCgpLmFkZENsYXNzKCdkZWZhdWx0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cblxuICAgICQuZm4uYWNjb3JkaW9uVGFicyA9IGZ1bmN0aW9uIChvcHQpIHtcbiAgICAgICAgaW5pdCh0aGlzLCBvcHQpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LmFjY29yZGlvbi10YWJzLmpzXG4gKiogbW9kdWxlIGlkID0gMTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBpZiAoZWxlbWVudCAmJiAhJC5pc0VtcHR5T2JqZWN0KGVsZW1lbnQub2Zmc2V0KCkpKSB7XG4gICAgICAgICQoJ2h0bWw6bm90KDphbmltYXRlZCksIGJvZHk6bm90KDphbmltYXRlZCknKS5hbmltYXRlKHtzY3JvbGxUb3A6IE1hdGgubWF4KDAsIGVsZW1lbnQub2Zmc2V0KCkudG9wIC0gODUpfSwgJ3Nsb3cnKTtcbiAgICB9XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy91dGlscy9zY3JvbGwtdG8uanNcbiAqKiBtb2R1bGUgaWQgPSAxMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJCkge1xuICAgIHZhciBhY2Nlc3MgPSBmYWxzZSxcblxuICAgICAgICBpbml0ID0gZnVuY3Rpb24gKHZpZGVvQ29udGFpbmVycywgb3B0KSB7XG4gICAgICAgICAgICB2aWRlb0NvbnRhaW5lcnMubm90KCdbZGF0YS12aWRlby1pZC1yZWFkeV0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29udGFpbmVyID0gJCh0aGlzKS5hdHRyKCdkYXRhLXZpZGVvLWlkLXJlYWR5JywgMSksXG4gICAgICAgICAgICAgICAgICAgIGltZ0dyb3VwID0gY29udGFpbmVyLmZpbmQoJy55b3V0dWJlLXByZXZpZXcnKSxcbiAgICAgICAgICAgICAgICAgICAgaWZyYW1lSWQgPSBjb250YWluZXIuYXR0cignZGF0YS12aWRlby1pZnJhbWUtaWQnKSxcbiAgICAgICAgICAgICAgICAgICAgYW5jaG9yID0gaW1nR3JvdXAuY2hpbGRyZW4oJ2EnKSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2thYmxlID0gYW5jaG9yLmxlbmd0aCA+IDAgPyBhbmNob3IgOiBpbWdHcm91cCxcblxuICAgICAgICAgICAgICAgICAgICBsb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1vZGUgPSBhY2Nlc3MgPT0gJ3lvdWt1JyAmJiBjb250YWluZXIuYXR0cignZGF0YS15b3VrdS1pZCcpID8gJ3lvdWt1JyA6ICd5b3V0dWJlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtb2RlID09PSAneW91dHViZScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmMgPSAnaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvJyArIGNvbnRhaW5lci5hdHRyKCdkYXRhLXZpZGVvLWlkJykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnP3JlbD0wJmF1dG9wbGF5PTEmd21vZGU9dHJhbnNwYXJlbnQmY29udHJvbHM9JyArIG9wdC5jb250cm9scyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICcmc2hvd2luZm89JyArIG9wdC5zaG93SW5mbztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0LmF1dG9QbGF5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYyArPSAnJmVuYWJsZWpzYXBpPTEmdmVyc2lvbj0zJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjID0gJ2h0dHA6Ly9wbGF5ZXIueW91a3UuY29tL2VtYmVkLycgKyBjb250YWluZXIuYXR0cignZGF0YS15b3VrdS1pZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuYXV0b1BsYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjICs9ICcmYXV0b3BsYXk9MSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpZnJhbWUgPSAkKCc8aWZyYW1lPjwvaWZyYW1lPicpLmF0dHIoJ2lkJywgaWZyYW1lSWQpLmF0dHIoJ3NyYycsIHNyYykuYXR0cignZnJhbWVib3JkZXInLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHQuYWxsb3dGdWxsc2NyZWVuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lLmF0dHIoJ2FsbG93ZnVsbHNjcmVlbicsIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWZyYW1lLmFwcGVuZFRvKGNvbnRhaW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob3B0LmNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0LmNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobW9kZSA9PT0gJ3lvdXR1YmUnICYmIG9wdC5hdXRvUGxheSAmJiB0eXBlb2YgWVQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IFlULlBsYXllcihpZnJhbWVJZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdvblJlYWR5JzogZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnBsYXlWaWRlbygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZnJhbWUuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICAgICAgICBjbGlja2FibGUudW5iaW5kKCkuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICAgICAgICAgICAgICBpZiAoYWNjZXNzID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlc3QgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3Qub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2VzcyA9ICd5b3V0dWJlJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGVzdC5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2VzcyA9ICd5b3VrdSc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlc3Quc3JjID0gXCJodHRwOi8veW91dHViZS5jb20vZmF2aWNvbi5pY29cIjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAkLmZuLnZpZGVvUHJldmlldyA9IGZ1bmN0aW9uIChvcHQpIHtcbiAgICAgICAgaW5pdCh0aGlzLCAkLmV4dGVuZCh7XG4gICAgICAgICAgICBhdXRvUGxheTogdHJ1ZSxcbiAgICAgICAgICAgIGFsbG93RnVsbHNjcmVlbjogZmFsc2UsXG4gICAgICAgICAgICBjb250cm9sczogMixcbiAgICAgICAgICAgIHNob3dJbmZvOiAxXG4gICAgICAgIH0sIG9wdCkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5LnlvdXR1YmVwcmV2aWV3LmpzXG4gKiogbW9kdWxlIGlkID0gMTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogZnJvbTpcbiAqIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTE4MDMyMTUvaG93LXRvLWluY2x1ZGUtbXVsdGlwbGUtanMtZmlsZXMtdXNpbmctanF1ZXJ5LWdldHNjcmlwdC1tZXRob2RcbiAqICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgkKSB7XG4gICAgdmFyIGpzUGF0aCA9IHJlcXVpcmUoJy4vanMtcGF0aCcpO1xuXG4gICAgJC5nZXRNdWx0aUpzU2NyaXB0cyA9IGZ1bmN0aW9uIChsaXN0LCBjYiwgZm9yY2VYZG9tYWluKSB7XG4gICAgICAgIHZhciBwYXRoID0ganNQYXRoKCksXG4gICAgICAgICAgICBpID0gMCxcbiAgICAgICAgICAgIGZldGNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKGkgPCBsaXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBwYXRoICsgbGlzdFtpKytdLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwic2NyaXB0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmZXRjaCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNyb3NzRG9tYWluOiBmb3JjZVhkb21haW4gfHwgZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgIGZldGNoKCk7XG4gICAgfTtcblxufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9qcXVlcnkvanF1ZXJ5Lm11bHRpc2NyaXB0cy5qc1xuICoqIG1vZHVsZSBpZCA9IDEzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGF0aCA9IG51bGw7XG4gICAgJCgnc2NyaXB0W3NyY10nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNyYyA9ICQodGhpcykuYXR0cignc3JjJyksXG4gICAgICAgICAgICBtYXRjaCA9IHNyYy5tYXRjaCgvKC4rXFwvKShbMC05XStcXC4pP0NJVFlfUlxcLihtaW5cXC4pP2pzKFxcP3Y9WzAtOV0rKT8kLyk7XG5cbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBwYXRoID0gbWF0Y2hbMV07XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBwYXRoO1xufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vanF1ZXJ5L2pzLXBhdGguanNcbiAqKiBtb2R1bGUgaWQgPSAxNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiLyoqXG4gKiBTZW5kcyBhIG1lc3NhZ2UgdG8gdGhlIGJyb3dzZXIgY29uc29sZSAoR2Vja28sIFdlYmtpdCkgb3IgaW50byB0aGUgPGJvZHk+IChJRSlcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlOiB0aGUgbWVzc2FnZSB0byBwcmludCBvdXRcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XG5cbiAgICB2YXIgZGVidWcgPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICAgICAgaWYgKGRlYnVnLmRlYnVnTGV2ZWwgPiAwIHx8IGxvY2F0aW9uLnNlYXJjaC5tYXRjaChcImRlYnVnXCIpKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgLy9mb3IgU2FmYXJpLCBDaHJvbWUsIEZpcmVmb3gody8gZmlyZWJ1ZylcbiAgICAgICAgICAgICAgICAgICAgdy5jb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2ZvciBPcGVyYVxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmEucG9zdEVycm9yLmFwcGx5KG9wZXJhLCBtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZTEpIHtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIGRlYnVnLmRlYnVnTGV2ZWwgPSAwO1xuXG4gICAgcmV0dXJuIGRlYnVnO1xufTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvdXRpbHMvZGVidWcuanNcbiAqKiBtb2R1bGUgaWQgPSAxNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwIDhcbiAqKi8iLCIvKipcbiAqIEN1c3RvbSBBSkFYIE1ldGhvZFxuICpcbiAqIC8vIFN1Y2Nlc3NcbiAqIGN1c3RvbUFKQVgoJy8vd3d3LmNpdHkuYWMudWsvZmIvc2VhcmNoLmh0bWwnLCB7J3NvbWVrZXknOiAnc29tZXZhbHVlJ30pXG4gKiAuZG9uZShcbiAqICAgICBmdW5jdGlvbihkYXRhKSkge1xuICogICAgICAgICBkb1NvbWV0aGluZygpO1xuICogICAgIH1cbiAqICk7XG4gKlxuICogLy8gRmFpbHVyZVxuICogY3VzdG9tQUpBWCgnLy93d3cuY2l0eS5hYy51ay9mYi9zZWFyY2guaHRtbCcsIHsnc29tZWtleSc6ICdzb21ldmFsdWUnfSlcbiAqIC5mYWlsKFxuICogICAgIGZ1bmN0aW9uKHhociwgc3RhdHVzLCBlcnIpKSB7XG4gKiAgICAgICAgIGNvbnNvbGUubG9nKHN0YXR1cywgZXJyKTtcbiAqICAgICB9XG4gKiApO1xuICpcbiAqIC8vIFN1Y2Nlc3Mgb3IgRmFpbHVyZVxuICogY3VzdG9tQUpBWCgnLy93d3cuY2l0eS5hYy51ay9mYi9zZWFyY2guaHRtbCcsIHsnc29tZWtleSc6ICdzb21ldmFsdWUnfSlcbiAqIC50aGVuKFxuICogICAgIGZ1bmN0aW9uKGRhdGEpKSB7XG4gKiAgICAgICAgIGRvU29tZXRoaW5nKCk7XG4gKiAgICAgfSxcbiAqICAgICBmdW5jdGlvbih4aHIsIHN0YXR1cywgZXJyKSB7XG4gKiAgICAgICAgIGNvbnNvbGUubG9nKHN0YXR1cywgZXJyKTtcbiAqICAgICB9XG4gKiApO1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGlucHV0VVJMLCBpbnB1dERhdGEsIGlucHV0VHlwZSkge1xuICAgICAgICB2YXIgcHJvbWlzZSA9ICQuYWpheCh7XG4gICAgICAgICAgICB1cmw6IGlucHV0VVJMLFxuICAgICAgICAgICAgZGF0YTogaW5wdXREYXRhLFxuICAgICAgICAgICAgdHlwZTogKGlucHV0VHlwZSA/IGlucHV0VHlwZSA6ICdnZXQnKVxuICAgICAgICB9KVxuICAgICAgICAuZG9uZSggZnVuY3Rpb24ocmVzcG9uc2VEYXRhLCBzdGF0dXMsIHhocikge1xuICAgICAgICAgICAgLy8gUHJlLWRldGVybWluZWQgTG9naWMgZm9yIFN1Y2Nlc3NcbiAgICAgICAgICAgIC8vICh0aGlzIHdpbGwgcnVuIGJlZm9yZSBhbnkgYC5kb25lKClgIG9yIGAuZmFpbCgpYCB3aGVyZSBgY3VzdG9tQUpBWCgpYCBpcyBjYWxsZWQpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnU3VjY2VzcycpO1xuICAgICAgICB9KVxuICAgICAgICAuZmFpbCggZnVuY3Rpb24oeGhyLCBzdGF0dXMsIGVycikge1xuICAgICAgICAgICAgLy8gUHJlLWRldGVybWluZWQgTG9naWMgZm9yIEZhaWx1cmVcbiAgICAgICAgICAgIC8vICh0aGlzIHdpbGwgcnVuIGJlZm9yZSBhbnkgYC5kb25lKClgIG9yIGAuZmFpbCgpYCB3aGVyZSBgY3VzdG9tQUpBWCgpYCBpcyBjYWxsZWQpXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnRmFpbHVyZScpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfTtcblxufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2N1c3RvbS1hamF4LmpzXG4gKiogbW9kdWxlIGlkID0gMTZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogcmV0dXJucyB0cnVlIGlmIHRoZSB2aWV3cG9ydCBzaXplIGhhcyBjaGFuZ2VkIC1cbiAqIHVzZWZ1bCBpbiByZXNwb25zaXZlIGxheW91dCwgc2VlXG4gKiBzbm9vay5jYS9hcmNoaXZlcy9qYXZhc2NyaXB0L2llNl9maXJlc19vbnJlc2l6ZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh3KSB7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIHZhciBkZWJ1ZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2RlYnVnJyksXG4gICAgICAgICAgICBjaGFuZ2VkID0gZmFsc2UsXG4gICAgICAgICAgICBkb2NFbCA9IHcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgICAgICAgY29vbE9mZiA9IDIwLCAvL2Z1cnRoZXIgY2FsbHMgd2l0aGluIHRoaXMgd2luZG93IGdldFxuICAgICAgICAvL3RoZSBzYW1lIHJldHVybiB2YWx1ZVxuICAgICAgICAgICAgbm93ID0gRGF0ZS5ub3cgPyBEYXRlLm5vdygpIDogKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgICAgICAgICB9KCkpO1xuXG4gICAgICAgIC8vc2V0IHVwIGEgaG9sZGVyIG9iamVjdCAoaWYgaXQgZG9lc24ndCBleGlzdClcbiAgICAgICAgdy52aWV3cG9ydCA9IHcudmlld3BvcnQgfHwge307XG5cbiAgICAgICAgLy90aGVzZSBuZWVkIHplcm9pbmcgYmVmb3JlIHdlIGJlZ2luIChpZiBub3QgYWxyZWFkeSBzZXQpXG4gICAgICAgIHcudmlld3BvcnQuZGltZW5zaW9ucyA9IHcudmlld3BvcnQuZGltZW5zaW9ucyB8fCB7aGVpZ2h0OiBudWxsLCB3aWR0aDogbnVsbH07XG5cbiAgICAgICAgLy9uZWVkIHRvIGhhbmRsZSB0aGUgc2l0dWF0aW9uIHdoZXJlIG1hbnkgY2FsbHMgdG8gdGhpc1xuICAgICAgICAvL2Z1bmN0aW9uIGhhcHBlbiBpbiBxdWljayBzdWNjZXNzaW9uXG4gICAgICAgIGlmICh3LnZpZXdwb3J0LnRpbWVTdGFtcCAmJiBub3cgLSB3LnZpZXdwb3J0LnRpbWVTdGFtcCA8IGNvb2xPZmYpIHtcbiAgICAgICAgICAgIGRlYnVnKFwid2l0aGluIHdpbmRvdywgcmV0dXJuaW5nIFwiICsgdy52aWV3cG9ydC5zdG9yZWRSZXN1bHQpO1xuICAgICAgICAgICAgcmV0dXJuIHcudmlld3BvcnQuc3RvcmVkUmVzdWx0O1xuICAgICAgICB9XG5cbiAgICAgICAgLy9zdG9yZSB0aGUgdGltZSBvZiB0aGlzIGNhbGxcbiAgICAgICAgdy52aWV3cG9ydC50aW1lU3RhbXAgPSBub3c7XG5cbiAgICAgICAgLy9oYXZlIHdlIGNoYW5nZWQgdmlld3BvcnQgc2l6ZT9cbiAgICAgICAgaWYgKHcudmlld3BvcnQuZGltZW5zaW9ucy53aWR0aCAhPT0gZG9jRWwuY2xpZW50V2lkdGggfHxcbiAgICAgICAgICAgIHcudmlld3BvcnQuZGltZW5zaW9ucy5oZWlnaHQgIT09IGRvY0VsLmNsaWVudEhlaWdodCkge1xuICAgICAgICAgICAgY2hhbmdlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvL3N0b3JlIG5ldyBkaW1lbnNpb25zXG4gICAgICAgIHcudmlld3BvcnQuZGltZW5zaW9ucy5oZWlnaHQgPSBkb2NFbC5jbGllbnRIZWlnaHQ7XG4gICAgICAgIHcudmlld3BvcnQuZGltZW5zaW9ucy53aWR0aCA9IGRvY0VsLmNsaWVudFdpZHRoO1xuXG4gICAgICAgIC8vc3RvcmUgdGhpcyByZXN1bHQgaW4gY2FzZSBvZiBhIHJlLWNhbGwgd2l0aGluIGNvb2xPZmZcbiAgICAgICAgdy52aWV3cG9ydC5zdG9yZWRSZXN1bHQgPSBjaGFuZ2VkO1xuXG4gICAgICAgIGRlYnVnKFwidmlld3BvcnQgY2hhbmdlZDogXCIgKyBjaGFuZ2VkKTtcblxuICAgICAgICByZXR1cm4gY2hhbmdlZDtcbiAgICB9XG59KHdpbmRvdyk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vZnVuY3Mvdmlld3BvcnQtY2hhbmdlZC5qc1xuICoqIG1vZHVsZSBpZCA9IDE3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIENyZWF0ZSBhIGltYWdlIEdhbGxlcnlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYSBqcXVlcnkgb2JqZWN0IHJlcHJlc2VudGluZyBhIHNpbmdsZSBpbnN0YW5jZSBvZiBhIGdhbGxlcnlcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdHJ1ZSBpZiB0aGUgZ2FsbGVyeSBpcyBpbiBhIHdpZGdldCwgZmFsc2UgaWYgaW4gbWFpbiBjb250ZW50IGJvZHlcbiAqIEByZXR1cm4ge09iamVjdCB8fCBVbmRlZmluZWR9IHJldHVybnMgdGhlIGdhbGxlcmlhIGpRdWVyeSBvYmplY3QgaWZcbiAqIHN1Y2Nlc3NmdWwgZWxzZSB1bmRlZmluZWQgLSBmb3IgaW5zdGFuY2UgaWYgJGdhbGxlcnkgaXMgbm90IGEgalF1ZXJ5IG9iamVjdFxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuICAgICAgICBkZWJ1ZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2RlYnVnJyksXG5cbiAgICAgICAgc3RhdGUgPSAnbm90LWxvYWRlZCcsXG4gICAgICAgIHF1ZXVlID0gW10sXG5cblxuICAgICAgICBjcmVhdGUgPSBmdW5jdGlvbiAoZ2FsbGVyeSwgb3B0aW9ucykge1xuICAgICAgICAgICAgdmFyIHJvb3QgPSBnYWxsZXJ5LmF0dHIoXCJpZFwiKS5yZXBsYWNlKFwiZ2FsbGVyeS1cIiwgXCJcIiksXG4gICAgICAgICAgICAgICAgZ2FsbGVyeUlubmVyID0gZ2FsbGVyeS5maW5kKFwiLmdhbGxlcnktaW5uZXJcIik7XG5cbiAgICAgICAgICAgICQuZ2V0SlNPTihcIi9hcGlzL2dhbGxlcmllcy9nYWxsZXJpYS1qc29uP3Jvb3Q9XCIgKyByb290LCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIC8vcmVtb3ZlIGxvYWRlclxuICAgICAgICAgICAgICAgIGdhbGxlcnkuZmluZCgnc3Bhbi5sb2FkaW5nJykuaGlkZSgpO1xuICAgICAgICAgICAgICAgIGdhbGxlcnkuY3NzKFwib3BhY2l0eVwiLCBcIjFcIik7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5kYXRhX3NvdXJjZSA9IGRhdGE7XG4gICAgICAgICAgICAgICAgZ2FsbGVyeUlubmVyLmdhbGxlcmlhKG9wdGlvbnMpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBnYWxsZXJ5SW5uZXI7XG4gICAgICAgIH0sXG5cblxuICAgICAgICBsb2FkQ29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvL2dldCBpZCBvZiByb290IGZyb20gaWQgb2YgZ2FsbGVyeSBkaXZcbiAgICAgICAgICAgIHN0YXRlID0gJ2xvYWRlZCc7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHF1ZXVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY3JlYXRlKHF1ZXVlW2ldLmdhbGxlcnksIHF1ZXVlW2ldLm9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgfSxcblxuXG4gICAgICAgIHJlcXVlc3QgPSBmdW5jdGlvbiAoZ2FsbGVyeSkge1xuICAgICAgICAgICAgdmFyIGdhbGxlcnlJbm5lciA9IGdhbGxlcnkgJiYgZ2FsbGVyeS5maW5kKFwiLmdhbGxlcnktaW5uZXJcIik7XG5cbiAgICAgICAgICAgIGlmICghZ2FsbGVyeUlubmVyIHx8IGdhbGxlcnlJbm5lci5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhcIm5vIGdhbGxlcnkgZm91bmRcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgdmFyIGdhbGxlcmlhT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwLjU2MjUsXG4gICAgICAgICAgICAgICAgICAgIGxpZ2h0Ym94OiBnYWxsZXJ5SW5uZXIuaGFzQ2xhc3MoXCJsaWdodGJveFwiKSxcbiAgICAgICAgICAgICAgICAgICAgbWF4U2NhbGVSYXRpbzogMSxcbiAgICAgICAgICAgICAgICAgICAgcHJlbG9hZDogMixcbiAgICAgICAgICAgICAgICAgICAgc2hvd0luZm86IGdhbGxlcnlJbm5lci5oYXNDbGFzcyhcImNhcHRpb25cIiksXG4gICAgICAgICAgICAgICAgICAgIGltYWdlQ3JvcDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRlYnVnOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgZXh0ZW5kOiBmdW5jdGlvbiAoLyogZGVmaW5lZCBidXQgbm90IHVzZWQ6IG9wdGlvbnMgKi8pIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFwiY2l0eVwiID09PSBnYWxsZXJ5LmF0dHIoXCJkYXRhLXRoZW1lXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2FsbGVyeS5wcmVwZW5kKCQoXCI8ZGl2Lz5cIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwiY2ctY2FwdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLypsb2Fkc3RhcnQgaXMgdHJpZ2dlcmVkIGV2ZXJ5IHRpbWUgZ2FsbGVyaWEgbG9hZHMgYW4gaW1hZ2UqL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmluZChcImxvYWRzdGFydFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2RhdGFbZS5pbmRleF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2FwdGlvbiBpcyByZWZvdW5kIGhlcmUgYXMgaXQgbmVlZHMgdG8gYmUgc2NvcGVkIHRvIHRoaXMgZ2FsbGVyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FwdGlvbiA9IGdhbGxlcnkuZmluZChcIi5jZy1jYXB0aW9uXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLm1fY2FwdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FwdGlvbi5odG1sKGRhdGEubV9jYXB0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb24uaHRtbChcIiZuYnNwO1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuXG5cbiAgICAgICAgICAgICAgICBpZiAoc3RhdGUgPT09ICdsb2FkZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZShnYWxsZXJ5LCBnYWxsZXJpYU9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZSA9PT0gJ25vdC1sb2FkZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZSA9ICdsb2FkaW5nJztcbiAgICAgICAgICAgICAgICAgICAgICAgICQuZ2V0TXVsdGlKc1NjcmlwdHMoW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGliL2pxdWVyeS9wbHVnaW5zL2dhbGxlcmlhL2dhbGxlcmlhLTEuNC4yL2dhbGxlcmlhLTEuNC4yLm1pbi5qc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGliL2pxdWVyeS9wbHVnaW5zL2dhbGxlcmlhL2dhbGxlcmlhLTEuNC4yL3RoZW1lcy9jbGFzc2ljL2dhbGxlcmlhLmNsYXNzaWMuY2l0eS5taW4uanNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgXSwgbG9hZENvbXBsZXRlLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGdhbGxlcnkucHJlcGVuZCgkKCc8ZGl2IGNsYXNzPVwibG9hZGluZ1wiPjxkaXYgY2xhc3M9XCJsb2FkaW5nX19pY29uXCI+PGkgY2xhc3M9XCJmYSBmYS1yZWZyZXNoIGZhLXNwaW5cIj48L2k+PC9kaXY+PC9zcGFuPicpKTtcbiAgICAgICAgICAgICAgICAgICAgcXVldWUucHVzaCh7Z2FsbGVyeTogZ2FsbGVyeSwgb3B0aW9uczogZ2FsbGVyaWFPcHRpb25zfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG5cbiAgICByZXR1cm4gcmVxdWVzdDtcbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9jcmVhdGUtZ2FsbGVyeS5qc1xuICoqIG1vZHVsZSBpZCA9IDE4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKlxuICogc2V0cyB1cCBhIGNhcm91c2VsIG9uIGEgcGFnZVxuICogQHBhcmFtIGNhcm91c2VsT2JqIDogT2JqZWN0XG4gKlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuICAgICAgICBkZWJ1ZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL2RlYnVnJyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCRjYXJvdXNlbE9iaikge1xuICAgICAgICBpZiAoJGNhcm91c2VsT2JqLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgJGNhcm91c2VsT2JqLmFwcGVuZCgkKCcjbWFpbi1jYXJvdXNlbC1zbGlkZXMnKS5odG1sKCkpO1xuXG4gICAgICAgICAgICB2YXIgbnVtU2xpZGVzID0gJGNhcm91c2VsT2JqLmNoaWxkcmVuKCkubGVuZ3RoLFxuICAgICAgICAgICAgICAgICRwcm9tb1dyYXBwZXIgPSAkY2Fyb3VzZWxPYmoucGFyZW50cyhcIiNwcm9tby13cmFwcGVyXCIpLFxuICAgICAgICAgICAgICAgIG92ZXJyaWRlQ29udHJvbHMgPSBudW1TbGlkZXMgPiAxID8ge30gOiB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgLy8gb3B0aW9ucyBmb3IgdGhlIGhvbWUgY2Fyb3VzZWxcbiAgICAgICAgICAgICAgICBzbGlkZXJPcHRpb25zID0gKCRwcm9tb1dyYXBwZXIuYXR0cihcImRhdGEtY2Fyb3VzZWwtdHlwZVwiKSAhPT0gXCJob21lXCIpID8ge30gOiB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG9Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgcHJldmVudERlZmF1bHRTd2lwZVk6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBidWlsZFBhZ2VyOiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnPHNwYW4gY2xhc3M9XCJmYSBmYS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+R28gdG8gc2xpZGUgJyArIChpbmRleCArIDEpICsgJzwvc3Bhbj4nO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzdGFydFRleHQ6ICc8c3BhbiBjbGFzcz1cImJnIGZhIGZhLWNpcmNsZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cImljIGZhIGZhLXBsYXlcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+UGxheSBzbGlkZXM8L3NwYW4+JyxcbiAgICAgICAgICAgICAgICAgICAgc3RvcFRleHQ6ICc8c3BhbiBjbGFzcz1cImJnIGZhIGZhLWNpcmNsZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cImljIGZhIGZhLXBhdXNlXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPlN0b3Agc2xpZGVzPC9zcGFuPicsXG4gICAgICAgICAgICAgICAgICAgIHByZXZUZXh0OiAnPHNwYW4gY2xhc3M9XCJiZyBmYSBmYS1jaXJjbGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJpYyBmYSBmYS1jaGV2cm9uLWxlZnRcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+UHJldmlvdXMgc2xpZGU8L3NwYW4+JyxcbiAgICAgICAgICAgICAgICAgICAgbmV4dFRleHQ6ICc8c3BhbiBjbGFzcz1cImJnIGZhIGZhLWNpcmNsZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cImljIGZhIGZhLWNoZXZyb24tcmlnaHRcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+TmV4dCBzbGlkZTwvc3Bhbj4nXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhcmluZ09wdGlvbnMgPSAoJHByb21vV3JhcHBlci5hdHRyKFwiZGF0YS1jYXJvdXNlbC10eXBlXCIpICE9PSBcImNsZWFyaW5nXCIpID8ge30gOiB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b1N0YXJ0OiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5pdFNsaWRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSAkLmV4dGVuZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0hvdmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVYOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVZOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0VGV4dDogXCI8c3BhbiBjbGFzcz1cXFwidmlzdWFsbHloaWRkZW5cXFwiPlN0YXJ0IHNsaWRlcjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiZmEgZmEtcGxheVxcXCI+PC9zcGFuPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RvcFRleHQ6IFwiPHNwYW4gY2xhc3M9XFxcInZpc3VhbGx5aGlkZGVuXFxcIj5QYXVzZSBzbGlkZXI8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImZhIGZhLXBhdXNlXFxcIj48L3NwYW4+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0VGV4dDogXCI8c3BhbiBjbGFzcz1cXFwidmlzdWFsbHloaWRkZW5cXFwiPk5leHQgc2xpZGU8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImZhIGZhLWNhcmV0LXJpZ2h0XFxcIj48L3NwYW4+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2VGV4dDogXCI8c3BhbiBjbGFzcz1cXFwidmlzdWFsbHloaWRkZW5cXFwiPlByZXZpb3VzIHNsaWRlPC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJmYSBmYS1jYXJldC1sZWZ0XFxcIj48L3NwYW4+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgb25TbGlkZXJMb2FkOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChudW1TbGlkZXMgPCAyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRwcm9tb1dyYXBwZXIuYWRkQ2xhc3MoXCJwcm9tby13cmFwcGVyLS1zaW5nbGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LCBzbGlkZXJPcHRpb25zLCBvdmVycmlkZUNvbnRyb2xzLCBjbGVhcmluZ09wdGlvbnMpO1xuXG4gICAgICAgICAgICAgICAgICAgICRwcm9tb1dyYXBwZXIucmVtb3ZlQ2xhc3MoXCJjYXJvdXNlbC1sb2FkaW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyLmZpbmQoXCIubG9hZGluZy1mYS1pY29uXCIpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAkcHJvbW9XcmFwcGVyLmZpbmQoXCIuYnhzbGlkZXJcIikuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAkY2Fyb3VzZWxPYmouYnhTbGlkZXIob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICRwcm9tb1dyYXBwZXIuZmluZChcIi5ieC1jb250cm9sc1wiKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy9zZXQgdXAgc2xpZGVyXG4gICAgICAgICAgICBpZiAobnVtU2xpZGVzID4gMCkge1xuICAgICAgICAgICAgICAgIGRlYnVnKFwibW9yZSB0aGFuIDAgc2xpZGVzLCBuZWVkIGNhcm91c2VsLiBOdW1TbGlkZXMgPVwiICsgbnVtU2xpZGVzKTtcbiAgICAgICAgICAgICAgICBpbml0U2xpZGVyKCRjYXJvdXNlbE9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2NyZWF0ZS1zbGlkZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAxOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiLyoqXG4gKiBnZXRzIHdpbmRvdyB3aWR0aFxuICogQHBhcmFtOiB7T2JqZWN0fSAtIHdpbmRvdyBvYmplY3RcbiAqIEByZXR1cm46IHtOdW1iZXJ9IC0gd2luZG93IHdpZHRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKHcpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoJCh3KS53aWR0aCgpKTtcbiAgICB9O1xufSgpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9nZXQtd2luZG93LXdpZHRoLmpzXG4gKiogbW9kdWxlIGlkID0gMjBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogSW5pdGlhbGlzZSBEcm9wZG93bnNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoXCIuLi9qcXVlcnlcIik7XG4gICAgdmFyIGNvbnRlbnRXcmFwcGVyID0gJChcIi5jaXR5LWhlYWx0aF9fY29udGFpbmVyXCIpO1xuICAgIHZhciBsb2FkaW5nICAgICAgICA9ICQoXCIuY2l0eS1oZWFsdGhfX2xvYWRpbmdcIik7XG4gICAgdmFyIGZvcm0gICAgICAgICAgID0gJChcIi5jaXR5LWhlYWx0aF9fZm9ybVwiKTtcbiAgICB2YXIgaW5wdXRzICAgICAgICAgPSBmb3JtLmZpbmQoXCJpbnB1dFwiKTtcblxuICAgIHZhciBmaXhQYWdpbmF0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICQoXCIuY2l0eS1oZWFsdGhfX3BhZ2luYXRpb24tLWFsbCBhXCIpLmNsaWNrKCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB2YXIgcGFnZSA9ICQodGhpcykuYXR0cihcImhyZWZcIikuc3BsaXQoXCJyZXN1bHRfMzE0NzI5X3Jlc3VsdF9wYWdlPVwiKVsxXTtcbiAgICAgICAgICAgIHJlbG9hZCh7XG4gICAgICAgICAgICAgICAgXCJyZXN1bHRfMzE0NzI5X3Jlc3VsdF9wYWdlXCI6IHBhZ2VcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICAkKFwiLmNpdHktaGVhbHRoX19wYWdpbmF0aW9uLS1maWx0ZXJlZCBhXCIpLmNsaWNrKCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB2YXIgcGFnZSA9ICQodGhpcykuYXR0cihcImhyZWZcIikuc3BsaXQoXCJjdXJyZW50X3Jlc3VsdF9wYWdlPVwiKVsxXS5zcGxpdChcIiZcIilbMF07XG4gICAgICAgICAgICByZWxvYWQoe1xuICAgICAgICAgICAgICAgIFwiY3VycmVudF9yZXN1bHRfcGFnZVwiOiBwYWdlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgcmVsb2FkID0gZnVuY3Rpb24oZml4ZWRQYXJhbXMpIHtcbiAgICAgICAgdmFyIHBhcmFtcyA9ICQuZXh0ZW5kKHt0OiBuZXcgRGF0ZSgpLmdldFRpbWUoKX0sIGZpeGVkUGFyYW1zKTtcblxuICAgICAgICBpbnB1dHMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgaW5wdXQgPSAkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIG5hbWUgPSBpbnB1dC5hdHRyKFwibmFtZVwiKTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGlucHV0LnZhbCgpO1xuXG4gICAgICAgICAgICBpZiAobmFtZSAmJiBuYW1lLmxlbmd0aCA+IDAgJiYgdmFsdWUgJiYgdmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBjb250ZW50V3JhcHBlci5jc3MoXCJkaXNwbGF5XCIsIFwibm9uZVwiKTtcbiAgICAgICAgbG9hZGluZy5jc3MoXCJkaXNwbGF5XCIsIFwiaW5saW5lLWJsb2NrXCIpO1xuXG4gICAgICAgICQuZ2V0KFwiLy93d3cuY2l0eS5hYy51ay9hcGkvY2l0eS1oZWFsdGgtY291cnNlcy9fbm9jYWNoZVwiLCBwYXJhbXMsIGZ1bmN0aW9uKGRhdGEpIHsgfSlcbiAgICAgICAgICAgIC5kb25lKCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgY29udGVudFdyYXBwZXIuaHRtbChkYXRhKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuYWx3YXlzKCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgICAgY29udGVudFdyYXBwZXIuY3NzKFwiZGlzcGxheVwiLCBcImJsb2NrXCIpO1xuICAgICAgICAgICAgICAgIGxvYWRpbmcuY3NzKFwiZGlzcGxheVwiLCBcIm5vbmVcIik7XG4gICAgICAgICAgICAgICAgZml4UGFnaW5hdGlvbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgJChcIi5jaXR5LWhlYWx0aF9fZm9ybSAuZHJvcGRvd24tc2VsZWN0XCIpLmNpdHlEcm9wZG93bih7XG4gICAgICAgICAgICBcIm9uc2VsZWN0XCI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlbG9hZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZml4UGFnaW5hdGlvbigpO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LWRyb3Bkb3ducy5qc1xuICoqIG1vZHVsZSBpZCA9IDIxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIGNyZWF0ZXMgZHluYW1pYyBnb29nbGUgbWFwc1xuICogQHJldHVybjogVW5kZWZpbmVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKSxcblxuICAgICAgICBvbkxvYWQgPSBmdW5jdGlvbiAoZHluYW1pY01hcCkge1xuICAgICAgICAgICAgdmFyIGlpaSxcbiAgICAgICAgICAgICAgICBjdXJyZW50TWFya2VyLFxuICAgICAgICAgICAgICAgIG1hcmtlcixcbiAgICAgICAgICAgICAgICBjZW50ZXJNYXJrZXIsXG4gICAgICAgICAgICAgICAgZ21hcCxcbiAgICAgICAgICAgICAgICBsYWJlbEJveCxcbiAgICAgICAgICAgICAgICBpbmZvV2luZG93LFxuICAgICAgICAgICAgICAgIGdtYXBEYXRhLFxuICAgICAgICAgICAgICAgIHVzZXJNYXBDZW50ZXIsXG4gICAgICAgICAgICAgICAgbG9jYXRpb25Sb290Tm9kZSA9IGR5bmFtaWNNYXAuYXR0cihcImRhdGEtbG9jYXRpb25zLW5vZGVcIiksXG4gICAgICAgICAgICAgICAgY29tcHV0ZWRTaXplID0gbmV3IGdvb2dsZS5tYXBzLlNpemUoMzYsIDQzKSxcbiAgICAgICAgICAgICAgICBpbmZvV2luZG93T2ZmU2V0ID0gbmV3IGdvb2dsZS5tYXBzLlNpemUoMCwgLTMwKSxcbiAgICAgICAgICAgICAgICBnbWFwQ29sb3VyT3B0aW9ucyA9IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwibGFuZHNjYXBlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAtNjBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiA2NVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcIm9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcInBvaVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogLTQwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZ2h0bmVzczogNDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJzaW1wbGlmaWVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcInJvYWQuaGlnaHdheVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogLTgwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZ2h0bmVzczogNDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJzaW1wbGlmaWVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcInJvYWQuYXJ0ZXJpYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhdHVyYXRpb246IC02MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IDQwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwib25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwicm9hZC5sb2NhbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVyczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2F0dXJhdGlvbjogLTYwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZ2h0bmVzczogNDBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogXCJvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWF0dXJlVHlwZTogXCJ0cmFuc2l0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAtNjBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlnaHRuZXNzOiA0MFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcInNpbXBsaWZpZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwiYWRtaW5pc3RyYXRpdmUucHJvdmluY2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwib2ZmXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZlYXR1cmVUeXBlOiBcIndhdGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VHlwZTogXCJsYWJlbHNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IFwib25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IC0xMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAxMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwid2F0ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUeXBlOiBcImdlb21ldHJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IC0xMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAxMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZVR5cGU6IFwidHJhbnNpdC5zdGF0aW9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXJzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYXR1cmF0aW9uOiAzMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWdodG5lc3M6IC0xMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBcIm9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIGF0dGFjaENsaWNrRXZlbnQgPSBmdW5jdGlvbiAobWFwLCBtYXJrZXIsIGxhYmVsZWRCb3gsIGRlc2NyaXB0aW9uKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gb24gY2xpY2sgb24gYSBtYXJrZXIsIHNldCB0aGUgY29udGVudCBvZiBpbmZvd2luZG93IGFuZCBvcGVuIGl0XG4gICAgICAgICAgICAgICAgICAgIC8vYWxzbyBjZW50ZXIgdGhlIG1hcCBvbiB0aGF0IG1hcmtlclxuICAgICAgICAgICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihtYXJrZXIsIFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5mb1dpbmRvdy5zZXRDb250ZW50KFwiPHNwYW4gY2xhc3M9XFxcIm1hcmtlci1kZXNjcmlwdGlvblxcXCI+XCIgKyBkZXNjcmlwdGlvbiArIFwiPFxcL3NwYW4+XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5mb1dpbmRvdy5zZXRQb3NpdGlvbihtYXJrZXIucG9zaXRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5mb1dpbmRvdy5vcGVuKG1hcCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXAucGFuVG8obWFya2VyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwbGFjZUNlbnRlck1hcmtlciA9IGZ1bmN0aW9uIChtYXAsIG1hcmtlcikge1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGUgbWFya2VyIGZvciB0aGUgY2VudGVyIG9mIHRoZSBtYXBcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyTWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBtYXJrZXIuaWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcDogbWFwLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKG1hcmtlci5sYXRpdHVkZSwgbWFya2VyLmxvbmdpdHVkZSksXG4gICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogbWFya2VyLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgY2VudGVyTWFya2VyLnNldFpJbmRleCgxODApO1xuXG4gICAgICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKGNlbnRlck1hcmtlciwgXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbmZvV2luZG93LnNldENvbnRlbnQoXCI8c3BhbiBjbGFzcz1cXFwibWFya2VyLXRpdGxlXFxcIj5cIiArIGNlbnRlck1hcmtlci50aXRsZSArIFwiPFxcL3NwYW4+PHNwYW4gY2xhc3M9XFxcIm1hcmtlci1kZXNjcmlwdGlvblxcXCI+XCIgKyBtYXJrZXIuZGVzY3JpcHRpb24gKyBcIjxcXC9zcGFuPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm9XaW5kb3cuc2V0UG9zaXRpb24oY2VudGVyTWFya2VyLnBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZm9XaW5kb3cub3BlbihtYXApO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHBsYWNlQWxsTWFya2VyID0gZnVuY3Rpb24gKG1hcmtlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpaWkgPSAwOyBpaWkgPCBtYXJrZXJzLmxlbmd0aDsgaWlpKyspIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE1hcmtlciA9IG1hcmtlcnNbaWlpXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGVmaW5lIGEgbmV3IG1hcmtlclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGN1cnJlbnRNYXJrZXIuaWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwOiBnbWFwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoY3VycmVudE1hcmtlci5sYXRpdHVkZSwgY3VycmVudE1hcmtlci5sb25naXR1ZGUpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjdXJyZW50TWFya2VyLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzZXQgYSBsYWJlbCBmb3IgZWFjaCBtYXJrZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHVzZXMgZ29vZ2xlIG1hcCBwbHVnaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsQm94ID0gbmV3IEluZm9Cb3goe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG1hcmtlci50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogbWFya2VyLnBvc2l0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhbmU6IFwibWFwUGFuZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlQm94VVJMOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVBdXRvUGFuOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveFN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcImF1dG9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbEJveC5vcGVuKGdtYXApO1xuICAgICAgICAgICAgICAgICAgICAgICAgYXR0YWNoQ2xpY2tFdmVudChnbWFwLCBtYXJrZXIsIGxhYmVsQm94LCAoY3VycmVudE1hcmtlci5kZXNjcmlwdGlvbiArIFwiJm5ic3A7XCIpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIGNhbGwgdGhlIGdvb2dsZSBtYXBzIGxvY2F0aW9uIGFwaSBpbiBtYXRyaXggdG8gZ2V0IHRoZSBkYXRhIG9uIHRoZSBtYXJrZXJzIGFuZCB0aGUgaW5pdGlhbCBtYXAgcGFyYW1ldGVyc1xuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6IFwiLy93d3cuY2l0eS5hYy51ay9hcGkvZ29vZ2xlLW1hcC1sb2NhdGlvbnM/cm9vdD1cIiArIGxvY2F0aW9uUm9vdE5vZGUsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiXG4gICAgICAgICAgICB9KS5kb25lKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEgIT09IG51bGwpIHtcblxuICAgICAgICAgICAgICAgICAgICAvLyBtYXAgYW5kIG1hcmtlcnMgZGF0YVxuICAgICAgICAgICAgICAgICAgICBnbWFwRGF0YSA9IGRhdGE7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlIHRoZSBtYXBcbiAgICAgICAgICAgICAgICAgICAgZ21hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkeW5hbWljLWdtYXBcIiksIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVldFZpZXdDb250cm9sOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHpvb206IGdtYXBEYXRhLmxvYWRPcHRpb25zLnpvb20sXG4gICAgICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoZ21hcERhdGEubG9hZE9wdGlvbnMubGF0aXR1ZGUsIGdtYXBEYXRhLmxvYWRPcHRpb25zLmxvbmdpdHVkZSksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXM6IGdtYXBDb2xvdXJPcHRpb25zXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBpbmZvIHdpbmRvd1xuICAgICAgICAgICAgICAgICAgICBpbmZvV2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coe3BpeGVsT2Zmc2V0OiBpbmZvV2luZG93T2ZmU2V0fSk7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gY3JlYXRlIGFsbCB0aGUgbWFya2VycyBleGNlcHQgdGhlIGNlbnRyYWwgb25lXG4gICAgICAgICAgICAgICAgICAgIC8vIGFkZCBhIGxhYmVsIHRvIGVhY2ggb2YgdGhlbVxuICAgICAgICAgICAgICAgICAgICBwbGFjZUFsbE1hcmtlcihnbWFwRGF0YS5tYXJrZXJzKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBhZGQgYSBtYXJrZXIgZm9yIHRoZSBjZW50ZXIgb2YgdGhlIG1hcFxuICAgICAgICAgICAgICAgICAgICBwbGFjZUNlbnRlck1hcmtlcihnbWFwLCBnbWFwRGF0YS5jZW50ZXJNYXJrZXIpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIG9uIHJlc2l6aW5nIHRoZSBtYXAsIG1ha2Ugc3VyZSB3ZSBrZWVwIHRoZSBjdXJyZW50IGNlbnRlciBwb3NpdGlvblxuICAgICAgICAgICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGREb21MaXN0ZW5lcih3aW5kb3csIFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJNYXBDZW50ZXIgPSBnbWFwLmdldENlbnRlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcihnbWFwLCBcInJlc2l6ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGdtYXAuc2V0Q2VudGVyKHVzZXJNYXBDZW50ZXIpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkeW5hbWljTWFwKSB7XG4gICAgICAgIGlmIChkeW5hbWljTWFwLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICQuZ2V0TXVsdGlKc1NjcmlwdHMoWydsaWIvZ29vZ2xlL21hcC9pbmZvYm94LXBhY2tlZC0xLjEuOS5qcyddLCBvbkxvYWQuYmluZChudWxsLCBkeW5hbWljTWFwKSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG59KCk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtZHluYW1pYy1tYXAuanNcbiAqKiBtb2R1bGUgaWQgPSAyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhekxpc3RpbmdzKSB7XG5cbiAgICAgICAgYXpMaXN0aW5ncy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgbGV0dGVycyA9IG1lLmZpbmQoJy5sZXR0ZXItbGlzdCBhJyksXG4gICAgICAgICAgICAgICAgbGV0dGVyR3JvdXBzID0gbWUuZmluZCgnLmxldHRlci1ncm91cCcpLFxuXG4gICAgICAgICAgICAgICAgc2VsZWN0ID0gZnVuY3Rpb24gKGFuY2hvcikge1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXJzLmZpbHRlcignW2hyZWYhPVwiJyArIGFuY2hvciArICdcIl0nKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0dGVycy5maWx0ZXIoJ1tocmVmPVwiJyArIGFuY2hvciArICdcIl0nKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcblxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChhbmNob3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gYW5jaG9yLnN1YnN0cigxKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVyR3JvdXBzLmZpbHRlcignW25hbWUhPVwiJyArIG5hbWUgKyAnXCJdJykuYWRkQ2xhc3MoJ3Vuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlckdyb3Vwcy5maWx0ZXIoJ1tuYW1lPVwiJyArIG5hbWUgKyAnXCJdJykucmVtb3ZlQ2xhc3MoJ3Vuc2VsZWN0ZWQnKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlckdyb3Vwcy5yZW1vdmVDbGFzcygndW5zZWxlY3RlZCcpLnJlbW92ZUNsYXNzKCdzZWxlY3RlZCcpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcblxuXG4gICAgICAgICAgICBsZXR0ZXJHcm91cHMuZmluZCgnLmdvLXVwJykuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICBzZWxlY3QoZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNoaWxkcmVuKCdzcGFuJykuaHRtbCgnU2hvdyBhbGwnKS5lbmQoKVxuICAgICAgICAgICAgICAgIC5jaGlsZHJlbignaScpLnJlbW92ZUNsYXNzKCdmYS1hcnJvdy1jaXJjbGUtby11cCcpLmFkZENsYXNzKCdmYS1yZXBseScpO1xuXG4gICAgICAgICAgICBsZXR0ZXJzLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgc2VsZWN0KCQodGhpcykuYXR0cignaHJlZicpKTtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9hei1saXN0aW5nLmpzXG4gKiogbW9kdWxlIGlkID0gMjNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCcuaW1hZ2UtYWNjb3JkaW9uIGxhYmVsJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGxhYmVsVGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdmb3InKTtcbiAgICAgICAgICAgICQoJyMnICsgbGFiZWxUYXJnZXQpLmJsdXIoKTtcbiAgICAgICAgICAgICQoJyMnICsgbGFiZWxUYXJnZXQpLmZvY3VzKCk7XG4gICAgICAgIH0pO1xuICAgICAgICAkKCcuaW1hZ2UtYWNjb3JkaW9uIGlucHV0W3R5cGU9XCJyYWRpb1wiXScpLmNoYW5nZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmFkaW9JbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICAkKCcuaW1hZ2UtYWNjb3JkaW9uIGlucHV0W3R5cGU9XCJyYWRpb1wiXScpLnJlbW92ZUNsYXNzKCdjaGVja2VkJyk7XG4gICAgICAgICAgICBpZiAodGhpcy5jaGVja2VkKSB7XG4gICAgICAgICAgICAgICAgcmFkaW9JbnB1dC5hZGRDbGFzcygnY2hlY2tlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2ltYWdlLWFjY29yZGlvbi5qc1xuICoqIG1vZHVsZSBpZCA9IDI0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIEluaXQgc2VlIG1vcmUgd2lkZ2V0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB3aWRnZXRzID0gJChcIi5zZWUtbW9yZVwiKTtcblxuICAgICAgICB3aWRnZXRzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHdpZGdldCA9ICQodGhpcyk7XG4gICAgICAgICAgICB2YXIgdG9nZ2xlID0gd2lkZ2V0LmZpbmQoJy5zZWUtbW9yZV9fdG9nZ2xlJyk7XG4gICAgICAgICAgICB2YXIgdG9nZ2xlTGFiZWwgPSB0b2dnbGUuZmluZCgnLnNlZS1tb3JlX190b2dnbGVfX2xhYmVsJyk7XG4gICAgICAgICAgICBpZiAodG9nZ2xlTGFiZWwubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlTGFiZWwgPSB0b2dnbGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gd2lkZ2V0LmZpbmQoJy5zZWUtbW9yZV9fY29udGVudCcpO1xuICAgICAgICAgICAgdmFyIHNob3dUZXh0ID0gdG9nZ2xlLmh0bWwoKTtcbiAgICAgICAgICAgIHZhciBoaWRlVGV4dCA9IHRvZ2dsZS5hdHRyKCdkYXRhLWhpZGUtdGV4dCcpIHx8ICdIaWRlJztcbiAgICAgICAgICAgIHRvZ2dsZS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBpZiAod2lkZ2V0Lmhhc0NsYXNzKCdzZWUtbW9yZS0tYWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTGFiZWwuaHRtbChzaG93VGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIHdpZGdldC5yZW1vdmVDbGFzcygnc2VlLW1vcmUtLWFjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50LnNsaWRlVXAoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB3aWRnZXQuYWRkQ2xhc3MoJ3NlZS1tb3JlLS1hY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTGFiZWwuaHRtbChoaWRlVGV4dCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc2xpZGVEb3duKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LXNlZS1tb3JlLmpzXG4gKiogbW9kdWxlIGlkID0gMjVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogVG9nZ2xlIFZpc2liaWxpdHkgb2YgSW1hZ2UgQ3JlZGl0IENvbXBvbmVudFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgJGNyZWRpdHMgPSAkKFwiLmltYWdlLWNyZWRpdFwiKSxcbiAgICAgICAgICAgICRjcmVkaXRJdGVtcyA9ICQoXCIuY3JlZGl0cy1pdGVtc1wiKSxcbiAgICAgICAgICAgICRzY3BDcmVkaXRzVGl0bGUgPSAkKFwiLmNyZWRpdHMtdGl0bGVcIiksXG4gICAgICAgICAgICBjcmVkaXRCdXR0b25DbGFzcyA9IFwiLmltYWdlLWNyZWRpdF9fYnV0dG9uXCIsXG5cbiAgICAgICAgICAgIHRvZ2dsZUltYWdlQ3JlZGl0ID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGF0ZSA9IG5vZGUuYXR0cihcImFyaWEtcHJlc3NlZFwiKSA9PT0gXCJ0cnVlXCIgPyBcImZhbHNlXCIgOiBcInRydWVcIjtcbiAgICAgICAgICAgICAgICBub2RlLmF0dHIoXCJhcmlhLXByZXNzZWRcIiwgc3RhdGUpO1xuICAgICAgICAgICAgICAgIG5vZGUucGFyZW50KCkuYXR0cihcImFyaWEtZXhwYW5kZWRcIiwgc3RhdGUpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAkY3JlZGl0cy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykuZmluZChjcmVkaXRCdXR0b25DbGFzcykuY2xpY2soZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHRvZ2dsZUltYWdlQ3JlZGl0KCQodGhpcykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICRzY3BDcmVkaXRzVGl0bGUub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKFwiY3JlZGl0cy10aXRsZS0tYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgLm5leHQoXCIuY3JlZGl0cy1pdGVtc1wiKS50b2dnbGVDbGFzcyhcInNyLW9ubHlcIik7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9pbWFnZS1jcmVkaXRhdGlvbi5qc1xuICoqIG1vZHVsZSBpZCA9IDI2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvLyBmYWxsYmFjayBmb3IgYnJvd3NlcnMgdGhhdCBkb24ndCB1bmRlcnN0YW5kIHBsYWNlaG9sZGVyIGF0dHJpYnV0ZVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG4gICAgICAgIE1vZGVybml6ciA9IHdpbmRvdy5Nb2Rlcm5penI7XG5cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChNb2Rlcm5penIgJiYgIU1vZGVybml6ci5pbnB1dC5wbGFjZWhvbGRlcikge1xuICAgICAgICAgICAgdmFyIGlucHV0cyA9ICQoXCJbcGxhY2Vob2xkZXJdXCIpO1xuXG4gICAgICAgICAgICBpbnB1dHMuZm9jdXMoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0LnZhbCgpID09PSBpbnB1dC5hdHRyKFwicGxhY2Vob2xkZXJcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQudmFsKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC5yZW1vdmVDbGFzcyhcInBsYWNlaG9sZGVyXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmJsdXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciBpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0LnZhbCgpID09PSBcIlwiIHx8IGlucHV0LnZhbCgpID09PSBpbnB1dC5hdHRyKFwicGxhY2Vob2xkZXJcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQuYWRkQ2xhc3MoXCJwbGFjZWhvbGRlclwiKTtcbiAgICAgICAgICAgICAgICAgICAgaW5wdXQudmFsKGlucHV0LmF0dHIoXCJwbGFjZWhvbGRlclwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkuYmx1cigpO1xuXG4gICAgICAgICAgICBpbnB1dHMucGFyZW50cyhcImZvcm1cIikuc3VibWl0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCJbcGxhY2Vob2xkZXJdXCIpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaW5wdXQgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQudmFsKCkgPT09IGlucHV0LmF0dHIoXCJwbGFjZWhvbGRlclwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQudmFsKFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbn0oKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vZnVuY3MvcGxhY2Vob2xkZXItZmFsbGJhY2suanNcbiAqKiBtb2R1bGUgaWQgPSAyN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuLi9qcXVlcnknKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQoJy5pbWFnZS1jYXJvdXNlbCcpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGNhcm91c2VsID0gJCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBzbGlkZXMgPSBjYXJvdXNlbC5jaGlsZHJlbigpO1xuICAgICAgICAgICAgc2xpZGVzLmVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoJ2RhdGEtaW5kZXgnLCBpKTtcbiAgICAgICAgICAgIH0pLndyYXBBbGwoJzxkaXY+PC9kaXY+Jyk7XG5cbiAgICAgICAgICAgIHZhciB1cGRhdGVBY3RpdmUgPSBmdW5jdGlvbiAoc2xpZGVFbGVtZW50LCBvbGRJbmRleCwgbmV3SW5kZXgpIHtcbiAgICAgICAgICAgICAgICBjYXJvdXNlbC5maW5kKCcuaW1hZ2UtY2Fyb3VzZV9faXRlbS0tYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2ltYWdlLWNhcm91c2VfX2l0ZW0tLWFjdGl2ZScpO1xuICAgICAgICAgICAgICAgIGNhcm91c2VsLmZpbmQoJy5pbWFnZS1jYXJvdXNlX19pdGVtW2RhdGEtaW5kZXg9XCInICsgbmV3SW5kZXggKyAnXCJdJykuYWRkQ2xhc3MoJ2ltYWdlLWNhcm91c2VfX2l0ZW0tLWFjdGl2ZScpXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICB2YXIgc2xpZGVyID0gbnVsbDtcblxuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgY29udHJvbHM6IHRydWUsXG4gICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVYOiB0cnVlLFxuICAgICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0U3dpcGVZOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBuZXh0VGV4dDogJzxzcGFuPjxzcGFuIGNsYXNzPVwic3Itb25seVwiPkdvIHRvIG5leHQgc2xpZGU8L3NwYW4+PHNwYW4gY2xhc3M9XCJmYSBmYS1jaGV2cm9uLXJpZ2h0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PC9zcGFuPjwvc3Bhbj4nLFxuICAgICAgICAgICAgICAgIHByZXZUZXh0OiAnPHNwYW4+PHNwYW4gY2xhc3M9XCJzci1vbmx5XCI+R28gdG8gcHJldmlvdXMgc2xpZGU8L3NwYW4+PHNwYW4gY2xhc3M9XCJmYSBmYS1jaGV2cm9uLWxlZnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L3NwYW4+PC9zcGFuPicsXG4gICAgICAgICAgICAgICAgcGFnZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1vdmVTbGlkZXM6IDEsXG4gICAgICAgICAgICAgICAgc2xpZGVXaWR0aDogMCxcbiAgICAgICAgICAgICAgICBmaXJzdFNsaWRlTWFyZ2luOiAwLFxuICAgICAgICAgICAgICAgIG9uU2xpZGVCZWZvcmU6IHVwZGF0ZUFjdGl2ZSxcbiAgICAgICAgICAgICAgICBvblNsaWRlQWZ0ZXI6IHVwZGF0ZUFjdGl2ZSxcbiAgICAgICAgICAgICAgICBvblNsaWRlckxvYWQ6IGZ1bmN0aW9uIChjdXJyZW50SW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgY2Fyb3VzZWwuZmluZCgnLmJ4LWNvbnRyb2xzIGEnKS5hdHRyKCdyb2xlJywgJ2J1dHRvbicpO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChjYXJvdXNlbC5maW5kKCcuaW1hZ2UtY2Fyb3VzZV9faXRlbScpLmNzcygnd2lkdGgnKSkgIT09IG9wdGlvbnMuc2xpZGVXaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCh1cGRhdGUsIDApO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2Fyb3VzZWwuZmluZCgnLmltYWdlLWNhcm91c2VfX2l0ZW1bZGF0YS1pbmRleD1cIicgKyBjdXJyZW50SW5kZXggKyAnXCJdJykuYWRkQ2xhc3MoJ2ltYWdlLWNhcm91c2VfX2l0ZW0tLWFjdGl2ZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2Fyb3VzZWwuZmluZCgnLmltYWdlLWNhcm91c2VfX2l0ZW0nKS5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdtYXJnaW4tbGVmdCc6IG9wdGlvbnMuZmlyc3RTbGlkZU1hcmdpbiArICdweCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21hcmdpbi1yaWdodCc6ICgtb3B0aW9ucy5maXJzdFNsaWRlTWFyZ2luKSArICdweCdcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSBjYXJvdXNlbC53aWR0aCgpO1xuICAgICAgICAgICAgICAgIGlmIChNb2Rlcm5penIubXEoJyhtaW4td2lkdGg6IDYwMHB4KScpKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubWF4U2xpZGVzID0gMjtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5zbGlkZVdpZHRoID0gTWF0aC5yb3VuZCguNSAqICgyMCArIHdpZHRoKSk7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuZmlyc3RTbGlkZU1hcmdpbiA9IC4yNSAqIHdpZHRoIC0gNTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm1heFNsaWRlcyA9IDE7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMuc2xpZGVXaWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLmZpcnN0U2xpZGVNYXJnaW4gPSAwO1xuICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgaWYgKHNsaWRlciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBzbGlkZXIgPSBjYXJvdXNlbC5jaGlsZHJlbigpLmJ4U2xpZGVyKG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNsaWRlci5yZWxvYWRTbGlkZXIob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgJCh3aW5kb3cpLnJlc2l6ZSh1cGRhdGUpO1xuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2luaXQtaW1hZ2UtY2Fyb3VzZWwuanNcbiAqKiBtb2R1bGUgaWQgPSAyOFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGluaXRXaGl0ZUNhcmRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPCA2MDApIHtcbiAgICAgICAgICAgICQoJy53aGl0ZS1jYXJkJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJveCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBib3guZmluZCgnLndoaXRlLWNhcmRfX2NvbnRlbnQnKTtcblxuICAgICAgICAgICAgICAgIGlmIChjb250ZW50LmhlaWdodCgpID4gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuYWRkQ2xhc3MoJ3doaXRlLWNhcmRfX2NvbnRlbnQtLXJlYWQtbW9yZScpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYnV0dG9uID0gJCgnPGRpdiBjbGFzcz1cIndoaXRlLWNhcmRfX3JlYWQtbW9yZVwiPicgK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJ3aGl0ZS1jYXJkX19yZWFkLW1vcmVfX2JnXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGEgIGhyZWY9XCIjXCI+PHNwYW4+cmVhZCBtb3JlPC9zcGFuPjwvYT4nICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2Rpdj4nKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5yZW1vdmVDbGFzcygnd2hpdGUtY2FyZF9fY29udGVudC0tcmVhZC1tb3JlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLmFwcGVuZFRvKGJveCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAkKCcud2hpdGUtY2FyZCAuZW1iZWQtY29udGFpbmVyJykudmlkZW9QcmV2aWV3KHthbGxvd0Z1bGxzY3JlZW46IHRydWV9KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIGluaXRXaGl0ZUNhcmRzO1xufSgpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LXdoaXRlLWNhcmRzLmpzXG4gKiogbW9kdWxlIGlkID0gMjlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogYWRkcyBhdXRvY29tcGxldGUgZnVuY3Rpb25hbGl0eSB0byB0aGUgbWFpbiBzZWFyY2ggYmFyLCB1c2luZyBqUXVlcnkgVUlcbiAqIEBwYXJhbToge09iamVjdH0gZm9ybSAtIGpRdWVyeSBvYmplY3QgZm9yIGZvcm0gdG8gcnVuIGF1dG9TdWdnZXN0IG9uXG4gKiBAcGFyYW06IHtPYmplY3R9IGlucHV0IC0galF1ZXJ5IG9iamVjdCBmb3IgaW5wdXQgZWxlbWVudHMgdG8gcnVuIGF1dG9TdWdnZXN0IG9uXG4gKiBAcGFyYW06IHtTdHJpbmd9IGNvbGxlY3Rpb24gLSB0aGUgbmFtZSBvZiB0aGUgRnVubmVsYmFjayBjb2xsZWN0aW9uIHRvIHF1ZXJ5XG4gKiBAcmV0dW46IHtVbmRlZmluZWR9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG5cbiAgICAgICAgYXJyYXlEdXBsaWNhdGVaYXBwZXIgPSBmdW5jdGlvbiAobXlBcnJheSkge1xuICAgICAgICAgICAgdmFyIG15VW5pcXVlQXJyYXkgPSBbXTtcbiAgICAgICAgICAgICQuZWFjaChteUFycmF5LCBmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICAgICAgICAgICAgICBpZiAoJC5pbkFycmF5KGVsLCBteVVuaXF1ZUFycmF5KSA9PT0gLTEpIG15VW5pcXVlQXJyYXkucHVzaChlbCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBteVVuaXF1ZUFycmF5O1xuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChmb3JtLCBpbnB1dCwgY29sbGVjdGlvbikge1xuICAgICAgICBpbnB1dC5hdXRvY29tcGxldGUoe1xuXG4gICAgICAgICAgICBzb3VyY2U6IGZ1bmN0aW9uIChyZXF1ZXN0LCByZXNwb25zZSkge1xuICAgICAgICAgICAgICAgIHZhciBmYmNvbGxlY3Rpb24gPSBjb2xsZWN0aW9uIHx8IFwibWFpbi1hbGxcIjtcbiAgICAgICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICB1cmw6IFwiL2ZiL3N1Z2dlc3QuanNvbj9jb2xsZWN0aW9uPVwiICsgZmJjb2xsZWN0aW9uICsgXCImZm10PWpzb25cIixcbiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJ0aWFsX3F1ZXJ5OiByZXF1ZXN0LnRlcm1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBhcnJheUR1cGxpY2F0ZVphcHBlcihkYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlKCQubWFwKGRhdGEsIGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7IC8vZW5kICQuYWpheFxuXG4gICAgICAgICAgICB9LCAvL2VuZCBzb3VyY2UgZnVuY3Rpb25cblxuICAgICAgICAgICAgbWluTGVuZ3RoOiAyLFxuICAgICAgICAgICAgZGVsYXk6IDIwLFxuXG4gICAgICAgICAgICAvL3doZW4geW91IGhhdmUgc2VsZWN0ZWQgc29tZXRoaW5nXG4gICAgICAgICAgICBcInNlbGVjdFwiOiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7XG4gICAgICAgICAgICAgICAgLy9jbG9zZSB0aGUgZHJvcCBkb3duXG4gICAgICAgICAgICAgICAgLy9uZWVkIHRvIGNyZWF0ZSBhIGR1bW15IGFzc2lnbm1lbnQsIHRvIHBsZWFzZSBqc2xpbnRcbiAgICAgICAgICAgICAgICAvL2Nsb3NlIGlzIHN0aWxsIHBlcmZvcm1lZFxuICAgICAgICAgICAgICAgIHZhciBjID0gdGhpcy5jbG9zZTtcbiAgICAgICAgICAgICAgICAvL21ha2Ugc3VyZSBvbiBjbGljayB0aGUgc2VsZWN0ZWQgdmFsdWUgcmVwbGFjZXMgdGhlIHR5cGUgdmFsdWVcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnZhbCh1aS5pdGVtLnZhbHVlKTtcbiAgICAgICAgICAgICAgICBmb3JtLnN1Ym1pdCgpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgLy9zaG93IHRoZSBkcm9wIGRvd25cbiAgICAgICAgICAgIG9wZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKFwidWktY29ybmVyLWFsbFwiKS5hZGRDbGFzcyhcInVpLWNvcm5lci10b3BcIik7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICAvL2Nsb3NlIHRoZSBkcm9wIGRvd25cbiAgICAgICAgICAgIGNsb3NlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLWNvcm5lci10b3BcIikuYWRkQ2xhc3MoXCJ1aS1jb3JuZXItYWxsXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuICAgIH07XG5cbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9zZWFyY2gtYXV0b2NvbXBsZXRlLmpzXG4gKiogbW9kdWxlIGlkID0gMzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG5cbiAgICAgICAgc2NyZWVuV2lkdGggPSAtMSxcbiAgICAgICAgaW5NZCA9IHRydWUsXG4gICAgICAgIHNsaWRlciA9IG51bGwsXG4gICAgICAgICR3ID0gJCh3aW5kb3cpLFxuXG4gICAgICAgIHVwZGF0ZU5ld3NTbGlkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJGhvbWVOZXdzID0gJCgnLm5ld3MtZXZlbnRzLXN0cmlwX19uZXdzJyksXG4gICAgICAgICAgICAgICAgd2lkdGggPSBNYXRoLnJvdW5kKCR3LndpZHRoKCkpO1xuXG4gICAgICAgICAgICBpZiAod2lkdGggIT09IHNjcmVlbldpZHRoKSB7XG4gICAgICAgICAgICAgICAgc2NyZWVuV2lkdGggPSB3aWR0aDtcblxuICAgICAgICAgICAgICAgIHZhciBuZXdJbk1kID0gc2NyZWVuV2lkdGggPj0gODUwO1xuICAgICAgICAgICAgICAgIGlmIChuZXdJbk1kICE9PSBpbk1kKSB7XG4gICAgICAgICAgICAgICAgICAgIGluTWQgPSBuZXdJbk1kO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbk1kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXIuZGVzdHJveVNsaWRlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGhvbWVOZXdzLmFkZENsYXNzKCdyb3cnKS5hdHRyKCdzdHlsZScsICcnKS5jaGlsZHJlbigpLmFkZENsYXNzKCdjb2wteHMtMjQgY29sLW1kLTgnKS5jc3MoJ3dpZHRoJywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbGlkZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xpZGVyID0gJGhvbWVOZXdzLnJlbW92ZUNsYXNzKCdyb3cnKS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKCdjb2wteHMtMjQgY29sLW1kLTgnKS5lbmQoKS5ieFNsaWRlcih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0hvdmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2ZW50RGVmYXVsdFN3aXBlWTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbHM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldlRleHQ6ICc8aSBjbGFzcz1cImJnIGZhIGZhLWNpcmNsZVwiPjwvaT48aSBjbGFzcz1cImljIGZhIGZhLWNoZXZyb24tbGVmdFwiPjwvaT4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRUZXh0OiAnPGkgY2xhc3M9XCJiZyBmYSBmYS1jaXJjbGVcIj48L2k+PGkgY2xhc3M9XCJpYyBmYSBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPidcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJHcucmVzaXplKHVwZGF0ZU5ld3NTbGlkZXIpO1xuICAgICAgICB1cGRhdGVOZXdzU2xpZGVyKCk7XG4gICAgfTtcbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9pbml0LW5ld3MtZXZlbnRzLXN0cmlwLmpzXG4gKiogbW9kdWxlIGlkID0gMzFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBDb29raWVzID0gcmVxdWlyZSgnanMtY29va2llJyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCQpIHtcbiAgICAgICAgaWYgKCFDb29raWVzLmdldCgnY29va2llbm90aWNlc2hvd24nKSkge1xuICAgICAgICAgICAgQ29va2llcy5zZXQoJ2Nvb2tpZW5vdGljZXNob3duJywgJzEnLCB7ZXhwaXJlczogMzY1fSk7XG5cbiAgICAgICAgICAgICQoJy5jb29raWUtbm90aWNlJykuc2hvdygpO1xuXG4gICAgICAgICAgICAkKCcuY29va2llLW5vdGljZV9fZGlzbWlzcyBidXR0b24nKS5jbGljayhmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICQoJy5jb29raWUtbm90aWNlJykuZmFkZU91dCgnZmFzdCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy91dGlscy9pbml0LWNvb2tpZS1ub3RpY2UuanNcbiAqKiBtb2R1bGUgaWQgPSAzMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwIDEgNlxuICoqLyIsIi8qIVxuICogSmF2YVNjcmlwdCBDb29raWUgdjIuMS4wXG4gKiBodHRwczovL2dpdGh1Yi5jb20vanMtY29va2llL2pzLWNvb2tpZVxuICpcbiAqIENvcHlyaWdodCAyMDA2LCAyMDE1IEtsYXVzIEhhcnRsICYgRmFnbmVyIEJyYWNrXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqL1xuKGZ1bmN0aW9uIChmYWN0b3J5KSB7XG5cdGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcblx0XHRkZWZpbmUoZmFjdG9yeSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIF9PbGRDb29raWVzID0gd2luZG93LkNvb2tpZXM7XG5cdFx0dmFyIGFwaSA9IHdpbmRvdy5Db29raWVzID0gZmFjdG9yeSgpO1xuXHRcdGFwaS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0d2luZG93LkNvb2tpZXMgPSBfT2xkQ29va2llcztcblx0XHRcdHJldHVybiBhcGk7XG5cdFx0fTtcblx0fVxufShmdW5jdGlvbiAoKSB7XG5cdGZ1bmN0aW9uIGV4dGVuZCAoKSB7XG5cdFx0dmFyIGkgPSAwO1xuXHRcdHZhciByZXN1bHQgPSB7fTtcblx0XHRmb3IgKDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGF0dHJpYnV0ZXMgPSBhcmd1bWVudHNbIGkgXTtcblx0XHRcdGZvciAodmFyIGtleSBpbiBhdHRyaWJ1dGVzKSB7XG5cdFx0XHRcdHJlc3VsdFtrZXldID0gYXR0cmlidXRlc1trZXldO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gcmVzdWx0O1xuXHR9XG5cblx0ZnVuY3Rpb24gaW5pdCAoY29udmVydGVyKSB7XG5cdFx0ZnVuY3Rpb24gYXBpIChrZXksIHZhbHVlLCBhdHRyaWJ1dGVzKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBXcml0ZVxuXG5cdFx0XHRpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcblx0XHRcdFx0YXR0cmlidXRlcyA9IGV4dGVuZCh7XG5cdFx0XHRcdFx0cGF0aDogJy8nXG5cdFx0XHRcdH0sIGFwaS5kZWZhdWx0cywgYXR0cmlidXRlcyk7XG5cblx0XHRcdFx0aWYgKHR5cGVvZiBhdHRyaWJ1dGVzLmV4cGlyZXMgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdFx0dmFyIGV4cGlyZXMgPSBuZXcgRGF0ZSgpO1xuXHRcdFx0XHRcdGV4cGlyZXMuc2V0TWlsbGlzZWNvbmRzKGV4cGlyZXMuZ2V0TWlsbGlzZWNvbmRzKCkgKyBhdHRyaWJ1dGVzLmV4cGlyZXMgKiA4NjRlKzUpO1xuXHRcdFx0XHRcdGF0dHJpYnV0ZXMuZXhwaXJlcyA9IGV4cGlyZXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHJlc3VsdCA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcblx0XHRcdFx0XHRpZiAoL15bXFx7XFxbXS8udGVzdChyZXN1bHQpKSB7XG5cdFx0XHRcdFx0XHR2YWx1ZSA9IHJlc3VsdDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cblx0XHRcdFx0aWYgKCFjb252ZXJ0ZXIud3JpdGUpIHtcblx0XHRcdFx0XHR2YWx1ZSA9IGVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcodmFsdWUpKVxuXHRcdFx0XHRcdFx0LnJlcGxhY2UoLyUoMjN8MjR8MjZ8MkJ8M0F8M0N8M0V8M0R8MkZ8M0Z8NDB8NUJ8NUR8NUV8NjB8N0J8N0R8N0MpL2csIGRlY29kZVVSSUNvbXBvbmVudCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dmFsdWUgPSBjb252ZXJ0ZXIud3JpdGUodmFsdWUsIGtleSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRrZXkgPSBlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKGtleSkpO1xuXHRcdFx0XHRrZXkgPSBrZXkucmVwbGFjZSgvJSgyM3wyNHwyNnwyQnw1RXw2MHw3QykvZywgZGVjb2RlVVJJQ29tcG9uZW50KTtcblx0XHRcdFx0a2V5ID0ga2V5LnJlcGxhY2UoL1tcXChcXCldL2csIGVzY2FwZSk7XG5cblx0XHRcdFx0cmV0dXJuIChkb2N1bWVudC5jb29raWUgPSBbXG5cdFx0XHRcdFx0a2V5LCAnPScsIHZhbHVlLFxuXHRcdFx0XHRcdGF0dHJpYnV0ZXMuZXhwaXJlcyAmJiAnOyBleHBpcmVzPScgKyBhdHRyaWJ1dGVzLmV4cGlyZXMudG9VVENTdHJpbmcoKSwgLy8gdXNlIGV4cGlyZXMgYXR0cmlidXRlLCBtYXgtYWdlIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUVcblx0XHRcdFx0XHRhdHRyaWJ1dGVzLnBhdGggICAgJiYgJzsgcGF0aD0nICsgYXR0cmlidXRlcy5wYXRoLFxuXHRcdFx0XHRcdGF0dHJpYnV0ZXMuZG9tYWluICAmJiAnOyBkb21haW49JyArIGF0dHJpYnV0ZXMuZG9tYWluLFxuXHRcdFx0XHRcdGF0dHJpYnV0ZXMuc2VjdXJlID8gJzsgc2VjdXJlJyA6ICcnXG5cdFx0XHRcdF0uam9pbignJykpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZWFkXG5cblx0XHRcdGlmICgha2V5KSB7XG5cdFx0XHRcdHJlc3VsdCA9IHt9O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUbyBwcmV2ZW50IHRoZSBmb3IgbG9vcCBpbiB0aGUgZmlyc3QgcGxhY2UgYXNzaWduIGFuIGVtcHR5IGFycmF5XG5cdFx0XHQvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC4gQWxzbyBwcmV2ZW50cyBvZGQgcmVzdWx0IHdoZW5cblx0XHRcdC8vIGNhbGxpbmcgXCJnZXQoKVwiXG5cdFx0XHR2YXIgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZSA/IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKSA6IFtdO1xuXHRcdFx0dmFyIHJkZWNvZGUgPSAvKCVbMC05QS1aXXsyfSkrL2c7XG5cdFx0XHR2YXIgaSA9IDA7XG5cblx0XHRcdGZvciAoOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHR2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7XG5cdFx0XHRcdHZhciBuYW1lID0gcGFydHNbMF0ucmVwbGFjZShyZGVjb2RlLCBkZWNvZGVVUklDb21wb25lbnQpO1xuXHRcdFx0XHR2YXIgY29va2llID0gcGFydHMuc2xpY2UoMSkuam9pbignPScpO1xuXG5cdFx0XHRcdGlmIChjb29raWUuY2hhckF0KDApID09PSAnXCInKSB7XG5cdFx0XHRcdFx0Y29va2llID0gY29va2llLnNsaWNlKDEsIC0xKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Y29va2llID0gY29udmVydGVyLnJlYWQgP1xuXHRcdFx0XHRcdFx0Y29udmVydGVyLnJlYWQoY29va2llLCBuYW1lKSA6IGNvbnZlcnRlcihjb29raWUsIG5hbWUpIHx8XG5cdFx0XHRcdFx0XHRjb29raWUucmVwbGFjZShyZGVjb2RlLCBkZWNvZGVVUklDb21wb25lbnQpO1xuXG5cdFx0XHRcdFx0aWYgKHRoaXMuanNvbikge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0Y29va2llID0gSlNPTi5wYXJzZShjb29raWUpO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZSkge31cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoa2V5ID09PSBuYW1lKSB7XG5cdFx0XHRcdFx0XHRyZXN1bHQgPSBjb29raWU7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoIWtleSkge1xuXHRcdFx0XHRcdFx0cmVzdWx0W25hbWVdID0gY29va2llO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBjYXRjaCAoZSkge31cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHR9XG5cblx0XHRhcGkuZ2V0ID0gYXBpLnNldCA9IGFwaTtcblx0XHRhcGkuZ2V0SlNPTiA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBhcGkuYXBwbHkoe1xuXHRcdFx0XHRqc29uOiB0cnVlXG5cdFx0XHR9LCBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuXHRcdH07XG5cdFx0YXBpLmRlZmF1bHRzID0ge307XG5cblx0XHRhcGkucmVtb3ZlID0gZnVuY3Rpb24gKGtleSwgYXR0cmlidXRlcykge1xuXHRcdFx0YXBpKGtleSwgJycsIGV4dGVuZChhdHRyaWJ1dGVzLCB7XG5cdFx0XHRcdGV4cGlyZXM6IC0xXG5cdFx0XHR9KSk7XG5cdFx0fTtcblxuXHRcdGFwaS53aXRoQ29udmVydGVyID0gaW5pdDtcblxuXHRcdHJldHVybiBhcGk7XG5cdH1cblxuXHRyZXR1cm4gaW5pdChmdW5jdGlvbiAoKSB7fSk7XG59KSk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9qcy1jb29raWUvc3JjL2pzLmNvb2tpZS5qc1xuICoqIG1vZHVsZSBpZCA9IDMzXG4gKiogbW9kdWxlIGNodW5rcyA9IDAgMSA2XG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJG1lbnVXcmFwcGVyID0gJChcIi5wcmltYXJ5LW1lbnUtd3JhcHBlclwiKSxcbiAgICAgICAgJG1lbnVUb2dnbGUgID0gJChcIi5wcmltYXJ5LW1lbnUtdG9nZ2xlXCIpLFxuICAgICAgICAkbWVudSAgICAgICAgPSAkKFwiLnByaW1hcnktbWVudVwiKSxcblxuICAgICAgICB1cGRhdGVUb2dnbGVMaW5rID0gZnVuY3Rpb24gKHRvZ2dsZSwgaXNPcGVuKSB7XG4gICAgICAgICAgICB0b2dnbGUudG9nZ2xlQ2xhc3MoXCJwcmltYXJ5LW1lbnVfX2l0ZW0tdG9nZ2xlLS1vcGVuXCIsIGlzT3Blbik7XG4gICAgICAgICAgICB0b2dnbGUuYXR0cignYXJpYS1leHBhbmRlZCcsIGlzT3BlbiA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGJ1aWxkTWVudSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICRtZW51LmZpbmQoXCJsaTpoYXModWwpXCIpXG4gICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcInByaW1hcnktbWVudV9faXRlbS0tYnJhbmNoXCIpXG4gICAgICAgICAgICAgICAgIC5jaGlsZHJlbihcIi5wcmltYXJ5LW1lbnVfX2l0ZW0taW50ZXJpb3JcIilcbiAgICAgICAgICAgICAgICAgLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICRhcmlhTGFiZWwgPSBcInNob3cgb3IgaGlkZSBpdGVtcyB1bmRlciBcIiArICQodGhpcykuZmluZChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tdGV4dFwiKS50ZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFwcGVuZChcIjxhIGNsYXNzPSdwcmltYXJ5LW1lbnVfX2l0ZW0tdG9nZ2xlJyBocmVmPScjJyBhcmlhLWxhYmVsPSdcIiArICRhcmlhTGFiZWwgKyBcIic+PC9hPlwiKTtcbiAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICRtZW51VG9nZ2xlLmF0dHIoXCJhcmlhLWxhYmVsXCIsICRtZW51VG9nZ2xlLmZpbmQoXCIucHJpbWFyeS1tZW51LXRvZ2dsZV9fc2VjdGlvbi1uYW1lXCIpLnRleHQoKSArIFwiIG1lbnVcIik7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaGlnaGxpZ2h0Q3VycmVudFBhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcGF0aG5hbWUgPSAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKS5yZXBsYWNlKFwiL19ub2NhY2hlXCIsIFwiXCIpLnJlcGxhY2UoXCIvX3JlY2FjaGVcIiwgXCJcIik7XG4gICAgICAgICAgICAkKFwiLnByaW1hcnktbWVudSAucHJpbWFyeS1tZW51X19pdGVtLWxpbmtbaHJlZiQ9J1wiICsgcGF0aG5hbWUgICsgXCInXVwiKS5hZGRDbGFzcyhcInByaW1hcnktbWVudV9faXRlbS1saW5rLS1zZWxlY3RlZFwiKTtcbiAgICAgICAgfSxcblxuICAgICAgICBvcGVuQ3VycmVudFN1Ym1lbnVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJG1lbnUuZmluZChcIi5wcmltYXJ5LW1lbnVfX3N1Ym1lbnVcIikuZWFjaChmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmZpbmQoXCIucHJpbWFyeS1tZW51X19pdGVtLWxpbmstLXNlbGVjdGVkXCIpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsoJCh0aGlzKS5wcmV2KCkuY2hpbGRyZW4oXCIucHJpbWFyeS1tZW51X19pdGVtLXRvZ2dsZVwiKSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVG9nZ2xlTGluaygkKHRoaXMpLnByZXYoKS5jaGlsZHJlbihcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tdG9nZ2xlXCIpLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgb3BlblN1Ym1lbnUgPSBmdW5jdGlvbiAoJHRvZ2dsZSkge1xuICAgICAgICAgICAgdXBkYXRlVG9nZ2xlTGluaygkdG9nZ2xlLCB0cnVlKTtcbiAgICAgICAgICAgICR0b2dnbGUucGFyZW50KFwiLnByaW1hcnktbWVudV9faXRlbS1pbnRlcmlvclwiKS5uZXh0KCkuc2xpZGVEb3duKFwiZmFzdFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBjbG9zZVNhbWVMZXZlbFN1Ym1lbnVzKCR0b2dnbGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2xvc2VTYW1lTGV2ZWxTdWJtZW51cyA9IGZ1bmN0aW9uICgkdG9nZ2xlKSB7XG4gICAgICAgICAgICB2YXIgJHNpYmxpbmdCcmFuY2hlcyA9ICR0b2dnbGUuY2xvc2VzdChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tLWJyYW5jaFwiKS5zaWJsaW5ncyhcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tLWJyYW5jaFwiKTtcblxuICAgICAgICAgICAgJC5lYWNoKCRzaWJsaW5nQnJhbmNoZXMsIGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKCQodGhpcykuZmluZChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tbGluay0tc2VsZWN0ZWRcIikubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVG9nZ2xlTGluaygkKHRoaXMpLmZpbmQoXCIucHJpbWFyeS1tZW51X19pdGVtLXRvZ2dsZVwiKSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCIucHJpbWFyeS1tZW51X19zdWJtZW51XCIpLnNsaWRlVXAoXCJtZWRpdW1cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2xvc2VTdWJtZW51ID0gZnVuY3Rpb24gKCR0b2dnbGUpIHtcbiAgICAgICAgICAgIHZhciAkZW5jbG9zaW5nTWVudUl0ZW0gPSAkdG9nZ2xlLmNsb3Nlc3QoXCIucHJpbWFyeS1tZW51X19pdGVtLS1icmFuY2hcIik7XG5cbiAgICAgICAgICAgIGlmICgkZW5jbG9zaW5nTWVudUl0ZW0uZmluZChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tbGluay0tc2VsZWN0ZWRcIikubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHVwZGF0ZVRvZ2dsZUxpbmsoJHRvZ2dsZSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgICR0b2dnbGUucGFyZW50KFwiLnByaW1hcnktbWVudV9faXRlbS1pbnRlcmlvclwiKS5uZXh0KCkuc2xpZGVVcChcImZhc3RcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVUb2dnbGVMaW5rKCRlbmNsb3NpbmdNZW51SXRlbS5maW5kKFwiLnByaW1hcnktbWVudV9faXRlbS10b2dnbGVcIiksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAkZW5jbG9zaW5nTWVudUl0ZW0uZmluZChcIi5wcmltYXJ5LW1lbnVfX3N1Ym1lbnVcIikuc2xpZGVVcChcImZhc3RcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdE1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBidWlsZE1lbnUoKTtcbiAgICAgICAgICAgIGhpZ2hsaWdodEN1cnJlbnRQYWdlKCk7XG5cbiAgICAgICAgICAgICRtZW51VG9nZ2xlLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBpZiAoJG1lbnUuaXMoXCI6aGlkZGVuXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wZW5DdXJyZW50U3VibWVudXMoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgc2V0T3BlbiA9ICEkbWVudVRvZ2dsZS5oYXNDbGFzcyhcInByaW1hcnktbWVudS10b2dnbGUtLW9wZW5cIik7XG5cbiAgICAgICAgICAgICAgICAkbWVudVRvZ2dsZS50b2dnbGVDbGFzcyhcInByaW1hcnktbWVudS10b2dnbGUtLW9wZW5cIiwgc2V0T3Blbik7XG4gICAgICAgICAgICAgICAgJG1lbnVUb2dnbGUuYXR0cignYXJpYS1leHBhbmRlZCcsIHNldE9wZW4gPyAndHJ1ZScgOiAnZmFsc2UnKTtcblxuICAgICAgICAgICAgICAgICRtZW51LnNsaWRlVG9nZ2xlKFwiZmFzdFwiKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJChcIi5wcmltYXJ5LW1lbnVfX2l0ZW0tdG9nZ2xlXCIpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlmICgkKHRoaXMpLmhhc0NsYXNzKFwicHJpbWFyeS1tZW51X19pdGVtLXRvZ2dsZS0tb3BlblwiKSkge1xuICAgICAgICAgICAgICAgICAgICBjbG9zZVN1Ym1lbnUoJCh0aGlzKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBvcGVuU3VibWVudSgkKHRoaXMpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gaW5pdE1lbnUoKTtcbn07XG5cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9mdW5jcy9oZWFkZXItcHJpbWFyeS1uYXYuanNcbiAqKiBtb2R1bGUgaWQgPSAzNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXJcbiAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIgPSAkKFwiLmdsb2JhbC1uYXZfX3RvZ2dsZVwiKSxcbiAgICAgICAgJGhlYWRlclNlYXJjaCA9ICQoXCIuaGVhZGVyX19zZWFyY2hcIiksXG4gICAgICAgICRoZWFkZXJTZWFyY2hUb2dnbGVyID0gJChcIi5oZWFkZXJfX3NlYXJjaF9fdG9nZ2xlXCIpLFxuICAgICAgICAkZ2xvYmFsTmF2V3JhcHBlciA9ICQoXCIuZ2xvYmFsLW5hdl9fd3JhcHBlclwiKSxcbiAgICAgICAgJGdsb2JhbE5hdkRyb3BUb2dnbGVyID0gJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX3RvZ2dsZVwiKSxcbiAgICAgICAgJHV0aWxOYXYgPSAkKFwiLmhlYWRlcl9fdXRpbF9fYXVkaWVuY2VfX2J1dHRvbi1saW5rXCIpLFxuICAgICAgICAkYm9keSA9ICQoJ2JvZHknKSxcbiAgICAgICAgJGNvbXBhY3RXaWR0aCA9IDc0OCxcbiAgICAgICAgJHN0aWNreUhlYWRlclNjcm9sbFRocmVzaG9sZCA9IDcwLFxuICAgICAgICAkbGFzdFNjcm9sbFRvcCA9IDAsXG4gICAgICAgICR3aW5kb3cgPSAkKHdpbmRvdyksXG5cblxuICAgICAgICBjbG9zZU1lbnVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJChcIi5oZWFkZXJfX3V0aWxfX2l0ZW0tLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlXCIpO1xuICAgICAgICAgICAgJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlXCIpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdkRyb3BUb2dnbGVyLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgICAgICAgICAgICR1dGlsTmF2LmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKTtcbiAgICAgICAgfSxcblxuICAgICAgICB0b2dnbGVNb2JpbGVHbG9iYWxNZW51ID0gZnVuY3Rpb24gKG9wZW5NZW51KSB7XG4gICAgICAgICAgICB2YXIgb3BlblNlYXJjaCA9IG9wZW5NZW51ID09PSAnc2VhcmNoJyAmJiAhJGhlYWRlclNlYXJjaC5oYXNDbGFzcyhcImhlYWRlcl9fc2VhcmNoLS1hY3RpdmVcIik7XG4gICAgICAgICAgICB2YXIgb3Blbk5hdiA9IG9wZW5NZW51ID09PSAnbmF2JyAmJiAhJGdsb2JhbE5hdldyYXBwZXIuaGFzQ2xhc3MoXCJnbG9iYWwtbmF2X193cmFwcGVyLS1hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICRnbG9iYWxOYXZXcmFwcGVyLnRvZ2dsZUNsYXNzKFwiZ2xvYmFsLW5hdl9fd3JhcHBlci0tYWN0aXZlXCIsIG9wZW5OYXYpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIuYXR0cignYXJpYS1leHBhbmRlZCcsIG9wZW5OYXYgPyAndHJ1ZScgOiAnZmFsc2UnKTtcblxuICAgICAgICAgICAgJGhlYWRlclNlYXJjaC50b2dnbGVDbGFzcyhcImhlYWRlcl9fc2VhcmNoLS1hY3RpdmVcIiwgb3BlblNlYXJjaCk7XG4gICAgICAgICAgICAkaGVhZGVyU2VhcmNoVG9nZ2xlci5hdHRyKCdhcmlhLWV4cGFuZGVkJywgb3BlblNlYXJjaCA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRTa2lwTGlua3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKCcjc2tpcC10by1xdWVyeScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlTW9iaWxlR2xvYmFsTWVudSgnc2VhcmNoJyk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNxdWVyeScpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfSwgMjUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkKCcjc2tpcC10by1hY2Nlc3NpYmlsaXR5JykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAkKCcjYWNjZXNzaWJpbGl0eScpLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfSwgMjUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cblxuICAgICAgICB1cGRhdGVUYWJOYXZpZ2F0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCR3aW5kb3cud2lkdGgoKSA+ICRjb21wYWN0V2lkdGgpIHtcbiAgICAgICAgICAgICAgICAkKFwiLmdsb2JhbC1uYXZfX21lbnUtaXRlbV9fbGlua1wiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5zaWJsaW5ncyhcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX3RvZ2dsZVwiKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuYXR0cihcInRhYmluZGV4XCIsIC0xKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgJChcIi5nbG9iYWwtbmF2X19tZW51LWl0ZW1fX2xpbmtcIikucmVtb3ZlQXR0cihcInRhYmluZGV4XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHVwZGF0ZVNjcm9sbERvd24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJG5ld1Njcm9sbFRvcCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XG4gICAgICAgICAgICAkYm9keS50b2dnbGVDbGFzcygnc2Nyb2xsLWRvd24nLCAoJG5ld1Njcm9sbFRvcCA+ICRzdGlja3lIZWFkZXJTY3JvbGxUaHJlc2hvbGQpICYmICgkbmV3U2Nyb2xsVG9wIDwgJGxhc3RTY3JvbGxUb3ApKTtcbiAgICAgICAgICAgICRsYXN0U2Nyb2xsVG9wID0gJG5ld1Njcm9sbFRvcDtcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICBpbml0U2tpcExpbmtzKCk7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVXBkYXRlIGNsYXNzbmFtZSBkZXBlbmRpbmcgb24gc2Nyb2xsIHBvc2l0aW9uXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICR3aW5kb3cuc2Nyb2xsKHVwZGF0ZVNjcm9sbERvd24pO1xuICAgICAgICAgICAgdXBkYXRlU2Nyb2xsRG93bigpO1xuXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFdpdGggSlMgZW5hYmxlZCwgbGlua3MgZ29pbmcgdG8gb3RoZXIgcGFnZXMgc2hvdWxkIG5vdCBiZSByZWFjaGFibGUgdGhyb3VnaCB0aGUgdGFiIGtleSxcbiAgICAgICAgICAgICAqIGFzIG9wcG9zZWQgdG8gdG9nZ2xlIGxpbmtzIC0gZXhjZXB0IHdoZW4gbWVudSBpcyBpbiBjb21wYWN0IHZpZXcuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKHVwZGF0ZVRhYk5hdmlnYXRpb24pO1xuICAgICAgICAgICAgdXBkYXRlVGFiTmF2aWdhdGlvbigpO1xuXG4gICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG5cbiAgICAgICAgICAgICR1dGlsTmF2Lm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICB2YXJcbiAgICAgICAgICAgICAgICAgICAgdGhhdCA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudCA9IHRoYXQucGFyZW50KFwibGlcIiksXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldElzQWN0aXZlID0gcGFyZW50Lmhhc0NsYXNzKFwiaGVhZGVyX191dGlsX19pdGVtLS1hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG4gICAgICAgICAgICAgICAgaWYgKCF0YXJnZXRJc0FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJlbnQuYWRkQ2xhc3MoXCJoZWFkZXJfX3V0aWxfX2l0ZW0tLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgdGhhdC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ3RydWUnKTtcbiAgICAgICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkYm9keS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY2xvc2VNZW51cygpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogTm90IHBlcmZlY3QgYXMgaXQgcmVsaWVzIG9uIGtleXVwIGluc3RlYWQgb2Yga2V5ZG93blxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICAkYm9keS5rZXl1cChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlLmtleUNvZGUgPT09IDkgJiZcbiAgICAgICAgICAgICAgICAgICAgJCgnLmhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlLC5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZScpLmxlbmd0aCA+IDAgJiYgISQoZS50YXJnZXQpLmlzKCcuaGVhZGVyX191dGlsX19pdGVtLS1hY3RpdmUsLmhlYWRlcl9fdXRpbF9faXRlbS0tYWN0aXZlICosIC5nbG9iYWwtbmF2X19tZW51LWl0ZW0tLWFjdGl2ZSwgLmdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlIConKSkge1xuICAgICAgICAgICAgICAgICAgICBjbG9zZU1lbnVzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICRnbG9iYWxOYXZEcm9wVG9nZ2xlci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyXG4gICAgICAgICAgICAgICAgICAgIHRoYXQgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICBwYXJlbnQgPSB0aGF0LnBhcmVudHMoXCIuZ2xvYmFsLW5hdl9fbWVudS1pdGVtXCIpLFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRJc0FjdGl2ZSA9IHBhcmVudC5oYXNDbGFzcyhcImdsb2JhbC1uYXZfX21lbnUtaXRlbS0tYWN0aXZlXCIpO1xuXG4gICAgICAgICAgICAgICAgY2xvc2VNZW51cygpO1xuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0SXNBY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50LmFkZENsYXNzKFwiZ2xvYmFsLW5hdl9fbWVudS1pdGVtLS1hY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgIHRoYXQuYXR0cignYXJpYS1leHBhbmRlZCcsICd0cnVlJyk7XG4gICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdG9nZ2xlTW9iaWxlR2xvYmFsTWVudSgnbm9uZScpO1xuICAgICAgICAgICAgJGdsb2JhbE5hdlRvZ2dsZXIub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB0b2dnbGVNb2JpbGVHbG9iYWxNZW51KCduYXYnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkaGVhZGVyU2VhcmNoVG9nZ2xlci5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIHRvZ2dsZU1vYmlsZUdsb2JhbE1lbnUoJ3NlYXJjaCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gaW5pdCgpO1xufTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2hlYWRlci1uYXZzLmpzXG4gKiogbW9kdWxlIGlkID0gMzVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgaW5pdCA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAkKFwiLmxpbmstLWdvdG9cIikuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCdodG1sLGJvZHknKS5zY3JvbGxUb3AoMCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4gaW5pdCgpO1xufTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2Zvb3Rlci5qc1xuICoqIG1vZHVsZSBpZCA9IDM2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIEluaXQgc2VlIHBvcHVwXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhbmNob3JzID0gJChcImFbZGF0YS1wb3B1cC1kaWFsb2ddXCIpO1xuXG4gICAgICAgIGFuY2hvcnMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYW5jaG9yID0gJCh0aGlzKTtcblxuICAgICAgICAgICAgYW5jaG9yLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB2YXIgbGluayA9ICQoZS5jdXJyZW50VGFyZ2V0KS5hdHRyKCdocmVmJyk7XG5cbiAgICAgICAgICAgICQoJyMnK2FuY2hvci5hdHRyKCdkYXRhLXBvcHVwLWRpYWxvZycpKS5kaWFsb2coe1xuICAgICAgICAgICAgICAgIG1vZGFsOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBhbmNob3IuYXR0cigndGl0bGUnKSxcbiAgICAgICAgICAgICAgICB3aWR0aDogODAwLFxuICAgICAgICAgICAgICAgIGhlaWdodDogNTAwLFxuICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgcmVzaXphYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBidXR0b25zOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiQ2FuY2VsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCggdGhpcyApLmRpYWxvZyggXCJjbG9zZVwiICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IFwiQWNjZXB0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gbGluaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCB0aGlzICkuZGlhbG9nKCBcImNsb3NlXCIgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cblxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG59KCk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vZnVuY3MvcG9wdXAtZGlhbG9nLmpzXG4gKiogbW9kdWxlIGlkID0gMzdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAkKFwiLnJlc3BvbnNpdmUtdGFibGVcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciB0aGV0YWJsZSA9ICQodGhpcyk7XG4gICAgICAgICAgICB0aGV0YWJsZS5maW5kKFwidGJvZHkgdGRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmF0dHIoXCJkYXRhLXRoXCIsIHRoZXRhYmxlLmZpbmQoXCJ0aGVhZCB0aDpudGgtY2hpbGQoXCIrKCQodGhpcykuaW5kZXgoKSsxKStcIilcIikudGV4dCgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL3Jlc3BvbnNpdmUtdGFibGVzLmpzXG4gKiogbW9kdWxlIGlkID0gMzhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5Jyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICQoJy5jeWNsaWMtcG9wdXAtaXRlbV9fdGl0bGUnKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBjbGlja2VkSXRlbUxpbmsgPSAkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIGNsaWNrZWRJdGVtICAgICA9ICQodGhpcykuY2xvc2VzdCgnLmN5Y2xpYy1wb3B1cC1pdGVtJyk7XG4gICAgICAgICAgICB2YXIgcG9wdXBHcm91cCAgICAgID0gY2xpY2tlZEl0ZW1MaW5rLmNsb3Nlc3QoXCIuY3ljbGljLXBvcHVwLWdyb3VwXCIpO1xuICAgICAgICAgICAgdmFyIGFsbFBvcHVwSXRlbXMgICA9IHBvcHVwR3JvdXAuY2hpbGRyZW4oJy5jeWNsaWMtcG9wdXAtaXRlbScpO1xuICAgICAgICAgICAgdmFyIGN1cnJlbnRJbmRleCAgICA9IDA7XG4gICAgICAgICAgICB2YXIgbm9PZlBvcHVwSXRlbXMgID0gYWxsUG9wdXBJdGVtcy5sZW5ndGg7XG5cbiAgICAgICAgICAgIGFsbFBvcHVwSXRlbXMuZWFjaChmdW5jdGlvbihpbmRleCwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoJCh0aGlzKS5nZXQoMCkgPT09IGNsaWNrZWRJdGVtLmdldCgwKSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggPSBpbmRleDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0V2lkdGgoKSB7XG4gICAgICAgICAgICAgICAgdmFyIHdpZHRoID0gJCh3aW5kb3cpLndpZHRoKCkgKiAwLjk7XG5cbiAgICAgICAgICAgICAgICBpZiAod2lkdGggPiA1MDApIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGggPSA1MDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB3aWR0aDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0TmV4dEl0ZW0ocmV2ZXJzZSkge1xuICAgICAgICAgICAgICAgIGlmIChyZXZlcnNlID09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50SW5kZXggPT0gbm9PZlBvcHVwSXRlbXMgLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50SW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50SW5kZXggPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4ID0gbm9PZlBvcHVwSXRlbXMgLSAxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4LS07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgbmV4dEl0ZW0gPSBhbGxQb3B1cEl0ZW1zLmdldChjdXJyZW50SW5kZXgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0SXRlbTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gc2V0RGlhbG9nQnV0dG9ucygpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9PZlBvcHVwSXRlbXMgPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBidXR0b25zVG9TZXQgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1BSRVZJT1VTJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQodGhpcykuaHRtbCgkKGdldE5leHRJdGVtKHRydWUpKS5maW5kKCcuY3ljbGljLXBvcHVwLWl0ZW1fX2RldGFpbCcpLmh0bWwoKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnTkVYVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmh0bWwoJChnZXROZXh0SXRlbShmYWxzZSkpLmZpbmQoJy5jeWNsaWMtcG9wdXAtaXRlbV9fZGV0YWlsJykuaHRtbCgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgICAgICAgICAgJCgnLnVpLWRpYWxvZy1jb250ZW50JykuZGlhbG9nKCdvcHRpb24nLCAnYnV0dG9ucycsIGJ1dHRvbnNUb1NldCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAkKCc8ZGl2PjwvZGl2PicpLmRpYWxvZyh7XG4gICAgICAgICAgICAgICAgbW9kYWw6IHRydWUsXG4gICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICByZXNpemFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdpZHRoOiBnZXRXaWR0aCgpLFxuXG4gICAgICAgICAgICAgICAgY2xvc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmRpYWxvZygnZGVzdHJveScpXG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIGNyZWF0ZTpmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCcudWktZGlhbG9nJykuYWRkQ2xhc3MoJ2N5Y2xpYy1wb3B1cCcpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmh0bWwoY2xpY2tlZEl0ZW0uZmluZCgnLmN5Y2xpYy1wb3B1cC1pdGVtX19kZXRhaWwnKS5odG1sKCkpO1xuICAgICAgICAgICAgICAgICAgICBzZXREaWFsb2dCdXR0b25zKCk7XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIG9wZW46ZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9PZlBvcHVwSXRlbXMgPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmZpbmQoJ2J1dHRvbjpudGgtY2hpbGQoMiknKS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5maW5kKCcudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlJykuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICQoJy51aS1kaWFsb2ctY29udGVudCcpLmRpYWxvZygnb3B0aW9uJywgJ3Bvc2l0aW9uJywgJ2NlbnRlcicpO1xuICAgICAgICAgICAgICAgICQoJy51aS1kaWFsb2ctY29udGVudCcpLmRpYWxvZygnb3B0aW9uJywgJ3dpZHRoJywgZ2V0V2lkdGgoKSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJCgnLnVpLXdpZGdldC1vdmVybGF5JykuY2xpY2soZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAkKCdkaXY6dWktZGlhbG9nOnZpc2libGUnKS5kaWFsb2coJ2Nsb3NlJyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICB9O1xufSgpO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2N5Y2xpYy1wb3B1cC5qc1xuICoqIG1vZHVsZSBpZCA9IDM5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vbWFpbi9qcXVlcnknKTtcblxuICAgICQoZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodHlwZW9mIENJVFlfT1BUSU9OUyAhPT0gJ3VuZGVmaW5lZCcgJiYgQ0lUWV9PUFRJT05TLmRlZmVyKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IENJVFlfT1BUSU9OUy5kZWZlci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIENJVFlfT1BUSU9OUy5kZWZlcltpXSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2RlZmVycmVkLmpzXG4gKiogbW9kdWxlIGlkID0gNDBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qKlxuICogY3JlYXRlcyBhbmQgYWRkcyBhIGZ1bmN0aW9uIGFzIHRoZSBkZWZhdWx0IGVycm9yIGhhbmRsZXIgZm9yIGpRdWVyeSBhamF4IG9wZXJhdGlvbnNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4vanF1ZXJ5JyksXG4gICAgICAgIHdlYlNlcnZpY2UgPSBcIi8vd2ViYXBwcy5jaXR5LmFjLnVrL21hdHJpeC9zZXJ2aWNlcy9qUXVlcnlFcnJvci5waHBcIixcblxuICAgICAgICBub3RpZnkgPSBmdW5jdGlvbiAoZXZlbnQsIGpxWEhSLCBhamF4U2V0dGluZ3MsIGVycm9yVGhyb3duKSB7XG5cbiAgICAgICAgICAgIC8vaW5zZXJ0IGFuIFwiaW1hZ2VcIiB3aGljaCBoYXMgYSB3ZWIgc2VydmljZSBhcyB0aGUgc3JjLFxuICAgICAgICAgICAgLy90aGUgd2ViIHNlcnZpY2Ugc2VuZHMgZW1haWwgdG8gdWNzLXdlYnRlYW1cbiAgICAgICAgICAgICQoXCI8aW1nIC8+XCIsIHtcbiAgICAgICAgICAgICAgICBzcmM6IHdlYlNlcnZpY2UgKyBcIj91PVwiICsgZXNjYXBlKGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpICsgXCImcz1cIiArXG4gICAgICAgICAgICAgICAgZXNjYXBlKGFqYXhTZXR0aW5ncy51cmwpICsgXCImdD1cIiArIGFqYXhTZXR0aW5ncy50eXBlICsgXCImZT1cIiArIGVzY2FwZShlcnJvclRocm93biksXG4gICAgICAgICAgICAgICAgc3R5bGU6IFwiZGlzcGxheTogbm9uZVwiXG4gICAgICAgICAgICB9KS5hcHBlbmRUbyhcIiNmb290ZXJcIik7XG5cbiAgICAgICAgfTtcblxuICAgIC8vcmVnaXN0ZXIgdGhpcyBhcyBhIGdsb2JhbCBhamF4IGV2ZW50IGhhbmRsZXJcbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJChkb2N1bWVudCkuYWpheEVycm9yKG5vdGlmeSk7XG4gICAgfSk7XG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2pzLWVycm9yLW5vdGlmaWVyLmpzXG4gKiogbW9kdWxlIGlkID0gNDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyICQgPSByZXF1aXJlKCcuL2pxdWVyeScpLFxuICAgICAgICBkZWJ1ZyA9IHJlcXVpcmUoJy4uL3V0aWxzL2RlYnVnJyksXG5cbiAgICAgICAgY3JlYXRlR2FsbGVyeSA9IHJlcXVpcmUoJy4vZnVuY3MvY3JlYXRlLWdhbGxlcnknKSxcbiAgICAgICAgZG93bmxvYWRGaWxlVHlwZXMgPSByZXF1aXJlKCcuL2Z1bmNzL2Rvd25sb2FkLWZpbGUtdHlwZXMnKSxcbiAgICAgICAgdmlld3BvcnRDaGFuZ2VkID0gcmVxdWlyZSgnLi9mdW5jcy92aWV3cG9ydC1jaGFuZ2VkJyksXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBvYmplY3QgdG8gaG9sZCBnb29nbGUgbWFwcyBtYXJrZXJzXG4gICAgICAgICAqL1xuICAgICAgICBnb29nbGVNYXBzTWFya2VycyA9IHt9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBvdmVybGF5IHBhbmUgZm9yIG1hcFxuICAgICAgICAgKi9cbiAgICAgICAgbWFwT3ZlcmxheVBhbmUgPSBudWxsLFxuICAgICAgICAvKipcbiAgICAgICAgICpcbiAgICAgICAgICogV2hhdCBuZWVkcyB0byBoYXBwZW4gYWZ0ZXIgYSBieHNsaWRlciBjYXJvdXNlbCBoYXMgZmluaXNoZWQgbG9hZGluZzpcbiAgICAgICAgICogMS4gaW5qZWN0IGNvbnRyb2xzIGludG8gQHdpZGdldC4gZmluZHMgZGVmYXVsdCBieHNsaWRlciBjb250cm9scywgcmVwbGFjZSB3aXRoIGZvbnQgYXdlc29tZSBpY29ucyBhbmQgYXBwZW5kIGluIHdpZGdldFxuICAgICAgICAgKiAyLiBhZGQgc2Nyb2xsYWJsZSBjbGFzcyB0byB3aWRnZXQgY29udGVudFxuICAgICAgICAgKiAzLiByZW1vdmUgbG9hZGluZyBzcGlubmVyXG4gICAgICAgICAqIEBwYXJhbSBqUXVlcnkgd2lkZ2V0OiBhIGpxdWVyeSB3cmFwcGVkIC53aWRnZXQgKG5lZWRlZCBmb3Igd2lkZ2V0IGNvbnRyb2xzKVxuICAgICAgICAgKiBAcGFyYW0gc3RyaW5nIG1pZGRsZUJ1dHRvblRleHQ6IHdoYXQgdG8gd3JpdGUgb24gdGhlIG1pZGRsZSBidXR0b24gKGRlZmF1bHRzIHRvIFwiQWxsXCIpIChuZWVkZWQgZm9yIHdpZGdldCBjb250cm9scylcbiAgICAgICAgICogQHBhcmFtIHN0cmluZyBhbGxMaW5rOiB0aGUgXCJhbGxcIiBtaWRkbGUgYnV0dG9uIGhyZWYgKG5lZWRlZCBmb3Igd2lkZ2V0IGNvbnRyb2xzKVxuICAgICAgICAgKi9cbiAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZCA9IGZ1bmN0aW9uICh3aWRnZXQsIGFsbExpbmssIG1pZGRsZUJ1dHRvblRleHQpIHtcblxuICAgICAgICAgICAgdmFyIGxlZnRXaWRnZXRCdXR0b24gPSBcIjxpIGNsYXNzPVxcXCIgZmEgZmEtY2FyZXQtbGVmdFxcXCI+PC9pPlwiLFxuICAgICAgICAgICAgICAgIHJpZ2h0V2lkZ2V0QnV0dG9uID0gXCI8aSBjbGFzcz1cXFwiIGZhIGZhLWNhcmV0LXJpZ2h0XFxcIj48L2k+XCIsXG4gICAgICAgICAgICAvLyBjYXJvdXNlbCBjb250cm9sc1xuICAgICAgICAgICAgICAgIHByZXZpb3VzQnV0dG9uID0gd2lkZ2V0LmZpbmQoXCIuYngtcHJldlwiKSxcbiAgICAgICAgICAgICAgICBuZXh0QnV0dG9uID0gd2lkZ2V0LmZpbmQoXCIuYngtbmV4dFwiKSxcbiAgICAgICAgICAgICAgICBpbnB1dE1pZGRsZUJ1dHRvblRleHQgPSBtaWRkbGVCdXR0b25UZXh0ID8gbWlkZGxlQnV0dG9uVGV4dCA6IFwiQWxsXCI7XG5cbiAgICAgICAgICAgIHByZXZpb3VzQnV0dG9uLmVtcHR5KCkuYXBwZW5kKGxlZnRXaWRnZXRCdXR0b24pO1xuICAgICAgICAgICAgbmV4dEJ1dHRvbi5lbXB0eSgpLmFwcGVuZChyaWdodFdpZGdldEJ1dHRvbik7XG4gICAgICAgICAgICAvL2FkZCB0aGUgXCJhbGxcIiBidXR0b24gYmV0d2VlbiBwcmV2aW91cyBhbmQgbmV4dCBidXR0b25zIGlmIGl0IGlzIG5lZWRlZFxuICAgICAgICAgICAgaWYgKGFsbExpbmspIHtcbiAgICAgICAgICAgICAgICBwcmV2aW91c0J1dHRvbi5hZnRlcihcIjxhIGhyZWY9XFxcIlwiICsgYWxsTGluayArIFwiXFxcIiBjbGFzcz1cXFwiYngtYWxsXFxcIiA+XCIgKyBpbnB1dE1pZGRsZUJ1dHRvblRleHQgKyBcIjwvYT5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB3aWRnZXQuZmluZChcIi5ieC1jb250cm9scy1kaXJlY3Rpb25cIikuYXBwZW5kVG8od2lkZ2V0KTtcbiAgICAgICAgICAgIHdpZGdldC5jaGlsZHJlbignaDInKS5hZGRDbGFzcygnY29udHJvbHMtZGlyZWN0aW9uJyk7XG5cbiAgICAgICAgICAgIC8vYWRkIGNsYXNzXG4gICAgICAgICAgICB3aWRnZXQuZmluZChcIi53aWRnZXQtY29udGVudFwiKS5hZGRDbGFzcyhcInNjcm9sbGFibGVcIik7XG5cbiAgICAgICAgICAgIC8vcmVtb3ZlIHdpZGdldCBsb2FkaW5nIHNwaW5uZXJcbiAgICAgICAgICAgIHdpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG5cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbmV3cyB3aWRnZXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXROZXdzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgbmV3c1dpZGdldCA9ICQoXCIjbmV3cy13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgbmV3c0xpc3QgPSBuZXdzV2lkZ2V0LmZpbmQoXCIjbmV3cy1yZXN1bHRzXCIpLFxuICAgICAgICAgICAgICAgIGFsbExpbmsgPSBcIi8vd3d3LmNpdHkuYWMudWsvbmV3c1wiLFxuICAgICAgICAgICAgICAgIHNob3dBbW91bnQgPSAzO1xuXG4gICAgICAgICAgICAvL3JlZm9ybWF0IHRoZSBjb250ZW50IGludG8gY29sdW1uIHNpemVzIGJhc2VkIG9uIGRldGVybWluZWQgc2l6ZSwgaWYgdGhlcmUgYXJlIG1vcmUgdGhhbiBzaG93QW1vdW50IGl0ZW1zXG4gICAgICAgICAgICBpZiAoJChcIiNuZXdzLXJlc3VsdHMgPiAuYXJ0aWNsZVwiKS5zaXplKCkgPiBzaG93QW1vdW50KSB7XG4gICAgICAgICAgICAgICAgLy9zZXQgdXAgc29ydGFibGVcbiAgICAgICAgICAgICAgICBuZXdzTGlzdC53cmFwQ2hpbGRyZW4oe1xuICAgICAgICAgICAgICAgICAgICBjaGlsZEVsZW06IFwiLmFydGljbGVcIixcbiAgICAgICAgICAgICAgICAgICAgc2V0czogc2hvd0Ftb3VudFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIC8vbGF1bmNoIGJ4c2xpZGVyXG4gICAgICAgICAgICAgICAgbmV3c0xpc3QuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgaGlkZUNvbnRyb2xPbkVuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZChuZXdzV2lkZ2V0LCBhbGxMaW5rKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9yZW1vdmUgd2lkZ2V0IGxvYWRpbmcgc3Bpbm5lciwgY2FzZSB3aGVyZSB0aGUgY2Fyb3VzZWwgaXNuJ3QgbmVlZGVkXG4gICAgICAgICAgICAgICAgbmV3c1dpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGV2ZW50cyB3aWRnZXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciBldmVudHNXaWRnZXQgPSAkKFwiI2V2ZW50cy13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgZXZlbnRzTGlzdCA9ICQoXCIjZXZlbnRzLXJlc3VsdHNcIiksXG4gICAgICAgICAgICAgICAgYWxsTGluayA9IFwiLy93d3cuY2l0eS5hYy51ay9ldmVudHNcIixcbiAgICAgICAgICAgICAgICBzaG93QW1vdW50ID0gMztcblxuICAgICAgICAgICAgLy9jbGljayBhbnl3aGVyZSBvbiBldmVudFxuICAgICAgICAgICAgJChcIi52ZXZlbnRcIiwgZXZlbnRzTGlzdCkuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9ICQodGhpcykuZmluZChcImFcIikuYXR0cihcImhyZWZcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICgkKFwiI2V2ZW50cy1yZXN1bHRzID4gLnZldmVudFwiKS5zaXplKCkgPiBzaG93QW1vdW50KSB7XG4gICAgICAgICAgICAgICAgLy9zb3J0IHRoZSBjaGlsZHJlbiBpbnRvIGdyb3VwcyBvZiBzaG93QW1vdW50XG4gICAgICAgICAgICAgICAgZXZlbnRzTGlzdC53cmFwQ2hpbGRyZW4oe1xuICAgICAgICAgICAgICAgICAgICBjaGlsZEVsZW06IFwiLmV2ZW50XCIsXG4gICAgICAgICAgICAgICAgICAgIHNldHM6IHNob3dBbW91bnRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBldmVudHNMaXN0LmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICAgICAgYXV0bzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0hvdmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlTG9vcDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBvblNsaWRlckxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyQnhTbGlkZXJMb2FkZWQoZXZlbnRzV2lkZ2V0LCBhbGxMaW5rKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9yZW1vdmUgd2lkZ2V0IGxvYWRpbmcgc3Bpbm5lciwgY2FzZSB3aGVyZSB0aGUgY2Fyb3VzZWwgaXNuJ3QgbmVlZGVkXG4gICAgICAgICAgICAgICAgZXZlbnRzV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9LC8vZW5kIGluaXRFdmVudHNcblxuICAgICAgICBpbml0RmxpY2tyID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgJHdpZGdldCA9ICQoXCIjZmxpY2tyLXdpZGdldFwiKSxcbiAgICAgICAgICAgICAgICAkc2xpZGVXcmFwcGVyID0gJHdpZGdldC5maW5kKFwidWxcIiksXG4gICAgICAgICAgICAgICAgbG9hZGVkT3RoZXJQaWNzLFxuICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgZGVidWcoXCJmbGlja3IgY2FsbGJhY2suLi5cIik7XG5cbiAgICAgICAgICAgICAgICAgICAgJChcIi53aWRnZXQtY29udGVudFwiLCAkd2lkZ2V0KS5lYWNoKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9maW5kIHRoZSB1bFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0ZGl2ID0gJChcInVsIGRpdjpmaXJzdC1jaGlsZFwiLCB0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vdWwgPSAkKFwidWxcIiwgdGhpcyksIGRlZmluZWQgbm90IHVzZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzSnEgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodCA9IGZpcnN0ZGl2LmhlaWdodCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoID0gZmlyc3RkaXYud2lkdGgoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9hZGQgY2xhc3Nlc1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc0pxLmFkZENsYXNzKFwic2Nyb2xsYWJsZVwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9hZGQgY3NzIHRvIC53aWRnZXQtY29udGVudFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc0pxLnN0b3AoKS5hbmltYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIm1pbi1oZWlnaHRcIjogaGVpZ2h0XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNKcS5jc3MoXCJ3aWR0aFwiLCB3aWR0aCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vcmVtb3ZlIGxvYWRpbmcgaWNvbiB3aGVuIHRoZSBjb250ZW50IGlzIHJlYWR5XG4gICAgICAgICAgICAgICAgICAgICAgICAkd2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcblxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkKCR3aWRnZXQpO1xuXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy9hdHRhY2ggYW4gZXZlbnQgdG8gaW5pdCB0aGUgcmVzdCBvZiB0aGUgcGljc1xuICAgICAgICAgICAgJHdpZGdldC5tb3VzZWVudGVyKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgIC8vd2Ugb25seSB3YW50IHRvIHJ1biB0aGlzIG9uY2VcbiAgICAgICAgICAgICAgICBpZiAobG9hZGVkT3RoZXJQaWNzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBsb2FkZWRPdGhlclBpY3MgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgLy90cmFuc2xhdGUgYWxsIHRoZSBzcGFuLmltYWdldXJsXCJzIGludG8gYWN0dWFsIGltYWdlc1xuICAgICAgICAgICAgICAgIC8vKHNhdmVzIHNvbWUgcmVuZGVyaW5nIHRpbWUpXG4gICAgICAgICAgICAgICAgJChcImEgLmltYWdldXJsXCIsICR3aWRnZXQpLmVhY2goZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciB0aGlzSnEgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCA9IHRoaXNKcS50ZXh0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICBpbWdUYWcgPSBcIjxpbWcgc3JjPVxcXCJcIiArIHRleHQgKyBcIlxcXCIgYWx0PVxcXCJcXFwiPlwiO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXNKcS5wYXJlbnQoKS50ZXh0KFwiXCIpLnByZXBlbmQoaW1nVGFnKTtcblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgJChcInAgLmltYWdldXJsXCIsICR3aWRnZXQpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGhpc0pxID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgPSB0aGlzSnEudGV4dCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGVBdHRyID0gXCJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyB0ZXh0ICsgXCIpO1wiO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXNKcS5wYXJlbnQoKS5hdHRyKFwic3R5bGVcIiwgc3R5bGVBdHRyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpc0pxLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL3NldCB1cCBzY3JvbGxhYmxlXG4gICAgICAgICAgICAkc2xpZGVXcmFwcGVyLmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG1pblNsaWRlczogMSxcbiAgICAgICAgICAgICAgICBtYXhTbGlkZXM6IDQsXG4gICAgICAgICAgICAgICAgc2xpZGVXaWR0aDogMzMwLFxuICAgICAgICAgICAgICAgIHNsaWRlTWFyZ2luOiAwLFxuICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSwvL2VuZCBpbml0RmxpY2tyXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNvdXJzZXMgd2lkZ2V0XG4gICAgICAgICAqL1xuICAgICAgICBpbml0Q291cnNlcyA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgdmFyICR3aWRnZXQgPSAkKFwiI2NvdXJzZXMtd2lkZ2V0XCIpLFxuICAgICAgICAgICAgICAgIHdpZGdldENvbnRlbnQgPSAkd2lkZ2V0LmZpbmQoXCIud2lkZ2V0LWNvbnRlbnRcIik7XG5cbiAgICAgICAgICAgIHdpZGdldENvbnRlbnQuYWNjb3JkaW9uKHtcbiAgICAgICAgICAgICAgICBoZWlnaHRTdHlsZTogXCJjb250ZW50XCIsXG4gICAgICAgICAgICAgICAgY29sbGFwc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhbmltYXRlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpY29uczoge1xuICAgICAgICAgICAgICAgICAgICBcImhlYWRlclwiOiBcInVpLWljb24tdHJpYW5nbGUtMS1zXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiaGVhZGVyU2VsZWN0ZWRcIjogXCJ1aS1pY29uLXRyaWFuZ2xlLTEtblwiXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjcmVhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZCgkd2lkZ2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9LC8vZW5kIGluaXRDb3Vyc2VzXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHRlc3RpbW9uaWFscyB3aWRnZXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRUZXN0aW1vbmlhbHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgJHRlc3RpbW9uaWFsc1dpZGdldCA9ICQoXCIjdGVzdGltb25pYWxzLXdpZGdldFwiKSxcbiAgICAgICAgICAgICAgICB3aWRnZXRDb250ZW50ID0gJHRlc3RpbW9uaWFsc1dpZGdldC5maW5kKFwiLndpZGdldC1jb250ZW50XCIpLFxuICAgICAgICAgICAgICAgIHRlc3RpbW9uaWFsc0xpc3QgPSB3aWRnZXRDb250ZW50LmZpbmQoXCJ1bFwiKSxcbiAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrO1xuXG4gICAgICAgICAgICAvL2NoZWNrIHRoZXJlIGlzIG1vcmUgdGhhbiAxIHRlc3RpbW9uaWFscyBhbmQgaWYgc28sIHN0YXJ0IHRoZSBjYXJvdXNlbFxuICAgICAgICAgICAgaWYgKCQoXCJsaVwiLCB0ZXN0aW1vbmlhbHNMaXN0KS5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgZGVidWcoXCJMZXNzIHRoYW4gMiB0ZXN0aW1vbmlhbHMsIG5vIG5lZWQgZm9yIGNhcm91c2VsXCIpO1xuICAgICAgICAgICAgICAgICR0ZXN0aW1vbmlhbHNXaWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5hZGRDbGFzcyhcIndpZGdldC1vbmUtaXRlbVwiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnhTbGlkZXJDYWxsYmFjayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL2FkZCBjb250cm9sc1xuICAgICAgICAgICAgICAgIGFmdGVyQnhTbGlkZXJMb2FkZWQoJHRlc3RpbW9uaWFsc1dpZGdldCk7XG4gICAgICAgICAgICAgICAgJHRlc3RpbW9uaWFsc1dpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvL2luaXRpYWxpc2UgYnhzbGlkZXJcbiAgICAgICAgICAgIHRlc3RpbW9uaWFsc0xpc3QuYnhTbGlkZXIoe1xuICAgICAgICAgICAgICAgIGF1dG86IGZhbHNlLFxuICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGF1c2U6IDE1MDAwLFxuICAgICAgICAgICAgICAgIHNsaWRlTWFyZ2luOiAxMCxcbiAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSwvL2VuZCBpbml0VGVzdGltb25pYWxzXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIHByb2ZpbGVzIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFByb2ZpbGVzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgJHByb2ZpbGVzV2lkZ2V0ID0gJChcIiNwcm9maWxlcy13aWRnZXRcIiksXG4gICAgICAgICAgICAgICAgd2lkZ2V0Q29udGVudCA9ICRwcm9maWxlc1dpZGdldC5maW5kKFwiLndpZGdldC1jb250ZW50XCIpLFxuICAgICAgICAgICAgICAgIHByb2ZpbGVzTGlzdCA9IHdpZGdldENvbnRlbnQuZmluZChcInVsXCIpLFxuICAgICAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2s7Ly9lbmQgdmFyc1xuXG4gICAgICAgICAgICAvL2NoZWNrIHRoZXJlIGlzIG1vcmUgdGhhbiAxIHRlc3RpbW9uaWFscyBhbmQgaWYgc28sIHN0YXJ0IHRoZSBjYXJvdXNlbFxuICAgICAgICAgICAgaWYgKCQoXCJsaVwiLCBwcm9maWxlc0xpc3QpLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICAgICAgICBkZWJ1ZyhcIkxlc3MgdGhhbiAyIHRlc3RpbW9uaWFscywgbm8gbmVlZCBmb3IgY2Fyb3VzZWxcIik7XG4gICAgICAgICAgICAgICAgJHByb2ZpbGVzV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJ4U2xpZGVyQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy9hZGQgY29udHJvbHNcbiAgICAgICAgICAgICAgICBhZnRlckJ4U2xpZGVyTG9hZGVkKCRwcm9maWxlc1dpZGdldCk7XG4gICAgICAgICAgICAgICAgJHByb2ZpbGVzV2lkZ2V0LnJlbW92ZUNsYXNzKFwid2lkZ2V0LWxvYWRpbmdcIikuY2hpbGRyZW4oJy5sb2FkaW5nLWZhLWljb24nKS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vaW5pdGlhbGlzZSBieHNsaWRlclxuICAgICAgICAgICAgcHJvZmlsZXNMaXN0LmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhdXRvQ29udHJvbHM6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICBhdXRvSG92ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgdG91Y2hFbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uU2xpZGVyTG9hZDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSwvL2VuZCBwcm9maWxlc1dpZGdldHNcblxuICAgICAgICAvKipcbiAgICAgICAgICogc3BvdGxpZ2h0IG9uIHJlc2VhcmNoIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdFNwb3RsaWdodFJlc2VhcmNoID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgJHNwb3RsaWdodFJlc2VhcmNoV2lkZ2V0ID0gJChcIiNzcG90bGlnaHQtcmVzZWFyY2gtd2lkZ2V0XCIpLFxuICAgICAgICAgICAgICAgIHdpZGdldENvbnRlbnQgPSAkc3BvdGxpZ2h0UmVzZWFyY2hXaWRnZXQuZmluZChcIi53aWRnZXQtY29udGVudFwiKSxcbiAgICAgICAgICAgICAgICBzcG90bGlnaHRSZXNlYXJjaExpc3QgPSB3aWRnZXRDb250ZW50LmZpbmQoXCJ1bFwiKSxcbiAgICAgICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrOy8vZW5kIHZhcnNcblxuICAgICAgICAgICAgLy9jaGVjayB0aGVyZSBpcyBtb3JlIHRoYW4gMSBzcG90bGlnaHQgb24gcmVzZWFyY2ggaXRlbXMgYW5kIGlmIHNvLCBzdGFydCB0aGUgY2Fyb3VzZWxcbiAgICAgICAgICAgIGlmICgkKFwibGlcIiwgc3BvdGxpZ2h0UmVzZWFyY2hMaXN0KS5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICAgICAgZGVidWcoXCJMZXNzIHRoYW4gMiBzcG90bGlnaHQgb24gcmVzZWFyY2gsIG5vIG5lZWQgZm9yIGNhcm91c2VsXCIpO1xuICAgICAgICAgICAgICAgICRzcG90bGlnaHRSZXNlYXJjaFdpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmFkZENsYXNzKFwid2lkZ2V0LW9uZS1pdGVtXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBieFNsaWRlckNhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vYWRkIGNvbnRyb2xzXG4gICAgICAgICAgICAgICAgYWZ0ZXJCeFNsaWRlckxvYWRlZCgkc3BvdGxpZ2h0UmVzZWFyY2hXaWRnZXQpO1xuICAgICAgICAgICAgICAgICRzcG90bGlnaHRSZXNlYXJjaFdpZGdldC5yZW1vdmVDbGFzcyhcIndpZGdldC1sb2FkaW5nXCIpLmNoaWxkcmVuKCcubG9hZGluZy1mYS1pY29uJykucmVtb3ZlKCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvL2luaXRpYWxpc2UgYnhzbGlkZXJcbiAgICAgICAgICAgIHNwb3RsaWdodFJlc2VhcmNoTGlzdC5ieFNsaWRlcih7XG4gICAgICAgICAgICAgICAgYXV0bzogZmFsc2UsXG4gICAgICAgICAgICAgICAgYXV0b0NvbnRyb2xzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwYXVzZTogMTUwMDAsXG4gICAgICAgICAgICAgICAgYXV0b0hvdmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRvdWNoRW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGFnZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGluZmluaXRlTG9vcDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaGlkZUNvbnRyb2xPbkVuZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBvblNsaWRlckxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgYnhTbGlkZXJDYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0sLy9lbmQgaW5pdFNwb3RsaWdodFJlc2VhcmNoXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJTUyB3aWRnZXRcbiAgICAgICAgICovXG4gICAgICAgIGluaXRSc3MgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIHZhciAkd2lkZ2V0ID0gJChcIiNyc3Mtd2lkZ2V0XCIpLFxuICAgICAgICAgICAgICAgIHdpZGdldENvbnRlbnQgPSAkd2lkZ2V0LmZpbmQoXCIud2lkZ2V0LWNvbnRlbnRcIiksXG4gICAgICAgICAgICAgICAgaXRlbXMgPSB3aWRnZXRDb250ZW50LmZpbmQoXCIuaXRlbXNcIik7IC8vZW5kIHZhcnNcblxuICAgICAgICAgICAgaWYgKGl0ZW1zLmNoaWxkcmVuKCkubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIC8vbG9hZCB1cCBieHNsaWRlclxuICAgICAgICAgICAgICAgIGl0ZW1zLmJ4U2xpZGVyKHtcbiAgICAgICAgICAgICAgICAgICAgYXV0bzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlOiAxNTAwMCxcbiAgICAgICAgICAgICAgICAgICAgYXV0b0hvdmVyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYWdlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGluZmluaXRlTG9vcDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBvblNsaWRlckxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFmdGVyQnhTbGlkZXJMb2FkZWQoJHdpZGdldCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL2Rvbid0IGxvYWQgdGhlIGJ4c2xpZGVyIGNhcm91c2VsICwganVzdCBzaG93IHdpZGdldFxuICAgICAgICAgICAgICAgICR3aWRnZXQucmVtb3ZlQ2xhc3MoXCJ3aWRnZXQtbG9hZGluZ1wiKS5jaGlsZHJlbignLmxvYWRpbmctZmEtaWNvbicpLnJlbW92ZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbGwgdG8gYWN0aW9uIHdpZGdldFxuICAgICAgICAgKi9cbiAgICAgICAgaW5pdENhbGxUb0FjdGlvbiA9IGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgdmFyIHN0YXJ0X2RhdGUgPSAkKFwiI3N0YXJ0X2RhdGVcIikudmFsKCksXG4gICAgICAgICAgICAgICAgZW5kX2RhdGUgPSAkKFwiI2VuZF9kYXRlXCIpLnZhbCgpLFxuICAgICAgICAgICAgICAgIHNkID0gbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgICBlZCA9IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgICAgY2QsXG4gICAgICAgICAgICAgICAgc3BsaXREYXRlID0gZnVuY3Rpb24gKGR0LCBpZHQpIHtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0ZUFycmF5ID0gZHQuc3BsaXQoXCIvXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW5kb2ZBcnJheSA9IGRhdGVBcnJheVsyXS5zcGxpdChcIiBcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgaWR0LnNldEZ1bGxZZWFyKGVuZG9mQXJyYXlbMF0pO1xuICAgICAgICAgICAgICAgICAgICBpZHQuc2V0TW9udGgoZGF0ZUFycmF5WzFdIC0gMSk7XG4gICAgICAgICAgICAgICAgICAgIGlkdC5zZXREYXRlKGRhdGVBcnJheVswXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlkdDtcblxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHNkID0gc3BsaXREYXRlKHN0YXJ0X2RhdGUsIHNkKTtcbiAgICAgICAgICAgIGVkID0gc3BsaXREYXRlKGVuZF9kYXRlLCBlZCk7XG5cbiAgICAgICAgICAgIC8vY3VycmVudCBkYXRlXG4gICAgICAgICAgICBjZCA9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgICAgIGlmIChlZCA+PSBjZCAmJiBzZCA8PSBjZCkge1xuXG4gICAgICAgICAgICAgICAgLy9TaG93IHRoZSBvbiBkYXRlXG4gICAgICAgICAgICAgICAgJChcIiNjb250ZW50X29uX2RhdGVcIikuYXR0cihcImNsYXNzXCIsIFwid2lkZ2V0LWNvbnRlbnQgY3RhLXdpZGdldC1zaG93XCIpO1xuICAgICAgICAgICAgICAgICQoXCIjY29udGVudF9vdXRfb2ZfZGF0ZVwiKS5hdHRyKFwiY2xhc3NcIiwgXCJjdGEtd2lkZ2V0LWhpZGVcIik7XG5cbiAgICAgICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgICAgICAvL1Nob3cgb3V0IG9mIGRhdGVcbiAgICAgICAgICAgICAgICAkKFwiI2NvbnRlbnRfb3V0X29mX2RhdGVcIikuYXR0cihcImNsYXNzXCIsIFwid2lkZ2V0LWNvbnRlbnQgY3RhLXdpZGdldC1zaG93XCIpO1xuICAgICAgICAgICAgICAgICQoXCIjY29udGVudF9vbl9kYXRlXCIpLmF0dHIoXCJjbGFzc1wiLCBcImN0YS13aWRnZXQtaGlkZVwiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBpbml0aWF0ZXMgYW4gaW1hZ2UgZ2FsbGVyeSB3aWRnZXRcbiAgICAgICAgICpcbiAgICAgICAgICogQHJldHVybiB7b2JqZWN0IHx8IHVuZGVmaW5lZH0gcmV0dXJucyB0aGUgZ2FsbGVyaWEgalF1ZXJ5IG9iamVjdCBpZlxuICAgICAgICAgKiBzdWNjZXNzZnVsIGVsc2UgdW5kZWZpbmVkIC0gZm9yIGluc3RhbmNlIGlmICRnYWxsZXJ5IGlzIG5vdCBhIGpRdWVyeSBvYmplY3RcbiAgICAgICAgICpcbiAgICAgICAgICovXG4gICAgICAgIGluaXRHYWxsZXJ5ID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgJGdhbGxlcnkgPSAkKFwiI2dhbGxlcnktd2lkZ2V0IC5nYWxsZXJ5XCIpO1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUdhbGxlcnkoJGdhbGxlcnksIHRydWUpO1xuXG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdEZyZWVUZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJChcImRpdi5mcmVlLXRleHQgYVwiKS51bmJpbmQoXCJjbGlja1wiKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG1hc3RlciB3aWRnZXQgaW5pdGlhbGlzZXIsIGNhbGxzIGFsbCB0aGUgb3RoZXIgaW5pdHttYXAsZXZlbnRzLi4ufSBmdW5jdGlvbnNcbiAgICAgICAgICovXG4gICAgICAgIGluaXRXaWRnZXRzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICB2YXIgd2lkZ2V0cyA9IHtcbiAgICAgICAgICAgICAgICAgICAgXCJldmVudHNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdEV2ZW50c1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcIm5ld3NcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdE5ld3NcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJmbGlja3JcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdEZsaWNrclxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcImNvdXJzZXNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdENvdXJzZXNcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJ0ZXN0aW1vbmlhbHNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdFRlc3RpbW9uaWFsc1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcInJzc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0UnNzXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiZ2FsbGVyeVwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0R2FsbGVyeVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcImN0YVwiOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmOiBpbml0Q2FsbFRvQWN0aW9uXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwiZnJlZXRleHRcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdEZyZWVUZXh0XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwicHJvZmlsZXNcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZjogaW5pdFByb2ZpbGVzXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIFwic3BvdGxpZ2h0LXJlc2VhcmNoXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGY6IGluaXRTcG90bGlnaHRSZXNlYXJjaFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIGlkO1xuXG5cbiAgICAgICAgICAgIC8vbG9vcCB0aHJvdWdoIGVhY2ggd2lkZ2V0IHR5cGUgYW5kIGluaXQgaWYgcHJlc2VudFxuICAgICAgICAgICAgZm9yIChpZCBpbiB3aWRnZXRzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHdpZGdldHMuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vYmFpbCBoZXJlIGlmIHRoZSB3aWRnZXQgaXMgbm90IHByZXNlbnRcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoXCIjXCIgKyBpZCArIFwiLXdpZGdldFwiKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlYnVnKFwibm8gXCIgKyBpZCArIFwiIHdpZGdldFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygd2lkZ2V0c1tpZF0uZiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWJ1ZyhcImNhbid0IGZpbmQgaW5pdCBmdW5jIG9mIFwiICsgaWQgKyBcIiB3aWRnZXRcIik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL3J1biB0aGUgaW5pdFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVidWcoXCJydW5uaW5nIGluaXQgZnVuYyBvZiBcIiArIGlkICsgXCIgd2lkZ2V0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkZ2V0c1tpZF0uZi5hcHBseSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGluaXRXaWRnZXRzO1xuXG59KCk7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vd2lkZ2V0cy5qc1xuICoqIG1vZHVsZSBpZCA9IDQyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCIvKipcbiAqIHVzZWQgZm9yIGRldGVjdGluZyBkb3dubG9hZCBmaWxldHlwZXMgYnkgZXh0ZW5zaW9uXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBbXCJkb2NcIiwgXCJkb2N4XCIsIFwieGxzXCIsIFwieGxzeFwiLCBcInBwdFwiLCBcInBwdHhcIiwgXCJwcHNcIiwgXCJwcHN4XCIsXG4gICAgXCJwZGZcIiwgXCJqcGdcIiwgXCJwbmdcIiwgXCJnaWZcIiwgXCJ6aXBcIiwgXCJ0eHRcIiwgXCJydGZcIiwgXCJtcDNcIl07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2Z1bmNzL2Rvd25sb2FkLWZpbGUtdHlwZXMuanNcbiAqKiBtb2R1bGUgaWQgPSA0M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgJCA9IHJlcXVpcmUoJy4uL2pxdWVyeScpLFxuXG4gICAgICAgIHZpZXdwb3J0Q2hhbmdlZCA9IHJlcXVpcmUoJy4uL2Z1bmNzL3ZpZXdwb3J0LWNoYW5nZWQnKSxcbiAgICAgICAgZ2V0V2luZG93V2lkdGggPSByZXF1aXJlKCcuLi9mdW5jcy9nZXQtd2luZG93LXdpZHRoJyksXG5cbiAgICAgICAgYmluZE1lZ2FEZEV2ZW50cyA9IHJlcXVpcmUoJy4vYmluZC1tZWdhLWV2ZW50cycpLFxuXG4gICAgICAgICR3aW5kb3cgPSAkKHdpbmRvdyksXG4gICAgICAgICRib2R5ID0gJChcImJvZHlcIiksXG5cbiAgICAgICAgJGdsb2JhbE5hdiA9ICRib2R5LmZpbmQoXCIjZ2xvYmFsLW5hdjFcIiksXG4gICAgICAgICRuYXZMaXMgPSAkZ2xvYmFsTmF2LmNoaWxkcmVuKFwibGlcIiksXG4gICAgICAgICRtZWdhTGlua3MgPSAkZ2xvYmFsTmF2LmZpbmQoXCIubWVnYVwiKSxcbiAgICAgICAgJGRyb3BzID0gJGdsb2JhbE5hdi5maW5kKFwiLmRyb3BcIiksXG5cblxuICAgICAgICAkcmVzcG9uc2l2ZVRvZ2dsZXJzID0gJChcIi5yZXNwb25zaXZlLXRvZ2dsZXJcIiksXG4gICAgICAgICR0b2dnbGVlcyA9ICQoXCIudG9nZ2xlXCIpLFxuICAgICAgICAkdXRpbE5hdiA9ICQoXCIjdXRpbC1uYXZcIiksXG5cbiAgICAgICAgYnJlYWtwb2ludHMgPSByZXF1aXJlKCcuL2JyZWFrcG9pbnRzJyksXG5cbiAgICAgICAgb25SZXNpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodmlld3BvcnRDaGFuZ2VkKCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV3V2lkdGggPSBnZXRXaW5kb3dXaWR0aCh3aW5kb3cpO1xuXG4gICAgICAgICAgICAgICAgaWYgKG5ld1dpZHRoID49IGJyZWFrcG9pbnRzLndpZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy9iaWcgdG8gc21hbGw/XG4gICAgICAgICAgICAgICAgICAgICRib2R5LmFkZENsYXNzKFwic2NyZWVuLXdpZGVcIikucmVtb3ZlQ2xhc3MoXCJzY3JlZW4tdGhpbiBzY3JlZW4tbWVkaXVtXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgZ29pbmcgdG8gZGVza3RvcCBzaXplLFxuICAgICAgICAgICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIGJpbmQgdGhlIGV2ZW50IGhhbmRsZXJzXG4gICAgICAgICAgICAgICAgICAgIGJpbmRNZWdhRGRFdmVudHMoJG1lZ2FMaW5rcywgJG5hdkxpcywgJGRyb3BzKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBjbG9zZSBhbnkgb3BlbmVycyB3aGljaCB3ZXJlIG9wZW4gYmVmb3JlIHdpZHRoIGNoYW5nZVxuICAgICAgICAgICAgICAgICAgICAkcmVzcG9uc2l2ZVRvZ2dsZXJzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkdG9nZ2xlZXMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICR1dGlsTmF2LnJlbW92ZUNsYXNzKFwiaGlkZGVuXCIpO1xuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChuZXdXaWR0aCA+PSBicmVha3BvaW50cy5tZWRpdW0pIHtcbiAgICAgICAgICAgICAgICAgICAgLy9zbWFsbCB0byBiaWc/XG4gICAgICAgICAgICAgICAgICAgICRib2R5LmFkZENsYXNzKFwic2NyZWVuLW1lZGl1bVwiKS5yZW1vdmVDbGFzcyhcInNjcmVlbi10aGluIHNjcmVlbi13aWRlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkdXRpbE5hdi5hZGRDbGFzcyhcImhpZGRlblwiKTtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3BzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkYm9keS5hZGRDbGFzcyhcInNjcmVlbi10aGluXCIpLnJlbW92ZUNsYXNzKFwic2NyZWVuLW1lZGl1bSBzY3JlZW4td2lkZVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKG9uUmVzaXplKTtcbiAgICAgICAgICAgICR3aW5kb3cucmVzaXplKCk7XG5cbiAgICAgICAgICAgIC8vIGF0dGFjaCBjbGljayBldmVudHMgb24gbW9iaWxlIG5hdmlnYXRpb24gdG9nZ2xlcnNcbiAgICAgICAgICAgICRyZXNwb25zaXZlVG9nZ2xlcnMub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xuXG4gICAgICAgICAgICAgICAgdmFyICRzZWxmID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgJHRvZ2dsZSA9ICRzZWxmLm5leHQoXCIudG9nZ2xlXCIpO1xuXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICRzZWxmLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICR0b2dnbGUudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gaW5pdCB0aGUgZ2xvYmFsIG5hdmlnYXRpb24gZHJvcCBkb3duc1xuICAgICAgICAgICAgJGRyb3BzLmhpZGUoKTtcblxuICAgICAgICAgICAgaWYgKGdldFdpbmRvd1dpZHRoKHdpbmRvdykgPCBicmVha3BvaW50cy53aWRlKSB7XG4gICAgICAgICAgICAgICAgJHV0aWxOYXYuY2hpbGRyZW4oXCJsaVwiKS5jbG9uZSgpLmFwcGVuZFRvKCRnbG9iYWxOYXYpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGluaXQ7XG59KCk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL29uLXJlc2l6ZS9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDQ0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuXG5cbiAgICAvLyB3ZSBvbmx5IG5lZWQgdGhpcyBzdHVmZiBvbiBhIGRlc2t0b3Agc2l6ZWQgYnJvd3NlclxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG4gICAgICAgICRib2R5ID0gJCgnYm9keScpLFxuICAgICAgICAkcXVlcnkgPSAkKFwiI3NlYXJjaCAjcXVlcnlcIiksXG5cbiAgICAgICAgYnJlYWtwb2ludHMgPSByZXF1aXJlKCcuL2JyZWFrcG9pbnRzJyksXG5cbiAgICAgICAgYm91bmREcm9wRXZlbnRzID0gZmFsc2UsXG5cbiAgICAgICAgYmluZE1lZ2FEZEV2ZW50cyA9IGZ1bmN0aW9uICgkbWVnYUxpbmtzLCAkbmF2TGlzLCAkZHJvcHMpIHtcbiAgICAgICAgICAgIGlmICghYm91bmREcm9wRXZlbnRzKSB7XG5cbiAgICAgICAgICAgICAgICAvL2F0dGFjaCBjbGljaywga2V5ZG93biBhbmQgZm9jdXMgaGFuZGxlclxuICAgICAgICAgICAgICAgICRtZWdhTGlua3Mub24oXCJjbGljayBrZXlkb3duIGZvY3VzXCIsIGZ1bmN0aW9uIChlKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyICR0YXJnZXQgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJGxpID0gJHRhcmdldC5jbG9zZXN0KFwibGlcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAkZHJvcCA9ICRsaS5maW5kKFwiLmRyb3BcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gaWYgd2UgaGF2ZSBib3VuZCB0aGUgZXZlbnQsIGJ1dCBhcmUgbm93IG9uIHNtYWxsZXIgd2lkdGggd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAgICAgICAgICAgICAvLyBzaG93IHRoZSBtZWdhIGRyb3Bkb3duXG4gICAgICAgICAgICAgICAgICAgIGlmIChDSVRZLmdldFdpbmRvd1dpZHRoKHdpbmRvdykgPCBicmVha3BvaW50cy5kZXNrdG9wKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL3doYXQgdHlwZSBvZiBldmVudCB3YXMgZmlyZWQ/XG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgPT09IFwia2V5ZG93blwiICYmIGUua2V5Q29kZSAhPT0gMTMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgYSBrZXlwcmVzcyBldmVudCBidXQgYnV0dG9uIGhpdCB3YXNuJ3QgZW50ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChlLnR5cGUgPT09IFwiZm9jdXNcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9hbHdheXMga2lsbCBhbGwgZHJvcCBkb3ducyB3aGVuIGEgbWVnYUxpbmsgcmVjZWl2ZXMgZm9jdXMgdGhlbiBkcm9wIG91dCBvZiBmblxuICAgICAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICRkcm9wcy5oaWRlKCkucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvL2lmIHdlIGFyZSBoZXJlIHRoZW4gdGhlIGV2ZW50IGlzIGVpdGhlciBhIGNsaWNrIG9yIFwiZW50ZXJcIiBrZXlwcmVzc1xuXG4gICAgICAgICAgICAgICAgICAgIC8vcmVtb3ZlIGFsbCBhY3RpdmUgY2xhc3MgZnJvbSBhbGwgb3RoZXIgbGlua3NcbiAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5ub3QoJGxpWzBdKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3BzLm5vdCgkZHJvcFswXSkuaGlkZSgpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkbGkudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgICAgICAgICRkcm9wLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAgICAgICAkZHJvcC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy8gb24gYmx1ciBvZiBsYXN0IG1lZ2EgbGluayAoc2VhcmNoIGlucHV0IHF1ZXJ5IHdpbGwgYmUgZm9jdXNzZWQpLCBjbG9zZVxuICAgICAgICAgICAgICAgIC8vIGFueSBvcGVuIGRyb3AgZG93blxuICAgICAgICAgICAgICAgICRxdWVyeS5vbihcImZvY3VzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3BzLmhpZGUoKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vZG9uJ3QgcHJvcG9nYXRlIGNsaWNrcyBpbnNpZGUgbWVnYSBtZW51c1xuICAgICAgICAgICAgICAgICRkcm9wcy5vbihcImNsaWNrXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvL2Nsb3NlIGFueSBvcGVuIG1lZ2EgbWVudXMgd2hlbiBwYWdlIGlzIGNsaWNrZWRcbiAgICAgICAgICAgICAgICAkYm9keS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgJGRyb3BzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgJG5hdkxpcy5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGJvdW5kRHJvcEV2ZW50cyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICByZXR1cm4gYmluZE1lZ2FEZEV2ZW50cztcbn0oKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9vbi1yZXNpemUvYmluZC1tZWdhLWV2ZW50cy5qc1xuICoqIG1vZHVsZSBpZCA9IDQ1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBcInRoaW5cIjogNDgwLFxuICAgIFwibWVkaXVtXCI6IDc2OCxcbiAgICBcIndpZGVcIjogOTgwXG59O1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL29uLXJlc2l6ZS9icmVha3BvaW50cy5qc1xuICoqIG1vZHVsZSBpZCA9IDQ2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkID0gcmVxdWlyZSgnLi4vanF1ZXJ5JyksXG5cbiAgICAgICAgc2xpZGVycyA9IFtcbiAgICAgICAgICAgIHJlcXVpcmUoJy4vcHJvZmlsZXMtY2Fyb3VzZWwnKSxcbiAgICAgICAgICAgIHJlcXVpcmUoJy4vc3RhdC1jYXJvdXNlbCcpXG4gICAgICAgIF0sXG5cbiAgICAgICAgY3JlYXRlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHZhciAkY2Fyb3VzZWxXcmFwcGVyID0gJChkYXRhLmlkKSxcbiAgICAgICAgICAgICAgICAkY2Fyb3VzZWwgPSAkY2Fyb3VzZWxXcmFwcGVyLmZpbmQoXCIuYnhzbGlkZXJcIiksXG4gICAgICAgICAgICAgICAgc2xpZGVDb3VudCA9ICRjYXJvdXNlbC5jaGlsZHJlbigpLmxlbmd0aDtcblxuICAgICAgICAgICAgJGNhcm91c2VsV3JhcHBlci5yZW1vdmVDbGFzcyhcImNhcm91c2VsLWxvYWRpbmdcIik7XG4gICAgICAgICAgICBpZiAoc2xpZGVDb3VudCA+IDEpIHtcbiAgICAgICAgICAgICAgICAkY2Fyb3VzZWwuYnhTbGlkZXIoZGF0YS5vcHRpb25zKHNsaWRlQ291bnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBpbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzbGlkZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY3JlYXRlKHNsaWRlcnNbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIGluaXQ7XG59KCk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9qcy9tYWluL2N1c3RvbS1zbGlkZXJzL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gNDdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGlkOiAnI3Byb2ZpbGVzLWNhcm91c2VsJyxcbiAgICBvcHRpb25zOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgIHBhZ2VyOiB0cnVlLFxuICAgICAgICAgICAgaW5maW5pdGVMb29wOiBmYWxzZSxcbiAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgICBzbGlkZVdpZHRoOiAzMzAsXG4gICAgICAgICAgICBzbGlkZU1hcmdpbjogMCxcbiAgICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiBmYWxzZSxcbiAgICAgICAgICAgIGhpZGVDb250cm9sT25FbmQ6IHRydWUsXG4gICAgICAgICAgICBtYXhTbGlkZXM6IDEsXG4gICAgICAgICAgICBwcmV2VGV4dDogXCI8aSBjbGFzcz1cXFwiZmEgZmEtYW5nbGUtbGVmdFxcXCI+PC9pPlwiLFxuICAgICAgICAgICAgbmV4dFRleHQ6IFwiPGkgY2xhc3M9XFxcImZhIGZhLWFuZ2xlLXJpZ2h0XFxcIj48L2k+XCJcbiAgICAgICAgfTtcbiAgICB9XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvanMvbWFpbi9jdXN0b20tc2xpZGVycy9wcm9maWxlcy1jYXJvdXNlbC5qc1xuICoqIG1vZHVsZSBpZCA9IDQ4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpZDogJyNzdGF0aXN0aWMtY2Fyb3VzZWwnLFxuICAgIG9wdGlvbnM6IGZ1bmN0aW9uIChuKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgIGF1dG9Db250cm9sczogZmFsc2UsXG4gICAgICAgICAgICBjb250cm9sczogdHJ1ZSxcbiAgICAgICAgICAgIHBhZ2VyOiBmYWxzZSxcbiAgICAgICAgICAgIGluZmluaXRlTG9vcDogZmFsc2UsXG4gICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgICAgICAgICAgc2xpZGVXaWR0aDogMzAwLFxuICAgICAgICAgICAgc2xpZGVNYXJnaW46IDYwLFxuICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6IHRydWUsXG4gICAgICAgICAgICBoaWRlQ29udHJvbE9uRW5kOiB0cnVlLFxuICAgICAgICAgICAgbWluU2xpZGVzOiAxLFxuICAgICAgICAgICAgbW92ZVNsaWRlczogMSxcbiAgICAgICAgICAgIG1heFNsaWRlczogKG4gPj0gMykgPyAzIDogMixcbiAgICAgICAgICAgIHByZXZUZXh0OiBcIjxpIGNsYXNzPVxcXCIgZmEgZmEtY2FyZXQtbGVmdFxcXCI+PC9pPlwiLFxuICAgICAgICAgICAgbmV4dFRleHQ6IFwiPGkgY2xhc3M9XFxcIiBmYSBmYS1jYXJldC1yaWdodFxcXCI+PC9pPlwiXG4gICAgICAgIH07XG4gICAgfVxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2pzL21haW4vY3VzdG9tLXNsaWRlcnMvc3RhdC1jYXJvdXNlbC5qc1xuICoqIG1vZHVsZSBpZCA9IDQ5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	
	var CITY = __webpack_require__(1),
	    deferred = __webpack_require__(40),
	    initJsFailureNotifier = __webpack_require__(41),
	    initWidgets = __webpack_require__(42),
	    initOnResize = __webpack_require__(44),
	    initCustomSliders = __webpack_require__(47);
	
	CITY.init();
	initJsFailureNotifier();
	deferred();
	initOnResize();
	initWidgets();
	initCustomSliders();


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	        customAJAX = __webpack_require__(16),
	        viewportChanged = __webpack_require__(17),
	        createGallery = __webpack_require__(18),
	        createSlider = __webpack_require__(19),
	        getWindowWidth = __webpack_require__(20),
	        initDropdowns = __webpack_require__(21),
	        initDynamicGmap = __webpack_require__(22),
	        initAzListing = __webpack_require__(23),
	        imageAccordion = __webpack_require__(24),
	        initSeeMore = __webpack_require__(25),
	        imageCreditation = __webpack_require__(26),
	        initPlaceholderHallback = __webpack_require__(27),
	        initImageCarousel = __webpack_require__(28),
	        initWhiteCards = __webpack_require__(29),
	        searchAutoComplete = __webpack_require__(30),
	        initNewsEventsStrip = __webpack_require__(31),
	        initCookieNotice = __webpack_require__(32),
	        headerPrimaryNav = __webpack_require__(34),
	        headerNavs = __webpack_require__(35),
	        footer = __webpack_require__(36),
	        popupDialog = __webpack_require__(37),
	        scrollTo = __webpack_require__(11),
	        responsiveTables = __webpack_require__(38),
	        cyclicPopup = __webpack_require__(39);
	
	    /**
	     * The main CITY wrapper object
	     * @version $Revision: 6291 $ ($Date: 2012-09-05 16:06:30 +0100 (Wed, 05 Sep 2012) $)
	     * @author City Web Team
	     */
	    var CITY = (function (w) {
	
	            "use strict";
	
	            /**
	             * The object to hold all loadable scripts, add an object here to allow it's loading in a page
	             *
	             * Each child object has three properties:
	             *   description: a short description of the script
	             *           src: the filename of the script
	             *       [async]: Whether to load the script asynchronously (assumed false unless given)
	             *
	             * @var Object
	             */
	            var scripts = {
	                    googleMapsApi: {
	                        description: "google maps api",
	                        src: "https://maps.googleapis.com/maps/api/js?key=AIzaSyC2tMpI7FFnlIjNvO0VrTPIhfGAvQhAfr0&sensor=false"
	                    },
	                    flowplayer: {
	                        description: "include flowplayer for pages with videos",
	                        src: "lib/flowplayer/flowplayer-3.2.4.min.js"
	                    },
	                    flowplayerEmbed: {
	                        description: "Embed code for flowplayer",
	                        src: "lib/flowplayer/flowplayer.embed-3.0.3.min.js"
	                    },
	                    swfobject: {
	                        description: "swfobject for youtube video(s)",
	                        src: "lib/swfobject/swfobject.js"
	                    },
	                    highcharts: {
	                        description: "JQuery charting plugin",
	                        src: "lib/jquery/plugins/highcharts/highcharts-4-1-4.js"
	                    },
	                    jVectorMap: {
	                        description: "jQuery plugin for SVG world map",
	                        src: "lib/jquery/plugins/vector-map/jquery.vector-map.min.js"
	                    },
	                    worldMap: {
	                        description: "map svg",
	                        src: "lib/jquery/plugins/vector-map/world-en.js"
	                    },
	                    buildingTheVision: {
	                        description: "building the vision specific scripts",
	                        src: "buildingTheVision.js"
	                    },
	                    library: {
	                        description: "library site scripts",
	                        src: "library.js"
	                    },
	                    location: {
	                        description: "Computer Room site scripts",
	                        src: "location.js"
	                    }
	                },
	
	                /***************************************************************************
	                 * GLOBAL VARIABLES
	                 ***************************************************************************/
	
	                /**
	                 * The location of external scripts (with trailing slash)
	                 * @var String
	                 */
	                srcPrefix = "//" + document.location.hostname.replace(/www|intranet/, "s1").replace("cass.", "").replace("citysport.org.uk", "city.ac.uk") + "/cityr/js/",
	
	
	                /**
	                 * The version number to prepend to the file name, set in page
	                 * @var String
	                 */
	                version = w.cityVersion || "123456789.",
	
	
	                /**
	                 * Lazyload function, injects a <script> element into the page head
	                 *
	                 * now proxies to yepnope
	                 *
	                 * @param {Object} jsHandle: The Object from CITY.scripts to load
	                 * @param {String} callback: The name of the callback to be executed after this script has loaded
	                 */
	                load = function (jsHandle, callback) {
	
	                    //work out full path
	                    var path = (function () {
	
	                        var script = scripts[jsHandle];
	
	                        if (/^https?:\/\//.test(script.src)) {
	                            return script.src;
	                        }
	
	                        return srcPrefix +
	                            (/plugins|lib/.test(script.src) ? "" : "modules/") +
	                            script.src;
	
	                    }());
	
	                    yepnope({
	                        load: path,
	                        callback: callback
	                    });
	
	                },
	
	                setVersion = function (v) {
	                    version = v;
	                },
	
	
	                /***************************************************************************
	                 * USEFUL GLOBAL FUNCTIONS
	                 ***************************************************************************/
	
	
	                /**
	                 * Stuff needed on everypage - explore city, login etc.
	                 */
	                initPage = function () {
	
	                    var $body = $("body"),
	                        $form = $body.find("#search, #header__search__form"),
	                        $searchForm = $body.find(".search-form[data-autocomplete-status!='off']"),
	                        $searchFormQuery = $searchForm.find(".search-form__query"),
	                        $query = $form.find("#query"),
	                        indexForm = $("#fb-queryform"),
	                        indexQuery = $("#search-query", indexForm),
	                        searchPageAutoCompleteCollection = $body.attr("id") === "intranet" ? "intranet" : "main-all",
	                        $galleries = $("#content").find(".gallery"),
	                        azListings = $('.az-single-page'),
	                        autoCompleteCollection = $searchForm.attr("data-collection"),
	                        // navigation
	
	                        $primaryNav = $("#primary-nav"),
	                        $secondaryNav = $("#secondary-nav"),
	                        $secondaryNavLis = $("#secondary-nav > li"),
	
	                        $carouselObj = $("#promo-area"), //carousel container
	                        // UI elements
	                        $accordions = $body.find(".accordion"),
	                        $responsiveTabs = $body.find(".responsive-tabs"),
	                        // misc.
	                        currentUrl = $primaryNav.data('url') || '',
	                        modifySecNav = currentUrl.indexOf('/my-country/') < 0;
	                    //end initPage vars
	
	
	                    // svg fallback
	                    if (!Modernizr.svg) {
	                        $('#header__logo img').attr('src', function () {
	                            return $(this).attr('src').replace('.svg', '.png');
	                        });
	                    }
	
	                    headerPrimaryNav();
	                    headerNavs();
	                    footer();
	                    $responsiveTabs.accordionTabs();
	                    initDropdowns();
	                    initAzListing(azListings);
	                    imageAccordion();
	                    initSeeMore();
	                    initWhiteCards();
	                    initNewsEventsStrip();
	                    createSlider($carouselObj);
	                    initPlaceholderHallback();
	                    initImageCarousel();
	                    initCookieNotice($);
	                    popupDialog();
	                    responsiveTables();
	                    cyclicPopup();
	                    // We need to wait for the DOM to be modified before
	                    // traversing for Image Credits
	                    imageCreditation();
	
	
	                    $galleries.each(function () {
	                        createGallery($(this));
	                    });
	
	                    //some helper stuff to style primary navigation
	
	                    if (currentUrl.indexOf('//www.city.ac.uk/news') >= 0) {
	                        $secondaryNav.hide();
	                    } else if (modifySecNav) {
	                        // add secondary-nav-siblings to secondary-nav only if we have some
	                        if ($("ol#secondary-nav > li:last > a").length &&
	                            $("ol#secondary-nav-siblings").length) {
	                            // if the link to this page isn't in secondary-nav-siblings, just add the siblings
	                            if ($("ol#secondary-nav-siblings a").map(function () {
	                                    return this.href
	                                })
	                                    .toArray()
	                                    .indexOf($("ol#secondary-nav > li:last > a")[0].href) === -1) {
	                                $("ol#secondary-nav").append($("<li>").html($("ol#secondary-nav-siblings")));
	                            } else {
	                                // otherwise replace the secondary nav completely
	                                $("ol#secondary-nav > li:last").empty().append($("ol#secondary-nav-siblings"));
	                            }
	                        }
	
	                        $("ol#primary-nav li, ol#secondary-nav li").removeClass("selected");
	                        $("ol#primary-nav a[href=\"" + currentUrl + "\"], ol#secondary-nav a[href=\"" + currentUrl + "\"]").parent("li").addClass("selected");
	
	                        if ($primaryNav.find(".current").length === 0 && $secondaryNav.find(".selected").length === 0) {
	                            //we are on the home page of the section so hide secondary nav and add helper class
	                            $secondaryNav.hide();
	                            $primaryNav.addClass("top-level");
	                        }
	
	                        //hide secondary level if empty
	                        if ($secondaryNavLis.length === 0) {
	                            $secondaryNav.hide();
	                        } else {
	                            //secondary nav is definitely showing, add some classes to help styling
	
	                            //if we have secondary-nav-siblings the prevous li element will be the parent from one level up
	                            // e.g. http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012/test-level
	                            $("#secondary-nav-siblings").parent().prev("li").addClass("end");
	
	                            // When the current page is part of the breadcrumb its previous sibling reguires a class of "selected-join"
	                            // we only want this to happen on direct children of $secondaryNav
	                            // e.g http://www.city.ac.uk/arts-social-sciences/journalism/student-work/city-journalism-student-bylines/january-2012
	                            $secondaryNav.find("> li.selected").prev().addClass("selected-join");
	
	                            if ($secondaryNav.find(".selected").length !== 0) {
	                                //add a class of ".parent" to active element in primary nav so we can un-bold it
	                                $primaryNav.find(".current").addClass("parent");
	                            }
	                        }
	                    }
	
	                    // initalise any accordions found
	                    $accordions.accordion({
	                        heightStyle: "content",
	                        collapsible: true,
	                        active: false,
	                        animate: false,
	                        icons: {
	                            "header": "ui-icon-triangle-1-s",
	                            "headerSelected": "ui-icon-triangle-1-n"
	                        },
	                        activate: function (event, ui) {
	                            scrollTo(ui.newHeader);
	                        }
	                    });
	
	                    //set up autocomplete on search box
	                    searchAutoComplete($form, $query, searchPageAutoCompleteCollection);
	
	                    //set up autocomplete on search box on main search page
	                    searchAutoComplete(indexForm, indexQuery, searchPageAutoCompleteCollection);
	
	                    //set up autocomplete on search box on intranet main search page
	                    searchAutoComplete($searchForm, $searchFormQuery, autoCompleteCollection);
	
	                    // catch any videos that have been manually input
	                    $("iframe[src*='youtube']").each(function () {
	
	                        var $element = $(this),
	                            vidWidth = $element.outerWidth(),
	                            $parent = $element.parent();
	
	                        // don't double wrap an iframe
	                        if (!$parent.hasClass("embed-container")) {
	                            // for elastic objects, we need 2 (!) wrappers
	                            $element.wrap("<div class=\"embed-wrapper\" style=\"width:" + vidWidth + "px\"><div class=\"embed-container\"></div></div>");
	                        }
	
	                    });
	
	                    initDynamicGmap($("#dynamic-gmap"));
	
	                    // hide/show functionality for unit lists (example on subject area pages)
	                    $(".unit-lists .unit-lists-title").click(function () {
	                        $(this).parents(".unit-lists").toggleClass("unit-lists-expanded");
	                    });
	
	                    //hide/show other amount and pass the correct value on City Future Fund page
	                    if ($("#future-fund-forms").length === 1 || $("#racing-form").length === 1) {
	                        $("#cff-regular-donation input[type=radio]").click(function () {
	                            var parentElement = $(this).parent();
	                            $(".donate-appeal").show();
	                            if (parentElement.find(".donation-other-option").is(":checked")) {
	                                parentElement.find(".donation-other-amount").show().find("input").attr("name", "regular_amount");
	                            }
	                            else {
	                                parentElement.find(".donation-other-amount").hide().find("input").attr("name", "").attr("value", "");
	                            }
	                        });
	                        $("#cff-single-donation input[type=radio]").click(function () {
	                            var parentElement = $(this).parent();
	                            if (parentElement.find(".donation-other-option").is(":checked")) {
	                                parentElement.find(".donation-other-amount").show().find("input").attr("name", "tfa_Amountyouwishtod");
	                            }
	                            else {
	                                parentElement.find(".donation-other-amount").hide().find("input").attr("name", "").attr("value", "");
	                            }
	                        });
	                    }
	
	                    $('.media-ribbon .embed-container').videoPreview({showInfo: 0});
	                    $('.widget-content .embed-container').videoPreview();
	                    $('.international-london .embed-container').videoPreview();
	                    $('.social-wall .embed-container').videoPreview();
	                    $('.embed-container.embed-container--default-yt-preview').videoPreview();
	
	                },//end initPage
	
	
	                objectSize = function (object) {
	
	                    var size = 0, key;
	
	                    for (key in object) {
	                        if (object.hasOwnProperty(key)) {
	                            size += 1;
	                        }
	                    }
	
	                    return size;
	
	                },
	
	                /**
	                 * Finds any vid images on a page and replaces them with either a YouTube iframe or SWFObject for FMS vids
	                 * @return: Undefined
	                 */
	                videos = function () {
	
	                    var $youtubeVids = $("img.youtube"),
	                        $fmsVids = $("img.fms"),
	
	                        /*
	                         * Replaces an image element with YouTube iFrame
	                         * @param: {Object} : $el - jQuery object for youTube images to be replaced
	                         * @retun: {Undefined}
	                         */
	                        embedYoutube = function ($youtubeVids) {
	
	                            $youtubeVids.each(function (i, el) {
	
	                                var $el = $(el),
	                                    vidWidth = 500, // default width
	                                    vidHeight = 320, // default height
	                                    videoID = $el.attr("id").replace("vid_", "");
	
	                                $el.replaceWith("<div class=\"embed-wrapper\"><div class=\"embed-container\"><iframe height=" + vidHeight + " width= " + vidWidth + " src=\"//www.youtube.com/embed/" + videoID + "?rel=0&wmode=transparent\" frameborder='0' allowfullscreen></iframe></div></div>");
	                            });
	                        },
	
	                        /*
	                         * Replaces an image element with SWF Object
	                         * @param: {Object} : $el - jQuery object for all fms images to be replaced
	                         * @retun: {Undefined}
	                         */
	                        embedFms = function ($fmsVids) {
	
	                            var splashImages = {
	                                cassStandard: "//s1.city.ac.uk/i/flowplayer-cass.jpg?v=8105",
	                                cassRetina: "",
	                                cityStandard: "//s1.city.ac.uk/i/flowplayer-city.jpg?v=8105",
	                                cityRentina: ""
	                            };
	
	                            $fmsVids.each(function (i, el) {
	
	                                var $el = $(el),
	                                    vidWidth = 687, //default width
	                                    vidHeight = 419, // default height
	                                    elId = $el.attr("id"),
	                                    vidId = elId.replace("vid_", ""),
	                                    expressInstall = "//s1.city.ac.uk/js/swfobject/expressInstall.swf",
	                                    flashtargetversion = "9.0.28",
	                                    flashvars = null,
	                                    params = {
	                                        allowScriptAccess: "always",
	                                        allowfullscreen: "true",
	                                        wmode: "transparent"
	                                    },
	                                    atts = {
	                                        "class": "vidplayer",
	                                        id: vidId
	                                    },
	                                    splashImage = CITY.isCass ? splashImages.cassStandard : splashImages.cityStandard,
	                                    swfCallBack = function (e) {
	                                        $(e.ref).wrap("<div class=\"embed-wrapper\" style=\"width:" + vidWidth + "px\"><div class=\"embed-container\"></div></div>");
	                                    };
	
	                                //if video is included in the course description div of a course N page, width needs to be 419
	                                if ($el.parents(".course-description").length !== 0) {
	                                    vidWidth = 419;
	                                }
	
	                                //vids have different sizes depending on the size of the content div and if they are widescreen on square
	                                if ($el.hasClass("widescreen")) {
	                                    vidHeight = vidWidth * 0.61;
	                                } else {
	                                    vidWidth = 500;
	                                    vidHeight = 320;
	                                }
	
	                                if (!swfobject.hasFlashPlayerVersion(flashtargetversion)) {
	
	                                    //explain why there is no video
	                                    $el.after("<p class=\"notice-message\"><i class=\"fa fa-exclamation-triangle\" style=\"color : #CCCC00\"></i> You need to have flash player " +
	                                        flashtargetversion + " or greater installed to see the video.</p>" +
	                                        "<p><a href=\"http://get.adobe.com/flashplayer/\">Get Flash Player</a></p>");
	
	
	                                } else {
	
	                                    //config has to be in a string and key and values have to be "quoted" - nightmare
	                                    // construct all the variables to pass to the player -
	                                    // tried to make this a proper json array, didn't work :(
	                                    // IE doesn't like double quotes here so ignore JSHint error
	                                    flashvars = "{'clip': {'provider': 'rtmp'}, 'playlist': [{'url':'" + splashImage + "', 'autoPlay': true}, {'url': '" + vidId.replace('vid_', '') + "/Hi_bandwidth', 'autoPlay': false, 'scaling': 'fit'}], 'plugins': {'rtmp': {'url': '//s1.city.ac.uk/js/flowplayer/flowplayer.rtmp-3.2.3.swf', 'netConnectionUrl': 'rtmp://media.city.ac.uk/flowplayer', 'objectEncoding': '0', 'proxyType': 'none' }, 'controls': {'url': 'flowplayer.controls.swf'} } }";
	
	                                    // initiate the player
	                                    swfobject.embedSWF(
	                                        "//s1.city.ac.uk/js/flowplayer/flowplayer-3.2.6.swf",
	                                        elId,
	                                        vidWidth,
	                                        vidHeight,
	                                        "9.0.0",
	                                        expressInstall,
	                                        {config: flashvars},
	                                        params,
	                                        false,
	                                        swfCallBack
	                                    );
	
	                                } //end has flash if
	
	                            });
	                        };
	
	                    if ($youtubeVids.length) {
	                        embedYoutube($youtubeVids);
	                    }
	                    if ($fmsVids.length) {
	                        yepnope({
	                            load: scripts.swfobject.src,
	                            callback: function () {
	                                embedFms($fmsVids);
	                            }
	                        });
	                    }
	
	                }, // end videos
	
	                /**
	                 * This is our yepnope filter
	                 *
	                 * splices in the version string we have set up in setVersion
	                 * prepends the correct s1 domain, where it hasn't been provided
	                 *
	                 * N.B. will fail if we have an s1 top level folder containing
	                 * dots (see comment below)
	                 *
	                 */
	                yepnopeFilter = function (resource) {
	
	                    var loc, lastItem;
	
	                    /* If we are loading in an absolute url, don't touch it
	                     * this is the regex which fails on a top level folder with dots
	                     *
	                     * matches:
	                     * http://www.external.com/scripts/script.js
	                     * www.external.com/scripts/script.js
	                     * absolute.with.many.sub.domains.domain.com/scripts/script.js
	                     * https://absoulte.with.many.sub.domains.domain.com/scripts/script.js
	                     *
	                     * doesn't match:
	                     * modules/test.js
	                     * lib/subdir/script.js
	                     * lib/subdir.123/script.js
	                     *
	                     * will match when we don't want to:
	                     * toplevel.with.dots/script.js
	                     * lib.v2/jquery/script.js
	                     *
	                     * I think it's an unlikely issue, but if anyone can tweak the regex
	                     * to prevent this please do.
	                     *
	                     */
	                    if (/^(https?:\/\/)?([^\/.]+\.)+[^\/]+\//.test(resource.url)) {
	                        return resource;
	                    }
	
	                    loc =
	
	                        //already contains s1? - don't add prefix
	                        ((/s1/.test(resource.url) ? "" : srcPrefix) +
	                        resource.url)
	
	                        //split for splicing
	                            .split("/");
	
	                    //splice in version
	                    lastItem = loc.length - 1;
	                    loc[lastItem] = version + loc[lastItem];
	
	                    resource.url = loc.join("/");
	
	                    // if on prod and we are loading a module/.js file
	                    // we want .min.js rather than .js
	                    if (/s1\.city/.test(resource.url) && !/js\/lib/.test(resource.url)) {
	
	                        resource.url = resource.url.replace(/js$/, "min.js");
	
	                    }
	
	                    return resource;
	
	                },
	
	                /**
	                 * Initialisation function, called immediately after CITY declaration below
	                 */
	                init = function () {
	
	                    debug("CITY ready (we are in " + document.compatMode + ")");
	
	                    yepnope.addFilter(yepnopeFilter);
	
	                    initPage();
	
	                    //// library home page opening times
	                    if ($('#library').length !== 0) {
	                        yepnope({
	                            load: 'modules/library/library.js',
	                            callback: function () {
	                                debug('loaded library datepicker');
	                            }
	                        });
	                    }
	
	                    // the following needs domready
	                    $(function () {
	
	                        // set up any videos on page
	                        videos();
	
	                        // mobile browser click delay fix
	                        //initFastClickt();
	
	                    });
	                };
	            /**
	             *  This literal defines what methods to make publicly accessible
	             *  outsite CITY
	             */
	            return {
	
	                init: init,
	                load: load,
	                debug: debug,
	                setVersion: setVersion,
	                searchAutoComplete: searchAutoComplete,
	                objectSize: objectSize,
	                getWindowWidth: getWindowWidth,
	                customAJAX: customAJAX,
	                imageCreditation: imageCreditation,
	                //this will be useful in modules
	                s1Server: srcPrefix
	            };
	
	        }(window)
	    ); //end CITY
	
	    window.CITY = CITY;
	
	    return CITY;
	}();


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    __webpack_require__(3);
	    __webpack_require__(5);
	    __webpack_require__(6);
	    __webpack_require__(7);
	
	    __webpack_require__(8)(window.jQuery);
	    __webpack_require__(9)(window.jQuery);
	    __webpack_require__(10)(window.jQuery);
	    __webpack_require__(12)(window.jQuery);
	    __webpack_require__(13)(window.jQuery);
	
	    return window.jQuery;
	}();

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! jQuery v1.8.2 jquery.com | jquery.org/license */
	(function(a,b){function G(a){var b=F[a]={};return p.each(a.split(s),function(a,c){b[c]=!0}),b}function J(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(I,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:+d+""===d?+d:H.test(d)?p.parseJSON(d):d}catch(f){}p.data(a,c,d)}else d=b}return d}function K(a){var b;for(b in a){if(b==="data"&&p.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function ba(){return!1}function bb(){return!0}function bh(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function bi(a,b){do a=a[b];while(a&&a.nodeType!==1);return a}function bj(a,b,c){b=b||0;if(p.isFunction(b))return p.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return p.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=p.grep(a,function(a){return a.nodeType===1});if(be.test(b))return p.filter(b,d,!c);b=p.filter(b,d)}return p.grep(a,function(a,d){return p.inArray(a,b)>=0===c})}function bk(a){var b=bl.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function bC(a,b){return a.getElementsByTagName(b)[0]||a.appendChild(a.ownerDocument.createElement(b))}function bD(a,b){if(b.nodeType!==1||!p.hasData(a))return;var c,d,e,f=p._data(a),g=p._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;d<e;d++)p.event.add(b,c,h[c][d])}g.data&&(g.data=p.extend({},g.data))}function bE(a,b){var c;if(b.nodeType!==1)return;b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?(b.parentNode&&(b.outerHTML=a.outerHTML),p.support.html5Clone&&a.innerHTML&&!p.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):c==="input"&&bv.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text),b.removeAttribute(p.expando)}function bF(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bG(a){bv.test(a.type)&&(a.defaultChecked=a.checked)}function bY(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=bW.length;while(e--){b=bW[e]+c;if(b in a)return b}return d}function bZ(a,b){return a=b||a,p.css(a,"display")==="none"||!p.contains(a.ownerDocument,a)}function b$(a,b){var c,d,e=[],f=0,g=a.length;for(;f<g;f++){c=a[f];if(!c.style)continue;e[f]=p._data(c,"olddisplay"),b?(!e[f]&&c.style.display==="none"&&(c.style.display=""),c.style.display===""&&bZ(c)&&(e[f]=p._data(c,"olddisplay",cc(c.nodeName)))):(d=bH(c,"display"),!e[f]&&d!=="none"&&p._data(c,"olddisplay",d))}for(f=0;f<g;f++){c=a[f];if(!c.style)continue;if(!b||c.style.display==="none"||c.style.display==="")c.style.display=b?e[f]||"":"none"}return a}function b_(a,b,c){var d=bP.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function ca(a,b,c,d){var e=c===(d?"border":"content")?4:b==="width"?1:0,f=0;for(;e<4;e+=2)c==="margin"&&(f+=p.css(a,c+bV[e],!0)),d?(c==="content"&&(f-=parseFloat(bH(a,"padding"+bV[e]))||0),c!=="margin"&&(f-=parseFloat(bH(a,"border"+bV[e]+"Width"))||0)):(f+=parseFloat(bH(a,"padding"+bV[e]))||0,c!=="padding"&&(f+=parseFloat(bH(a,"border"+bV[e]+"Width"))||0));return f}function cb(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=!0,f=p.support.boxSizing&&p.css(a,"boxSizing")==="border-box";if(d<=0||d==null){d=bH(a,b);if(d<0||d==null)d=a.style[b];if(bQ.test(d))return d;e=f&&(p.support.boxSizingReliable||d===a.style[b]),d=parseFloat(d)||0}return d+ca(a,b,c||(f?"border":"content"),e)+"px"}function cc(a){if(bS[a])return bS[a];var b=p("<"+a+">").appendTo(e.body),c=b.css("display");b.remove();if(c==="none"||c===""){bI=e.body.appendChild(bI||p.extend(e.createElement("iframe"),{frameBorder:0,width:0,height:0}));if(!bJ||!bI.createElement)bJ=(bI.contentWindow||bI.contentDocument).document,bJ.write("<!doctype html><html><body>"),bJ.close();b=bJ.body.appendChild(bJ.createElement(a)),c=bH(b,"display"),e.body.removeChild(bI)}return bS[a]=c,c}function ci(a,b,c,d){var e;if(p.isArray(b))p.each(b,function(b,e){c||ce.test(a)?d(a,e):ci(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&p.type(b)==="object")for(e in b)ci(a+"["+e+"]",b[e],c,d);else d(a,b)}function cz(a){return function(b,c){typeof b!="string"&&(c=b,b="*");var d,e,f,g=b.toLowerCase().split(s),h=0,i=g.length;if(p.isFunction(c))for(;h<i;h++)d=g[h],f=/^\+/.test(d),f&&(d=d.substr(1)||"*"),e=a[d]=a[d]||[],e[f?"unshift":"push"](c)}}function cA(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h,i=a[f],j=0,k=i?i.length:0,l=a===cv;for(;j<k&&(l||!h);j++)h=i[j](c,d,e),typeof h=="string"&&(!l||g[h]?h=b:(c.dataTypes.unshift(h),h=cA(a,c,d,e,h,g)));return(l||!h)&&!g["*"]&&(h=cA(a,c,d,e,"*",g)),h}function cB(a,c){var d,e,f=p.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((f[d]?a:e||(e={}))[d]=c[d]);e&&p.extend(!0,a,e)}function cC(a,c,d){var e,f,g,h,i=a.contents,j=a.dataTypes,k=a.responseFields;for(f in k)f in d&&(c[k[f]]=d[f]);while(j[0]==="*")j.shift(),e===b&&(e=a.mimeType||c.getResponseHeader("content-type"));if(e)for(f in i)if(i[f]&&i[f].test(e)){j.unshift(f);break}if(j[0]in d)g=j[0];else{for(f in d){if(!j[0]||a.converters[f+" "+j[0]]){g=f;break}h||(h=f)}g=g||h}if(g)return g!==j[0]&&j.unshift(g),d[g]}function cD(a,b){var c,d,e,f,g=a.dataTypes.slice(),h=g[0],i={},j=0;a.dataFilter&&(b=a.dataFilter(b,a.dataType));if(g[1])for(c in a.converters)i[c.toLowerCase()]=a.converters[c];for(;e=g[++j];)if(e!=="*"){if(h!=="*"&&h!==e){c=i[h+" "+e]||i["* "+e];if(!c)for(d in i){f=d.split(" ");if(f[1]===e){c=i[h+" "+f[0]]||i["* "+f[0]];if(c){c===!0?c=i[d]:i[d]!==!0&&(e=f[0],g.splice(j--,0,e));break}}}if(c!==!0)if(c&&a["throws"])b=c(b);else try{b=c(b)}catch(k){return{state:"parsererror",error:c?k:"No conversion from "+h+" to "+e}}}h=e}return{state:"success",data:b}}function cL(){try{return new a.XMLHttpRequest}catch(b){}}function cM(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function cU(){return setTimeout(function(){cN=b},0),cN=p.now()}function cV(a,b){p.each(b,function(b,c){var d=(cT[b]||[]).concat(cT["*"]),e=0,f=d.length;for(;e<f;e++)if(d[e].call(a,b,c))return})}function cW(a,b,c){var d,e=0,f=0,g=cS.length,h=p.Deferred().always(function(){delete i.elem}),i=function(){var b=cN||cU(),c=Math.max(0,j.startTime+j.duration-b),d=1-(c/j.duration||0),e=0,f=j.tweens.length;for(;e<f;e++)j.tweens[e].run(d);return h.notifyWith(a,[j,d,c]),d<1&&f?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:p.extend({},b),opts:p.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:cN||cU(),duration:c.duration,tweens:[],createTween:function(b,c,d){var e=p.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(e),e},stop:function(b){var c=0,d=b?j.tweens.length:0;for(;c<d;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;cX(k,j.opts.specialEasing);for(;e<g;e++){d=cS[e].call(j,a,k,j.opts);if(d)return d}return cV(j,k),p.isFunction(j.opts.start)&&j.opts.start.call(a,j),p.fx.timer(p.extend(i,{anim:j,queue:j.opts.queue,elem:a})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}function cX(a,b){var c,d,e,f,g;for(c in a){d=p.camelCase(c),e=b[d],f=a[c],p.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=p.cssHooks[d];if(g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}}function cY(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=a.style,n={},o=[],q=a.nodeType&&bZ(a);c.queue||(j=p._queueHooks(a,"fx"),j.unqueued==null&&(j.unqueued=0,k=j.empty.fire,j.empty.fire=function(){j.unqueued||k()}),j.unqueued++,l.always(function(){l.always(function(){j.unqueued--,p.queue(a,"fx").length||j.empty.fire()})})),a.nodeType===1&&("height"in b||"width"in b)&&(c.overflow=[m.overflow,m.overflowX,m.overflowY],p.css(a,"display")==="inline"&&p.css(a,"float")==="none"&&(!p.support.inlineBlockNeedsLayout||cc(a.nodeName)==="inline"?m.display="inline-block":m.zoom=1)),c.overflow&&(m.overflow="hidden",p.support.shrinkWrapBlocks||l.done(function(){m.overflow=c.overflow[0],m.overflowX=c.overflow[1],m.overflowY=c.overflow[2]}));for(d in b){f=b[d];if(cP.exec(f)){delete b[d];if(f===(q?"hide":"show"))continue;o.push(d)}}g=o.length;if(g){h=p._data(a,"fxshow")||p._data(a,"fxshow",{}),q?p(a).show():l.done(function(){p(a).hide()}),l.done(function(){var b;p.removeData(a,"fxshow",!0);for(b in n)p.style(a,b,n[b])});for(d=0;d<g;d++)e=o[d],i=l.createTween(e,q?h[e]:0),n[e]=h[e]||p.style(a,e),e in h||(h[e]=i.start,q&&(i.end=i.start,i.start=e==="width"||e==="height"?1:0))}}function cZ(a,b,c,d,e){return new cZ.prototype.init(a,b,c,d,e)}function c$(a,b){var c,d={height:a},e=0;b=b?1:0;for(;e<4;e+=2-b)c=bV[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function da(a){return p.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}var c,d,e=a.document,f=a.location,g=a.navigator,h=a.jQuery,i=a.$,j=Array.prototype.push,k=Array.prototype.slice,l=Array.prototype.indexOf,m=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=String.prototype.trim,p=function(a,b){return new p.fn.init(a,b,c)},q=/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,r=/\S/,s=/\s+/,t=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,u=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,v=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,w=/^[\],:{}\s]*$/,x=/(?:^|:|,)(?:\s*\[)+/g,y=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,z=/"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,A=/^-ms-/,B=/-([\da-z])/gi,C=function(a,b){return(b+"").toUpperCase()},D=function(){e.addEventListener?(e.removeEventListener("DOMContentLoaded",D,!1),p.ready()):e.readyState==="complete"&&(e.detachEvent("onreadystatechange",D),p.ready())},E={};p.fn=p.prototype={constructor:p,init:function(a,c,d){var f,g,h,i;if(!a)return this;if(a.nodeType)return this.context=this[0]=a,this.length=1,this;if(typeof a=="string"){a.charAt(0)==="<"&&a.charAt(a.length-1)===">"&&a.length>=3?f=[null,a,null]:f=u.exec(a);if(f&&(f[1]||!c)){if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);g=e.getElementById(f[2]);if(g&&g.parentNode){if(g.id!==f[2])return d.find(a);this.length=1,this[0]=g}return this.context=e,this.selector=a,this}return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)}return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))},selector:"",jquery:"1.8.2",length:0,size:function(){return this.length},toArray:function(){return k.call(this)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=p.merge(this.constructor(),a);return d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")"),d},each:function(a,b){return p.each(this,a,b)},ready:function(a){return p.ready.promise().done(a),this},eq:function(a){return a=+a,a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(k.apply(this,arguments),"slice",k.call(arguments).join(","))},map:function(a){return this.pushStack(p.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:j,sort:[].sort,splice:[].splice},p.fn.init.prototype=p.fn,p.extend=p.fn.extend=function(){var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;typeof h=="boolean"&&(k=h,h=arguments[1]||{},i=2),typeof h!="object"&&!p.isFunction(h)&&(h={}),j===i&&(h=this,--i);for(;i<j;i++)if((a=arguments[i])!=null)for(c in a){d=h[c],e=a[c];if(h===e)continue;k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)}return h},p.extend({noConflict:function(b){return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p},isReady:!1,readyWait:1,holdReady:function(a){a?p.readyWait++:p.ready(!0)},ready:function(a){if(a===!0?--p.readyWait:p.isReady)return;if(!e.body)return setTimeout(p.ready,1);p.isReady=!0;if(a!==!0&&--p.readyWait>0)return;d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger("ready").off("ready")},isFunction:function(a){return p.type(a)==="function"},isArray:Array.isArray||function(a){return p.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):E[m.call(a)]||"object"},isPlainObject:function(a){if(!a||p.type(a)!=="object"||a.nodeType||p.isWindow(a))return!1;try{if(a.constructor&&!n.call(a,"constructor")&&!n.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||n.call(a,d)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},error:function(a){throw new Error(a)},parseHTML:function(a,b,c){var d;return!a||typeof a!="string"?null:(typeof b=="boolean"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))},parseJSON:function(b){if(!b||typeof b!="string")return null;b=p.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(w.test(b.replace(y,"@").replace(z,"]").replace(x,"")))return(new Function("return "+b))();p.error("Invalid JSON: "+b)},parseXML:function(c){var d,e;if(!c||typeof c!="string")return null;try{a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(f){d=b}return(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&p.error("Invalid XML: "+c),d},noop:function(){},globalEval:function(b){b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(A,"ms-").replace(B,C)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,c,d){var e,f=0,g=a.length,h=g===b||p.isFunction(a);if(d){if(h){for(e in a)if(c.apply(a[e],d)===!1)break}else for(;f<g;)if(c.apply(a[f++],d)===!1)break}else if(h){for(e in a)if(c.call(a[e],e,a[e])===!1)break}else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;return a},trim:o&&!o.call("﻿ ")?function(a){return a==null?"":o.call(a)}:function(a){return a==null?"":(a+"").replace(t,"")},makeArray:function(a,b){var c,d=b||[];return a!=null&&(c=p.type(a),a.length==null||c==="string"||c==="function"||c==="regexp"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d},inArray:function(a,b,c){var d;if(b){if(l)return l.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=c.length,e=a.length,f=0;if(typeof d=="number")for(;f<d;f++)a[e++]=c[f];else while(c[f]!==b)a[e++]=c[f++];return a.length=e,a},grep:function(a,b,c){var d,e=[],f=0,g=a.length;c=!!c;for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);return e},map:function(a,c,d){var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i=="number"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);return g.concat.apply([],g)},guid:1,proxy:function(a,c){var d,e,f;return typeof c=="string"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){return a.apply(c,e.concat(k.call(arguments)))},f.guid=a.guid=a.guid||p.guid++,f):b},access:function(a,c,d,e,f,g,h){var i,j=d==null,k=0,l=a.length;if(d&&typeof d=="object"){for(k in d)p.access(a,c,k,d[k],1,g,e);f=1}else if(e!==b){i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){return i.call(p(a),c)}):(c.call(a,e),c=null));if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);f=1}return f?a:j?c.call(a):l?c(a[0],d):g},now:function(){return(new Date).getTime()}}),p.ready.promise=function(b){if(!d){d=p.Deferred();if(e.readyState==="complete")setTimeout(p.ready,1);else if(e.addEventListener)e.addEventListener("DOMContentLoaded",D,!1),a.addEventListener("load",p.ready,!1);else{e.attachEvent("onreadystatechange",D),a.attachEvent("onload",p.ready);var c=!1;try{c=a.frameElement==null&&e.documentElement}catch(f){}c&&c.doScroll&&function g(){if(!p.isReady){try{c.doScroll("left")}catch(a){return setTimeout(g,50)}p.ready()}}()}}return d.promise(b)},p.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){E["[object "+b+"]"]=b.toLowerCase()}),c=p(e);var F={};p.Callbacks=function(a){a=typeof a=="string"?F[a]||G(a):p.extend({},a);var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;for(;i&&h<g;h++)if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){c=!1;break}e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())},l={add:function(){if(i){var b=i.length;(function d(b){p.each(b,function(b,c){var e=p.type(c);e==="function"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!=="string"&&d(c)})})(arguments),e?g=i.length:c&&(f=b,k(c))}return this},remove:function(){return i&&p.each(arguments,function(a,b){var c;while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)}),this},has:function(a){return p.inArray(a,i)>-1},empty:function(){return i=[],this},disable:function(){return i=j=c=b,this},disabled:function(){return!i},lock:function(){return j=b,c||l.disable(),this},locked:function(){return!j},fireWith:function(a,b){return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!d}};return l},p.extend({Deferred:function(a){var b=[["resolve","done",p.Callbacks("once memory"),"resolved"],["reject","fail",p.Callbacks("once memory"),"rejected"],["notify","progress",p.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return p.Deferred(function(c){p.each(b,function(b,d){var f=d[0],g=a[b];e[d[1]](p.isFunction(g)?function(){var a=g.apply(this,arguments);a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+"With"](this===e?c:this,[a])}:c[f])}),a=null}).promise()},promise:function(a){return a!=null?p.extend(a,d):d}},e={};return d.pipe=d.then,p.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)}},h,i,j;if(d>1){h=new Array(d),i=new Array(d),j=new Array(d);for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e}return e||f.resolveWith(j,c),f.promise()}}),p.support=function(){var b,c,d,f,g,h,i,j,k,l,m,n=e.createElement("div");n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",c=n.getElementsByTagName("*"),d=n.getElementsByTagName("a")[0],d.style.cssText="top:1px;float:left;opacity:.5";if(!c||!c.length)return{};f=e.createElement("select"),g=f.appendChild(e.createElement("option")),h=n.getElementsByTagName("input")[0],b={leadingWhitespace:n.firstChild.nodeType===3,tbody:!n.getElementsByTagName("tbody").length,htmlSerialize:!!n.getElementsByTagName("link").length,style:/top/.test(d.getAttribute("style")),hrefNormalized:d.getAttribute("href")==="/a",opacity:/^0.5/.test(d.style.opacity),cssFloat:!!d.style.cssFloat,checkOn:h.value==="on",optSelected:g.selected,getSetAttribute:n.className!=="t",enctype:!!e.createElement("form").enctype,html5Clone:e.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",boxModel:e.compatMode==="CSS1Compat",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},h.checked=!0,b.noCloneChecked=h.cloneNode(!0).checked,f.disabled=!0,b.optDisabled=!g.disabled;try{delete n.test}catch(o){b.deleteExpando=!1}!n.addEventListener&&n.attachEvent&&n.fireEvent&&(n.attachEvent("onclick",m=function(){b.noCloneEvent=!1}),n.cloneNode(!0).fireEvent("onclick"),n.detachEvent("onclick",m)),h=e.createElement("input"),h.value="t",h.setAttribute("type","radio"),b.radioValue=h.value==="t",h.setAttribute("checked","checked"),h.setAttribute("name","t"),n.appendChild(h),i=e.createDocumentFragment(),i.appendChild(n.lastChild),b.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=h.checked,i.removeChild(h),i.appendChild(n);if(n.attachEvent)for(k in{submit:!0,change:!0,focusin:!0})j="on"+k,l=j in n,l||(n.setAttribute(j,"return;"),l=typeof n[j]=="function"),b[k+"Bubbles"]=l;return p(function(){var c,d,f,g,h="padding:0;margin:0;border:0;display:block;overflow:hidden;",i=e.getElementsByTagName("body")[0];if(!i)return;c=e.createElement("div"),c.style.cssText="visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",i.insertBefore(c,i.firstChild),d=e.createElement("div"),c.appendChild(d),d.innerHTML="<table><tr><td></td><td>t</td></tr></table>",f=d.getElementsByTagName("td"),f[0].style.cssText="padding:0;margin:0;border:0;display:none",l=f[0].offsetHeight===0,f[0].style.display="",f[1].style.display="none",b.reliableHiddenOffsets=l&&f[0].offsetHeight===0,d.innerHTML="",d.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",b.boxSizing=d.offsetWidth===4,b.doesNotIncludeMarginInBodyOffset=i.offsetTop!==1,a.getComputedStyle&&(b.pixelPosition=(a.getComputedStyle(d,null)||{}).top!=="1%",b.boxSizingReliable=(a.getComputedStyle(d,null)||{width:"4px"}).width==="4px",g=e.createElement("div"),g.style.cssText=d.style.cssText=h,g.style.marginRight=g.style.width="0",d.style.width="1px",d.appendChild(g),b.reliableMarginRight=!parseFloat((a.getComputedStyle(g,null)||{}).marginRight)),typeof d.style.zoom!="undefined"&&(d.innerHTML="",d.style.cssText=h+"width:1px;padding:1px;display:inline;zoom:1",b.inlineBlockNeedsLayout=d.offsetWidth===3,d.style.display="block",d.style.overflow="visible",d.innerHTML="<div></div>",d.firstChild.style.width="5px",b.shrinkWrapBlocks=d.offsetWidth!==3,c.style.zoom=1),i.removeChild(c),c=d=f=g=null}),i.removeChild(n),c=d=f=g=h=i=n=null,b}();var H=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,I=/([A-Z])/g;p.extend({cache:{},deletedIds:[],uuid:0,expando:"jQuery"+(p.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){return a=a.nodeType?p.cache[a[p.expando]]:a[p.expando],!!a&&!K(a)},data:function(a,c,d,e){if(!p.acceptData(a))return;var f,g,h=p.expando,i=typeof c=="string",j=a.nodeType,k=j?p.cache:a,l=j?a[h]:a[h]&&h;if((!l||!k[l]||!e&&!k[l].data)&&i&&d===b)return;l||(j?a[h]=l=p.deletedIds.pop()||p.guid++:l=h),k[l]||(k[l]={},j||(k[l].toJSON=p.noop));if(typeof c=="object"||typeof c=="function")e?k[l]=p.extend(k[l],c):k[l].data=p.extend(k[l].data,c);return f=k[l],e||(f.data||(f.data={}),f=f.data),d!==b&&(f[p.camelCase(c)]=d),i?(g=f[c],g==null&&(g=f[p.camelCase(c)])):g=f,g},removeData:function(a,b,c){if(!p.acceptData(a))return;var d,e,f,g=a.nodeType,h=g?p.cache:a,i=g?a[p.expando]:p.expando;if(!h[i])return;if(b){d=c?h[i]:h[i].data;if(d){p.isArray(b)||(b in d?b=[b]:(b=p.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,f=b.length;e<f;e++)delete d[b[e]];if(!(c?K:p.isEmptyObject)(d))return}}if(!c){delete h[i].data;if(!K(h[i]))return}g?p.cleanData([a],!0):p.support.deleteExpando||h!=h.window?delete h[i]:h[i]=null},_data:function(a,b,c){return p.data(a,b,c,!0)},acceptData:function(a){var b=a.nodeName&&p.noData[a.nodeName.toLowerCase()];return!b||b!==!0&&a.getAttribute("classid")===b}}),p.fn.extend({data:function(a,c){var d,e,f,g,h,i=this[0],j=0,k=null;if(a===b){if(this.length){k=p.data(i);if(i.nodeType===1&&!p._data(i,"parsedAttrs")){f=i.attributes;for(h=f.length;j<h;j++)g=f[j].name,g.indexOf("data-")||(g=p.camelCase(g.substring(5)),J(i,g,k[g]));p._data(i,"parsedAttrs",!0)}}return k}return typeof a=="object"?this.each(function(){p.data(this,a)}):(d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!",p.access(this,function(c){if(c===b)return k=this.triggerHandler("getData"+e,[d[0]]),k===b&&i&&(k=p.data(i,a),k=J(i,a,k)),k===b&&d[1]?this.data(d[0]):k;d[1]=c,this.each(function(){var b=p(this);b.triggerHandler("setData"+e,d),p.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1))},removeData:function(a){return this.each(function(){p.removeData(this,a)})}}),p.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=p._data(a,b),c&&(!d||p.isArray(c)?d=p._data(a,b,p.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=p.queue(a,b),d=c.length,e=c.shift(),f=p._queueHooks(a,b),g=function(){p.dequeue(a,b)};e==="inprogress"&&(e=c.shift(),d--),e&&(b==="fx"&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return p._data(a,c)||p._data(a,c,{empty:p.Callbacks("once memory").add(function(){p.removeData(a,b+"queue",!0),p.removeData(a,c,!0)})})}}),p.fn.extend({queue:function(a,c){var d=2;return typeof a!="string"&&(c=a,a="fx",d--),arguments.length<d?p.queue(this[0],a):c===b?this:this.each(function(){var b=p.queue(this,a,c);p._queueHooks(this,a),a==="fx"&&b[0]!=="inprogress"&&p.dequeue(this,a)})},dequeue:function(a){return this.each(function(){p.dequeue(this,a)})},delay:function(a,b){return a=p.fx?p.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){var d,e=1,f=p.Deferred(),g=this,h=this.length,i=function(){--e||f.resolveWith(g,[g])};typeof a!="string"&&(c=a,a=b),a=a||"fx";while(h--)d=p._data(g[h],a+"queueHooks"),d&&d.empty&&(e++,d.empty.add(i));return i(),f.promise(c)}});var L,M,N,O=/[\t\r\n]/g,P=/\r/g,Q=/^(?:button|input)$/i,R=/^(?:button|input|object|select|textarea)$/i,S=/^a(?:rea|)$/i,T=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,U=p.support.getSetAttribute;p.fn.extend({attr:function(a,b){return p.access(this,p.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){p.removeAttr(this,a)})},prop:function(a,b){return p.access(this,p.prop,a,b,arguments.length>1)},removeProp:function(a){return a=p.propFix[a]||a,this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,f,g,h;if(p.isFunction(a))return this.each(function(b){p(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(s);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{f=" "+e.className+" ";for(g=0,h=b.length;g<h;g++)f.indexOf(" "+b[g]+" ")<0&&(f+=b[g]+" ");e.className=p.trim(f)}}}return this},removeClass:function(a){var c,d,e,f,g,h,i;if(p.isFunction(a))return this.each(function(b){p(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(s);for(h=0,i=this.length;h<i;h++){e=this[h];if(e.nodeType===1&&e.className){d=(" "+e.className+" ").replace(O," ");for(f=0,g=c.length;f<g;f++)while(d.indexOf(" "+c[f]+" ")>=0)d=d.replace(" "+c[f]+" "," ");e.className=a?p.trim(d):""}}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";return p.isFunction(a)?this.each(function(c){p(this).toggleClass(a.call(this,c,this.className,b),b)}):this.each(function(){if(c==="string"){var e,f=0,g=p(this),h=b,i=a.split(s);while(e=i[f++])h=d?h:!g.hasClass(e),g[h?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&p._data(this,"__className__",this.className),this.className=this.className||a===!1?"":p._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(O," ").indexOf(b)>=0)return!0;return!1},val:function(a){var c,d,e,f=this[0];if(!arguments.length){if(f)return c=p.valHooks[f.type]||p.valHooks[f.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(f,"value"))!==b?d:(d=f.value,typeof d=="string"?d.replace(P,""):d==null?"":d);return}return e=p.isFunction(a),this.each(function(d){var f,g=p(this);if(this.nodeType!==1)return;e?f=a.call(this,d,g.val()):f=a,f==null?f="":typeof f=="number"?f+="":p.isArray(f)&&(f=p.map(f,function(a){return a==null?"":a+""})),c=p.valHooks[this.type]||p.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,f,"value")===b)this.value=f})}}),p.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,f=a.selectedIndex,g=[],h=a.options,i=a.type==="select-one";if(f<0)return null;c=i?f:0,d=i?f+1:h.length;for(;c<d;c++){e=h[c];if(e.selected&&(p.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!p.nodeName(e.parentNode,"optgroup"))){b=p(e).val();if(i)return b;g.push(b)}}return i&&!g.length&&h.length?p(h[f]).val():g},set:function(a,b){var c=p.makeArray(b);return p(a).find("option").each(function(){this.selected=p.inArray(p(this).val(),c)>=0}),c.length||(a.selectedIndex=-1),c}}},attrFn:{},attr:function(a,c,d,e){var f,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return;if(e&&p.isFunction(p.fn[c]))return p(a)[c](d);if(typeof a.getAttribute=="undefined")return p.prop(a,c,d);h=i!==1||!p.isXMLDoc(a),h&&(c=c.toLowerCase(),g=p.attrHooks[c]||(T.test(c)?M:L));if(d!==b){if(d===null){p.removeAttr(a,c);return}return g&&"set"in g&&h&&(f=g.set(a,d,c))!==b?f:(a.setAttribute(c,d+""),d)}return g&&"get"in g&&h&&(f=g.get(a,c))!==null?f:(f=a.getAttribute(c),f===null?b:f)},removeAttr:function(a,b){var c,d,e,f,g=0;if(b&&a.nodeType===1){d=b.split(s);for(;g<d.length;g++)e=d[g],e&&(c=p.propFix[e]||e,f=T.test(e),f||p.attr(a,e,""),a.removeAttribute(U?e:c),f&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(Q.test(a.nodeName)&&a.parentNode)p.error("type property can't be changed");else if(!p.support.radioValue&&b==="radio"&&p.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}},value:{get:function(a,b){return L&&p.nodeName(a,"button")?L.get(a,b):b in a?a.value:null},set:function(a,b,c){if(L&&p.nodeName(a,"button"))return L.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,f,g,h=a.nodeType;if(!a||h===3||h===8||h===2)return;return g=h!==1||!p.isXMLDoc(a),g&&(c=p.propFix[c]||c,f=p.propHooks[c]),d!==b?f&&"set"in f&&(e=f.set(a,d,c))!==b?e:a[c]=d:f&&"get"in f&&(e=f.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):R.test(a.nodeName)||S.test(a.nodeName)&&a.href?0:b}}}}),M={get:function(a,c){var d,e=p.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;return b===!1?p.removeAttr(a,c):(d=p.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase())),c}},U||(N={name:!0,id:!0,coords:!0},L=p.valHooks.button={get:function(a,c){var d;return d=a.getAttributeNode(c),d&&(N[c]?d.value!=="":d.specified)?d.value:b},set:function(a,b,c){var d=a.getAttributeNode(c);return d||(d=e.createAttribute(c),a.setAttributeNode(d)),d.value=b+""}},p.each(["width","height"],function(a,b){p.attrHooks[b]=p.extend(p.attrHooks[b],{set:function(a,c){if(c==="")return a.setAttribute(b,"auto"),c}})}),p.attrHooks.contenteditable={get:L.get,set:function(a,b,c){b===""&&(b="false"),L.set(a,b,c)}}),p.support.hrefNormalized||p.each(["href","src","width","height"],function(a,c){p.attrHooks[c]=p.extend(p.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),p.support.style||(p.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=b+""}}),p.support.optSelected||(p.propHooks.selected=p.extend(p.propHooks.selected,{get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}})),p.support.enctype||(p.propFix.enctype="encoding"),p.support.checkOn||p.each(["radio","checkbox"],function(){p.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),p.each(["radio","checkbox"],function(){p.valHooks[this]=p.extend(p.valHooks[this],{set:function(a,b){if(p.isArray(b))return a.checked=p.inArray(p(a).val(),b)>=0}})});var V=/^(?:textarea|input|select)$/i,W=/^([^\.]*|)(?:\.(.+)|)$/,X=/(?:^|\s)hover(\.\S+|)\b/,Y=/^key/,Z=/^(?:mouse|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=function(a){return p.event.special.hover?a:a.replace(X,"mouseenter$1 mouseleave$1")};p.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!="undefined"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(" ");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||"").split(".").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(".")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent("on"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null},global:{},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,q,r=p.hasData(a)&&p._data(a);if(!r||!(m=r.events))return;b=p.trim(_(b||"")).split(" ");for(f=0;f<b.length;f++){g=W.exec(b[f])||[],h=i=g[1],j=g[2];if(!h){for(h in m)p.event.remove(a,h+b[f],c,d,!0);continue}n=p.event.special[h]||{},h=(d?n.delegateType:n.bindType)||h,o=m[h]||[],k=o.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.|)")+"(\\.|$)"):null;for(l=0;l<o.length;l++)q=o[l],(e||i===q.origType)&&(!c||c.guid===q.guid)&&(!j||j.test(q.namespace))&&(!d||d===q.selector||d==="**"&&q.selector)&&(o.splice(l--,1),q.selector&&o.delegateCount--,n.remove&&n.remove.call(a,q));o.length===0&&k!==o.length&&((!n.teardown||n.teardown.call(a,j,r.handle)===!1)&&p.removeEvent(a,h,r.handle),delete m[h])}p.isEmptyObject(m)&&(delete r.handle,p.removeData(a,"events",!0))},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,f,g){if(!f||f.nodeType!==3&&f.nodeType!==8){var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];if($.test(s+p.event.triggered))return;s.indexOf("!")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(".")>=0&&(t=s.split("."),s=t.shift(),t.sort());if((!f||p.event.customEvent[s])&&!p.event.global[s])return;c=typeof c=="object"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+t.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,m=s.indexOf(":")<0?"on"+s:"";if(!f){h=p.cache;for(j in h)h[j].events&&h[j].events[s]&&p.event.trigger(c,d,h[j].handle.elem,!0);return}c.result=b,c.target||(c.target=f),d=d!=null?p.makeArray(d):[],d.unshift(c),n=p.event.special[s]||{};if(n.trigger&&n.trigger.apply(f,d)===!1)return;q=[[f,n.bindType||s]];if(!g&&!n.noBubble&&!p.isWindow(f)){r=n.delegateType||s,k=$.test(r+s)?f:f.parentNode;for(l=f;k;k=k.parentNode)q.push([k,r]),l=k;l===(f.ownerDocument||e)&&q.push([l.defaultView||l.parentWindow||a,r])}for(j=0;j<q.length&&!c.isPropagationStopped();j++)k=q[j][0],c.type=q[j][1],o=(p._data(k,"events")||{})[c.type]&&p._data(k,"handle"),o&&o.apply(k,d),o=m&&k[m],o&&p.acceptData(k)&&o.apply&&o.apply(k,d)===!1&&c.preventDefault();return c.type=s,!g&&!c.isDefaultPrevented()&&(!n._default||n._default.apply(f.ownerDocument,d)===!1)&&(s!=="click"||!p.nodeName(f,"a"))&&p.acceptData(f)&&m&&f[s]&&(s!=="focus"&&s!=="blur"||c.target.offsetWidth!==0)&&!p.isWindow(f)&&(l=f[m],l&&(f[m]=null),p.event.triggered=s,f[s](),p.event.triggered=b,l&&(f[m]=l)),c.result}return},dispatch:function(c){c=p.event.fix(c||a.event);var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,"events")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];r[0]=c,c.delegateTarget=this;if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;if(q&&(!c.button||c.type!=="click"))for(f=c.target;f!=this;f=f.parentNode||this)if(f.disabled!==!0||c.type!=="click"){h={},j=[];for(d=0;d<q;d++)l=o[d],m=l.selector,h[m]===b&&(h[m]=l.needsContext?p(m,this).index(f)>=0:p.find(m,this,null,[f]).length),h[m]&&j.push(l);j.length&&u.push({elem:f,matches:j})}o.length>q&&u.push({elem:this,matches:o.slice(q)});for(d=0;d<u.length&&!c.isPropagationStopped();d++){i=u[d],c.currentTarget=i.elem;for(e=0;e<i.matches.length&&!c.isImmediatePropagationStopped();e++){l=i.matches[e];if(s||!c.namespace&&!l.namespace||c.namespace_re&&c.namespace_re.test(l.namespace))c.data=l.data,c.handleObj=l,g=((p.event.special[l.origType]||{}).handle||l.handler).apply(i.elem,r),g!==b&&(c.result=g,g===!1&&(c.preventDefault(),c.stopPropagation()))}}return t.postDispatch&&t.postDispatch.call(this,c),c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,c){var d,f,g,h=c.button,i=c.fromElement;return a.pageX==null&&c.clientX!=null&&(d=a.target.ownerDocument||e,f=d.documentElement,g=d.body,a.pageX=c.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=c.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?c.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0),a}},fix:function(a){if(a[p.expando])return a;var b,c,d=a,f=p.event.fixHooks[a.type]||{},g=f.props?this.props.concat(f.props):this.props;a=p.Event(d);for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]=="undefined"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,"form"))return!1;p.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=p.nodeName(c,"input")||p.nodeName(c,"button")?c.form:b;d&&!p._data(d,"_submit_attached")&&(p.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),p._data(d,"_submit_attached",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,"form"))return!1;p.event.remove(this,"._submit")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")p.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),p.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate("change",this,a,!0)});return!1}p.event.add(this,"beforeactivate._change",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,"_change_attached")&&(p.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate("change",this.parentNode,a,!0)}),p._data(b,"_change_attached",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,"._change"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:"focusin",blur:"focusout"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a=="object"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c=="function")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||"**",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,"**"):this.off(b,a||"**",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,"lastToggle"+a.guid)||0)%d;return p._data(this,"lastToggle"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!="string")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,"$1"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c==="input"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c==="input"||c==="button")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L," ");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir==="parentNode",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+" "+g+" ",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i=="string"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||"*",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[" "],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join("").replace(L,"$1"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(""))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u="0",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG("*",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).type==="ID"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,""),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,""),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join("");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c}function bq(){}var c,d,e,f,g,h,i,j,k,l,m=!0,n="undefined",o=("sizcache"+Math.random()).replace(".",""),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A(),E="[\\x20\\t\\r\\n\\f]",F="(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+",G=F.replace("w","w#"),H="([*^$|!~]?=)",I="\\["+E+"*("+F+")"+E+"*(?:"+H+E+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+G+")|)|)"+E+"*\\]",J=":("+F+")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:"+I+")|[^:]|\\\\.)*|.*))\\)|)",K=":(even|odd|eq|gt|lt|nth|first|last)(?:\\("+E+"*((?:-\\d)?\\d*)"+E+"*\\)|)(?=[^-]|$)",L=new RegExp("^"+E+"+|((?:^|[^\\\\])(?:\\\\.)*)"+E+"+$","g"),M=new RegExp("^"+E+"*,"+E+"*"),N=new RegExp("^"+E+"*([\\x20\\t\\r\\n\\f>+~])"+E+"*"),O=new RegExp(J),P=/^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/,Q=/^:not/,R=/[\x20\t\r\n\f]*[+~]/,S=/:not\($/,T=/h\d/i,U=/input|select|textarea|button/i,V=/\\(?!\\)/g,W={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),NAME:new RegExp("^\\[name=['\"]?("+F+")['\"]?\\]"),TAG:new RegExp("^("+F.replace("w","w*")+")"),ATTR:new RegExp("^"+I),PSEUDO:new RegExp("^"+J),POS:new RegExp(K,"i"),CHILD:new RegExp("^:(only|nth|first|last)-child(?:\\("+E+"*(even|odd|(([+-]|)(\\d*)n|)"+E+"*(?:([+-]|)"+E+"*(\\d+)|))"+E+"*\\)|)","i"),needsContext:new RegExp("^"+E+"*[>+~]|"+K,"i")},X=function(a){var b=r.createElement("div");try{return a(b)}catch(c){return!1}finally{b=null}},Y=X(function(a){return a.appendChild(r.createComment("")),!a.getElementsByTagName("*").length}),Z=X(function(a){return a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!==n&&a.firstChild.getAttribute("href")==="#"}),$=X(function(a){a.innerHTML="<select></select>";var b=typeof a.lastChild.getAttribute("multiple");return b!=="boolean"&&b!=="string"}),_=X(function(a){return a.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!a.getElementsByClassName||!a.getElementsByClassName("e").length?!1:(a.lastChild.className="e",a.getElementsByClassName("e").length===2)}),ba=X(function(a){a.id=o+0,a.innerHTML="<a name='"+o+"'></a><div name='"+o+"'></div>",s.insertBefore(a,s.firstChild);var b=r.getElementsByName&&r.getElementsByName(o).length===2+r.getElementsByName(o+0).length;return d=!r.getElementById(o),s.removeChild(a),b});try{x.call(s.childNodes,0)[0].nodeType}catch(bb){x=function(a){var b,c=[];for(;b=this[a];a++)c.push(b);return c}}bc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c="",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent=="string")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!=="HTML":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]=="boolean"?a[b]?b:null:c.specified?c.value:null:null)},e=bc.selectors={cacheLength:50,createPseudo:z,match:W,attrHandle:Z?{}:{href:function(a){return a.getAttribute("href",2)},type:function(a){return a.getAttribute("type")}},find:{ID:d?function(a,b,c){if(typeof b.getElementById!==n&&!c){var d=b.getElementById(a);return d&&d.parentNode?[d]:[]}}:function(a,c,d){if(typeof c.getElementById!==n&&!d){var e=c.getElementById(a);return e?e.id===a||typeof e.getAttributeNode!==n&&e.getAttributeNode("id").value===a?[e]:b:[]}},TAG:Y?function(a,b){if(typeof b.getElementsByTagName!==n)return b.getElementsByTagName(a)}:function(a,b){var c=b.getElementsByTagName(a);if(a==="*"){var d,e=[],f=0;for(;d=c[f];f++)d.nodeType===1&&e.push(d);return e}return c},NAME:ba&&function(a,b){if(typeof b.getElementsByName!==n)return b.getElementsByName(name)},CLASS:_&&function(a,b,c){if(typeof b.getElementsByClassName!==n&&!c)return b.getElementsByClassName(a)}},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(V,""),a[3]=(a[4]||a[5]||"").replace(V,""),a[2]==="~="&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),a[1]==="nth"?(a[2]||bc.error(a[0]),a[3]=+(a[3]?a[4]+(a[5]||1):2*(a[2]==="even"||a[2]==="odd")),a[4]=+(a[6]+a[7]||a[2]==="odd")):a[2]&&bc.error(a[0]),a},PSEUDO:function(a){var b,c;if(W.CHILD.test(a[0]))return null;if(a[3])a[2]=a[3];else if(b=a[4])O.test(b)&&(c=bh(b,!0))&&(c=b.indexOf(")",b.length-c)-b.length)&&(b=b.slice(0,c),a[0]=a[0].slice(0,c)),a[2]=b;return a.slice(0,3)}},filter:{ID:d?function(a){return a=a.replace(V,""),function(b){return b.getAttribute("id")===a}}:function(a){return a=a.replace(V,""),function(b){var c=typeof b.getAttributeNode!==n&&b.getAttributeNode("id");return c&&c.value===a}},TAG:function(a){return a==="*"?function(){return!0}:(a=a.replace(V,"").toLowerCase(),function(b){return b.nodeName&&b.nodeName.toLowerCase()===a})},CLASS:function(a){var b=B[o][a];return b||(b=B(a,new RegExp("(^|"+E+")"+a+"("+E+"|$)"))),function(a){return b.test(a.className||typeof a.getAttribute!==n&&a.getAttribute("class")||"")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b==="!=":b?(f+="",b==="="?f===c:b==="!="?f!==c:b==="^="?c&&f.indexOf(c)===0:b==="*="?c&&f.indexOf(c)>-1:b==="$="?c&&f.substr(f.length-c.length)===c:b==="~="?(" "+f+" ").indexOf(c)>-1:b==="|="?f===c||f.substr(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d){return a==="nth"?function(a){var b,e,f=a.parentNode;if(c===1&&d===0)return!0;if(f){e=0;for(b=f.firstChild;b;b=b.nextSibling)if(b.nodeType===1){e++;if(a===b)break}}return e-=d,e===c||e%c===0&&e/c>=0}:function(b){var c=b;switch(a){case"only":case"first":while(c=c.previousSibling)if(c.nodeType===1)return!1;if(a==="first")return!0;c=b;case"last":while(c=c.nextSibling)if(c.nodeType===1)return!1;return!0}}},PSEUDO:function(a,b){var c,d=e.pseudos[a]||e.setFilters[a.toLowerCase()]||bc.error("unsupported pseudo: "+a);return d[o]?d(b):d.length>1?(c=[a,a,"",b],e.setFilters.hasOwnProperty(a.toLowerCase())?z(function(a,c){var e,f=d(a,b),g=f.length;while(g--)e=y.call(a,f[g]),a[e]=!(c[e]=f[g])}):function(a){return d(a,0,c)}):d}},pseudos:{not:z(function(a){var b=[],c=[],d=i(a.replace(L,"$1"));return d[o]?z(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)if(f=g[h])a[h]=!(b[h]=f)}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:z(function(a){return function(b){return bc(a,b).length>0}}),contains:z(function(a){return function(b){return(b.textContent||b.innerText||f(b)).indexOf(a)>-1}}),enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&!!a.checked||b==="option"&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},parent:function(a){return!e.pseudos.empty(a)},empty:function(a){var b;a=a.firstChild;while(a){if(a.nodeName>"@"||(b=a.nodeType)===3||b===4)return!1;a=a.nextSibling}return!0},header:function(a){return T.test(a.nodeName)},text:function(a){var b,c;return a.nodeName.toLowerCase()==="input"&&(b=a.type)==="text"&&((c=a.getAttribute("type"))==null||c.toLowerCase()===b)},radio:bd("radio"),checkbox:bd("checkbox"),file:bd("file"),password:bd("password"),image:bd("image"),submit:be("submit"),reset:be("reset"),button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&a.type==="button"||b==="button"},input:function(a){return U.test(a.nodeName)},focus:function(a){var b=a.ownerDocument;return a===b.activeElement&&(!b.hasFocus||b.hasFocus())&&(!!a.type||!!a.href)},active:function(a){return a===a.ownerDocument.activeElement},first:bf(function(a,b,c){return[0]}),last:bf(function(a,b,c){return[b-1]}),eq:bf(function(a,b,c){return[c<0?c+b:c]}),even:bf(function(a,b,c){for(var d=0;d<b;d+=2)a.push(d);return a}),odd:bf(function(a,b,c){for(var d=1;d<b;d+=2)a.push(d);return a}),lt:bf(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:bf(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},j=s.compareDocumentPosition?function(a,b){return a===b?(k=!0,0):(!a.compareDocumentPosition||!b.compareDocumentPosition?a.compareDocumentPosition:a.compareDocumentPosition(b)&4)?-1:1}:function(a,b){if(a===b)return k=!0,0;if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,h=b.parentNode,i=g;if(g===h)return bg(a,b);if(!g)return-1;if(!h)return 1;while(i)e.unshift(i),i=i.parentNode;i=h;while(i)f.unshift(i),i=i.parentNode;c=e.length,d=f.length;for(var j=0;j<c&&j<d;j++)if(e[j]!==f[j])return bg(e[j],f[j]);return j===c?bg(a,f[j],-1):bg(e[j],b,1)},[0,0].sort(j),m=!k,bc.uniqueSort=function(a){var b,c=1;k=m,a.sort(j);if(k)for(;b=a[c];c++)b===a[c-1]&&a.splice(c--,1);return a},bc.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},i=bc.compile=function(a,b){var c,d=[],e=[],f=D[o][a];if(!f){b||(b=bh(a)),c=b.length;while(c--)f=bm(b[c]),f[o]?d.push(f):e.push(f);f=D(a,bn(e,d))}return f},r.querySelectorAll&&function(){var a,b=bp,c=/'|\\/g,d=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,e=[":focus"],f=[":active",":focus"],h=s.matchesSelector||s.mozMatchesSelector||s.webkitMatchesSelector||s.oMatchesSelector||s.msMatchesSelector;X(function(a){a.innerHTML="<select><option selected=''></option></select>",a.querySelectorAll("[selected]").length||e.push("\\["+E+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),a.querySelectorAll(":checked").length||e.push(":checked")}),X(function(a){a.innerHTML="<p test=''></p>",a.querySelectorAll("[test^='']").length&&e.push("[*^$]="+E+"*(?:\"\"|'')"),a.innerHTML="<input type='hidden'/>",a.querySelectorAll(":enabled").length||e.push(":enabled",":disabled")}),e=new RegExp(e.join("|")),bp=function(a,d,f,g,h){if(!g&&!h&&(!e||!e.test(a))){var i,j,k=!0,l=o,m=d,n=d.nodeType===9&&a;if(d.nodeType===1&&d.nodeName.toLowerCase()!=="object"){i=bh(a),(k=d.getAttribute("id"))?l=k.replace(c,"\\$&"):d.setAttribute("id",l),l="[id='"+l+"'] ",j=i.length;while(j--)i[j]=l+i[j].join("");m=R.test(a)&&d.parentNode||d,n=i.join(",")}if(n)try{return w.apply(f,x.call(m.querySelectorAll(n),0)),f}catch(p){}finally{k||d.removeAttribute("id")}}return b(a,d,f,g,h)},h&&(X(function(b){a=h.call(b,"div");try{h.call(b,"[test!='']:sizzle"),f.push("!=",J)}catch(c){}}),f=new RegExp(f.join("|")),bc.matchesSelector=function(b,c){c=c.replace(d,"='$1']");if(!g(b)&&!f.test(c)&&(!e||!e.test(c)))try{var i=h.call(b,c);if(i||a||b.document&&b.document.nodeType!==11)return i}catch(j){}return bc(c,null,null,[b]).length>0})}(),e.pseudos.nth=e.pseudos.eq,e.filters=bq.prototype=e.pseudos,e.setFilters=new bq,bc.attr=p.attr,p.find=bc,p.expr=bc.selectors,p.expr[":"]=p.expr.pseudos,p.unique=bc.uniqueSort,p.text=bc.getText,p.isXMLDoc=bc.isXML,p.contains=bc.contains}(a);var bc=/Until$/,bd=/^(?:parents|prev(?:Until|All))/,be=/^.[^:#\[\.,]*$/,bf=p.expr.match.needsContext,bg={children:!0,contents:!0,next:!0,prev:!0};p.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!="string")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack("","find",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g},has:function(a){var b,c=p(a,this),d=c.length;return this.filter(function(){for(b=0;b<d;b++)if(p.contains(this,c[b]))return!0})},not:function(a){return this.pushStack(bj(this,a,!1),"not",a)},filter:function(a){return this.pushStack(bj(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?bf.test(a)?p(a,this.context).index(this[0])>=0:p.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c,d=0,e=this.length,f=[],g=bf.test(a)||typeof a!="string"?p(a,b||this.context):0;for(;d<e;d++){c=this[d];while(c&&c.ownerDocument&&c!==b&&c.nodeType!==11){if(g?g.index(c)>-1:p.find.matchesSelector(c,a)){f.push(c);break}c=c.parentNode}}return f=f.length>1?p.unique(f):f,this.pushStack(f,"closest",a)},index:function(a){return a?typeof a=="string"?p.inArray(this[0],p(a)):p.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.prevAll().length:-1},add:function(a,b){var c=typeof a=="string"?p(a,b):p.makeArray(a&&a.nodeType?[a]:a),d=p.merge(this.get(),c);return this.pushStack(bh(c[0])||bh(d[0])?d:p.unique(d))},addBack:function(a){return this.add(a==null?this.prevObject:this.prevObject.filter(a))}}),p.fn.andSelf=p.fn.addBack,p.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return p.dir(a,"parentNode")},parentsUntil:function(a,b,c){return p.dir(a,"parentNode",c)},next:function(a){return bi(a,"nextSibling")},prev:function(a){return bi(a,"previousSibling")},nextAll:function(a){return p.dir(a,"nextSibling")},prevAll:function(a){return p.dir(a,"previousSibling")},nextUntil:function(a,b,c){return p.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return p.dir(a,"previousSibling",c)},siblings:function(a){return p.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return p.sibling(a.firstChild)},contents:function(a){return p.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:p.merge([],a.childNodes)}},function(a,b){p.fn[a]=function(c,d){var e=p.map(this,b,c);return bc.test(a)||(d=c),d&&typeof d=="string"&&(e=p.filter(d,e)),e=this.length>1&&!bg[a]?p.unique(e):e,this.length>1&&bd.test(a)&&(e=e.reverse()),this.pushStack(e,a,k.call(arguments).join(","))}}),p.extend({filter:function(a,b,c){return c&&(a=":not("+a+")"),b.length===1?p.find.matchesSelector(b[0],a)?[b[0]]:[]:p.find.matches(a,b)},dir:function(a,c,d){var e=[],f=a[c];while(f&&f.nodeType!==9&&(d===b||f.nodeType!==1||!p(f).is(d)))f.nodeType===1&&e.push(f),f=f[c];return e},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var bl="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",bm=/ jQuery\d+="(?:null|\d+)"/g,bn=/^\s+/,bo=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,bp=/<([\w:]+)/,bq=/<tbody/i,br=/<|&#?\w+;/,bs=/<(?:script|style|link)/i,bt=/<(?:script|object|embed|option|style)/i,bu=new RegExp("<(?:"+bl+")[\\s/>]","i"),bv=/^(?:checkbox|radio)$/,bw=/checked\s*(?:[^=]|=\s*.checked.)/i,bx=/\/(java|ecma)script/i,by=/^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,bz={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bA=bk(e),bB=bA.appendChild(e.createElement("div"));bz.optgroup=bz.option,bz.tbody=bz.tfoot=bz.colgroup=bz.caption=bz.thead,bz.th=bz.td,p.support.htmlSerialize||(bz._default=[1,"X<div>","</div>"]),p.fn.extend({text:function(a){return p.access(this,function(a){return a===b?p.text(this):this.empty().append((this[0]&&this[0].ownerDocument||e).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=p.isFunction(a);return this.each(function(c){p(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){p.nodeName(this,"body")||p(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})},before:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(a,this),"before",this.selector)}},after:function(){if(!bh(this[0]))return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=p.clean(arguments);return this.pushStack(p.merge(this,a),"after",this.selector)}},remove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this},empty:function(){var a,b=0;for(;(a=this[b])!=null;b++){a.nodeType===1&&p.cleanData(a.getElementsByTagName("*"));while(a.firstChild)a.removeChild(a.firstChild)}return this},clone:function(a,b){return a=a==null?!1:a,b=b==null?a:b,this.map(function(){return p.clone(this,a,b)})},html:function(a){return p.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(bm,""):b;if(typeof a=="string"&&!bs.test(a)&&(p.support.htmlSerialize||!bu.test(a))&&(p.support.leadingWhitespace||!bn.test(a))&&!bz[(bp.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(bo,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(p.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(f){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){return bh(this[0])?this.length?this.pushStack(p(p.isFunction(a)?a():a),"replaceWith",a):this:p.isFunction(a)?this.each(function(b){var c=p(this),d=c.html();c.replaceWith(a.call(this,b,d))}):(typeof a!="string"&&(a=p(a).detach()),this.each(function(){var b=this.nextSibling,c=this.parentNode;p(this).remove(),b?p(b).before(a):p(c).append(a)}))},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){a=[].concat.apply([],a);var e,f,g,h,i=0,j=a[0],k=[],l=this.length;if(!p.support.checkClone&&l>1&&typeof j=="string"&&bw.test(j))return this.each(function(){p(this).domManip(a,c,d)});if(p.isFunction(j))return this.each(function(e){var f=p(this);a[0]=j.call(this,e,c?f.html():b),f.domManip(a,c,d)});if(this[0]){e=p.buildFragment(a,this,k),g=e.fragment,f=g.firstChild,g.childNodes.length===1&&(g=f);if(f){c=c&&p.nodeName(f,"tr");for(h=e.cacheable||l-1;i<l;i++)d.call(c&&p.nodeName(this[i],"table")?bC(this[i],"tbody"):this[i],i===h?g:p.clone(g,!0,!0))}g=f=null,k.length&&p.each(k,function(a,b){b.src?p.ajax?p.ajax({url:b.src,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0}):p.error("no ajax"):p.globalEval((b.text||b.textContent||b.innerHTML||"").replace(by,"")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),p.buildFragment=function(a,c,d){var f,g,h,i=a[0];return c=c||e,c=!c.nodeType&&c[0]||c,c=c.ownerDocument||c,a.length===1&&typeof i=="string"&&i.length<512&&c===e&&i.charAt(0)==="<"&&!bt.test(i)&&(p.support.checkClone||!bw.test(i))&&(p.support.html5Clone||!bu.test(i))&&(g=!0,f=p.fragments[i],h=f!==b),f||(f=c.createDocumentFragment(),p.clean(a,c,f,d),g&&(p.fragments[i]=h&&f)),{fragment:f,cacheable:g}},p.fragments={},p.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){p.fn[a]=function(c){var d,e=0,f=[],g=p(c),h=g.length,i=this.length===1&&this[0].parentNode;if((i==null||i&&i.nodeType===11&&i.childNodes.length===1)&&h===1)return g[b](this[0]),this;for(;e<h;e++)d=(e>0?this.clone(!0):this).get(),p(g[e])[b](d),f=f.concat(d);return this.pushStack(f,a,g.selector)}}),p.extend({clone:function(a,b,c){var d,e,f,g;p.support.html5Clone||p.isXMLDoc(a)||!bu.test("<"+a.nodeName+">")?g=a.cloneNode(!0):(bB.innerHTML=a.outerHTML,bB.removeChild(g=bB.firstChild));if((!p.support.noCloneEvent||!p.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!p.isXMLDoc(a)){bE(a,g),d=bF(a),e=bF(g);for(f=0;d[f];++f)e[f]&&bE(d[f],e[f])}if(b){bD(a,g);if(c){d=bF(a),e=bF(g);for(f=0;d[f];++f)bD(d[f],e[f])}}return d=e=null,g},clean:function(a,b,c,d){var f,g,h,i,j,k,l,m,n,o,q,r,s=b===e&&bA,t=[];if(!b||typeof b.createDocumentFragment=="undefined")b=e;for(f=0;(h=a[f])!=null;f++){typeof h=="number"&&(h+="");if(!h)continue;if(typeof h=="string")if(!br.test(h))h=b.createTextNode(h);else{s=s||bk(b),l=b.createElement("div"),s.appendChild(l),h=h.replace(bo,"<$1></$2>"),i=(bp.exec(h)||["",""])[1].toLowerCase(),j=bz[i]||bz._default,k=j[0],l.innerHTML=j[1]+h+j[2];while(k--)l=l.lastChild;if(!p.support.tbody){m=bq.test(h),n=i==="table"&&!m?l.firstChild&&l.firstChild.childNodes:j[1]==="<table>"&&!m?l.childNodes:[];for(g=n.length-1;g>=0;--g)p.nodeName(n[g],"tbody")&&!n[g].childNodes.length&&n[g].parentNode.removeChild(n[g])}!p.support.leadingWhitespace&&bn.test(h)&&l.insertBefore(b.createTextNode(bn.exec(h)[0]),l.firstChild),h=l.childNodes,l.parentNode.removeChild(l)}h.nodeType?t.push(h):p.merge(t,h)}l&&(h=l=s=null);if(!p.support.appendChecked)for(f=0;(h=t[f])!=null;f++)p.nodeName(h,"input")?bG(h):typeof h.getElementsByTagName!="undefined"&&p.grep(h.getElementsByTagName("input"),bG);if(c){q=function(a){if(!a.type||bx.test(a.type))return d?d.push(a.parentNode?a.parentNode.removeChild(a):a):c.appendChild(a)};for(f=0;(h=t[f])!=null;f++)if(!p.nodeName(h,"script")||!q(h))c.appendChild(h),typeof h.getElementsByTagName!="undefined"&&(r=p.grep(p.merge([],h.getElementsByTagName("script")),q),t.splice.apply(t,[f+1,0].concat(r)),f+=r.length)}return t},cleanData:function(a,b){var c,d,e,f,g=0,h=p.expando,i=p.cache,j=p.support.deleteExpando,k=p.event.special;for(;(e=a[g])!=null;g++)if(b||p.acceptData(e)){d=e[h],c=d&&i[d];if(c){if(c.events)for(f in c.events)k[f]?p.event.remove(e,f):p.removeEvent(e,f,c.handle);i[d]&&(delete i[d],j?delete e[h]:e.removeAttribute?e.removeAttribute(h):e[h]=null,p.deletedIds.push(d))}}}}),function(){var a,b;p.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},a=p.uaMatch(g.userAgent),b={},a.browser&&(b[a.browser]=!0,b.version=a.version),b.chrome?b.webkit=!0:b.webkit&&(b.safari=!0),p.browser=b,p.sub=function(){function a(b,c){return new a.fn.init(b,c)}p.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function c(c,d){return d&&d instanceof p&&!(d instanceof a)&&(d=a(d)),p.fn.init.call(this,c,d,b)},a.fn.init.prototype=a.fn;var b=a(e);return a}}();var bH,bI,bJ,bK=/alpha\([^)]*\)/i,bL=/opacity=([^)]*)/,bM=/^(top|right|bottom|left)$/,bN=/^(none|table(?!-c[ea]).+)/,bO=/^margin/,bP=new RegExp("^("+q+")(.*)$","i"),bQ=new RegExp("^("+q+")(?!px)[a-z%]+$","i"),bR=new RegExp("^([-+])=("+q+")","i"),bS={},bT={position:"absolute",visibility:"hidden",display:"block"},bU={letterSpacing:0,fontWeight:400},bV=["Top","Right","Bottom","Left"],bW=["Webkit","O","Moz","ms"],bX=p.fn.toggle;p.fn.extend({css:function(a,c){return p.access(this,function(a,c,d){return d!==b?p.style(a,c,d):p.css(a,c)},a,c,arguments.length>1)},show:function(){return b$(this,!0)},hide:function(){return b$(this)},toggle:function(a,b){var c=typeof a=="boolean";return p.isFunction(a)&&p.isFunction(b)?bX.apply(this,arguments):this.each(function(){(c?a:bZ(this))?p(this).show():p(this).hide()})}}),p.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bH(a,"opacity");return c===""?"1":c}}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":p.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!a||a.nodeType===3||a.nodeType===8||!a.style)return;var f,g,h,i=p.camelCase(c),j=a.style;c=p.cssProps[i]||(p.cssProps[i]=bY(j,i)),h=p.cssHooks[c]||p.cssHooks[i];if(d===b)return h&&"get"in h&&(f=h.get(a,!1,e))!==b?f:j[c];g=typeof d,g==="string"&&(f=bR.exec(d))&&(d=(f[1]+1)*f[2]+parseFloat(p.css(a,c)),g="number");if(d==null||g==="number"&&isNaN(d))return;g==="number"&&!p.cssNumber[i]&&(d+="px");if(!h||!("set"in h)||(d=h.set(a,d,e))!==b)try{j[c]=d}catch(k){}},css:function(a,c,d,e){var f,g,h,i=p.camelCase(c);return c=p.cssProps[i]||(p.cssProps[i]=bY(a.style,i)),h=p.cssHooks[c]||p.cssHooks[i],h&&"get"in h&&(f=h.get(a,!0,e)),f===b&&(f=bH(a,c)),f==="normal"&&c in bU&&(f=bU[c]),d||e!==b?(g=parseFloat(f),d||p.isNumeric(g)?g||0:f):f},swap:function(a,b,c){var d,e,f={};for(e in b)f[e]=a.style[e],a.style[e]=b[e];d=c.call(a);for(e in b)a.style[e]=f[e];return d}}),a.getComputedStyle?bH=function(b,c){var d,e,f,g,h=a.getComputedStyle(b,null),i=b.style;return h&&(d=h[c],d===""&&!p.contains(b.ownerDocument,b)&&(d=p.style(b,c)),bQ.test(d)&&bO.test(c)&&(e=i.width,f=i.minWidth,g=i.maxWidth,i.minWidth=i.maxWidth=i.width=d,d=h.width,i.width=e,i.minWidth=f,i.maxWidth=g)),d}:e.documentElement.currentStyle&&(bH=function(a,b){var c,d,e=a.currentStyle&&a.currentStyle[b],f=a.style;return e==null&&f&&f[b]&&(e=f[b]),bQ.test(e)&&!bM.test(b)&&(c=f.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":e,e=f.pixelLeft+"px",f.left=c,d&&(a.runtimeStyle.left=d)),e===""?"auto":e}),p.each(["height","width"],function(a,b){p.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth===0&&bN.test(bH(a,"display"))?p.swap(a,bT,function(){return cb(a,b,d)}):cb(a,b,d)},set:function(a,c,d){return b_(a,c,d?ca(a,b,d,p.support.boxSizing&&p.css(a,"boxSizing")==="border-box"):0)}}}),p.support.opacity||(p.cssHooks.opacity={get:function(a,b){return bL.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=p.isNumeric(b)?"alpha(opacity="+b*100+")":"",f=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&p.trim(f.replace(bK,""))===""&&c.removeAttribute){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bK.test(f)?f.replace(bK,e):f+" "+e}}),p(function(){p.support.reliableMarginRight||(p.cssHooks.marginRight={get:function(a,b){return p.swap(a,{display:"inline-block"},function(){if(b)return bH(a,"marginRight")})}}),!p.support.pixelPosition&&p.fn.position&&p.each(["top","left"],function(a,b){p.cssHooks[b]={get:function(a,c){if(c){var d=bH(a,b);return bQ.test(d)?p(a).position()[b]+"px":d}}}})}),p.expr&&p.expr.filters&&(p.expr.filters.hidden=function(a){return a.offsetWidth===0&&a.offsetHeight===0||!p.support.reliableHiddenOffsets&&(a.style&&a.style.display||bH(a,"display"))==="none"},p.expr.filters.visible=function(a){return!p.expr.filters.hidden(a)}),p.each({margin:"",padding:"",border:"Width"},function(a,b){p.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bV[d]+b]=e[d]||e[d-2]||e[0];return f}},bO.test(a)||(p.cssHooks[a+b].set=b_)});var cd=/%20/g,ce=/\[\]$/,cf=/\r?\n/g,cg=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,ch=/^(?:select|textarea)/i;p.fn.extend({serialize:function(){return p.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?p.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ch.test(this.nodeName)||cg.test(this.type))}).map(function(a,b){var c=p(this).val();return c==null?null:p.isArray(c)?p.map(c,function(a,c){return{name:b.name,value:a.replace(cf,"\r\n")}}):{name:b.name,value:c.replace(cf,"\r\n")}}).get()}}),p.param=function(a,c){var d,e=[],f=function(a,b){b=p.isFunction(b)?b():b==null?"":b,e[e.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=p.ajaxSettings&&p.ajaxSettings.traditional);if(p.isArray(a)||a.jquery&&!p.isPlainObject(a))p.each(a,function(){f(this.name,this.value)});else for(d in a)ci(d,a[d],c,f);return e.join("&").replace(cd,"+")};var cj,ck,cl=/#.*$/,cm=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,cn=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,co=/^(?:GET|HEAD)$/,cp=/^\/\//,cq=/\?/,cr=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,cs=/([?&])_=[^&]*/,ct=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,cu=p.fn.load,cv={},cw={},cx=["*/"]+["*"];try{ck=f.href}catch(cy){ck=e.createElement("a"),ck.href="",ck=ck.href}cj=ct.exec(ck.toLowerCase())||[],p.fn.load=function(a,c,d){if(typeof a!="string"&&cu)return cu.apply(this,arguments);if(!this.length)return this;var e,f,g,h=this,i=a.indexOf(" ");return i>=0&&(e=a.slice(i,a.length),a=a.slice(0,i)),p.isFunction(c)?(d=c,c=b):c&&typeof c=="object"&&(f="POST"),p.ajax({url:a,type:f,dataType:"html",data:c,complete:function(a,b){d&&h.each(d,g||[a.responseText,b,a])}}).done(function(a){g=arguments,h.html(e?p("<div>").append(a.replace(cr,"")).find(e):a)}),this},p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){p.fn[b]=function(a){return this.on(b,a)}}),p.each(["get","post"],function(a,c){p[c]=function(a,d,e,f){return p.isFunction(d)&&(f=f||e,e=d,d=b),p.ajax({type:c,url:a,data:d,success:e,dataType:f})}}),p.extend({getScript:function(a,c){return p.get(a,b,c,"script")},getJSON:function(a,b,c){return p.get(a,b,c,"json")},ajaxSetup:function(a,b){return b?cB(a,p.ajaxSettings):(b=a,a=p.ajaxSettings),cB(a,b),a},ajaxSettings:{url:ck,isLocal:cn.test(cj[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":cx},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":p.parseJSON,"text xml":p.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:cz(cv),ajaxTransport:cz(cw),ajax:function(a,c){function y(a,c,f,i){var k,s,t,u,w,y=c;if(v===2)return;v=2,h&&clearTimeout(h),g=b,e=i||"",x.readyState=a>0?4:0,f&&(u=cC(l,x,f));if(a>=200&&a<300||a===304)l.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(p.lastModified[d]=w),w=x.getResponseHeader("Etag"),w&&(p.etag[d]=w)),a===304?(y="notmodified",k=!0):(k=cD(l,u),y=k.state,s=k.data,t=k.error,k=!t);else{t=y;if(!y||a)y="error",a<0&&(a=0)}x.status=a,x.statusText=(c||y)+"",k?o.resolveWith(m,[s,y,x]):o.rejectWith(m,[x,y,t]),x.statusCode(r),r=b,j&&n.trigger("ajax"+(k?"Success":"Error"),[x,l,k?s:t]),q.fireWith(m,[x,y]),j&&(n.trigger("ajaxComplete",[x,l]),--p.active||p.event.trigger("ajaxStop"))}typeof a=="object"&&(c=a,a=b),c=c||{};var d,e,f,g,h,i,j,k,l=p.ajaxSetup({},c),m=l.context||l,n=m!==l&&(m.nodeType||m instanceof p)?p(m):p.event,o=p.Deferred(),q=p.Callbacks("once memory"),r=l.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,setRequestHeader:function(a,b){if(!v){var c=a.toLowerCase();a=u[c]=u[c]||a,t[a]=b}return this},getAllResponseHeaders:function(){return v===2?e:null},getResponseHeader:function(a){var c;if(v===2){if(!f){f={};while(c=cm.exec(e))f[c[1].toLowerCase()]=c[2]}c=f[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){return v||(l.mimeType=a),this},abort:function(a){return a=a||w,g&&g.abort(a),y(0,a),this}};o.promise(x),x.success=x.done,x.error=x.fail,x.complete=q.add,x.statusCode=function(a){if(a){var b;if(v<2)for(b in a)r[b]=[r[b],a[b]];else b=a[x.status],x.always(b)}return this},l.url=((a||l.url)+"").replace(cl,"").replace(cp,cj[1]+"//"),l.dataTypes=p.trim(l.dataType||"*").toLowerCase().split(s),l.crossDomain==null&&(i=ct.exec(l.url.toLowerCase())||!1,l.crossDomain=i&&i.join(":")+(i[3]?"":i[1]==="http:"?80:443)!==cj.join(":")+(cj[3]?"":cj[1]==="http:"?80:443)),l.data&&l.processData&&typeof l.data!="string"&&(l.data=p.param(l.data,l.traditional)),cA(cv,l,c,x);if(v===2)return x;j=l.global,l.type=l.type.toUpperCase(),l.hasContent=!co.test(l.type),j&&p.active++===0&&p.event.trigger("ajaxStart");if(!l.hasContent){l.data&&(l.url+=(cq.test(l.url)?"&":"?")+l.data,delete l.data),d=l.url;if(l.cache===!1){var z=p.now(),A=l.url.replace(cs,"$1_="+z);l.url=A+(A===l.url?(cq.test(l.url)?"&":"?")+"_="+z:"")}}(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&x.setRequestHeader("Content-Type",l.contentType),l.ifModified&&(d=d||l.url,p.lastModified[d]&&x.setRequestHeader("If-Modified-Since",p.lastModified[d]),p.etag[d]&&x.setRequestHeader("If-None-Match",p.etag[d])),x.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+(l.dataTypes[0]!=="*"?", "+cx+"; q=0.01":""):l.accepts["*"]);for(k in l.headers)x.setRequestHeader(k,l.headers[k]);if(!l.beforeSend||l.beforeSend.call(m,x,l)!==!1&&v!==2){w="abort";for(k in{success:1,error:1,complete:1})x[k](l[k]);g=cA(cw,l,c,x);if(!g)y(-1,"No Transport");else{x.readyState=1,j&&n.trigger("ajaxSend",[x,l]),l.async&&l.timeout>0&&(h=setTimeout(function(){x.abort("timeout")},l.timeout));try{v=1,g.send(t,y)}catch(B){if(v<2)y(-1,B);else throw B}}return x}return x.abort()},active:0,lastModified:{},etag:{}});var cE=[],cF=/\?/,cG=/(=)\?(?=&|$)|\?\?/,cH=p.now();p.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=cE.pop()||p.expando+"_"+cH++;return this[a]=!0,a}}),p.ajaxPrefilter("json jsonp",function(c,d,e){var f,g,h,i=c.data,j=c.url,k=c.jsonp!==!1,l=k&&cG.test(j),m=k&&!l&&typeof i=="string"&&!(c.contentType||"").indexOf("application/x-www-form-urlencoded")&&cG.test(i);if(c.dataTypes[0]==="jsonp"||l||m)return f=c.jsonpCallback=p.isFunction(c.jsonpCallback)?c.jsonpCallback():c.jsonpCallback,g=a[f],l?c.url=j.replace(cG,"$1"+f):m?c.data=i.replace(cG,"$1"+f):k&&(c.url+=(cF.test(j)?"&":"?")+c.jsonp+"="+f),c.converters["script json"]=function(){return h||p.error(f+" was not called"),h[0]},c.dataTypes[0]="json",a[f]=function(){h=arguments},e.always(function(){a[f]=g,c[f]&&(c.jsonpCallback=d.jsonpCallback,cE.push(f)),h&&p.isFunction(g)&&g(h[0]),h=g=b}),"script"}),p.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){return p.globalEval(a),a}}}),p.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),p.ajaxTransport("script",function(a){if(a.crossDomain){var c,d=e.head||e.getElementsByTagName("head")[0]||e.documentElement;return{send:function(f,g){c=e.createElement("script"),c.async="async",a.scriptCharset&&(c.charset=a.scriptCharset),c.src=a.url,c.onload=c.onreadystatechange=function(a,e){if(e||!c.readyState||/loaded|complete/.test(c.readyState))c.onload=c.onreadystatechange=null,d&&c.parentNode&&d.removeChild(c),c=b,e||g(200,"success")},d.insertBefore(c,d.firstChild)},abort:function(){c&&c.onload(0,1)}}}});var cI,cJ=a.ActiveXObject?function(){for(var a in cI)cI[a](0,1)}:!1,cK=0;p.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&cL()||cM()}:cL,function(a){p.extend(p.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(p.ajaxSettings.xhr()),p.support.ajax&&p.ajaxTransport(function(c){if(!c.crossDomain||p.support.cors){var d;return{send:function(e,f){var g,h,i=c.xhr();c.username?i.open(c.type,c.url,c.async,c.username,c.password):i.open(c.type,c.url,c.async);if(c.xhrFields)for(h in c.xhrFields)i[h]=c.xhrFields[h];c.mimeType&&i.overrideMimeType&&i.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(h in e)i.setRequestHeader(h,e[h])}catch(j){}i.send(c.hasContent&&c.data||null),d=function(a,e){var h,j,k,l,m;try{if(d&&(e||i.readyState===4)){d=b,g&&(i.onreadystatechange=p.noop,cJ&&delete cI[g]);if(e)i.readyState!==4&&i.abort();else{h=i.status,k=i.getAllResponseHeaders(),l={},m=i.responseXML,m&&m.documentElement&&(l.xml=m);try{l.text=i.responseText}catch(a){}try{j=i.statusText}catch(n){j=""}!h&&c.isLocal&&!c.crossDomain?h=l.text?200:404:h===1223&&(h=204)}}}catch(o){e||f(-1,o)}l&&f(h,j,l,k)},c.async?i.readyState===4?setTimeout(d,0):(g=++cK,cJ&&(cI||(cI={},p(a).unload(cJ)),cI[g]=d),i.onreadystatechange=d):d()},abort:function(){d&&d(0,1)}}}});var cN,cO,cP=/^(?:toggle|show|hide)$/,cQ=new RegExp("^(?:([-+])=|)("+q+")([a-z%]*)$","i"),cR=/queueHooks$/,cS=[cY],cT={"*":[function(a,b){var c,d,e=this.createTween(a,b),f=cQ.exec(b),g=e.cur(),h=+g||0,i=1,j=20;if(f){c=+f[2],d=f[3]||(p.cssNumber[a]?"":"px");if(d!=="px"&&h){h=p.css(e.elem,a,!0)||c||1;do i=i||".5",h=h/i,p.style(e.elem,a,h+d);while(i!==(i=e.cur()/g)&&i!==1&&--j)}e.unit=d,e.start=h,e.end=f[1]?h+(f[1]+1)*c:c}return e}]};p.Animation=p.extend(cW,{tweener:function(a,b){p.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");var c,d=0,e=a.length;for(;d<e;d++)c=a[d],cT[c]=cT[c]||[],cT[c].unshift(b)},prefilter:function(a,b){b?cS.unshift(a):cS.push(a)}}),p.Tween=cZ,cZ.prototype={constructor:cZ,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(p.cssNumber[c]?"":"px")},cur:function(){var a=cZ.propHooks[this.prop];return a&&a.get?a.get(this):cZ.propHooks._default.get(this)},run:function(a){var b,c=cZ.propHooks[this.prop];return this.options.duration?this.pos=b=p.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):cZ.propHooks._default.set(this),this}},cZ.prototype.init.prototype=cZ.prototype,cZ.propHooks={_default:{get:function(a){var b;return a.elem[a.prop]==null||!!a.elem.style&&a.elem.style[a.prop]!=null?(b=p.css(a.elem,a.prop,!1,""),!b||b==="auto"?0:b):a.elem[a.prop]},set:function(a){p.fx.step[a.prop]?p.fx.step[a.prop](a):a.elem.style&&(a.elem.style[p.cssProps[a.prop]]!=null||p.cssHooks[a.prop])?p.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},cZ.propHooks.scrollTop=cZ.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},p.each(["toggle","show","hide"],function(a,b){var c=p.fn[b];p.fn[b]=function(d,e,f){return d==null||typeof d=="boolean"||!a&&p.isFunction(d)&&p.isFunction(e)?c.apply(this,arguments):this.animate(c$(b,!0),d,e,f)}}),p.fn.extend({fadeTo:function(a,b,c,d){return this.filter(bZ).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=p.isEmptyObject(a),f=p.speed(b,c,d),g=function(){var b=cW(this,p.extend({},a),f);e&&b.stop(!0)};return e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,c,d){var e=function(a){var b=a.stop;delete a.stop,b(d)};return typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,c=a!=null&&a+"queueHooks",f=p.timers,g=p._data(this);if(c)g[c]&&g[c].stop&&e(g[c]);else for(c in g)g[c]&&g[c].stop&&cR.test(c)&&e(g[c]);for(c=f.length;c--;)f[c].elem===this&&(a==null||f[c].queue===a)&&(f[c].anim.stop(d),b=!1,f.splice(c,1));(b||!d)&&p.dequeue(this,a)})}}),p.each({slideDown:c$("show"),slideUp:c$("hide"),slideToggle:c$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){p.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),p.speed=function(a,b,c){var d=a&&typeof a=="object"?p.extend({},a):{complete:c||!c&&b||p.isFunction(a)&&a,duration:a,easing:c&&b||b&&!p.isFunction(b)&&b};d.duration=p.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in p.fx.speeds?p.fx.speeds[d.duration]:p.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";return d.old=d.complete,d.complete=function(){p.isFunction(d.old)&&d.old.call(this),d.queue&&p.dequeue(this,d.queue)},d},p.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},p.timers=[],p.fx=cZ.prototype.init,p.fx.tick=function(){var a,b=p.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||p.fx.stop()},p.fx.timer=function(a){a()&&p.timers.push(a)&&!cO&&(cO=setInterval(p.fx.tick,p.fx.interval))},p.fx.interval=13,p.fx.stop=function(){clearInterval(cO),cO=null},p.fx.speeds={slow:600,fast:200,_default:400},p.fx.step={},p.expr&&p.expr.filters&&(p.expr.filters.animated=function(a){return p.grep(p.timers,function(b){return a===b.elem}).length});var c_=/^(?:body|html)$/i;p.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){p.offset.setOffset(this,a,b)});var c,d,e,f,g,h,i,j={top:0,left:0},k=this[0],l=k&&k.ownerDocument;if(!l)return;return(d=l.body)===k?p.offset.bodyOffset(k):(c=l.documentElement,p.contains(c,k)?(typeof k.getBoundingClientRect!="undefined"&&(j=k.getBoundingClientRect()),e=da(l),f=c.clientTop||d.clientTop||0,g=c.clientLeft||d.clientLeft||0,h=e.pageYOffset||c.scrollTop,i=e.pageXOffset||c.scrollLeft,{top:j.top+h-f,left:j.left+i-g}):j)},p.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;return p.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(p.css(a,"marginTop"))||0,c+=parseFloat(p.css(a,"marginLeft"))||0),{top:b,left:c}},setOffset:function(a,b,c){var d=p.css(a,"position");d==="static"&&(a.style.position="relative");var e=p(a),f=e.offset(),g=p.css(a,"top"),h=p.css(a,"left"),i=(d==="absolute"||d==="fixed")&&p.inArray("auto",[g,h])>-1,j={},k={},l,m;i?(k=e.position(),l=k.top,m=k.left):(l=parseFloat(g)||0,m=parseFloat(h)||0),p.isFunction(b)&&(b=b.call(a,c,f)),b.top!=null&&(j.top=b.top-f.top+l),b.left!=null&&(j.left=b.left-f.left+m),"using"in b?b.using.call(a,j):e.css(j)}},p.fn.extend({position:function(){if(!this[0])return;var a=this[0],b=this.offsetParent(),c=this.offset(),d=c_.test(b[0].nodeName)?{top:0,left:0}:b.offset();return c.top-=parseFloat(p.css(a,"marginTop"))||0,c.left-=parseFloat(p.css(a,"marginLeft"))||0,d.top+=parseFloat(p.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(p.css(b[0],"borderLeftWidth"))||0,{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||e.body;while(a&&!c_.test(a.nodeName)&&p.css(a,"position")==="static")a=a.offsetParent;return a||e.body})}}),p.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);p.fn[a]=function(e){return p.access(this,function(a,e,f){var g=da(a);if(f===b)return g?c in g?g[c]:g.document.documentElement[e]:a[e];g?g.scrollTo(d?p(g).scrollLeft():f,d?f:p(g).scrollTop()):a[e]=f},a,e,arguments.length,null)}}),p.each({Height:"height",Width:"width"},function(a,c){p.each({padding:"inner"+a,content:c,"":"outer"+a},function(d,e){p.fn[e]=function(e,f){var g=arguments.length&&(d||typeof e!="boolean"),h=d||(e===!0||f===!0?"margin":"border");return p.access(this,function(c,d,e){var f;return p.isWindow(c)?c.document.documentElement["client"+a]:c.nodeType===9?(f=c.documentElement,Math.max(c.body["scroll"+a],f["scroll"+a],c.body["offset"+a],f["offset"+a],f["client"+a])):e===b?p.css(c,d,e,h):p.style(c,d,e,h)},c,g?e:b,g,null)}})}),a.jQuery=a.$=p,"function"=="function"&&__webpack_require__(4)&&__webpack_require__(4).jQuery&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return p}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))})(window);

/***/ },
/* 4 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;
	
	/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ },
/* 5 */
/***/ function(module, exports) {

	/*! jQuery UI - v1.9.2 - 2016-06-17
	 * http://jqueryui.com
	 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.accordion.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.menu.js
	 * Copyright jQuery Foundation and other contributors; Licensed MIT */
	
	(function(e,t){function i(t,i){var n,a,o,r=t.nodeName.toLowerCase();return"area"===r?(n=t.parentNode,a=n.name,t.href&&a&&"map"===n.nodeName.toLowerCase()?(o=e("img[usemap=#"+a+"]")[0],!!o&&s(o)):!1):(/input|select|textarea|button|object/.test(r)?!t.disabled:"a"===r?t.href||i:i)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return"hidden"===e.css(this,"visibility")}).length}var n=0,a=/^ui-id-\d+$/;e.ui=e.ui||{},e.ui.version||(e.extend(e.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,i){return"number"==typeof t?this.each(function(){var s=this;setTimeout(function(){e(s).focus(),i&&i.call(s)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return t=e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(i){if(i!==t)return this.css("zIndex",i);if(this.length)for(var s,n,a=e(this[0]);a.length&&a[0]!==document;){if(s=a.css("position"),("absolute"===s||"relative"===s||"fixed"===s)&&(n=parseInt(a.css("zIndex"),10),!isNaN(n)&&0!==n))return n;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,s){return!!e.data(t,s[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var s=e.attr(t,"tabindex"),n=isNaN(s);return(n||s>=0)&&i(t,!n)}}),e(function(){var t=document.body,i=t.appendChild(i=document.createElement("div"));i.offsetHeight,e.extend(i.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=100===i.offsetHeight,e.support.selectstart="onselectstart"in i,t.removeChild(i).style.display="none"}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(i,s){function n(t,i,s,n){return e.each(a,function(){i-=parseFloat(e.css(t,"padding"+this))||0,s&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),n&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var a="Width"===s?["Left","Right"]:["Top","Bottom"],o=s.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+s]=function(i){return i===t?r["inner"+s].call(this):this.each(function(){e(this).css(o,n(this,i)+"px")})},e.fn["outer"+s]=function(t,i){return"number"!=typeof t?r["outer"+s].call(this,t):this.each(function(){e(this).css(o,n(this,t,!0,i)+"px")})}}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=6===parseFloat(t[1],10)}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,i,s){var n,a=e.ui[t].prototype;for(n in s)a.plugins[n]=a.plugins[n]||[],a.plugins[n].push([i,s[n]])},call:function(e,t,i){var s,n=e.plugins[t];if(n&&e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType)for(s=0;n.length>s;s++)e.options[n[s][0]]&&n[s][1].apply(e.element,i)}},contains:e.contains,hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var s=i&&"left"===i?"scrollLeft":"scrollTop",n=!1;return t[s]>0?!0:(t[s]=1,n=t[s]>0,t[s]=0,n)},isOverAxis:function(e,t,i){return e>t&&t+i>e},isOver:function(t,i,s,n,a,o){return e.ui.isOverAxis(t,s,a)&&e.ui.isOverAxis(i,n,o)}}))})(jQuery);(function(e,t){var i=0,s=Array.prototype.slice,n=e.cleanData;e.cleanData=function(t){for(var i,s=0;null!=(i=t[s]);s++)try{e(i).triggerHandler("remove")}catch(a){}n(t)},e.widget=function(i,s,n){var a,o,r,h,l=i.split(".")[0];i=i.split(".")[1],a=l+"-"+i,n||(n=s,s=e.Widget),e.expr[":"][a.toLowerCase()]=function(t){return!!e.data(t,a)},e[l]=e[l]||{},o=e[l][i],r=e[l][i]=function(e,i){return this._createWidget?(arguments.length&&this._createWidget(e,i),t):new r(e,i)},e.extend(r,o,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),h=new s,h.options=e.widget.extend({},h.options),e.each(n,function(t,i){e.isFunction(i)&&(n[t]=function(){var e=function(){return s.prototype[t].apply(this,arguments)},n=function(e){return s.prototype[t].apply(this,e)};return function(){var t,s=this._super,a=this._superApply;return this._super=e,this._superApply=n,t=i.apply(this,arguments),this._super=s,this._superApply=a,t}}())}),r.prototype=e.widget.extend(h,{widgetEventPrefix:o?h.widgetEventPrefix:i},n,{constructor:r,namespace:l,widgetName:i,widgetBaseClass:a,widgetFullName:a}),o?(e.each(o._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,r,i._proto)}),delete o._childConstructors):s._childConstructors.push(r),e.widget.bridge(i,r)},e.widget.extend=function(i){for(var n,a,o=s.call(arguments,1),r=0,h=o.length;h>r;r++)for(n in o[r])a=o[r][n],o[r].hasOwnProperty(n)&&a!==t&&(i[n]=e.isPlainObject(a)?e.isPlainObject(i[n])?e.widget.extend({},i[n],a):e.widget.extend({},a):a);return i},e.widget.bridge=function(i,n){var a=n.prototype.widgetFullName||i;e.fn[i]=function(o){var r="string"==typeof o,h=s.call(arguments,1),l=this;return o=!r&&h.length?e.widget.extend.apply(null,[o].concat(h)):o,r?this.each(function(){var s,n=e.data(this,a);return n?e.isFunction(n[o])&&"_"!==o.charAt(0)?(s=n[o].apply(n,h),s!==n&&s!==t?(l=s&&s.jquery?l.pushStack(s.get()):s,!1):t):e.error("no such method '"+o+"' for "+i+" widget instance"):e.error("cannot call methods on "+i+" prior to initialization; "+"attempted to call method '"+o+"'")}):this.each(function(){var t=e.data(this,a);t?t.option(o||{})._init():e.data(this,a,new n(o,this))}),l}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,s){s=e(s||this.defaultElement||this)[0],this.element=e(s),this.uuid=i++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),s!==this&&(e.data(s,this.widgetName,this),e.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===s&&this.destroy()}}),this.document=e(s.style?s.ownerDocument:s.document||s),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(i,s){var n,a,o,r=i;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof i)if(r={},n=i.split("."),i=n.shift(),n.length){for(a=r[i]=e.widget.extend({},this.options[i]),o=0;n.length-1>o;o++)a[n[o]]=a[n[o]]||{},a=a[n[o]];if(i=n.pop(),s===t)return a[i]===t?null:a[i];a[i]=s}else{if(s===t)return this.options[i]===t?null:this.options[i];r[i]=s}return this._setOptions(r),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(i,s,n){var a,o=this;"boolean"!=typeof i&&(n=s,s=i,i=!1),n?(s=a=e(s),this.bindings=this.bindings.add(s)):(n=s,s=this.element,a=this.widget()),e.each(n,function(n,r){function h(){return i||o.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof r?o[r]:r).apply(o,arguments):t}"string"!=typeof r&&(h.guid=r.guid=r.guid||h.guid||e.guid++);var l=n.match(/^(\w+)\s*(.*)$/),u=l[1]+o.eventNamespace,d=l[2];d?a.delegate(d,u,h):s.bind(u,h)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var o,r=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),o=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&e.effects&&(e.effects.effect[r]||e.uiBackCompat!==!1&&e.effects[r])?s[t](n):r!==t&&s[r]?s[r](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e){var t=!1;e(document).mouseup(function(){t=!1}),e.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):undefined}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!t){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var s=this,n=1===i.which,a="string"==typeof this.options.cancel&&i.target.nodeName?e(i.target).closest(this.options.cancel).length:!1;return n&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){s.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===e.data(i.target,this.widgetName+".preventClickEvent")&&e.removeData(i.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return s._mouseMove(e)},this._mouseUpDelegate=function(e){return s._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),i.preventDefault(),t=!0,!0)):!0}},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})})(jQuery);(function(e,t){function i(e,t,i){return[parseInt(e[0],10)*(c.test(e[0])?t/100:1),parseInt(e[1],10)*(c.test(e[1])?i/100:1)]}function s(t,i){return parseInt(e.css(t,i),10)||0}e.ui=e.ui||{};var n,a=Math.max,o=Math.abs,r=Math.round,h=/left|center|right/,l=/top|center|bottom/,u=/[\+\-]\d+%?/,d=/^\w+/,c=/%$/,p=e.fn.position;e.position={scrollbarWidth:function(){if(n!==t)return n;var i,s,a=e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=a.children()[0];return e("body").append(a),i=o.offsetWidth,a.css("overflow","scroll"),s=o.offsetWidth,i===s&&(s=a[0].clientWidth),a.remove(),n=i-s},getScrollInfo:function(t){var i=t.isWindow?"":t.element.css("overflow-x"),s=t.isWindow?"":t.element.css("overflow-y"),n="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,a="scroll"===s||"auto"===s&&t.height<t.element[0].scrollHeight;return{width:n?e.position.scrollbarWidth():0,height:a?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),s=e.isWindow(i[0]);return{element:i,isWindow:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:s?i.width():i.outerWidth(),height:s?i.height():i.outerHeight()}}},e.fn.position=function(t){if(!t||!t.of)return p.apply(this,arguments);t=e.extend({},t);var n,c,f,m,g,v=e(t.of),_=e.position.getWithinInfo(t.within),b=e.position.getScrollInfo(_),y=v[0],x=(t.collision||"flip").split(" "),w={};return 9===y.nodeType?(c=v.width(),f=v.height(),m={top:0,left:0}):e.isWindow(y)?(c=v.width(),f=v.height(),m={top:v.scrollTop(),left:v.scrollLeft()}):y.preventDefault?(t.at="left top",c=f=0,m={top:y.pageY,left:y.pageX}):(c=v.outerWidth(),f=v.outerHeight(),m=v.offset()),g=e.extend({},m),e.each(["my","at"],function(){var e,i,s=(t[this]||"").split(" ");1===s.length&&(s=h.test(s[0])?s.concat(["center"]):l.test(s[0])?["center"].concat(s):["center","center"]),s[0]=h.test(s[0])?s[0]:"center",s[1]=l.test(s[1])?s[1]:"center",e=u.exec(s[0]),i=u.exec(s[1]),w[this]=[e?e[0]:0,i?i[0]:0],t[this]=[d.exec(s[0])[0],d.exec(s[1])[0]]}),1===x.length&&(x[1]=x[0]),"right"===t.at[0]?g.left+=c:"center"===t.at[0]&&(g.left+=c/2),"bottom"===t.at[1]?g.top+=f:"center"===t.at[1]&&(g.top+=f/2),n=i(w.at,c,f),g.left+=n[0],g.top+=n[1],this.each(function(){var h,l,u=e(this),d=u.outerWidth(),p=u.outerHeight(),y=s(this,"marginLeft"),k=s(this,"marginTop"),D=d+y+s(this,"marginRight")+b.width,T=p+k+s(this,"marginBottom")+b.height,S=e.extend({},g),N=i(w.my,u.outerWidth(),u.outerHeight());"right"===t.my[0]?S.left-=d:"center"===t.my[0]&&(S.left-=d/2),"bottom"===t.my[1]?S.top-=p:"center"===t.my[1]&&(S.top-=p/2),S.left+=N[0],S.top+=N[1],e.support.offsetFractions||(S.left=r(S.left),S.top=r(S.top)),h={marginLeft:y,marginTop:k},e.each(["left","top"],function(i,s){e.ui.position[x[i]]&&e.ui.position[x[i]][s](S,{targetWidth:c,targetHeight:f,elemWidth:d,elemHeight:p,collisionPosition:h,collisionWidth:D,collisionHeight:T,offset:[n[0]+N[0],n[1]+N[1]],my:t.my,at:t.at,within:_,elem:u})}),e.fn.bgiframe&&u.bgiframe(),t.using&&(l=function(e){var i=m.left-S.left,s=i+c-d,n=m.top-S.top,r=n+f-p,h={target:{element:v,left:m.left,top:m.top,width:c,height:f},element:{element:u,left:S.left,top:S.top,width:d,height:p},horizontal:0>s?"left":i>0?"right":"center",vertical:0>r?"top":n>0?"bottom":"middle"};d>c&&c>o(i+s)&&(h.horizontal="center"),p>f&&f>o(n+r)&&(h.vertical="middle"),h.important=a(o(i),o(s))>a(o(n),o(r))?"horizontal":"vertical",t.using.call(this,e,h)}),u.offset(e.extend(S,{using:l}))})},e.ui.position={fit:{left:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollLeft:s.offset.left,o=s.width,r=e.left-t.collisionPosition.marginLeft,h=n-r,l=r+t.collisionWidth-o-n;t.collisionWidth>o?h>0&&0>=l?(i=e.left+h+t.collisionWidth-o-n,e.left+=h-i):e.left=l>0&&0>=h?n:h>l?n+o-t.collisionWidth:n:h>0?e.left+=h:l>0?e.left-=l:e.left=a(e.left-r,e.left)},top:function(e,t){var i,s=t.within,n=s.isWindow?s.scrollTop:s.offset.top,o=t.within.height,r=e.top-t.collisionPosition.marginTop,h=n-r,l=r+t.collisionHeight-o-n;t.collisionHeight>o?h>0&&0>=l?(i=e.top+h+t.collisionHeight-o-n,e.top+=h-i):e.top=l>0&&0>=h?n:h>l?n+o-t.collisionHeight:n:h>0?e.top+=h:l>0?e.top-=l:e.top=a(e.top-r,e.top)}},flip:{left:function(e,t){var i,s,n=t.within,a=n.offset.left+n.scrollLeft,r=n.width,h=n.isWindow?n.scrollLeft:n.offset.left,l=e.left-t.collisionPosition.marginLeft,u=l-h,d=l+t.collisionWidth-r-h,c="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+c+p+f+t.collisionWidth-r-a,(0>i||o(u)>i)&&(e.left+=c+p+f)):d>0&&(s=e.left-t.collisionPosition.marginLeft+c+p+f-h,(s>0||d>o(s))&&(e.left+=c+p+f))},top:function(e,t){var i,s,n=t.within,a=n.offset.top+n.scrollTop,r=n.height,h=n.isWindow?n.scrollTop:n.offset.top,l=e.top-t.collisionPosition.marginTop,u=l-h,d=l+t.collisionHeight-r-h,c="top"===t.my[1],p=c?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,m=-2*t.offset[1];0>u?(s=e.top+p+f+m+t.collisionHeight-r-a,e.top+p+f+m>u&&(0>s||o(u)>s)&&(e.top+=p+f+m)):d>0&&(i=e.top-t.collisionPosition.marginTop+p+f+m-h,e.top+p+f+m>d&&(i>0||d>o(i))&&(e.top+=p+f+m))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,i,s,n,a,o=document.getElementsByTagName("body")[0],r=document.createElement("div");t=document.createElement(o?"div":"body"),s={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},o&&e.extend(s,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in s)t.style[a]=s[a];t.appendChild(r),i=o||document.documentElement,i.insertBefore(t,i.firstChild),r.style.cssText="position: absolute; left: 10.7432222px;",n=e(r).offset().left,e.support.offsetFractions=n>10&&11>n,t.innerHTML="",i.removeChild(t)}(),e.uiBackCompat!==!1&&function(e){var i=e.fn.position;e.fn.position=function(s){if(!s||!s.offset)return i.call(this,s);var n=s.offset.split(" "),a=s.at.split(" ");return 1===n.length&&(n[1]=n[0]),/^\d/.test(n[0])&&(n[0]="+"+n[0]),/^\d/.test(n[1])&&(n[1]="+"+n[1]),1===a.length&&(/left|center|right/.test(a[0])?a[1]="center":(a[1]=a[0],a[0]="center")),i.call(this,e.extend(s,{at:a[0]+n[0]+" "+a[1]+n[1],offset:t}))}}(jQuery)})(jQuery);(function(e){e.widget("ui.draggable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){"original"!=this.options.helper||/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(t){var i=this.options;return this.helper||i.disabled||e(t.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(t),this.handle?(e(i.iframeFix===!0?"iframe":i.iframeFix).each(function(){e('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(e(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),i.containment&&this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_mouseDrag:function(t,i){if(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),!i){var s=this._uiHash();if(this._trigger("drag",t,s)===!1)return this._mouseUp({}),!1;this.position=s.position}return this.options.axis&&"y"==this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"==this.options.axis||(this.helper[0].style.top=this.position.top+"px"),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=!1;e.ui.ddmanager&&!this.options.dropBehaviour&&(i=e.ui.ddmanager.drop(this,t)),this.dropped&&(i=this.dropped,this.dropped=!1);for(var s=this.element[0],n=!1;s&&(s=s.parentNode);)s==document&&(n=!0);if(!n&&"original"===this.options.helper)return!1;if("invalid"==this.options.revert&&!i||"valid"==this.options.revert&&i||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,i)){var a=this;e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){a._trigger("stop",t)!==!1&&a._clear()})}else this._trigger("stop",t)!==!1&&this._clear();return!1},_mouseUp:function(t){return e("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){var i=this.options.handle&&e(this.options.handle,this.element).length?!1:!0;return e(this.options.handle,this.element).find("*").andSelf().each(function(){this==t.target&&(i=!0)}),i},_createHelper:function(t){var i=this.options,s=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t])):"clone"==i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"==i.appendTo?this.element[0].parentNode:i.appendTo),s[0]==this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"==this.cssPosition&&this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&"html"==this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"==this.cssPosition){var e=this.element.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t=this.options;if("parent"==t.containment&&(t.containment=this.helper[0].parentNode),("document"==t.containment||"window"==t.containment)&&(this.containment=["document"==t.containment?0:e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,"document"==t.containment?0:e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,("document"==t.containment?0:e(window).scrollLeft())+e("document"==t.containment?document:window).width()-this.helperProportions.width-this.margins.left,("document"==t.containment?0:e(window).scrollTop())+(e("document"==t.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(t.containment)||t.containment.constructor==Array)t.containment.constructor==Array&&(this.containment=t.containment);else{var i=e(t.containment),s=i[0];if(!s)return;i.offset();var n="hidden"!=e(s).css("overflow");this.containment=[(parseInt(e(s).css("borderLeftWidth"),10)||0)+(parseInt(e(s).css("paddingLeft"),10)||0),(parseInt(e(s).css("borderTopWidth"),10)||0)+(parseInt(e(s).css("paddingTop"),10)||0),(n?Math.max(s.scrollWidth,s.offsetWidth):s.offsetWidth)-(parseInt(e(s).css("borderLeftWidth"),10)||0)-(parseInt(e(s).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(n?Math.max(s.scrollHeight,s.offsetHeight):s.offsetHeight)-(parseInt(e(s).css("borderTopWidth"),10)||0)-(parseInt(e(s).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i}},_convertPositionTo:function(t,i){i||(i=this.position);var s="absolute"==t?1:-1,n=(this.options,"absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent),a=/(html|body)/i.test(n[0].tagName);return{top:i.top+this.offset.relative.top*s+this.offset.parent.top*s-("fixed"==this.cssPosition?-this.scrollParent.scrollTop():a?0:n.scrollTop())*s,left:i.left+this.offset.relative.left*s+this.offset.parent.left*s-("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():a?0:n.scrollLeft())*s}},_generatePosition:function(t){var i=this.options,s="absolute"!=this.cssPosition||this.scrollParent[0]!=document&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,n=/(html|body)/i.test(s[0].tagName),a=t.pageX,o=t.pageY;if(this.originalPosition){var r;if(this.containment){if(this.relative_container){var h=this.relative_container.offset();r=[this.containment[0]+h.left,this.containment[1]+h.top,this.containment[2]+h.left,this.containment[3]+h.top]}else r=this.containment;t.pageX-this.offset.click.left<r[0]&&(a=r[0]+this.offset.click.left),t.pageY-this.offset.click.top<r[1]&&(o=r[1]+this.offset.click.top),t.pageX-this.offset.click.left>r[2]&&(a=r[2]+this.offset.click.left),t.pageY-this.offset.click.top>r[3]&&(o=r[3]+this.offset.click.top)}if(i.grid){var l=i.grid[1]?this.originalPageY+Math.round((o-this.originalPageY)/i.grid[1])*i.grid[1]:this.originalPageY;o=r?l-this.offset.click.top<r[1]||l-this.offset.click.top>r[3]?l-this.offset.click.top<r[1]?l+i.grid[1]:l-i.grid[1]:l:l;var u=i.grid[0]?this.originalPageX+Math.round((a-this.originalPageX)/i.grid[0])*i.grid[0]:this.originalPageX;a=r?u-this.offset.click.left<r[0]||u-this.offset.click.left>r[2]?u-this.offset.click.left<r[0]?u+i.grid[0]:u-i.grid[0]:u:u}}return{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"==this.cssPosition?-this.scrollParent.scrollTop():n?0:s.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"==this.cssPosition?-this.scrollParent.scrollLeft():n?0:s.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]==this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(t,i,s){return s=s||this._uiHash(),e.ui.plugin.call(this,t,[i,s]),"drag"==t&&(this.positionAbs=this._convertPositionTo("absolute")),e.Widget.prototype._trigger.call(this,t,i,s)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i){var s=e(this).data("draggable"),n=s.options,a=e.extend({},i,{item:s.element});s.sortables=[],e(n.connectToSortable).each(function(){var i=e.data(this,"sortable");i&&!i.options.disabled&&(s.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger("activate",t,a))})},stop:function(t,i){var s=e(this).data("draggable"),n=e.extend({},i,{item:s.element});e.each(s.sortables,function(){this.instance.isOver?(this.instance.isOver=0,s.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(t),this.instance.options.helper=this.instance.options._helper,"original"==s.options.helper&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",t,n))})},drag:function(t,i){var s=e(this).data("draggable"),n=this;e.each(s.sortables,function(){var a=!1,o=this;this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,e.each(s.sortables,function(){return this.instance.positionAbs=s.positionAbs,this.instance.helperProportions=s.helperProportions,this.instance.offset.click=s.offset.click,this!=o&&this.instance._intersectsWith(this.instance.containerCache)&&e.ui.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=e(n).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},t.target=this.instance.currentItem[0],this.instance._mouseCapture(t,!0),this.instance._mouseStart(t,!0,!0),this.instance.offset.click.top=s.offset.click.top,this.instance.offset.click.left=s.offset.click.left,this.instance.offset.parent.left-=s.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=s.offset.parent.top-this.instance.offset.parent.top,s._trigger("toSortable",t),s.dropped=this.instance.element,s.currentItem=s.element,this.instance.fromOutside=s),this.instance.currentItem&&this.instance._mouseDrag(t)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",t,this.instance._uiHash(this.instance)),this.instance._mouseStop(t,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),s._trigger("fromSortable",t),s.dropped=!1)})}}),e.ui.plugin.add("draggable","cursor",{start:function(){var t=e("body"),i=e(this).data("draggable").options;t.css("cursor")&&(i._cursor=t.css("cursor")),t.css("cursor",i.cursor)},stop:function(){var t=e(this).data("draggable").options;t._cursor&&e("body").css("cursor",t._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("opacity")&&(n._opacity=s.css("opacity")),s.css("opacity",n.opacity)},stop:function(t,i){var s=e(this).data("draggable").options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(){var t=e(this).data("draggable");t.scrollParent[0]!=document&&"HTML"!=t.scrollParent[0].tagName&&(t.overflowOffset=t.scrollParent.offset())},drag:function(t){var i=e(this).data("draggable"),s=i.options,n=!1;i.scrollParent[0]!=document&&"HTML"!=i.scrollParent[0].tagName?(s.axis&&"x"==s.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-t.pageY<s.scrollSensitivity?i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop+s.scrollSpeed:t.pageY-i.overflowOffset.top<s.scrollSensitivity&&(i.scrollParent[0].scrollTop=n=i.scrollParent[0].scrollTop-s.scrollSpeed)),s.axis&&"y"==s.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-t.pageX<s.scrollSensitivity?i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft+s.scrollSpeed:t.pageX-i.overflowOffset.left<s.scrollSensitivity&&(i.scrollParent[0].scrollLeft=n=i.scrollParent[0].scrollLeft-s.scrollSpeed))):(s.axis&&"x"==s.axis||(t.pageY-e(document).scrollTop()<s.scrollSensitivity?n=e(document).scrollTop(e(document).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(document).scrollTop())<s.scrollSensitivity&&(n=e(document).scrollTop(e(document).scrollTop()+s.scrollSpeed))),s.axis&&"y"==s.axis||(t.pageX-e(document).scrollLeft()<s.scrollSensitivity?n=e(document).scrollLeft(e(document).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(document).scrollLeft())<s.scrollSensitivity&&(n=e(document).scrollLeft(e(document).scrollLeft()+s.scrollSpeed)))),n!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(i,t)}}),e.ui.plugin.add("draggable","snap",{start:function(){var t=e(this).data("draggable"),i=t.options;t.snapElements=[],e(i.snap.constructor!=String?i.snap.items||":data(draggable)":i.snap).each(function(){var i=e(this),s=i.offset();this!=t.element[0]&&t.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:s.top,left:s.left})})},drag:function(t,i){for(var s=e(this).data("draggable"),n=s.options,a=n.snapTolerance,o=i.offset.left,r=o+s.helperProportions.width,h=i.offset.top,l=h+s.helperProportions.height,u=s.snapElements.length-1;u>=0;u--){var d=s.snapElements[u].left,c=d+s.snapElements[u].width,p=s.snapElements[u].top,f=p+s.snapElements[u].height;if(o>d-a&&c+a>o&&h>p-a&&f+a>h||o>d-a&&c+a>o&&l>p-a&&f+a>l||r>d-a&&c+a>r&&h>p-a&&f+a>h||r>d-a&&c+a>r&&l>p-a&&f+a>l){if("inner"!=n.snapMode){var m=a>=Math.abs(p-l),g=a>=Math.abs(f-h),v=a>=Math.abs(d-r),_=a>=Math.abs(c-o);m&&(i.position.top=s._convertPositionTo("relative",{top:p-s.helperProportions.height,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d-s.helperProportions.width}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c}).left-s.margins.left)}var b=m||g||v||_;if("outer"!=n.snapMode){var m=a>=Math.abs(p-h),g=a>=Math.abs(f-l),v=a>=Math.abs(d-o),_=a>=Math.abs(c-r);m&&(i.position.top=s._convertPositionTo("relative",{top:p,left:0}).top-s.margins.top),g&&(i.position.top=s._convertPositionTo("relative",{top:f-s.helperProportions.height,left:0}).top-s.margins.top),v&&(i.position.left=s._convertPositionTo("relative",{top:0,left:d}).left-s.margins.left),_&&(i.position.left=s._convertPositionTo("relative",{top:0,left:c-s.helperProportions.width}).left-s.margins.left)}!s.snapElements[u].snapping&&(m||g||v||_||b)&&s.options.snap.snap&&s.options.snap.snap.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=m||g||v||_||b}else s.snapElements[u].snapping&&s.options.snap.release&&s.options.snap.release.call(s.element,t,e.extend(s._uiHash(),{snapItem:s.snapElements[u].item})),s.snapElements[u].snapping=!1}}}),e.ui.plugin.add("draggable","stack",{start:function(){var t=e(this).data("draggable").options,i=e.makeArray(e(t.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});if(i.length){var s=parseInt(i[0].style.zIndex)||0;e(i).each(function(e){this.style.zIndex=s+e}),this[0].style.zIndex=s+i.length}}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i){var s=e(i.helper),n=e(this).data("draggable").options;s.css("zIndex")&&(n._zIndex=s.css("zIndex")),s.css("zIndex",n.zIndex)},stop:function(t,i){var s=e(this).data("draggable").options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}})})(jQuery);(function(e){e.widget("ui.resizable",e.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var t=this,i=this.options;if(this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(e('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=i.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this.handles.constructor==String){"all"==this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw");var s=this.handles.split(",");this.handles={};for(var n=0;s.length>n;n++){var a=e.trim(s[n]),o="ui-resizable-"+a,r=e('<div class="ui-resizable-handle '+o+'"></div>');r.css({zIndex:i.zIndex}),"se"==a&&r.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[a]=".ui-resizable-"+a,this.element.append(r)}}this._renderAxis=function(t){t=t||this.element;for(var i in this.handles){if(this.handles[i].constructor==String&&(this.handles[i]=e(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var s=e(this.handles[i],this.element),n=0;n=/sw|ne|nw|se|n|s/.test(i)?s.outerHeight():s.outerWidth();var a=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join("");t.css(a,n),this._proportionallyResize()}e(this.handles[i]).length}},this._renderAxis(this.element),this._handles=e(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!t.resizing){if(this.className)var e=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);t.axis=e&&e[1]?e[1]:"se"}}),i.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){i.disabled||(e(this).removeClass("ui-resizable-autohide"),t._handles.show())}).mouseleave(function(){i.disabled||t.resizing||(e(this).addClass("ui-resizable-autohide"),t._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){t(this.element);var i=this.element;this.originalElement.css({position:i.css("position"),width:i.outerWidth(),height:i.outerHeight(),top:i.css("top"),left:i.css("left")}).insertAfter(i),i.remove()}return this.originalElement.css("resize",this.originalResizeStyle),t(this.originalElement),this},_mouseCapture:function(t){var i=!1;for(var s in this.handles)e(this.handles[s])[0]==t.target&&(i=!0);return!this.options.disabled&&i},_mouseStart:function(i){var s=this.options,n=this.element.position(),a=this.element;this.resizing=!0,this.documentScroll={top:e(document).scrollTop(),left:e(document).scrollLeft()},(a.is(".ui-draggable")||/absolute/.test(a.css("position")))&&a.css({position:"absolute",top:n.top,left:n.left}),this._renderProxy();var o=t(this.helper.css("left")),r=t(this.helper.css("top"));s.containment&&(o+=e(s.containment).scrollLeft()||0,r+=e(s.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:o,top:r},this.size=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.originalPosition={left:o,top:r},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio="number"==typeof s.aspectRatio?s.aspectRatio:this.originalSize.width/this.originalSize.height||1;var h=e(".ui-resizable-"+this.axis).css("cursor");return e("body").css("cursor","auto"==h?this.axis+"-resize":h),a.addClass("ui-resizable-resizing"),this._propagate("start",i),!0},_mouseDrag:function(e){var t=this.helper,i=(this.options,this.originalMousePosition),s=this.axis,n=e.pageX-i.left||0,a=e.pageY-i.top||0,o=this._change[s];if(!o)return!1;var r=o.apply(this,[e,n,a]);return this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(r=this._updateRatio(r,e)),r=this._respectSize(r,e),this._propagate("resize",e),t.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(r),this._trigger("resize",e,this.ui()),!1},_mouseStop:function(t){this.resizing=!1;var i=this.options,s=this;if(this._helper){var n=this._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:s.sizeDiff.height,r=a?0:s.sizeDiff.width,h={width:s.helper.width()-r,height:s.helper.height()-o},l=parseInt(s.element.css("left"),10)+(s.position.left-s.originalPosition.left)||null,u=parseInt(s.element.css("top"),10)+(s.position.top-s.originalPosition.top)||null;i.animate||this.element.css(e.extend(h,{top:u,left:l})),s.helper.height(s.size.height),s.helper.width(s.size.width),this._helper&&!i.animate&&this._proportionallyResize()}return e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(e){var t,s,n,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,s=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),n>o.minHeight&&(o.minHeight=n),o.maxWidth>s&&(o.maxWidth=s),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(e){this.options,this.offset=this.helper.offset(),i(e.left)&&(this.position.left=e.left),i(e.top)&&(this.position.top=e.top),i(e.height)&&(this.size.height=e.height),i(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=(this.options,this.position),s=this.size,n=this.axis;return i(e.height)?e.width=e.height*this.aspectRatio:i(e.width)&&(e.height=e.width/this.aspectRatio),"sw"==n&&(e.left=t.left+(s.width-e.width),e.top=null),"nw"==n&&(e.top=t.top+(s.height-e.height),e.left=t.left+(s.width-e.width)),e},_respectSize:function(e,t){var s=(this.helper,this._vBoundaries),n=(this._aspectRatio||t.shiftKey,this.axis),a=i(e.width)&&s.maxWidth&&s.maxWidth<e.width,o=i(e.height)&&s.maxHeight&&s.maxHeight<e.height,r=i(e.width)&&s.minWidth&&s.minWidth>e.width,h=i(e.height)&&s.minHeight&&s.minHeight>e.height;r&&(e.width=s.minWidth),h&&(e.height=s.minHeight),a&&(e.width=s.maxWidth),o&&(e.height=s.maxHeight);var l=this.originalPosition.left+this.originalSize.width,u=this.position.top+this.size.height,d=/sw|nw|w/.test(n),c=/nw|ne|n/.test(n);r&&d&&(e.left=l-s.minWidth),a&&d&&(e.left=l-s.maxWidth),h&&c&&(e.top=u-s.minHeight),o&&c&&(e.top=u-s.maxHeight);var p=!e.width&&!e.height;return p&&!e.left&&e.top?e.top=null:p&&!e.top&&e.left&&(e.left=null),e},_proportionallyResize:function(){if(this.options,this._proportionallyResizeElements.length)for(var t=this.helper||this.element,i=0;this._proportionallyResizeElements.length>i;i++){var s=this._proportionallyResizeElements[i];if(!this.borderDif){var n=[s.css("borderTopWidth"),s.css("borderRightWidth"),s.css("borderBottomWidth"),s.css("borderLeftWidth")],a=[s.css("paddingTop"),s.css("paddingRight"),s.css("paddingBottom"),s.css("paddingLeft")];this.borderDif=e.map(n,function(e,t){var i=parseInt(e,10)||0,s=parseInt(a[t],10)||0;return i+s})}s.css({height:t.height()-this.borderDif[0]-this.borderDif[2]||0,width:t.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var t=this.element,i=this.options;if(this.elementOffset=t.offset(),this._helper){this.helper=this.helper||e('<div style="overflow:hidden;"></div>');var s=e.ui.ie6?1:0,n=e.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+n,height:this.element.outerHeight()+n,position:"absolute",left:this.elementOffset.left-s+"px",top:this.elementOffset.top-s+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=(this.options,this.originalSize),s=this.originalPosition;return{left:s.left+t,width:i.width-t}},n:function(e,t,i){var s=(this.options,this.originalSize),n=this.originalPosition;return{top:n.top+i,height:s.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},sw:function(t,i,s){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,s]))},ne:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,s]))},nw:function(t,i,s){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,s]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!=t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).data("resizable"),i=t.options,s=function(t){e(t).each(function(){var t=e(this);t.data("resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})};"object"!=typeof i.alsoResize||i.alsoResize.parentNode?s(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],s(i.alsoResize)):e.each(i.alsoResize,function(e){s(e)})},resize:function(t,i){var s=e(this).data("resizable"),n=s.options,a=s.originalSize,o=s.originalPosition,r={height:s.size.height-a.height||0,width:s.size.width-a.width||0,top:s.position.top-o.top||0,left:s.position.left-o.left||0},h=function(t,s){e(t).each(function(){var t=e(this),n=e(this).data("resizable-alsoresize"),a={},o=s&&s.length?s:t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var i=(n[t]||0)+(r[t]||0);i&&i>=0&&(a[t]=i||null)}),t.css(a)})};"object"!=typeof n.alsoResize||n.alsoResize.nodeType?h(n.alsoResize):e.each(n.alsoResize,function(e,t){h(e,t)})},stop:function(){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).data("resizable"),s=i.options,n=i._proportionallyResizeElements,a=n.length&&/textarea/i.test(n[0].nodeName),o=a&&e.ui.hasScroll(n[0],"left")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,h={width:i.size.width-r,height:i.size.height-o},l=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(h,u&&l?{top:u,left:l}:{}),{duration:s.animateDuration,easing:s.animateEasing,step:function(){var s={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};n&&n.length&&e(n[0]).css({width:s.width,height:s.height}),i._updateCache(s),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var i=e(this).data("resizable"),s=i.options,n=i.element,a=s.containment,o=a instanceof e?a.get(0):/parent/.test(a)?n.parent().get(0):a;if(o)if(i.containerElement=e(o),/document/.test(a)||a==document)i.containerOffset={left:0,top:0},i.containerPosition={left:0,top:0},i.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight};else{var r=e(o),h=[];e(["Top","Right","Left","Bottom"]).each(function(e,i){h[e]=t(r.css("padding"+i))}),i.containerOffset=r.offset(),i.containerPosition=r.position(),i.containerSize={height:r.innerHeight()-h[3],width:r.innerWidth()-h[1]};var l=i.containerOffset,u=i.containerSize.height,d=i.containerSize.width,c=e.ui.hasScroll(o,"left")?o.scrollWidth:d,p=e.ui.hasScroll(o)?o.scrollHeight:u;i.parentData={element:o,left:l.left,top:l.top,width:c,height:p}}},resize:function(t){var i=e(this).data("resizable"),s=i.options,n=(i.containerSize,i.containerOffset),a=(i.size,i.position),o=i._aspectRatio||t.shiftKey,r={top:0,left:0},h=i.containerElement;h[0]!=document&&/static/.test(h.css("position"))&&(r=n),a.left<(i._helper?n.left:0)&&(i.size.width=i.size.width+(i._helper?i.position.left-n.left:i.position.left-r.left),o&&(i.size.height=i.size.width/i.aspectRatio),i.position.left=s.helper?n.left:0),a.top<(i._helper?n.top:0)&&(i.size.height=i.size.height+(i._helper?i.position.top-n.top:i.position.top),o&&(i.size.width=i.size.height*i.aspectRatio),i.position.top=i._helper?n.top:0),i.offset.left=i.parentData.left+i.position.left,i.offset.top=i.parentData.top+i.position.top;var l=Math.abs((i._helper?i.offset.left-r.left:i.offset.left-r.left)+i.sizeDiff.width),u=Math.abs((i._helper?i.offset.top-r.top:i.offset.top-n.top)+i.sizeDiff.height),d=i.containerElement.get(0)==i.element.parent().get(0),c=/relative|absolute/.test(i.containerElement.css("position"));d&&c&&(l-=i.parentData.left),l+i.size.width>=i.parentData.width&&(i.size.width=i.parentData.width-l,o&&(i.size.height=i.size.width/i.aspectRatio)),u+i.size.height>=i.parentData.height&&(i.size.height=i.parentData.height-u,o&&(i.size.width=i.size.height*i.aspectRatio))},stop:function(){var t=e(this).data("resizable"),i=t.options,s=(t.position,t.containerOffset),n=t.containerPosition,a=t.containerElement,o=e(t.helper),r=o.offset(),h=o.outerWidth()-t.sizeDiff.width,l=o.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l}),t._helper&&!i.animate&&/static/.test(a.css("position"))&&e(this).css({left:r.left-n.left-s.left,width:h,height:l})}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).data("resizable"),i=t.options,s=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:s.height,width:s.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.ghost.css({position:"relative",height:t.size.height,width:t.size.width})},stop:function(){var t=e(this).data("resizable");t.options,t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(t){var i=e(this).data("resizable"),s=i.options,n=i.size,a=i.originalSize,o=i.originalPosition,r=i.axis;s._aspectRatio||t.shiftKey,s.grid="number"==typeof s.grid?[s.grid,s.grid]:s.grid;var h=Math.round((n.width-a.width)/(s.grid[0]||1))*(s.grid[0]||1),l=Math.round((n.height-a.height)/(s.grid[1]||1))*(s.grid[1]||1);/^(se|s|e)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l):/^(ne)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l):/^(sw)$/.test(r)?(i.size.width=a.width+h,i.size.height=a.height+l,i.position.left=o.left-h):(i.size.width=a.width+h,i.size.height=a.height+l,i.position.top=o.top-l,i.position.left=o.left-h)}});var t=function(e){return parseInt(e,10)||0},i=function(e){return!isNaN(parseInt(e,10))}})(jQuery);(function(e){var t=0,i={},s={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth="hide",s.height=s.paddingTop=s.paddingBottom=s.borderTopWidth=s.borderBottomWidth="show",e.widget("ui.accordion",{version:"1.9.2",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},_create:function(){var i=this.accordionId="ui-accordion-"+(this.element.attr("id")||++t),s=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset"),this.headers=this.element.find(s.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"),this._hoverable(this.headers),this._focusable(this.headers),this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide(),s.collapsible||s.active!==!1&&null!=s.active||(s.active=0),0>s.active&&(s.active+=this.headers.length),this.active=this._findActive(s.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top"),this.active.next().addClass("ui-accordion-content-active").show(),this._createIcons(),this.refresh(),this.element.attr("role","tablist"),this.headers.attr("role","tab").each(function(t){var s=e(this),n=s.attr("id"),a=s.next(),o=a.attr("id");n||(n=i+"-header-"+t,s.attr("id",n)),o||(o=i+"-panel-"+t,a.attr("id",o)),s.attr("aria-controls",o),a.attr("aria-labelledby",n)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false",tabIndex:-1}).next().attr({"aria-expanded":"false","aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true",tabIndex:0}).next().attr({"aria-expanded":"true","aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._on(this.headers,{keydown:"_keydown"}),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._setupEvents(s.event)},_getCreateEventData:function(){return{header:this.active,content:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),this._destroyIcons(),e=this.headers.next().css("display","").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute("id")}),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?(this._activate(t),undefined):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||this.options.active!==!1||this._activate(0),"icons"===e&&(this._destroyIcons(),t&&this._createIcons()),"disabled"===e&&this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t),undefined)},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,s=this.headers.length,n=this.headers.index(t.target),a=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(n+1)%s];break;case i.LEFT:case i.UP:a=this.headers[(n-1+s)%s];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[s-1]}a&&(e(t.target).attr("tabIndex",-1),e(a).attr("tabIndex",0),a.focus(),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t,i,s=this.options.heightStyle,n=this.element.parent();"fill"===s?(e.support.minHeight||(i=n.css("overflow"),n.css("overflow","hidden")),t=n.height(),this.element.siblings(":visible").each(function(){var i=e(this),s=i.css("position");"absolute"!==s&&"fixed"!==s&&(t-=i.outerHeight(!0))}),i&&n.css("overflow",i),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===s&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={};t&&(e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._on(this.headers,i))},_eventHandler:function(t){var i=this.options,s=this.active,n=e(t.currentTarget),a=n[0]===s[0],o=a&&i.collapsible,r=o?e():n.next(),h=s.next(),l={oldHeader:s,oldPanel:h,newHeader:o?e():n,newPanel:r};t.preventDefault(),a&&!i.collapsible||this._trigger("beforeActivate",t,l)===!1||(i.active=o?!1:this.headers.index(n),this.active=a?e():n,this._toggle(l),s.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),a||(n.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),n.next().addClass("ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,s=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=s,this.options.animate?this._animate(i,s,t):(s.hide(),i.show(),this._toggleComplete(t)),s.attr({"aria-expanded":"false","aria-hidden":"true"}),s.prev().attr("aria-selected","false"),i.length&&s.length?s.prev().attr("tabIndex",-1):i.length&&this.headers.filter(function(){return 0===e(this).attr("tabIndex")}).attr("tabIndex",-1),i.attr({"aria-expanded":"true","aria-hidden":"false"}).prev().attr({"aria-selected":"true",tabIndex:0})},_animate:function(e,t,n){var a,o,r,h=this,l=0,u=e.length&&(!t.length||e.index()<t.index()),d=this.options.animate||{},c=u&&d.down||d,p=function(){h._toggleComplete(n)};return"number"==typeof c&&(r=c),"string"==typeof c&&(o=c),o=o||c.easing||d.easing,r=r||c.duration||d.duration,t.length?e.length?(a=e.show().outerHeight(),t.animate(i,{duration:r,easing:o,step:function(e,t){t.now=Math.round(e)}}),e.hide().animate(s,{duration:r,easing:o,complete:p,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?l+=i.now:"content"!==h.options.heightStyle&&(i.now=Math.round(a-t.outerHeight()-l),l=0)}}),undefined):t.animate(i,r,o,p):e.animate(s,r,o,p)},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.uiBackCompat!==!1&&(function(e,t){e.extend(t.options,{navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}});var i=t._create;t._create=function(){if(this.options.navigation){var t=this,s=this.element.find(this.options.header),n=s.next(),a=s.add(n).find("a").filter(this.options.navigationFilter)[0];a&&s.add(n).each(function(i){return e.contains(this,a)?(t.options.active=Math.floor(i/2),!1):undefined})}i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{heightStyle:null,autoHeight:!0,clearStyle:!1,fillSpace:!1});var i=t._create,s=t._setOption;e.extend(t,{_create:function(){this.options.heightStyle=this.options.heightStyle||this._mergeHeightStyle(),i.call(this)},_setOption:function(e){("autoHeight"===e||"clearStyle"===e||"fillSpace"===e)&&(this.options.heightStyle=this._mergeHeightStyle()),s.apply(this,arguments)},_mergeHeightStyle:function(){var e=this.options;return e.fillSpace?"fill":e.clearStyle?"content":e.autoHeight?"auto":undefined}})}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options.icons,{activeHeader:null,headerSelected:"ui-icon-triangle-1-s"});var i=t._createIcons;t._createIcons=function(){this.options.icons&&(this.options.icons.activeHeader=this.options.icons.activeHeader||this.options.icons.headerSelected),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){t.activate=t._activate;var i=t._findActive;t._findActive=function(e){return-1===e&&(e=!1),e&&"number"!=typeof e&&(e=this.headers.index(this.headers.filter(e)),-1===e&&(e=!1)),i.call(this,e)}}(jQuery,jQuery.ui.accordion.prototype),jQuery.ui.accordion.prototype.resize=jQuery.ui.accordion.prototype.refresh,function(e,t){e.extend(t.options,{change:null,changestart:null});var i=t._trigger;t._trigger=function(e,t,s){var n=i.apply(this,arguments);return n?("beforeActivate"===e?n=i.call(this,"changestart",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel}):"activate"===e&&(n=i.call(this,"change",t,{oldHeader:s.oldHeader,oldContent:s.oldPanel,newHeader:s.newHeader,newContent:s.newPanel})),n):!1}}(jQuery,jQuery.ui.accordion.prototype),function(e,t){e.extend(t.options,{animate:null,animated:"slide"});var i=t._create;t._create=function(){var e=this.options;null===e.animate&&(e.animate=e.animated?"slide"===e.animated?300:"bounceslide"===e.animated?{duration:200,down:{easing:"easeOutBounce",duration:1e3}}:e.animated:!1),i.call(this)}}(jQuery,jQuery.ui.accordion.prototype))})(jQuery);(function(e){var t=0;e.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var t,i,s;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(n){if(this.element.prop("readOnly"))return t=!0,s=!0,i=!0,undefined;t=!1,s=!1,i=!1;var a=e.ui.keyCode;switch(n.keyCode){case a.PAGE_UP:t=!0,this._move("previousPage",n);break;case a.PAGE_DOWN:t=!0,this._move("nextPage",n);break;case a.UP:t=!0,this._keyEvent("previous",n);break;case a.DOWN:t=!0,this._keyEvent("next",n);break;case a.ENTER:case a.NUMPAD_ENTER:this.menu.active&&(t=!0,n.preventDefault(),this.menu.select(n));break;case a.TAB:this.menu.active&&this.menu.select(n);break;case a.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(n),n.preventDefault());break;default:i=!0,this._searchTimeout(n)}},keypress:function(s){if(t)return t=!1,s.preventDefault(),undefined;if(!i){var n=e.ui.keyCode;switch(s.keyCode){case n.PAGE_UP:this._move("previousPage",s);break;case n.PAGE_DOWN:this._move("nextPage",s);break;case n.UP:this._keyEvent("previous",s);break;case n.DOWN:this._keyEvent("next",s)}}},input:function(e){return s?(s=!1,e.preventDefault(),undefined):(this._searchTimeout(e),undefined)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?(delete this.cancelBlur,undefined):(clearTimeout(this.searching),this.close(e),this._change(e),undefined)}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:e(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(s){s.target===t.element[0]||s.target===i||e.contains(i,s.target)||t.close()})})},menufocus:function(t,i){if(this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type)))return this.menu.blur(),this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)}),undefined;var s=i.item.data("ui-autocomplete-item")||i.item.data("item.autocomplete");!1!==this._trigger("focus",t,{item:s})?t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value):this.liveRegion.text(s.value)},menuselect:function(e,t){var i=t.item.data("ui-autocomplete-item")||t.item.data("item.autocomplete"),s=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=s,this._delay(function(){this.previous=s,this.selectedItem=i})),!1!==this._trigger("select",e,{item:i})&&this._value(i.value),this.term=this._value(),this.close(e),this.selectedItem=i}}),this.liveRegion=e("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),e.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this.document.find(t||"body")[0]),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var t,i,s=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,s){s(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,n){s.xhr&&s.xhr.abort(),s.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){n(e)},error:function(){n([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger("search",t)!==!1?this._search(e):undefined},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var e=this,i=++t;return function(s){i===t&&e.__response(s),e.pending--,e.pending||e.element.removeClass("ui-autocomplete-loading")}},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({label:t.label||t.value,value:t.value||t.label},t)})},_suggest:function(t){var i=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(i,t),this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var s=this;e.each(i,function(e,i){s._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").append(e("<a>").text(i.label)).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this._value(this.term),this.menu.blur(),undefined):(this.menu[e](t),undefined):(this.search(null,t),undefined)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(e,t),t.preventDefault())}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var s=RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return s.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var t;this._superApply(arguments),this.options.disabled||this.cancelSearch||(t=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.text(t))}})})(jQuery);(function(e){var t,i,s,n,a="ui-button ui-widget ui-state-default ui-corner-all",o="ui-state-hover ui-state-active ",r="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",h=function(){var t=e(this).find(":ui-button");setTimeout(function(){t.button("refresh")},1)},l=function(t){var i=t.name,s=t.form,n=e([]);return i&&(n=s?e(s).find("[name='"+i+"']"):e("[name='"+i+"']",t.ownerDocument).filter(function(){return!this.form})),n};e.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,h),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var o=this,r=this.options,u="checkbox"===this.type||"radio"===this.type,d=u?"":"ui-state-active",c="ui-state-focus";null===r.label&&(r.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(a).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){r.disabled||this===t&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){r.disabled||e(this).removeClass(d)}).bind("click"+this.eventNamespace,function(e){r.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){o.buttonElement.addClass(c)}).bind("blur"+this.eventNamespace,function(){o.buttonElement.removeClass(c)}),u&&(this.element.bind("change"+this.eventNamespace,function(){n||o.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(e){r.disabled||(n=!1,i=e.pageX,s=e.pageY)}).bind("mouseup"+this.eventNamespace,function(e){r.disabled||(i!==e.pageX||s!==e.pageY)&&(n=!0)})),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return r.disabled||n?!1:(e(this).toggleClass("ui-state-active"),o.buttonElement.attr("aria-pressed",o.element[0].checked),undefined)}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(r.disabled||n)return!1;e(this).addClass("ui-state-active"),o.buttonElement.attr("aria-pressed","true");var t=o.element[0];l(t).not(t).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return r.disabled?!1:(e(this).addClass("ui-state-active"),t=this,o.document.one("mouseup",function(){t=null}),undefined)}).bind("mouseup"+this.eventNamespace,function(){return r.disabled?!1:(e(this).removeClass("ui-state-active"),undefined)}).bind("keydown"+this.eventNamespace,function(t){return r.disabled?!1:((t.keyCode===e.ui.keyCode.SPACE||t.keyCode===e.ui.keyCode.ENTER)&&e(this).addClass("ui-state-active"),undefined)}).bind("keyup"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",r.disabled),this._resetButton()},_determineButtonType:function(){var e,t,i;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button","checkbox"===this.type||"radio"===this.type?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(a+" "+o+" "+r).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){return this._super(e,t),"disabled"===e?(t?this.element.prop("disabled",!0):this.element.prop("disabled",!1),undefined):(this._resetButton(),undefined)},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),"radio"===this.type?l(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return this.options.label&&this.element.val(this.options.label),undefined;var t=this.buttonElement.removeClass(r),i=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),s=this.options.icons,n=s.primary&&s.secondary,a=[];s.primary||s.secondary?(this.options.text&&a.push("ui-button-text-icon"+(n?"s":s.primary?"-primary":"-secondary")),s.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+s.primary+"'></span>"),s.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+s.secondary+"'></span>"),this.options.text||(a.push(n?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(i)))):a.push("ui-button-text-only"),t.addClass(a.join(" "))}}),e.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){"disabled"===e&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t="rtl"===this.element.css("direction");this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(e){var t="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(t,"mouseout",function(){$(this).removeClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).removeClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).removeClass("ui-datepicker-next-hover")}).delegate(t,"mouseover",function(){$.datepicker._isDisabledDatepicker(instActive.inline?e.parent()[0]:instActive.input[0])||($(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),$(this).addClass("ui-state-hover"),-1!=this.className.indexOf("ui-datepicker-prev")&&$(this).addClass("ui-datepicker-prev-hover"),-1!=this.className.indexOf("ui-datepicker-next")&&$(this).addClass("ui-datepicker-next-hover"))})}function extendRemove(e,t){$.extend(e,t);for(var i in t)(null==t[i]||t[i]==undefined)&&(e[i]=t[i]);return e}$.extend($.ui,{datepicker:{version:"1.9.2"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline="div"==nodeName||"span"==nodeName;target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),"input"==nodeName?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(e,t){var i=e[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:i,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:t,dpDiv:t?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(e,t){var i=$(e);t.append=$([]),t.trigger=$([]),i.hasClass(this.markerClassName)||(this._attachments(i,t),i.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),this._autoSize(t),$.data(e,PROP_NAME,t),t.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,t){var i=this._get(t,"appendText"),s=this._get(t,"isRTL");t.append&&t.append.remove(),i&&(t.append=$('<span class="'+this._appendClass+'">'+i+"</span>"),e[s?"before":"after"](t.append)),e.unbind("focus",this._showDatepicker),t.trigger&&t.trigger.remove();var n=this._get(t,"showOn");if(("focus"==n||"both"==n)&&e.focus(this._showDatepicker),"button"==n||"both"==n){var a=this._get(t,"buttonText"),o=this._get(t,"buttonImage");t.trigger=$(this._get(t,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:o,alt:a,title:a}):$('<button type="button"></button>').addClass(this._triggerClass).html(""==o?a:$("<img/>").attr({src:o,alt:a,title:a}))),e[s?"before":"after"](t.trigger),t.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==e[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=e[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(e[0])):$.datepicker._showDatepicker(e[0]),!1})}},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t=new Date(2009,11,20),i=this._get(e,"dateFormat");if(i.match(/[DM]/)){var s=function(e){for(var t=0,i=0,s=0;e.length>s;s++)e[s].length>t&&(t=e[s].length,i=s);return i};t.setMonth(s(this._get(e,i.match(/MM/)?"monthNames":"monthNamesShort"))),t.setDate(s(this._get(e,i.match(/DD/)?"dayNames":"dayNamesShort"))+20-t.getDay())}e.input.attr("size",this._formatDate(e,t).length)}},_inlineDatepicker:function(e,t){var i=$(e);i.hasClass(this.markerClassName)||(i.addClass(this.markerClassName).append(t.dpDiv).bind("setData.datepicker",function(e,i,s){t.settings[i]=s}).bind("getData.datepicker",function(e,i){return this._get(t,i)}),$.data(e,PROP_NAME,t),this._setDate(t,this._getDefaultDate(t),!0),this._updateDatepicker(t),this._updateAlternate(t),t.settings.disabled&&this._disableDatepicker(e),t.dpDiv.css("display","block"))},_dialogDatepicker:function(e,t,i,s,n){var a=this._dialogInst;if(!a){this.uuid+=1;var o="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+o+'" style="position: absolute; top: -100px; width: 0px;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),a=this._dialogInst=this._newInst(this._dialogInput,!1),a.settings={},$.data(this._dialogInput[0],PROP_NAME,a)}if(extendRemove(a.settings,s||{}),t=t&&t.constructor==Date?this._formatDate(a,t):t,this._dialogInput.val(t),this._pos=n?n.length?n:[n.pageX,n.pageY]:null,!this._pos){var r=document.documentElement.clientWidth,h=document.documentElement.clientHeight,l=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[r/2-100+l,h/2-150+u]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),a.settings.onSelect=i,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,a),this},_destroyDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();$.removeData(e,PROP_NAME),"input"==s?(i.append.remove(),i.trigger.remove(),t.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"==s||"span"==s)&&t.removeClass(this.markerClassName).empty()}},_enableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!1,i.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t})}},_disableDatepicker:function(e){var t=$(e),i=$.data(e,PROP_NAME);if(t.hasClass(this.markerClassName)){var s=e.nodeName.toLowerCase();if("input"==s)e.disabled=!0,i.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if("div"==s||"span"==s){var n=t.children("."+this._inlineClass);n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)}this._disabledInputs=$.map(this._disabledInputs,function(t){return t==e?null:t}),this._disabledInputs[this._disabledInputs.length]=e}},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;this._disabledInputs.length>t;t++)if(this._disabledInputs[t]==e)return!0;return!1},_getInst:function(e){try{return $.data(e,PROP_NAME)}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,t,i){var s=this._getInst(e);if(2==arguments.length&&"string"==typeof t)return"defaults"==t?$.extend({},$.datepicker._defaults):s?"all"==t?$.extend({},s.settings):this._get(s,t):null;var n=t||{};if("string"==typeof t&&(n={},n[t]=i),s){this._curInst==s&&this._hideDatepicker();var a=this._getDateDatepicker(e,!0),o=this._getMinMaxDate(s,"min"),r=this._getMinMaxDate(s,"max");extendRemove(s.settings,n),null!==o&&n.dateFormat!==undefined&&n.minDate===undefined&&(s.settings.minDate=this._formatDate(s,o)),null!==r&&n.dateFormat!==undefined&&n.maxDate===undefined&&(s.settings.maxDate=this._formatDate(s,r)),this._attachments($(e),s),this._autoSize(s),this._setDate(s,a),this._updateAlternate(s),this._updateDatepicker(s)}},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(e){var t=$.datepicker._getInst(e.target),i=!0,s=t.dpDiv.is(".ui-datepicker-rtl");if(t._keyEvent=!0,$.datepicker._datepickerShowing)switch(e.keyCode){case 9:$.datepicker._hideDatepicker(),i=!1;break;case 13:var n=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",t.dpDiv);n[0]&&$.datepicker._selectDay(e.target,t.selectedMonth,t.selectedYear,n[0]);var a=$.datepicker._get(t,"onSelect");if(a){var o=$.datepicker._formatDate(t);a.apply(t.input?t.input[0]:null,[o,t])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&$.datepicker._clearDate(e.target),i=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&$.datepicker._gotoToday(e.target),i=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?1:-1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?-$.datepicker._get(t,"stepBigMonths"):-$.datepicker._get(t,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,-7,"D"),i=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,s?-1:1,"D"),i=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&$.datepicker._adjustDate(e.target,e.ctrlKey?+$.datepicker._get(t,"stepBigMonths"):+$.datepicker._get(t,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&$.datepicker._adjustDate(e.target,7,"D"),i=e.ctrlKey||e.metaKey;break;default:i=!1}else 36==e.keyCode&&e.ctrlKey?$.datepicker._showDatepicker(this):i=!1;i&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var t=$.datepicker._getInst(e.target);if($.datepicker._get(t,"constrainInput")){var i=$.datepicker._possibleChars($.datepicker._get(t,"dateFormat")),s=String.fromCharCode(e.charCode==undefined?e.keyCode:e.charCode);return e.ctrlKey||e.metaKey||" ">s||!i||i.indexOf(s)>-1}},_doKeyUp:function(e){var t=$.datepicker._getInst(e.target);if(t.input.val()!=t.lastVal)try{var i=$.datepicker.parseDate($.datepicker._get(t,"dateFormat"),t.input?t.input.val():null,$.datepicker._getFormatConfig(t));i&&($.datepicker._setDateFromField(t),$.datepicker._updateAlternate(t),$.datepicker._updateDatepicker(t))}catch(s){$.datepicker.log(s)}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!=e.nodeName.toLowerCase()&&(e=$("input",e.parentNode)[0]),!$.datepicker._isDisabledDatepicker(e)&&$.datepicker._lastInput!=e){var t=$.datepicker._getInst(e);$.datepicker._curInst&&$.datepicker._curInst!=t&&($.datepicker._curInst.dpDiv.stop(!0,!0),t&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var i=$.datepicker._get(t,"beforeShow"),s=i?i.apply(e,[e,t]):{};if(s!==!1){extendRemove(t.settings,s),t.lastVal=null,$.datepicker._lastInput=e,$.datepicker._setDateFromField(t),$.datepicker._inDialog&&(e.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(e),$.datepicker._pos[1]+=e.offsetHeight);var n=!1;$(e).parents().each(function(){return n|="fixed"==$(this).css("position"),!n});var a={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};if($.datepicker._pos=null,t.dpDiv.empty(),t.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(t),a=$.datepicker._checkOffset(t,a,n),t.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":n?"fixed":"absolute",display:"none",left:a.left+"px",top:a.top+"px"}),!t.inline){var o=$.datepicker._get(t,"showAnim"),r=$.datepicker._get(t,"duration"),h=function(){var e=t.dpDiv.find("iframe.ui-datepicker-cover");if(e.length){var i=$.datepicker._getBorders(t.dpDiv);e.css({left:-i[0],top:-i[1],width:t.dpDiv.outerWidth(),height:t.dpDiv.outerHeight()})}};t.dpDiv.zIndex($(e).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&($.effects.effect[o]||$.effects[o])?t.dpDiv.show(o,$.datepicker._get(t,"showOptions"),r,h):t.dpDiv[o||"show"](o?r:null,h),o&&r||h(),t.input.is(":visible")&&!t.input.is(":disabled")&&t.input.focus(),$.datepicker._curInst=t}}}},_updateDatepicker:function(e){this.maxRows=4;var t=$.datepicker._getBorders(e.dpDiv);instActive=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i=e.dpDiv.find("iframe.ui-datepicker-cover");i.length&&i.css({left:-t[0],top:-t[1],width:e.dpDiv.outerWidth(),height:e.dpDiv.outerHeight()}),e.dpDiv.find("."+this._dayOverClass+" a").mouseover();var s=this._getNumberOfMonths(e),n=s[1],a=17;if(e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),n>1&&e.dpDiv.addClass("ui-datepicker-multi-"+n).css("width",a*n+"em"),e.dpDiv[(1!=s[0]||1!=s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e==$.datepicker._curInst&&$.datepicker._datepickerShowing&&e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&e.input[0]!=document.activeElement&&e.input.focus(),e.yearshtml){var o=e.yearshtml;setTimeout(function(){o===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),o=e.yearshtml=null},0)}},_getBorders:function(e){var t=function(e){return{thin:1,medium:2,thick:3}[e]||e};return[parseFloat(t(e.css("border-left-width"))),parseFloat(t(e.css("border-top-width")))]},_checkOffset:function(e,t,i){var s=e.dpDiv.outerWidth(),n=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,o=e.input?e.input.outerHeight():0,r=document.documentElement.clientWidth+(i?0:$(document).scrollLeft()),h=document.documentElement.clientHeight+(i?0:$(document).scrollTop());return t.left-=this._get(e,"isRTL")?s-a:0,t.left-=i&&t.left==e.input.offset().left?$(document).scrollLeft():0,t.top-=i&&t.top==e.input.offset().top+o?$(document).scrollTop():0,t.left-=Math.min(t.left,t.left+s>r&&r>s?Math.abs(t.left+s-r):0),t.top-=Math.min(t.top,t.top+n>h&&h>n?Math.abs(n+o):0),t},_findPos:function(e){for(var t=this._getInst(e),i=this._get(t,"isRTL");e&&("hidden"==e.type||1!=e.nodeType||$.expr.filters.hidden(e));)e=e[i?"previousSibling":"nextSibling"];var s=$(e).offset();return[s.left,s.top]},_hideDatepicker:function(e){var t=this._curInst;if(t&&(!e||t==$.data(e,PROP_NAME))&&this._datepickerShowing){var i=this._get(t,"showAnim"),s=this._get(t,"duration"),n=function(){$.datepicker._tidyDialog(t)};$.effects&&($.effects.effect[i]||$.effects[i])?t.dpDiv.hide(i,$.datepicker._get(t,"showOptions"),s,n):t.dpDiv["slideDown"==i?"slideUp":"fadeIn"==i?"fadeOut":"hide"](i?s:null,n),i||n(),this._datepickerShowing=!1;var a=this._get(t,"onClose");a&&a.apply(t.input?t.input[0]:null,[t.input?t.input.val():"",t]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if($.datepicker._curInst){var t=$(e.target),i=$.datepicker._getInst(t[0]);(t[0].id!=$.datepicker._mainDivId&&0==t.parents("#"+$.datepicker._mainDivId).length&&!t.hasClass($.datepicker.markerClassName)&&!t.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||t.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=i)&&$.datepicker._hideDatepicker()}},_adjustDate:function(e,t,i){var s=$(e),n=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(n,t+("M"==i?this._get(n,"showCurrentAtPos"):0),i),this._updateDatepicker(n))},_gotoToday:function(e){var t=$(e),i=this._getInst(t[0]);if(this._get(i,"gotoCurrent")&&i.currentDay)i.selectedDay=i.currentDay,i.drawMonth=i.selectedMonth=i.currentMonth,i.drawYear=i.selectedYear=i.currentYear;else{var s=new Date;i.selectedDay=s.getDate(),i.drawMonth=i.selectedMonth=s.getMonth(),i.drawYear=i.selectedYear=s.getFullYear()}this._notifyChange(i),this._adjustDate(t)},_selectMonthYear:function(e,t,i){var s=$(e),n=this._getInst(s[0]);n["selected"+("M"==i?"Month":"Year")]=n["draw"+("M"==i?"Month":"Year")]=parseInt(t.options[t.selectedIndex].value,10),this._notifyChange(n),this._adjustDate(s)},_selectDay:function(e,t,i,s){var n=$(e);if(!$(s).hasClass(this._unselectableClass)&&!this._isDisabledDatepicker(n[0])){var a=this._getInst(n[0]);a.selectedDay=a.currentDay=$("a",s).html(),a.selectedMonth=a.currentMonth=t,a.selectedYear=a.currentYear=i,this._selectDate(e,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear))}},_clearDate:function(e){var t=$(e);this._getInst(t[0]),this._selectDate(t,"")},_selectDate:function(e,t){var i=$(e),s=this._getInst(i[0]);t=null!=t?t:this._formatDate(s),s.input&&s.input.val(t),this._updateAlternate(s);var n=this._get(s,"onSelect");n?n.apply(s.input?s.input[0]:null,[t,s]):s.input&&s.input.trigger("change"),s.inline?this._updateDatepicker(s):(this._hideDatepicker(),this._lastInput=s.input[0],"object"!=typeof s.input[0]&&s.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var t=this._get(e,"altField");if(t){var i=this._get(e,"altFormat")||this._get(e,"dateFormat"),s=this._getDate(e),n=this.formatDate(i,s,this._getFormatConfig(e));$(t).each(function(){$(this).val(n)})}},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t=new Date(e.getTime());t.setDate(t.getDate()+4-(t.getDay()||7));var i=t.getTime();return t.setMonth(0),t.setDate(1),Math.floor(Math.round((i-t)/864e5)/7)+1},parseDate:function(e,t,i){if(null==e||null==t)throw"Invalid arguments";if(t="object"==typeof t?""+t:t+"",""==t)return null;var s=(i?i.shortYearCutoff:null)||this._defaults.shortYearCutoff;s="string"!=typeof s?s:(new Date).getFullYear()%100+parseInt(s,10);for(var n=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,h=-1,l=-1,u=-1,d=-1,c=!1,p=function(t){var i=e.length>_+1&&e.charAt(_+1)==t;return i&&_++,i},f=function(e){var i=p(e),s="@"==e?14:"!"==e?20:"y"==e&&i?4:"o"==e?3:2,n=RegExp("^\\d{1,"+s+"}"),a=t.substring(v).match(n);if(!a)throw"Missing number at position "+v;return v+=a[0].length,parseInt(a[0],10)},m=function(e,i,s){var n=$.map(p(e)?s:i,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)}),a=-1;if($.each(n,function(e,i){var s=i[1];return t.substr(v,s.length).toLowerCase()==s.toLowerCase()?(a=i[0],v+=s.length,!1):undefined}),-1!=a)return a+1;throw"Unknown name at position "+v},g=function(){if(t.charAt(v)!=e.charAt(_))throw"Unexpected literal at position "+v;v++},v=0,_=0;e.length>_;_++)if(c)"'"!=e.charAt(_)||p("'")?g():c=!1;else switch(e.charAt(_)){case"d":u=f("d");break;case"D":m("D",n,a);break;case"o":d=f("o");break;case"m":l=f("m");break;case"M":l=m("M",o,r);break;case"y":h=f("y");break;case"@":var y=new Date(f("@"));h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"!":var y=new Date((f("!")-this._ticksTo1970)/1e4);h=y.getFullYear(),l=y.getMonth()+1,u=y.getDate();break;case"'":p("'")?g():c=!0;break;default:g()}if(t.length>v){var b=t.substr(v);if(!/^\s+/.test(b))throw"Extra/unparsed characters found in date: "+b}if(-1==h?h=(new Date).getFullYear():100>h&&(h+=(new Date).getFullYear()-(new Date).getFullYear()%100+(s>=h?0:-100)),d>-1)for(l=1,u=d;;){var x=this._getDaysInMonth(h,l-1);if(x>=u)break;l++,u-=x}var y=this._daylightSavingAdjust(new Date(h,l-1,u));if(y.getFullYear()!=h||y.getMonth()+1!=l||y.getDate()!=u)throw"Invalid date";return y},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:1e7*60*60*24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(e,t,i){if(!t)return"";var s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,n=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,o=(i?i.monthNames:null)||this._defaults.monthNames,r=function(t){var i=e.length>c+1&&e.charAt(c+1)==t;return i&&c++,i},h=function(e,t,i){var s=""+t;if(r(e))for(;i>s.length;)s="0"+s;return s},l=function(e,t,i,s){return r(e)?s[t]:i[t]},u="",d=!1;if(t)for(var c=0;e.length>c;c++)if(d)"'"!=e.charAt(c)||r("'")?u+=e.charAt(c):d=!1;else switch(e.charAt(c)){case"d":u+=h("d",t.getDate(),2);break;case"D":u+=l("D",t.getDay(),s,n);break;case"o":u+=h("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=h("m",t.getMonth()+1,2);break;case"M":u+=l("M",t.getMonth(),a,o);break;case"y":u+=r("y")?t.getFullYear():(10>t.getYear()%100?"0":"")+t.getYear()%100;break;case"@":u+=t.getTime();break;case"!":u+=1e4*t.getTime()+this._ticksTo1970;break;case"'":r("'")?u+="'":d=!0;break;default:u+=e.charAt(c)}return u},_possibleChars:function(e){for(var t="",i=!1,s=function(t){var i=e.length>n+1&&e.charAt(n+1)==t;return i&&n++,i},n=0;e.length>n;n++)if(i)"'"!=e.charAt(n)||s("'")?t+=e.charAt(n):i=!1;else switch(e.charAt(n)){case"d":case"m":case"y":case"@":t+="0123456789";break;case"D":case"M":return null;case"'":s("'")?t+="'":i=!0;break;default:t+=e.charAt(n)}return t},_get:function(e,t){return e.settings[t]!==undefined?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!=e.lastVal){var i,s,n=this._get(e,"dateFormat"),a=e.lastVal=e.input?e.input.val():null;i=s=this._getDefaultDate(e);var o=this._getFormatConfig(e);try{i=this.parseDate(n,a,o)||s}catch(r){this.log(r),a=t?"":a}e.selectedDay=i.getDate(),e.drawMonth=e.selectedMonth=i.getMonth(),e.drawYear=e.selectedYear=i.getFullYear(),e.currentDay=a?i.getDate():0,e.currentMonth=a?i.getMonth():0,e.currentYear=a?i.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(e,t,i){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},n=function(t){try{return $.datepicker.parseDate($.datepicker._get(e,"dateFormat"),t,$.datepicker._getFormatConfig(e))}catch(i){}for(var s=(t.toLowerCase().match(/^c/)?$.datepicker._getDate(e):null)||new Date,n=s.getFullYear(),a=s.getMonth(),o=s.getDate(),r=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=r.exec(t);h;){switch(h[2]||"d"){case"d":case"D":o+=parseInt(h[1],10);break;case"w":case"W":o+=7*parseInt(h[1],10);break;case"m":case"M":a+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a));break;case"y":case"Y":n+=parseInt(h[1],10),o=Math.min(o,$.datepicker._getDaysInMonth(n,a))}h=r.exec(t)}return new Date(n,a,o)},a=null==t||""===t?i:"string"==typeof t?n(t):"number"==typeof t?isNaN(t)?i:s(t):new Date(t.getTime());return a=a&&"Invalid Date"==""+a?i:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var s=!t,n=e.selectedMonth,a=e.selectedYear,o=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=o.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=o.getMonth(),e.drawYear=e.selectedYear=e.currentYear=o.getFullYear(),n==e.selectedMonth&&a==e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(s?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""==e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(e){var t=this._get(e,"stepMonths"),i="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,-t,"M")},next:function(){window["DP_jQuery_"+dpuuid].datepicker._adjustDate(i,+t,"M")},hide:function(){window["DP_jQuery_"+dpuuid].datepicker._hideDatepicker()},today:function(){window["DP_jQuery_"+dpuuid].datepicker._gotoToday(i)},selectDay:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectDay(i,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"M"),!1},selectYear:function(){return window["DP_jQuery_"+dpuuid].datepicker._selectMonthYear(i,this,"Y"),!1}};$(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t=new Date;t=this._daylightSavingAdjust(new Date(t.getFullYear(),t.getMonth(),t.getDate()));var i=this._get(e,"isRTL"),s=this._get(e,"showButtonPanel"),n=this._get(e,"hideIfNoPrevNext"),a=this._get(e,"navigationAsDateFormat"),o=this._getNumberOfMonths(e),r=this._get(e,"showCurrentAtPos"),h=this._get(e,"stepMonths"),l=1!=o[0]||1!=o[1],u=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),d=this._getMinMaxDate(e,"min"),c=this._getMinMaxDate(e,"max"),p=e.drawMonth-r,f=e.drawYear;if(0>p&&(p+=12,f--),c){var m=this._daylightSavingAdjust(new Date(c.getFullYear(),c.getMonth()-o[0]*o[1]+1,c.getDate()));for(m=d&&d>m?d:m;this._daylightSavingAdjust(new Date(f,p,1))>m;)p--,0>p&&(p=11,f--)}e.drawMonth=p,e.drawYear=f;var g=this._get(e,"prevText");g=a?this.formatDate(g,this._daylightSavingAdjust(new Date(f,p-h,1)),this._getFormatConfig(e)):g;var v=this._canAdjustMonth(e,-1,f,p)?'<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>":n?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+g+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"e":"w")+'">'+g+"</span></a>",_=this._get(e,"nextText");_=a?this.formatDate(_,this._daylightSavingAdjust(new Date(f,p+h,1)),this._getFormatConfig(e)):_;var y=this._canAdjustMonth(e,1,f,p)?'<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>":n?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+_+'"><span class="ui-icon ui-icon-circle-triangle-'+(i?"w":"e")+'">'+_+"</span></a>",b=this._get(e,"currentText"),x=this._get(e,"gotoCurrent")&&e.currentDay?u:t;b=a?this.formatDate(b,x,this._getFormatConfig(e)):b;var w=e.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">'+this._get(e,"closeText")+"</button>",k=s?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(i?w:"")+(this._isInRange(e,x)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">'+b+"</button>":"")+(i?"":w)+"</div>":"",D=parseInt(this._get(e,"firstDay"),10);D=isNaN(D)?0:D;var T=this._get(e,"showWeek"),S=this._get(e,"dayNames");this._get(e,"dayNamesShort");var M=this._get(e,"dayNamesMin"),N=this._get(e,"monthNames"),C=this._get(e,"monthNamesShort"),P=this._get(e,"beforeShowDay"),A=this._get(e,"showOtherMonths"),I=this._get(e,"selectOtherMonths");this._get(e,"calculateWeek")||this.iso8601Week;for(var H=this._getDefaultDate(e),z="",F=0;o[0]>F;F++){var E="";this.maxRows=4;for(var O=0;o[1]>O;O++){var W=this._daylightSavingAdjust(new Date(f,p,e.selectedDay)),j=" ui-corner-all",L="";if(l){if(L+='<div class="ui-datepicker-group',o[1]>1)switch(O){case 0:L+=" ui-datepicker-group-first",j=" ui-corner-"+(i?"right":"left");break;case o[1]-1:L+=" ui-datepicker-group-last",j=" ui-corner-"+(i?"left":"right");break;default:L+=" ui-datepicker-group-middle",j=""}L+='">'}L+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+j+'">'+(/all|left/.test(j)&&0==F?i?y:v:"")+(/all|right/.test(j)&&0==F?i?v:y:"")+this._generateMonthYearHeader(e,p,f,d,c,F>0||O>0,N,C)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";for(var R=T?'<th class="ui-datepicker-week-col">'+this._get(e,"weekHeader")+"</th>":"",Y=0;7>Y;Y++){var B=(Y+D)%7;R+="<th"+((Y+D+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+S[B]+'">'+M[B]+"</span></th>"}L+=R+"</tr></thead><tbody>";var J=this._getDaysInMonth(f,p);f==e.selectedYear&&p==e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,J));var K=(this._getFirstDayOfMonth(f,p)-D+7)%7,V=Math.ceil((K+J)/7),U=l?this.maxRows>V?this.maxRows:V:V;this.maxRows=U;for(var q=this._daylightSavingAdjust(new Date(f,p,1-K)),Q=0;U>Q;Q++){L+="<tr>";for(var G=T?'<td class="ui-datepicker-week-col">'+this._get(e,"calculateWeek")(q)+"</td>":"",Y=0;7>Y;Y++){var X=P?P.apply(e.input?e.input[0]:null,[q]):[!0,""],Z=q.getMonth()!=p,et=Z&&!I||!X[0]||d&&d>q||c&&q>c;G+='<td class="'+((Y+D+6)%7>=5?" ui-datepicker-week-end":"")+(Z?" ui-datepicker-other-month":"")+(q.getTime()==W.getTime()&&p==e.selectedMonth&&e._keyEvent||H.getTime()==q.getTime()&&H.getTime()==W.getTime()?" "+this._dayOverClass:"")+(et?" "+this._unselectableClass+" ui-state-disabled":"")+(Z&&!A?"":" "+X[1]+(q.getTime()==u.getTime()?" "+this._currentClass:"")+(q.getTime()==t.getTime()?" ui-datepicker-today":""))+'"'+(Z&&!A||!X[2]?"":' title="'+X[2]+'"')+(et?"":' data-handler="selectDay" data-event="click" data-month="'+q.getMonth()+'" data-year="'+q.getFullYear()+'"')+">"+(Z&&!A?"&#xa0;":et?'<span class="ui-state-default">'+q.getDate()+"</span>":'<a class="ui-state-default'+(q.getTime()==t.getTime()?" ui-state-highlight":"")+(q.getTime()==u.getTime()?" ui-state-active":"")+(Z?" ui-priority-secondary":"")+'" href="#">'+q.getDate()+"</a>")+"</td>",q.setDate(q.getDate()+1),q=this._daylightSavingAdjust(q)
	}L+=G+"</tr>"}p++,p>11&&(p=0,f++),L+="</tbody></table>"+(l?"</div>"+(o[0]>0&&O==o[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),E+=L}z+=E}return z+=k+($.ui.ie6&&!e.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),e._keyEvent=!1,z},_generateMonthYearHeader:function(e,t,i,s,n,a,o,r){var h=this._get(e,"changeMonth"),l=this._get(e,"changeYear"),u=this._get(e,"showMonthAfterYear"),d='<div class="ui-datepicker-title">',c="";if(a||!h)c+='<span class="ui-datepicker-month">'+o[t]+"</span>";else{var p=s&&s.getFullYear()==i,f=n&&n.getFullYear()==i;c+='<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';for(var m=0;12>m;m++)(!p||m>=s.getMonth())&&(!f||n.getMonth()>=m)&&(c+='<option value="'+m+'"'+(m==t?' selected="selected"':"")+">"+r[m]+"</option>");c+="</select>"}if(u||(d+=c+(!a&&h&&l?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",a||!l)d+='<span class="ui-datepicker-year">'+i+"</span>";else{var g=this._get(e,"yearRange").split(":"),v=(new Date).getFullYear(),_=function(e){var t=e.match(/c[+-].*/)?i+parseInt(e.substring(1),10):e.match(/[+-].*/)?v+parseInt(e,10):parseInt(e,10);return isNaN(t)?v:t},y=_(g[0]),b=Math.max(y,_(g[1]||""));for(y=s?Math.max(y,s.getFullYear()):y,b=n?Math.min(b,n.getFullYear()):b,e.yearshtml+='<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';b>=y;y++)e.yearshtml+='<option value="'+y+'"'+(y==i?' selected="selected"':"")+">"+y+"</option>";e.yearshtml+="</select>",d+=e.yearshtml,e.yearshtml=null}return d+=this._get(e,"yearSuffix"),u&&(d+=(!a&&h&&l?"":"&#xa0;")+c),d+="</div>"},_adjustInstDate:function(e,t,i){var s=e.drawYear+("Y"==i?t:0),n=e.drawMonth+("M"==i?t:0),a=Math.min(e.selectedDay,this._getDaysInMonth(s,n))+("D"==i?t:0),o=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(s,n,a)));e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),("M"==i||"Y"==i)&&this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max"),n=i&&i>t?i:t;return n=s&&n>s?s:n},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,s){var n=this._getNumberOfMonths(e),a=this._daylightSavingAdjust(new Date(i,s+(0>t?t:n[0]*n[1]),1));return 0>t&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(e,a)},_isInRange:function(e,t){var i=this._getMinMaxDate(e,"min"),s=this._getMinMaxDate(e,"max");return(!i||t.getTime()>=i.getTime())&&(!s||t.getTime()<=s.getTime())},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,s){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var n=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(s,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),n,this._getFormatConfig(e))}}),$.fn.datepicker=function(e){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv),$.datepicker.initialized=!0);var t=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!=e&&"getDate"!=e&&"widget"!=e?"option"==e&&2==arguments.length&&"string"==typeof arguments[1]?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t)):this.each(function(){"string"==typeof e?$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this].concat(t)):$.datepicker._attachDatepicker(this,e)}):$.datepicker["_"+e+"Datepicker"].apply($.datepicker,[this[0]].concat(t))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.9.2",window["DP_jQuery_"+dpuuid]=$})(jQuery);(function(e,t){var i="ui-dialog ui-widget ui-widget-content ui-corner-all ",s={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},n={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};e.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),"string"!=typeof this.originalTitle&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var s,n,a,o,r,h=this,l=this.options,u=l.title||"&#160;";s=(this.uiDialog=e("<div>")).addClass(i+l.dialogClass).css({display:"none",outline:0,zIndex:l.zIndex}).attr("tabIndex",-1).keydown(function(t){l.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(h.close(t),t.preventDefault())}).mousedown(function(e){h.moveToTop(!1,e)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(s),n=(this.uiDialogTitlebar=e("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){s.focus()}).prependTo(s),a=e("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(e){e.preventDefault(),h.close(e)}).appendTo(n),(this.uiDialogTitlebarCloseText=e("<span>")).addClass("ui-icon ui-icon-closethick").text(l.closeText).appendTo(a),o=e("<span>").uniqueId().addClass("ui-dialog-title").html(u).prependTo(n),r=(this.uiDialogButtonPane=e("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=e("<div>")).addClass("ui-dialog-buttonset").appendTo(r),s.attr({role:"dialog","aria-labelledby":o.attr("id")}),n.find("*").add(n).disableSelection(),this._hoverable(a),this._focusable(a),l.draggable&&e.fn.draggable&&this._makeDraggable(),l.resizable&&e.fn.resizable&&this._makeResizable(),this._createButtons(l.buttons),this._isOpen=!1,e.fn.bgiframe&&s.bgiframe(),this._on(s,{keydown:function(i){if(l.modal&&i.keyCode===e.ui.keyCode.TAB){var n=e(":tabbable",s),a=n.filter(":first"),o=n.filter(":last");return i.target!==o[0]||i.shiftKey?i.target===a[0]&&i.shiftKey?(o.focus(1),!1):t:(a.focus(1),!1)}}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var e,t=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(t){var i,s,n=this;if(this._isOpen&&!1!==this._trigger("beforeClose",t))return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)}):(this.uiDialog.hide(),this._trigger("close",t)),e.ui.dialog.overlay.resize(),this.options.modal&&(i=0,e(".ui-dialog").each(function(){this!==n.uiDialog[0]&&(s=e(this).css("z-index"),isNaN(s)||(i=Math.max(i,s)))}),e.ui.dialog.maxZ=i),this},isOpen:function(){return this._isOpen},moveToTop:function(t,i){var s,n=this.options;return n.modal&&!t||!n.stack&&!n.modal?this._trigger("focus",i):(n.zIndex>e.ui.dialog.maxZ&&(e.ui.dialog.maxZ=n.zIndex),this.overlay&&(e.ui.dialog.maxZ+=1,e.ui.dialog.overlay.maxZ=e.ui.dialog.maxZ,this.overlay.$el.css("z-index",e.ui.dialog.overlay.maxZ)),s={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},e.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",e.ui.dialog.maxZ),this.element.attr(s),this._trigger("focus",i),this)},open:function(){if(!this._isOpen){var t,i=this.options,s=this.uiDialog;return this._size(),this._position(i.position),s.show(i.show),this.overlay=i.modal?new e.ui.dialog.overlay(this):null,this.moveToTop(!0),t=this.element.find(":tabbable"),t.length||(t=this.uiDialogButtonPane.find(":tabbable"),t.length||(t=s)),t.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this}},_createButtons:function(t){var i=this,s=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),"object"==typeof t&&null!==t&&e.each(t,function(){return!(s=!0)}),s?(e.each(t,function(t,s){var n,a;s=e.isFunction(s)?{click:s,text:t}:s,s=e.extend({type:"button"},s),a=s.click,s.click=function(){a.apply(i.element[0],arguments)},n=e("<button></button>",s).appendTo(i.uiButtonSet),e.fn.button&&n.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,s=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(s,n){e(this).addClass("ui-dialog-dragging"),i._trigger("dragStart",s,t(n))},drag:function(e,s){i._trigger("drag",e,t(s))},stop:function(n,a){s.position=[a.position.left-i.document.scrollLeft(),a.position.top-i.document.scrollTop()],e(this).removeClass("ui-dialog-dragging"),i._trigger("dragStop",n,t(a)),e.ui.dialog.overlay.resize()}})},_makeResizable:function(i){function s(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}i=i===t?this.options.resizable:i;var n=this,a=this.options,o=this.uiDialog.css("position"),r="string"==typeof i?i:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:a.maxWidth,maxHeight:a.maxHeight,minWidth:a.minWidth,minHeight:this._minHeight(),handles:r,start:function(t,i){e(this).addClass("ui-dialog-resizing"),n._trigger("resizeStart",t,s(i))},resize:function(e,t){n._trigger("resize",e,s(t))},stop:function(t,i){e(this).removeClass("ui-dialog-resizing"),a.height=e(this).height(),a.width=e(this).width(),n._trigger("resizeStop",t,s(i)),e.ui.dialog.overlay.resize()}}).css("position",o).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(t){var i,s=[],n=[0,0];t?(("string"==typeof t||"object"==typeof t&&"0"in t)&&(s=t.split?t.split(" "):[t[0],t[1]],1===s.length&&(s[1]=s[0]),e.each(["left","top"],function(e,t){+s[e]===s[e]&&(n[e]=s[e],s[e]=t)}),t={my:s[0]+(0>n[0]?n[0]:"+"+n[0])+" "+s[1]+(0>n[1]?n[1]:"+"+n[1]),at:s.join(" ")}),t=e.extend({},e.ui.dialog.prototype.options.position,t)):t=e.ui.dialog.prototype.options.position,i=this.uiDialog.is(":visible"),i||this.uiDialog.show(),this.uiDialog.position(t),i||this.uiDialog.hide()},_setOptions:function(t){var i=this,a={},o=!1;e.each(t,function(e,t){i._setOption(e,t),e in s&&(o=!0),e in n&&(a[e]=t)}),o&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",a)},_setOption:function(t,s){var n,a,o=this.uiDialog;switch(t){case"buttons":this._createButtons(s);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+s);break;case"dialogClass":o.removeClass(this.options.dialogClass).addClass(i+s);break;case"disabled":s?o.addClass("ui-dialog-disabled"):o.removeClass("ui-dialog-disabled");break;case"draggable":n=o.is(":data(draggable)"),n&&!s&&o.draggable("destroy"),!n&&s&&this._makeDraggable();break;case"position":this._position(s);break;case"resizable":a=o.is(":data(resizable)"),a&&!s&&o.resizable("destroy"),a&&"string"==typeof s&&o.resizable("option","handles",s),a||s===!1||this._makeResizable(s);break;case"title":e(".ui-dialog-title",this.uiDialogTitlebar).html(""+(s||"&#160;"))}this._super(t,s)},_size:function(){var t,i,s,n=this.options,a=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),i=Math.max(0,n.minHeight-t),"auto"===n.height?e.support.minHeight?this.element.css({minHeight:i,height:"auto"}):(this.uiDialog.show(),s=this.element.css("height","auto").height(),a||this.uiDialog.hide(),this.element.height(Math.max(s,i))):this.element.height(Math.max(n.height-t,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),e.extend(e.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(e){var t=e.attr("id");return t||(this.uuid+=1,t=this.uuid),"ui-dialog-title-"+t},overlay:function(t){this.$el=e.ui.dialog.overlay.create(t)}}),e.extend(e.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:e.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(e){return e+".dialog-overlay"}).join(" "),create:function(i){0===this.instances.length&&(setTimeout(function(){e.ui.dialog.overlay.instances.length&&e(document).bind(e.ui.dialog.overlay.events,function(i){return e(i.target).zIndex()<e.ui.dialog.overlay.maxZ?!1:t})},1),e(window).bind("resize.dialog-overlay",e.ui.dialog.overlay.resize));var s=this.oldInstances.pop()||e("<div>").addClass("ui-widget-overlay");return e(document).bind("keydown.dialog-overlay",function(t){var n=e.ui.dialog.overlay.instances;0!==n.length&&n[n.length-1]===s&&i.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE&&(i.close(t),t.preventDefault())}),s.appendTo(document.body).css({width:this.width(),height:this.height()}),e.fn.bgiframe&&s.bgiframe(),this.instances.push(s),s},destroy:function(t){var i=e.inArray(t,this.instances),s=0;-1!==i&&this.oldInstances.push(this.instances.splice(i,1)[0]),0===this.instances.length&&e([document,window]).unbind(".dialog-overlay"),t.height(0).width(0).remove(),e.each(this.instances,function(){s=Math.max(s,this.css("z-index"))}),this.maxZ=s},height:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),i>t?e(window).height()+"px":t+"px"):e(document).height()+"px"},width:function(){var t,i;return e.ui.ie?(t=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),i=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),i>t?e(window).width()+"px":t+"px"):e(document).width()+"px"},resize:function(){var t=e([]);e.each(e.ui.dialog.overlay.instances,function(){t=t.add(this)}),t.css({width:0,height:0}).css({width:e.ui.dialog.overlay.width(),height:e.ui.dialog.overlay.height()})}}),e.extend(e.ui.dialog.overlay.prototype,{destroy:function(){e.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(e){var t=!1;e.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,e.proxy(function(e){this.options.disabled&&e.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(e){e.preventDefault()},"click .ui-state-disabled > a":function(e){e.preventDefault()},"click .ui-menu-item:has(a)":function(i){var s=e(i.target).closest(".ui-menu-item");!t&&s.not(".ui-state-disabled").length&&(t=!0,this.select(i),s.has(".ui-menu").length?this.expand(i):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){var i=e(t.currentTarget);i.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(t,i)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.children(".ui-menu-item").eq(0);t||this.focus(e,i)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(i){e(i.target).closest(".ui-menu").length||this.collapseAll(i),t=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){function i(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var s,n,a,o,r,h=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:h=!1,n=this.previousFilter||"",a=String.fromCharCode(t.keyCode),o=!1,clearTimeout(this.filterTimer),a===n?o=!0:a=n+a,r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())}),s=o&&-1!==s.index(this.active.next())?this.active.nextAll(".ui-menu-item"):s,s.length||(a=String.fromCharCode(t.keyCode),r=RegExp("^"+i(a),"i"),s=this.activeMenu.children(".ui-menu-item").filter(function(){return r.test(e(this).children("a").text())})),s.length?(this.focus(t,s),s.length>1?(this.previousFilter=a,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}h&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(e):this.select(e))},refresh:function(){var t,i=this.options.icons.submenu,s=this.element.find(this.options.menus);s.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),s=t.prev("a"),n=e("<span>").addClass("ui-menu-icon ui-icon "+i).data("ui-menu-submenu-carat",!0);s.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",s.attr("id"))}),t=s.add(this.element),t.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),t.children(":not(.ui-menu-item)").each(function(){var t=e(this);/[^\-—–\s]/.test(t.text())||t.addClass("ui-widget-content ui-menu-divider")}),t.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(e,t){var i,s;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),s=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",s.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=t.children(".ui-menu"),i.length&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,s,n,a,o,r;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,s=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,n=t.offset().top-this.activeMenu.offset().top-i-s,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=t.height(),0>n?this.activeMenu.scrollTop(a+n):n+r>o&&this.activeMenu.scrollTop(a+n-o+r))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active}))},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(e)},this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay(function(){var s=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));s.length||(s=this.element),this._close(s),this.blur(t),this.activeMenu=s},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var s;this.active&&(s="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),s&&s.length&&this.active||(s=this.activeMenu.children(".ui-menu-item")[t]()),this.focus(i,s)},nextPage:function(t){var i,s,n;return this.active?(this.isLastItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=e(this),0>i.offset().top-s-n}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())),undefined):(this.next(t),undefined)},previousPage:function(t){var i,s,n;return this.active?(this.isFirstItem()||(this._hasScroll()?(s=this.active.offset().top,n=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-s+n>0}),this.focus(t,i)):this.focus(t,this.activeMenu.children(".ui-menu-item").first())),undefined):(this.next(t),undefined)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)}})})(jQuery);

/***/ },
/* 6 */
/***/ function(module, exports) {

	/*
	 * jQuery BBQ: Back Button & Query Library - v1.2.1 - 2/17/2010
	 * http://benalman.com/projects/jquery-bbq-plugin/
	 * 
	 * Copyright (c) 2010 "Cowboy" Ben Alman
	 * Dual licensed under the MIT and GPL licenses.
	 * http://benalman.com/about/license/
	 */
	(function ($, p) {
	    var i, m = Array.prototype.slice, r = decodeURIComponent, a = $.param, c, l, v, b = $.bbq = $.bbq || {}, q, u, j, e = $.event.special, d = "hashchange", A = "querystring", D = "fragment", y = "elemUrlAttr", g = "location", k = "href", t = "src", x = /^.*\?|#.*$/g, w = /^.*\#/, h, C = {};
	
	    function E(F) {
	        return typeof F === "string"
	    }
	
	    function B(G) {
	        var F = m.call(arguments, 1);
	        return function () {
	            return G.apply(this, F.concat(m.call(arguments)))
	        }
	    }
	
	    function n(F) {
	        return F.replace(/^[^#]*#?(.*)$/, "$1")
	    }
	
	    function o(F) {
	        return F.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/, "$1")
	    }
	
	    function f(H, M, F, I, G) {
	        var O, L, K, N, J;
	        if (I !== i) {
	            K = F.match(H ? /^([^#]*)\#?(.*)$/ : /^([^#?]*)\??([^#]*)(#?.*)/);
	            J = K[3] || "";
	            if (G === 2 && E(I)) {
	                L = I.replace(H ? w : x, "")
	            } else {
	                N = l(K[2]);
	                I = E(I) ? l[H ? D : A](I) : I;
	                L = G === 2 ? I : G === 1 ? $.extend({}, I, N) : $.extend({}, N, I);
	                L = a(L);
	                if (H) {
	                    L = L.replace(h, r)
	                }
	            }
	            O = K[1] + (H ? "#" : L || !K[1] ? "?" : "") + L + J
	        } else {
	            O = M(F !== i ? F : p[g][k])
	        }
	        return O
	    }
	
	    a[A] = B(f, 0, o);
	    a[D] = c = B(f, 1, n);
	    c.noEscape = function (G) {
	        G = G || "";
	        var F = $.map(G.split(""), encodeURIComponent);
	        h = new RegExp(F.join("|"), "g")
	    };
	    c.noEscape(",/");
	    $.deparam = l = function (I, F) {
	        var H = {}, G = {"true": !0, "false": !1, "null": null};
	        $.each(I.replace(/\+/g, " ").split("&"), function (L, Q) {
	            var K = Q.split("="), P = r(K[0]), J, O = H, M = 0, R = P.split("]["), N = R.length - 1;
	            if (/\[/.test(R[0]) && /\]$/.test(R[N])) {
	                R[N] = R[N].replace(/\]$/, "");
	                R = R.shift().split("[").concat(R);
	                N = R.length - 1
	            } else {
	                N = 0
	            }
	            if (K.length === 2) {
	                J = r(K[1]);
	                if (F) {
	                    J = J && !isNaN(J) ? +J : J === "undefined" ? i : G[J] !== i ? G[J] : J
	                }
	                if (N) {
	                    for (; M <= N; M++) {
	                        P = R[M] === "" ? O.length : R[M];
	                        O = O[P] = M < N ? O[P] || (R[M + 1] && isNaN(R[M + 1]) ? {} : []) : J
	                    }
	                } else {
	                    if ($.isArray(H[P])) {
	                        H[P].push(J)
	                    } else {
	                        if (H[P] !== i) {
	                            H[P] = [H[P], J]
	                        } else {
	                            H[P] = J
	                        }
	                    }
	                }
	            } else {
	                if (P) {
	                    H[P] = F ? i : ""
	                }
	            }
	        });
	        return H
	    };
	    function z(H, F, G) {
	        if (F === i || typeof F === "boolean") {
	            G = F;
	            F = a[H ? D : A]()
	        } else {
	            F = E(F) ? F.replace(H ? w : x, "") : F
	        }
	        return l(F, G)
	    }
	
	    l[A] = B(z, 0);
	    l[D] = v = B(z, 1);
	    $[y] || ($[y] = function (F) {
	        return $.extend(C, F)
	    })({a: k, base: k, iframe: t, img: t, input: t, form: "action", link: k, script: t});
	    j = $[y];
	    function s(I, G, H, F) {
	        if (!E(H) && typeof H !== "object") {
	            F = H;
	            H = G;
	            G = i
	        }
	        return this.each(function () {
	            var L = $(this), J = G || j()[(this.nodeName || "").toLowerCase()] || "", K = J && L.attr(J) || "";
	            L.attr(J, a[I](K, H, F))
	        })
	    }
	
	    $.fn[A] = B(s, A);
	    $.fn[D] = B(s, D);
	    b.pushState = q = function (I, F) {
	        if (E(I) && /^#/.test(I) && F === i) {
	            F = 2
	        }
	        var H = I !== i, G = c(p[g][k], H ? I : {}, H ? F : 2);
	        p[g][k] = G + (/#/.test(G) ? "" : "#")
	    };
	    b.getState = u = function (F, G) {
	        return F === i || typeof F === "boolean" ? v(F) : v(G)[F]
	    };
	    b.removeState = function (F) {
	        var G = {};
	        if (F !== i) {
	            G = u();
	            $.each($.isArray(F) ? F : arguments, function (I, H) {
	                delete G[H]
	            })
	        }
	        q(G, 2)
	    };
	    e[d] = $.extend(e[d], {
	        add: function (F) {
	            var H;
	
	            function G(J) {
	                var I = J[D] = c();
	                J.getState = function (K, L) {
	                    return K === i || typeof K === "boolean" ? l(I, K) : l(I, L)[K]
	                };
	                H.apply(this, arguments)
	            }
	
	            if ($.isFunction(F)) {
	                H = F;
	                return G
	            } else {
	                H = F.handler;
	                F.handler = G
	            }
	        }
	    })
	})(jQuery, window);
	/*
	 * jQuery hashchange event - v1.2 - 2/11/2010
	 * http://benalman.com/projects/jquery-hashchange-plugin/
	 * 
	 * Copyright (c) 2010 "Cowboy" Ben Alman
	 * Dual licensed under the MIT and GPL licenses.
	 * http://benalman.com/about/license/
	 */
	(function ($, i, b) {
	    var j, k = $.event.special, c = "location", d = "hashchange", l = "href", f = $.browser, g = document.documentMode, h = f.msie && (g === b || g < 8), e = "on" + d in i && !h;
	
	    function a(m) {
	        m = m || i[c][l];
	        return m.replace(/^[^#]*#?(.*)$/, "$1")
	    }
	
	    $[d + "Delay"] = 100;
	    k[d] = $.extend(k[d], {
	        setup: function () {
	            if (e) {
	                return false
	            }
	            $(j.start)
	        }, teardown: function () {
	            if (e) {
	                return false
	            }
	            $(j.stop)
	        }
	    });
	    j = (function () {
	        var m = {}, r, n, o, q;
	
	        function p() {
	            o = q = function (s) {
	                return s
	            };
	            if (h) {
	                n = $('<iframe src="javascript:0"/>').hide().insertAfter("body")[0].contentWindow;
	                q = function () {
	                    return a(n.document[c][l])
	                };
	                o = function (u, s) {
	                    if (u !== s) {
	                        var t = n.document;
	                        t.open().close();
	                        t[c].hash = "#" + u
	                    }
	                };
	                o(a())
	            }
	        }
	
	        m.start = function () {
	            if (r) {
	                return
	            }
	            var t = a();
	            o || p();
	            (function s() {
	                var v = a(), u = q(t);
	                if (v !== t) {
	                    o(t = v, u);
	                    $(i).trigger(d)
	                } else {
	                    if (u !== t) {
	                        i[c][l] = i[c][l].replace(/#.*/, "") + "#" + u
	                    }
	                }
	                r = setTimeout(s, $[d + "Delay"])
	            })()
	        };
	        m.stop = function () {
	            if (!n) {
	                r && clearTimeout(r);
	                r = 0
	            }
	        };
	        return m
	    })()
	})(jQuery, window);

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * bxSlider v4.2.11
	 * Copyright 2013-2015 Steven Wanderski
	 * Written while drinking Belgian ales and listening to jazz
	 * Licensed under MIT (http://opensource.org/licenses/MIT)
	 */
	
	;(function($) {
	
	  var defaults = {
	
	    // GENERAL
	    mode: 'horizontal',
	    slideSelector: '',
	    infiniteLoop: true,
	    hideControlOnEnd: false,
	    speed: 500,
	    easing: null,
	    slideMargin: 0,
	    startSlide: 0,
	    randomStart: false,
	    captions: false,
	    ticker: false,
	    tickerHover: false,
	    adaptiveHeight: false,
	    adaptiveHeightSpeed: 500,
	    video: false,
	    useCSS: true,
	    preloadImages: 'visible',
	    responsive: true,
	    slideZIndex: 50,
	    wrapperClass: 'bx-wrapper',
	
	    // TOUCH
	    touchEnabled: true,
	    swipeThreshold: 50,
	    oneToOneTouch: true,
	    preventDefaultSwipeX: true,
	    preventDefaultSwipeY: false,
	
	    // ACCESSIBILITY
	    ariaLive: true,
	    ariaHidden: true,
	
	    // KEYBOARD
	    keyboardEnabled: false,
	
	    // PAGER
	    pager: true,
	    pagerType: 'full',
	    pagerShortSeparator: ' / ',
	    pagerSelector: null,
	    buildPager: null,
	    pagerCustom: null,
	
	    // CONTROLS
	    controls: true,
	    nextText: 'Next',
	    prevText: 'Prev',
	    nextSelector: null,
	    prevSelector: null,
	    autoControls: false,
	    startText: 'Start',
	    stopText: 'Stop',
	    autoControlsCombine: false,
	    autoControlsSelector: null,
	
	    // AUTO
	    auto: false,
	    pause: 4000,
	    autoStart: true,
	    autoDirection: 'next',
	    stopAutoOnClick: false,
	    autoHover: false,
	    autoDelay: 0,
	    autoSlideForOnePage: false,
	
	    // CAROUSEL
	    minSlides: 1,
	    maxSlides: 1,
	    moveSlides: 0,
	    slideWidth: 0,
	    shrinkItems: false,
	
	    // CALLBACKS
	    onSliderLoad: function() { return true; },
	    onSlideBefore: function() { return true; },
	    onSlideAfter: function() { return true; },
	    onSlideNext: function() { return true; },
	    onSlidePrev: function() { return true; },
	    onSliderResize: function() { return true; }
	  };
	
	  $.fn.bxSlider = function(options) {
	
	    if (this.length === 0) {
	      return this;
	    }
	
	    // support multiple elements
	    if (this.length > 1) {
	      this.each(function() {
	        $(this).bxSlider(options);
	      });
	      return this;
	    }
	
	    // create a namespace to be used throughout the plugin
	    var slider = {},
	    // set a reference to our slider element
	    el = this,
	    // get the original window dimens (thanks a lot IE)
	    windowWidth = $(window).width(),
	    windowHeight = $(window).height();
	
	    // Return if slider is already initialized
	    if ($(el).data('bxSlider')) { return; }
	
	    /**
	     * ===================================================================================
	     * = PRIVATE FUNCTIONS
	     * ===================================================================================
	     */
	
	    /**
	     * Initializes namespace settings to be used throughout plugin
	     */
	    var init = function() {
	      // Return if slider is already initialized
	      if ($(el).data('bxSlider')) { return; }
	      // merge user-supplied options with the defaults
	      slider.settings = $.extend({}, defaults, options);
	      // parse slideWidth setting
	      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);
	      // store the original children
	      slider.children = el.children(slider.settings.slideSelector);
	      // check if actual number of slides is less than minSlides / maxSlides
	      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }
	      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }
	      // if random start, set the startSlide setting to random number
	      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }
	      // store active slide information
	      slider.active = { index: slider.settings.startSlide };
	      // store if the slider is in carousel mode (displaying / moving multiple slides)
	      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;
	      // if carousel, force preloadImages = 'all'
	      if (slider.carousel) { slider.settings.preloadImages = 'all'; }
	      // calculate the min / max width thresholds based on min / max number of slides
	      // used to setup and update carousel slides dimensions
	      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);
	      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
	      // store the current state of the slider (if currently animating, working is true)
	      slider.working = false;
	      // initialize the controls object
	      slider.controls = {};
	      // initialize an auto interval
	      slider.interval = null;
	      // determine which property to use for transitions
	      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';
	      // determine if hardware acceleration can be used
	      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {
	        // create our test div element
	        var div = document.createElement('div'),
	        // css transition properties
	        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
	        // test for each property
	        for (var i = 0; i < props.length; i++) {
	          if (div.style[props[i]] !== undefined) {
	            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();
	            slider.animProp = '-' + slider.cssPrefix + '-transform';
	            return true;
	          }
	        }
	        return false;
	      }());
	      // if vertical mode always make maxSlides and minSlides equal
	      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }
	      // save original style data
	      el.data('origStyle', el.attr('style'));
	      el.children(slider.settings.slideSelector).each(function() {
	        $(this).data('origStyle', $(this).attr('style'));
	      });
	
	      // perform all DOM / CSS modifications
	      setup();
	    };
	
	    /**
	     * Performs all DOM and CSS modifications
	     */
	    var setup = function() {
	      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)
	
	      // wrap el in a wrapper
	      el.wrap('<div class="' + slider.settings.wrapperClass + '"><div class="bx-viewport"></div></div>');
	      // store a namespace reference to .bx-viewport
	      slider.viewport = el.parent();
	
	      // add aria-live if the setting is enabled and ticker mode is disabled
	      if (slider.settings.ariaLive && !slider.settings.ticker) {
	        slider.viewport.attr('aria-live', 'polite');
	      }
	      // add a loading div to display while images are loading
	      slider.loader = $('<div class="bx-loading" />');
	      slider.viewport.prepend(slider.loader);
	      // set el to a massive width, to hold any needed slides
	      // also strip any margin and padding from el
	      el.css({
	        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',
	        position: 'relative'
	      });
	      // if using CSS, add the easing property
	      if (slider.usingCSS && slider.settings.easing) {
	        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);
	      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)
	      } else if (!slider.settings.easing) {
	        slider.settings.easing = 'swing';
	      }
	      // make modifications to the viewport (.bx-viewport)
	      slider.viewport.css({
	        width: '100%',
	        overflow: 'hidden',
	        position: 'relative'
	      });
	      slider.viewport.parent().css({
	        maxWidth: getViewportMaxWidth()
	      });
	      // apply css to all slider children
	      slider.children.css({
	        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',
	        listStyle: 'none',
	        position: 'relative'
	      });
	      // apply the calculated width after the float is applied to prevent scrollbar interference
	      slider.children.css('width', getSlideWidth());
	      // if slideMargin is supplied, add the css
	      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }
	      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }
	      // if "fade" mode, add positioning and z-index CSS
	      if (slider.settings.mode === 'fade') {
	        slider.children.css({
	          position: 'absolute',
	          zIndex: 0,
	          display: 'none'
	        });
	        // prepare the z-index on the showing element
	        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});
	      }
	      // create an element to contain all slider controls (pager, start / stop, etc)
	      slider.controls.el = $('<div class="bx-controls" />');
	      // if captions are requested, add them
	      if (slider.settings.captions) { appendCaptions(); }
	      // check if startSlide is last slide
	      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;
	      // if video is true, set up the fitVids plugin
	      if (slider.settings.video) { el.fitVids(); }
	      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }
	      // only check for control addition if not in "ticker" mode
	      if (!slider.settings.ticker) {
	        // if controls are requested, add them
	        if (slider.settings.controls) { appendControls(); }
	        // if auto is true, and auto controls are requested, add them
	        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }
	        // if pager is requested, add it
	        if (slider.settings.pager) { appendPager(); }
	        // if any control option is requested, add the controls wrapper
	        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }
	      // if ticker mode, do not allow a pager
	      } else {
	        slider.settings.pager = false;
	      }
	      loadElements(preloadSelector, start);
	    };
	
	    var loadElements = function(selector, callback) {
	      var total = selector.find('img:not([src=""]), iframe').length,
	      count = 0;
	      if (total === 0) {
	        callback();
	        return;
	      }
	      selector.find('img:not([src=""]), iframe').each(function() {
	        $(this).one('load error', function() {
	          if (++count === total) { callback(); }
	        }).each(function() {
	          if (this.complete) { $(this).trigger('load'); }
	        });
	      });
	    };
	
	    /**
	     * Start the slider
	     */
	    var start = function() {
	      // if infinite loop, prepare additional slides
	      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {
	        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,
	        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),
	        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');
	        if (slider.settings.ariaHidden) {
	          sliceAppend.attr('aria-hidden', true);
	          slicePrepend.attr('aria-hidden', true);
	        }
	        el.append(sliceAppend).prepend(slicePrepend);
	      }
	      // remove the loading DOM element
	      slider.loader.remove();
	      // set the left / top position of "el"
	      setSlidePosition();
	      // if "vertical" mode, always use adaptiveHeight to prevent odd behavior
	      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }
	      // set the viewport height
	      slider.viewport.height(getViewportHeight());
	      // make sure everything is positioned just right (same as a window resize)
	      el.redrawSlider();
	      // onSliderLoad callback
	      slider.settings.onSliderLoad.call(el, slider.active.index);
	      // slider has been fully initialized
	      slider.initialized = true;
	      // bind the resize call to the window
	      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }
	      // if auto is true and has more than 1 page, start the show
	      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }
	      // if ticker is true, start the ticker
	      if (slider.settings.ticker) { initTicker(); }
	      // if pager is requested, make the appropriate pager link active
	      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }
	      // check for any updates to the controls (like hideControlOnEnd updates)
	      if (slider.settings.controls) { updateDirectionControls(); }
	      // if touchEnabled is true, setup the touch events
	      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }
	      // if keyboardEnabled is true, setup the keyboard events
	      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {
	        $(document).keydown(keyPress);
	      }
	    };
	
	    /**
	     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value
	     */
	    var getViewportHeight = function() {
	      var height = 0;
	      // first determine which children (slides) should be used in our height calculation
	      var children = $();
	      // if mode is not "vertical" and adaptiveHeight is false, include all children
	      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {
	        children = slider.children;
	      } else {
	        // if not carousel, return the single active child
	        if (!slider.carousel) {
	          children = slider.children.eq(slider.active.index);
	        // if carousel, return a slice of children
	        } else {
	          // get the individual slide index
	          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();
	          // add the current slide to the children
	          children = slider.children.eq(currentIndex);
	          // cycle through the remaining "showing" slides
	          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {
	            // if looped back to the start
	            if (currentIndex + i >= slider.children.length) {
	              children = children.add(slider.children.eq(i - 1));
	            } else {
	              children = children.add(slider.children.eq(currentIndex + i));
	            }
	          }
	        }
	      }
	      // if "vertical" mode, calculate the sum of the heights of the children
	      if (slider.settings.mode === 'vertical') {
	        children.each(function(index) {
	          height += $(this).outerHeight();
	        });
	        // add user-supplied margins
	        if (slider.settings.slideMargin > 0) {
	          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);
	        }
	      // if not "vertical" mode, calculate the max height of the children
	      } else {
	        height = Math.max.apply(Math, children.map(function() {
	          return $(this).outerHeight(false);
	        }).get());
	      }
	
	      if (slider.viewport.css('box-sizing') === 'border-box') {
	        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +
	              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));
	      } else if (slider.viewport.css('box-sizing') === 'padding-box') {
	        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));
	      }
	
	      return height;
	    };
	
	    /**
	     * Returns the calculated width to be used for the outer wrapper / viewport
	     */
	    var getViewportMaxWidth = function() {
	      var width = '100%';
	      if (slider.settings.slideWidth > 0) {
	        if (slider.settings.mode === 'horizontal') {
	          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
	        } else {
	          width = slider.settings.slideWidth;
	        }
	      }
	      return width;
	    };
	
	    /**
	     * Returns the calculated width to be applied to each slide
	     */
	    var getSlideWidth = function() {
	      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width
	      wrapWidth      = slider.viewport.width();    // get the current viewport width
	      // if slide width was not supplied, or is larger than the viewport use the viewport width
	      if (slider.settings.slideWidth === 0 ||
	        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||
	        slider.settings.mode === 'vertical') {
	        newElWidth = wrapWidth;
	      // if carousel, use the thresholds to determine the width
	      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {
	        if (wrapWidth > slider.maxThreshold) {
	          return newElWidth;
	        } else if (wrapWidth < slider.minThreshold) {
	          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;
	        } else if (slider.settings.shrinkItems) {
	          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);
	        }
	      }
	      return newElWidth;
	    };
	
	    /**
	     * Returns the number of slides currently visible in the viewport (includes partially visible slides)
	     */
	    var getNumberSlidesShowing = function() {
	      var slidesShowing = 1,
	      childWidth = null;
	      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {
	        // if viewport is smaller than minThreshold, return minSlides
	        if (slider.viewport.width() < slider.minThreshold) {
	          slidesShowing = slider.settings.minSlides;
	        // if viewport is larger than maxThreshold, return maxSlides
	        } else if (slider.viewport.width() > slider.maxThreshold) {
	          slidesShowing = slider.settings.maxSlides;
	        // if viewport is between min / max thresholds, divide viewport width by first child width
	        } else {
	          childWidth = slider.children.first().width() + slider.settings.slideMargin;
	          slidesShowing = Math.floor((slider.viewport.width() +
	            slider.settings.slideMargin) / childWidth);
	        }
	      // if "vertical" mode, slides showing will always be minSlides
	      } else if (slider.settings.mode === 'vertical') {
	        slidesShowing = slider.settings.minSlides;
	      }
	      return slidesShowing;
	    };
	
	    /**
	     * Returns the number of pages (one full viewport of slides is one "page")
	     */
	    var getPagerQty = function() {
	      var pagerQty = 0,
	      breakPoint = 0,
	      counter = 0;
	      // if moveSlides is specified by the user
	      if (slider.settings.moveSlides > 0) {
	        if (slider.settings.infiniteLoop) {
	          pagerQty = Math.ceil(slider.children.length / getMoveBy());
	        } else {
	          // when breakpoint goes above children length, counter is the number of pages
	          while (breakPoint < slider.children.length) {
	            ++pagerQty;
	            breakPoint = counter + getNumberSlidesShowing();
	            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();
	          }
	        }
	      // if moveSlides is 0 (auto) divide children length by sides showing, then round up
	      } else {
	        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());
	      }
	      return pagerQty;
	    };
	
	    /**
	     * Returns the number of individual slides by which to shift the slider
	     */
	    var getMoveBy = function() {
	      // if moveSlides was set by the user and moveSlides is less than number of slides showing
	      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {
	        return slider.settings.moveSlides;
	      }
	      // if moveSlides is 0 (auto)
	      return getNumberSlidesShowing();
	    };
	
	    /**
	     * Sets the slider's (el) left or top position
	     */
	    var setSlidePosition = function() {
	      var position, lastChild, lastShowingIndex;
	      // if last slide, not infinite loop, and number of children is larger than specified maxSlides
	      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {
	        if (slider.settings.mode === 'horizontal') {
	          // get the last child's position
	          lastChild = slider.children.last();
	          position = lastChild.position();
	          // set the left position
	          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);
	        } else if (slider.settings.mode === 'vertical') {
	          // get the last showing index's position
	          lastShowingIndex = slider.children.length - slider.settings.minSlides;
	          position = slider.children.eq(lastShowingIndex).position();
	          // set the top position
	          setPositionProperty(-position.top, 'reset', 0);
	        }
	      // if not last slide
	      } else {
	        // get the position of the first showing slide
	        position = slider.children.eq(slider.active.index * getMoveBy()).position();
	        // check for last slide
	        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }
	        // set the respective position
	        if (position !== undefined) {
	          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
	          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
	        }
	      }
	    };
	
	    /**
	     * Sets the el's animating property position (which in turn will sometimes animate el).
	     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.
	     *
	     * @param value (int)
	     *  - the animating property's value
	     *
	     * @param type (string) 'slide', 'reset', 'ticker'
	     *  - the type of instance for which the function is being
	     *
	     * @param duration (int)
	     *  - the amount of time (in ms) the transition should occupy
	     *
	     * @param params (array) optional
	     *  - an optional parameter containing any variables that need to be passed in
	     */
	    var setPositionProperty = function(value, type, duration, params) {
	      var animateObj, propValue;
	      // use CSS transform
	      if (slider.usingCSS) {
	        // determine the translate3d value
	        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';
	        // add the CSS transition-duration
	        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');
	        if (type === 'slide') {
	          // set the property value
	          el.css(slider.animProp, propValue);
	          if (duration !== 0) {
	            // bind a callback method - executes when CSS transition completes
	            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
	              //make sure it's the correct one
	              if (!$(e.target).is(el)) { return; }
	              // unbind the callback
	              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
	              updateAfterSlideTransition();
	            });
	          } else { //duration = 0
	            updateAfterSlideTransition();
	          }
	        } else if (type === 'reset') {
	          el.css(slider.animProp, propValue);
	        } else if (type === 'ticker') {
	          // make the transition use 'linear'
	          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');
	          el.css(slider.animProp, propValue);
	          if (duration !== 0) {
	            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {
	              //make sure it's the correct one
	              if (!$(e.target).is(el)) { return; }
	              // unbind the callback
	              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
	              // reset the position
	              setPositionProperty(params.resetValue, 'reset', 0);
	              // start the loop again
	              tickerLoop();
	            });
	          } else { //duration = 0
	            setPositionProperty(params.resetValue, 'reset', 0);
	            tickerLoop();
	          }
	        }
	      // use JS animate
	      } else {
	        animateObj = {};
	        animateObj[slider.animProp] = value;
	        if (type === 'slide') {
	          el.animate(animateObj, duration, slider.settings.easing, function() {
	            updateAfterSlideTransition();
	          });
	        } else if (type === 'reset') {
	          el.css(slider.animProp, value);
	        } else if (type === 'ticker') {
	          el.animate(animateObj, duration, 'linear', function() {
	            setPositionProperty(params.resetValue, 'reset', 0);
	            // run the recursive loop after animation
	            tickerLoop();
	          });
	        }
	      }
	    };
	
	    /**
	     * Populates the pager with proper amount of pages
	     */
	    var populatePager = function() {
	      var pagerHtml = '',
	      linkContent = '',
	      pagerQty = getPagerQty();
	      // loop through each pager item
	      for (var i = 0; i < pagerQty; i++) {
	        linkContent = '';
	        // if a buildPager function is supplied, use it to get pager link value, else use index + 1
	        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {
	          linkContent = slider.settings.buildPager(i);
	          slider.pagerEl.addClass('bx-custom-pager');
	        } else {
	          linkContent = i + 1;
	          slider.pagerEl.addClass('bx-default-pager');
	        }
	        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;
	        // add the markup to the string
	        pagerHtml += '<div class="bx-pager-item"><a href="" data-slide-index="' + i + '" class="bx-pager-link">' + linkContent + '</a></div>';
	      }
	      // populate the pager element with pager links
	      slider.pagerEl.html(pagerHtml);
	    };
	
	    /**
	     * Appends the pager to the controls element
	     */
	    var appendPager = function() {
	      if (!slider.settings.pagerCustom) {
	        // create the pager DOM element
	        slider.pagerEl = $('<div class="bx-pager" />');
	        // if a pager selector was supplied, populate it with the pager
	        if (slider.settings.pagerSelector) {
	          $(slider.settings.pagerSelector).html(slider.pagerEl);
	        // if no pager selector was supplied, add it after the wrapper
	        } else {
	          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);
	        }
	        // populate the pager
	        populatePager();
	      } else {
	        slider.pagerEl = $(slider.settings.pagerCustom);
	      }
	      // assign the pager click binding
	      slider.pagerEl.on('click touchend', 'a', clickPagerBind);
	    };
	
	    /**
	     * Appends prev / next controls to the controls element
	     */
	    var appendControls = function() {
	      slider.controls.next = $('<a class="bx-next" href="">' + slider.settings.nextText + '</a>');
	      slider.controls.prev = $('<a class="bx-prev" href="">' + slider.settings.prevText + '</a>');
	      // bind click actions to the controls
	      slider.controls.next.bind('click touchend', clickNextBind);
	      slider.controls.prev.bind('click touchend', clickPrevBind);
	      // if nextSelector was supplied, populate it
	      if (slider.settings.nextSelector) {
	        $(slider.settings.nextSelector).append(slider.controls.next);
	      }
	      // if prevSelector was supplied, populate it
	      if (slider.settings.prevSelector) {
	        $(slider.settings.prevSelector).append(slider.controls.prev);
	      }
	      // if no custom selectors were supplied
	      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {
	        // add the controls to the DOM
	        slider.controls.directionEl = $('<div class="bx-controls-direction" />');
	        // add the control elements to the directionEl
	        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);
	        // slider.viewport.append(slider.controls.directionEl);
	        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);
	      }
	    };
	
	    /**
	     * Appends start / stop auto controls to the controls element
	     */
	    var appendControlsAuto = function() {
	      slider.controls.start = $('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + slider.settings.startText + '</a></div>');
	      slider.controls.stop = $('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + slider.settings.stopText + '</a></div>');
	      // add the controls to the DOM
	      slider.controls.autoEl = $('<div class="bx-controls-auto" />');
	      // bind click actions to the controls
	      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);
	      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);
	      // if autoControlsCombine, insert only the "start" control
	      if (slider.settings.autoControlsCombine) {
	        slider.controls.autoEl.append(slider.controls.start);
	      // if autoControlsCombine is false, insert both controls
	      } else {
	        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);
	      }
	      // if auto controls selector was supplied, populate it with the controls
	      if (slider.settings.autoControlsSelector) {
	        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);
	      // if auto controls selector was not supplied, add it after the wrapper
	      } else {
	        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);
	      }
	      // update the auto controls
	      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');
	    };
	
	    /**
	     * Appends image captions to the DOM
	     */
	    var appendCaptions = function() {
	      // cycle through each child
	      slider.children.each(function(index) {
	        // get the image title attribute
	        var title = $(this).find('img:first').attr('title');
	        // append the caption
	        if (title !== undefined && ('' + title).length) {
	          $(this).append('<div class="bx-caption"><span>' + title + '</span></div>');
	        }
	      });
	    };
	
	    /**
	     * Click next binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickNextBind = function(e) {
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) { return; }
	      // if auto show is running, stop it
	      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      el.goToNextSlide();
	    };
	
	    /**
	     * Click prev binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickPrevBind = function(e) {
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) { return; }
	      // if auto show is running, stop it
	      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      el.goToPrevSlide();
	    };
	
	    /**
	     * Click start binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickStartBind = function(e) {
	      el.startAuto();
	      e.preventDefault();
	    };
	
	    /**
	     * Click stop binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickStopBind = function(e) {
	      el.stopAuto();
	      e.preventDefault();
	    };
	
	    /**
	     * Click pager binding
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var clickPagerBind = function(e) {
	      var pagerLink, pagerIndex;
	      e.preventDefault();
	      if (slider.controls.el.hasClass('disabled')) {
	        return;
	      }
	      // if auto show is running, stop it
	      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }
	      pagerLink = $(e.currentTarget);
	      if (pagerLink.attr('data-slide-index') !== undefined) {
	        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));
	        // if clicked pager link is not active, continue with the goToSlide call
	        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }
	      }
	    };
	
	    /**
	     * Updates the pager links with an active class
	     *
	     * @param slideIndex (int)
	     *  - index of slide to make active
	     */
	    var updatePagerActive = function(slideIndex) {
	      // if "short" pager type
	      var len = slider.children.length; // nb of children
	      if (slider.settings.pagerType === 'short') {
	        if (slider.settings.maxSlides > 1) {
	          len = Math.ceil(slider.children.length / slider.settings.maxSlides);
	        }
	        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);
	        return;
	      }
	      // remove all pager active classes
	      slider.pagerEl.find('a').removeClass('active');
	      // apply the active class for all pagers
	      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });
	    };
	
	    /**
	     * Performs needed actions after a slide transition
	     */
	    var updateAfterSlideTransition = function() {
	      // if infinite loop is true
	      if (slider.settings.infiniteLoop) {
	        var position = '';
	        // first slide
	        if (slider.active.index === 0) {
	          // set the new position
	          position = slider.children.eq(0).position();
	        // carousel, last slide
	        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {
	          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();
	        // last slide
	        } else if (slider.active.index === slider.children.length - 1) {
	          position = slider.children.eq(slider.children.length - 1).position();
	        }
	        if (position) {
	          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
	          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
	        }
	      }
	      // declare that the transition is complete
	      slider.working = false;
	      // onSlideAfter callback
	      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
	    };
	
	    /**
	     * Updates the auto controls state (either active, or combined switch)
	     *
	     * @param state (string) "start", "stop"
	     *  - the new state of the auto show
	     */
	    var updateAutoControls = function(state) {
	      // if autoControlsCombine is true, replace the current control with the new state
	      if (slider.settings.autoControlsCombine) {
	        slider.controls.autoEl.html(slider.controls[state]);
	      // if autoControlsCombine is false, apply the "active" class to the appropriate control
	      } else {
	        slider.controls.autoEl.find('a').removeClass('active');
	        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');
	      }
	    };
	
	    /**
	     * Updates the direction controls (checks if either should be hidden)
	     */
	    var updateDirectionControls = function() {
	      if (getPagerQty() === 1) {
	        slider.controls.prev.addClass('disabled');
	        slider.controls.next.addClass('disabled');
	      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {
	        // if first slide
	        if (slider.active.index === 0) {
	          slider.controls.prev.addClass('disabled');
	          slider.controls.next.removeClass('disabled');
	        // if last slide
	        } else if (slider.active.index === getPagerQty() - 1) {
	          slider.controls.next.addClass('disabled');
	          slider.controls.prev.removeClass('disabled');
	        // if any slide in the middle
	        } else {
	          slider.controls.prev.removeClass('disabled');
	          slider.controls.next.removeClass('disabled');
	        }
	      }
	    };
	
	    /**
	     * Initializes the auto process
	     */
	    var initAuto = function() {
	      // if autoDelay was supplied, launch the auto show using a setTimeout() call
	      if (slider.settings.autoDelay > 0) {
	        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);
	      // if autoDelay was not supplied, start the auto show normally
	      } else {
	        el.startAuto();
	
	        //add focus and blur events to ensure its running if timeout gets paused
	        $(window).focus(function() {
	          el.startAuto();
	        }).blur(function() {
	          el.stopAuto();
	        });
	      }
	      // if autoHover is requested
	      if (slider.settings.autoHover) {
	        // on el hover
	        el.hover(function() {
	          // if the auto show is currently playing (has an active interval)
	          if (slider.interval) {
	            // stop the auto show and pass true argument which will prevent control update
	            el.stopAuto(true);
	            // create a new autoPaused value which will be used by the relative "mouseout" event
	            slider.autoPaused = true;
	          }
	        }, function() {
	          // if the autoPaused value was created be the prior "mouseover" event
	          if (slider.autoPaused) {
	            // start the auto show and pass true argument which will prevent control update
	            el.startAuto(true);
	            // reset the autoPaused value
	            slider.autoPaused = null;
	          }
	        });
	      }
	    };
	
	    /**
	     * Initializes the ticker process
	     */
	    var initTicker = function() {
	      var startPosition = 0,
	      position, transform, value, idx, ratio, property, newSpeed, totalDimens;
	      // if autoDirection is "next", append a clone of the entire slider
	      if (slider.settings.autoDirection === 'next') {
	        el.append(slider.children.clone().addClass('bx-clone'));
	      // if autoDirection is "prev", prepend a clone of the entire slider, and set the left position
	      } else {
	        el.prepend(slider.children.clone().addClass('bx-clone'));
	        position = slider.children.first().position();
	        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
	      }
	      setPositionProperty(startPosition, 'reset', 0);
	      // do not allow controls in ticker mode
	      slider.settings.pager = false;
	      slider.settings.controls = false;
	      slider.settings.autoControls = false;
	      // if autoHover is requested
	      if (slider.settings.tickerHover) {
	        if (slider.usingCSS) {
	          idx = slider.settings.mode === 'horizontal' ? 4 : 5;
	          slider.viewport.hover(function() {
	            transform = el.css('-' + slider.cssPrefix + '-transform');
	            value = parseFloat(transform.split(',')[idx]);
	            setPositionProperty(value, 'reset', 0);
	          }, function() {
	            totalDimens = 0;
	            slider.children.each(function(index) {
	              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
	            });
	            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
	            ratio = slider.settings.speed / totalDimens;
	            // determine which property to use
	            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
	            // calculate the new speed
	            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));
	            tickerLoop(newSpeed);
	          });
	        } else {
	          // on el hover
	          slider.viewport.hover(function() {
	            el.stop();
	          }, function() {
	            // calculate the total width of children (used to calculate the speed ratio)
	            totalDimens = 0;
	            slider.children.each(function(index) {
	              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
	            });
	            // calculate the speed ratio (used to determine the new speed to finish the paused animation)
	            ratio = slider.settings.speed / totalDimens;
	            // determine which property to use
	            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';
	            // calculate the new speed
	            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));
	            tickerLoop(newSpeed);
	          });
	        }
	      }
	      // start the ticker loop
	      tickerLoop();
	    };
	
	    /**
	     * Runs a continuous loop, news ticker-style
	     */
	    var tickerLoop = function(resumeSpeed) {
	      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,
	      position = {left: 0, top: 0},
	      reset = {left: 0, top: 0},
	      animateProperty, resetValue, params;
	
	      // if "next" animate left position to last child, then reset left to 0
	      if (slider.settings.autoDirection === 'next') {
	        position = el.find('.bx-clone').first().position();
	      // if "prev" animate left position to 0, then reset left to first non-clone child
	      } else {
	        reset = slider.children.first().position();
	      }
	      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;
	      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;
	      params = {resetValue: resetValue};
	      setPositionProperty(animateProperty, 'ticker', speed, params);
	    };
	
	    /**
	     * Check if el is on screen
	     */
	    var isOnScreen = function(el) {
	      var win = $(window),
	      viewport = {
	        top: win.scrollTop(),
	        left: win.scrollLeft()
	      },
	      bounds = el.offset();
	
	      viewport.right = viewport.left + win.width();
	      viewport.bottom = viewport.top + win.height();
	      bounds.right = bounds.left + el.outerWidth();
	      bounds.bottom = bounds.top + el.outerHeight();
	
	      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));
	    };
	
	    /**
	     * Initializes keyboard events
	     */
	    var keyPress = function(e) {
	      var activeElementTag = document.activeElement.tagName.toLowerCase(),
	      tagFilters = 'input|textarea',
	      p = new RegExp(activeElementTag,['i']),
	      result = p.exec(tagFilters);
	
	      if (result == null && isOnScreen(el)) {
	        if (e.keyCode === 39) {
	          clickNextBind(e);
	          return false;
	        } else if (e.keyCode === 37) {
	          clickPrevBind(e);
	          return false;
	        }
	      }
	    };
	
	    /**
	     * Initializes touch events
	     */
	    var initTouch = function() {
	      // initialize object to contain all touch values
	      slider.touch = {
	        start: {x: 0, y: 0},
	        end: {x: 0, y: 0}
	      };
	      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);
	
	      //for browsers that have implemented pointer events and fire a click after
	      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not
	      slider.viewport.on('click', '.bxslider a', function(e) {
	        if (slider.viewport.hasClass('click-disabled')) {
	          e.preventDefault();
	          slider.viewport.removeClass('click-disabled');
	        }
	      });
	    };
	
	    /**
	     * Event handler for "touchstart"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchStart = function(e) {
	      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls
	      slider.controls.el.addClass('disabled');
	
	      if (slider.working) {
	        e.preventDefault();
	        slider.controls.el.removeClass('disabled');
	      } else {
	        // record the original position when touch starts
	        slider.touch.originalPos = el.position();
	        var orig = e.originalEvent,
	        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];
	        // record the starting touch x, y coordinates
	        slider.touch.start.x = touchPoints[0].pageX;
	        slider.touch.start.y = touchPoints[0].pageY;
	
	        if (slider.viewport.get(0).setPointerCapture) {
	          slider.pointerId = orig.pointerId;
	          slider.viewport.get(0).setPointerCapture(slider.pointerId);
	        }
	        // bind a "touchmove" event to the viewport
	        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);
	        // bind a "touchend" event to the viewport
	        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);
	        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);
	      }
	    };
	
	    /**
	     * Cancel Pointer for Windows Phone
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onPointerCancel = function(e) {
	      /* onPointerCancel handler is needed to deal with situations when a touchend
	      doesn't fire after a touchstart (this happens on windows phones only) */
	      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);
	
	      //remove handlers
	      slider.controls.el.removeClass('disabled');
	      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);
	      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);
	      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);
	      if (slider.viewport.get(0).releasePointerCapture) {
	        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
	      }
	    };
	
	    /**
	     * Event handler for "touchmove"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchMove = function(e) {
	      var orig = e.originalEvent,
	      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
	      // if scrolling on y axis, do not prevent default
	      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),
	      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),
	      value = 0,
	      change = 0;
	
	      // x axis swipe
	      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {
	        e.preventDefault();
	      // y axis swipe
	      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {
	        e.preventDefault();
	      }
	      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {
	        // if horizontal, drag along x axis
	        if (slider.settings.mode === 'horizontal') {
	          change = touchPoints[0].pageX - slider.touch.start.x;
	          value = slider.touch.originalPos.left + change;
	        // if vertical, drag along y axis
	        } else {
	          change = touchPoints[0].pageY - slider.touch.start.y;
	          value = slider.touch.originalPos.top + change;
	        }
	        setPositionProperty(value, 'reset', 0);
	      }
	    };
	
	    /**
	     * Event handler for "touchend"
	     *
	     * @param e (event)
	     *  - DOM event object
	     */
	    var onTouchEnd = function(e) {
	      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);
	      //enable slider controls as soon as user stops interacing with slides
	      slider.controls.el.removeClass('disabled');
	      var orig    = e.originalEvent,
	      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],
	      value       = 0,
	      distance    = 0;
	      // record end x, y positions
	      slider.touch.end.x = touchPoints[0].pageX;
	      slider.touch.end.y = touchPoints[0].pageY;
	      // if fade mode, check if absolute x distance clears the threshold
	      if (slider.settings.mode === 'fade') {
	        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);
	        if (distance >= slider.settings.swipeThreshold) {
	          if (slider.touch.start.x > slider.touch.end.x) {
	            el.goToNextSlide();
	          } else {
	            el.goToPrevSlide();
	          }
	          el.stopAuto();
	        }
	      // not fade mode
	      } else {
	        // calculate distance and el's animate property
	        if (slider.settings.mode === 'horizontal') {
	          distance = slider.touch.end.x - slider.touch.start.x;
	          value = slider.touch.originalPos.left;
	        } else {
	          distance = slider.touch.end.y - slider.touch.start.y;
	          value = slider.touch.originalPos.top;
	        }
	        // if not infinite loop and first / last slide, do not attempt a slide transition
	        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {
	          setPositionProperty(value, 'reset', 200);
	        } else {
	          // check if distance clears threshold
	          if (Math.abs(distance) >= slider.settings.swipeThreshold) {
	            if (distance < 0) {
	              el.goToNextSlide();
	            } else {
	              el.goToPrevSlide();
	            }
	            el.stopAuto();
	          } else {
	            // el.animate(property, 200);
	            setPositionProperty(value, 'reset', 200);
	          }
	        }
	      }
	      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);
	      if (slider.viewport.get(0).releasePointerCapture) {
	        slider.viewport.get(0).releasePointerCapture(slider.pointerId);
	      }
	    };
	
	    /**
	     * Window resize event callback
	     */
	    var resizeWindow = function(e) {
	      // don't do anything if slider isn't initialized.
	      if (!slider.initialized) { return; }
	      // Delay if slider working.
	      if (slider.working) {
	        window.setTimeout(resizeWindow, 10);
	      } else {
	        // get the new window dimens (again, thank you IE)
	        var windowWidthNew = $(window).width(),
	        windowHeightNew = $(window).height();
	        // make sure that it is a true window resize
	        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements
	        // are resized. Can you just die already?*
	        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {
	          // set the new window dimens
	          windowWidth = windowWidthNew;
	          windowHeight = windowHeightNew;
	          // update all dynamic elements
	          el.redrawSlider();
	          // Call user resize handler
	          slider.settings.onSliderResize.call(el, slider.active.index);
	        }
	      }
	    };
	
	    /**
	     * Adds an aria-hidden=true attribute to each element
	     *
	     * @param startVisibleIndex (int)
	     *  - the first visible element's index
	     */
	    var applyAriaHiddenAttributes = function(startVisibleIndex) {
	      var numberOfSlidesShowing = getNumberSlidesShowing();
	      // only apply attributes if the setting is enabled and not in ticker mode
	      if (slider.settings.ariaHidden && !slider.settings.ticker) {
	        // add aria-hidden=true to all elements
	        slider.children.attr('aria-hidden', 'true');
	        // get the visible elements and change to aria-hidden=false
	        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');
	      }
	    };
	
	    /**
	     * Returns index according to present page range
	     *
	     * @param slideOndex (int)
	     *  - the desired slide index
	     */
	    var setSlideIndex = function(slideIndex) {
	      if (slideIndex < 0) {
	        if (slider.settings.infiniteLoop) {
	          return getPagerQty() - 1;
	        }else {
	          //we don't go to undefined slides
	          return slider.active.index;
	        }
	      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)
	      } else if (slideIndex >= getPagerQty()) {
	        if (slider.settings.infiniteLoop) {
	          return 0;
	        } else {
	          //we don't move to undefined pages
	          return slider.active.index;
	        }
	      // set active index to requested slide
	      } else {
	        return slideIndex;
	      }
	    };
	
	    /**
	     * ===================================================================================
	     * = PUBLIC FUNCTIONS
	     * ===================================================================================
	     */
	
	    /**
	     * Performs slide transition to the specified slide
	     *
	     * @param slideIndex (int)
	     *  - the destination slide's index (zero-based)
	     *
	     * @param direction (string)
	     *  - INTERNAL USE ONLY - the direction of travel ("prev" / "next")
	     */
	    el.goToSlide = function(slideIndex, direction) {
	      // onSlideBefore, onSlideNext, onSlidePrev callbacks
	      // Allow transition canceling based on returned value
	      var performTransition = true,
	      moveBy = 0,
	      position = {left: 0, top: 0},
	      lastChild = null,
	      lastShowingIndex, eq, value, requestEl;
	      // store the old index
	      slider.oldIndex = slider.active.index;
	      //set new index
	      slider.active.index = setSlideIndex(slideIndex);
	
	      // if plugin is currently in motion, ignore request
	      if (slider.working || slider.active.index === slider.oldIndex) { return; }
	      // declare that plugin is in motion
	      slider.working = true;
	
	      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
	
	      // If transitions canceled, reset and return
	      if (typeof (performTransition) !== 'undefined' && !performTransition) {
	        slider.active.index = slider.oldIndex; // restore old index
	        slider.working = false; // is not in motion
	        return;
	      }
	
	      if (direction === 'next') {
	        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
	        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
	          performTransition = false;
	        }
	      } else if (direction === 'prev') {
	        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel
	        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {
	          performTransition = false;
	        }
	      }
	
	      // check if last slide
	      slider.active.last = slider.active.index >= getPagerQty() - 1;
	      // update the pager with active class
	      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }
	      // // check for direction control update
	      if (slider.settings.controls) { updateDirectionControls(); }
	      // if slider is set to mode: "fade"
	      if (slider.settings.mode === 'fade') {
	        // if adaptiveHeight is true and next height is different from current height, animate to the new height
	        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
	          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
	        }
	        // fade out the visible child and reset its z-index value
	        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});
	        // fade in the newly requested slide
	        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {
	          $(this).css('zIndex', slider.settings.slideZIndex);
	          updateAfterSlideTransition();
	        });
	      // slider mode is not "fade"
	      } else {
	        // if adaptiveHeight is true and next height is different from current height, animate to the new height
	        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {
	          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
	        }
	        // if carousel and not infinite loop
	        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {
	          if (slider.settings.mode === 'horizontal') {
	            // get the last child position
	            lastChild = slider.children.eq(slider.children.length - 1);
	            position = lastChild.position();
	            // calculate the position of the last slide
	            moveBy = slider.viewport.width() - lastChild.outerWidth();
	          } else {
	            // get last showing index position
	            lastShowingIndex = slider.children.length - slider.settings.minSlides;
	            position = slider.children.eq(lastShowingIndex).position();
	          }
	          // horizontal carousel, going previous while on first slide (infiniteLoop mode)
	        } else if (slider.carousel && slider.active.last && direction === 'prev') {
	          // get the last child position
	          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);
	          lastChild = el.children('.bx-clone').eq(eq);
	          position = lastChild.position();
	        // if infinite loop and "Next" is clicked on the last slide
	        } else if (direction === 'next' && slider.active.index === 0) {
	          // get the last clone position
	          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();
	          slider.active.last = false;
	        // normal non-zero requests
	        } else if (slideIndex >= 0) {
	          //parseInt is applied to allow floats for slides/page
	          requestEl = slideIndex * parseInt(getMoveBy());
	          position = slider.children.eq(requestEl).position();
	        }
	
	        /* If the position doesn't exist
	         * (e.g. if you destroy the slider on a next click),
	         * it doesn't throw an error.
	         */
	        if (typeof (position) !== 'undefined') {
	          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;
	          // plugin values to be animated
	          setPositionProperty(value, 'slide', slider.settings.speed);
	        } else {
	          slider.working = false;
	        }
	      }
	      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
	    };
	
	    /**
	     * Transitions to the next slide in the show
	     */
	    el.goToNextSlide = function() {
	      // if infiniteLoop is false and last page is showing, disregard call
	      if (!slider.settings.infiniteLoop && slider.active.last) { return; }
	      var pagerIndex = parseInt(slider.active.index) + 1;
	      el.goToSlide(pagerIndex, 'next');
	    };
	
	    /**
	     * Transitions to the prev slide in the show
	     */
	    el.goToPrevSlide = function() {
	      // if infiniteLoop is false and last page is showing, disregard call
	      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }
	      var pagerIndex = parseInt(slider.active.index) - 1;
	      el.goToSlide(pagerIndex, 'prev');
	    };
	
	    /**
	     * Starts the auto show
	     *
	     * @param preventControlUpdate (boolean)
	     *  - if true, auto controls state will not be updated
	     */
	    el.startAuto = function(preventControlUpdate) {
	      // if an interval already exists, disregard call
	      if (slider.interval) { return; }
	      // create an interval
	      slider.interval = setInterval(function() {
	        if (slider.settings.autoDirection === 'next') {
	          el.goToNextSlide();
	        } else {
	          el.goToPrevSlide();
	        }
	      }, slider.settings.pause);
	      // if auto controls are displayed and preventControlUpdate is not true
	      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }
	    };
	
	    /**
	     * Stops the auto show
	     *
	     * @param preventControlUpdate (boolean)
	     *  - if true, auto controls state will not be updated
	     */
	    el.stopAuto = function(preventControlUpdate) {
	      // if no interval exists, disregard call
	      if (!slider.interval) { return; }
	      // clear the interval
	      clearInterval(slider.interval);
	      slider.interval = null;
	      // if auto controls are displayed and preventControlUpdate is not true
	      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }
	    };
	
	    /**
	     * Returns current slide index (zero-based)
	     */
	    el.getCurrentSlide = function() {
	      return slider.active.index;
	    };
	
	    /**
	     * Returns current slide element
	     */
	    el.getCurrentSlideElement = function() {
	      return slider.children.eq(slider.active.index);
	    };
	
	    /**
	     * Returns a slide element
	     * @param index (int)
	     *  - The index (zero-based) of the element you want returned.
	     */
	    el.getSlideElement = function(index) {
	      return slider.children.eq(index);
	    };
	
	    /**
	     * Returns number of slides in show
	     */
	    el.getSlideCount = function() {
	      return slider.children.length;
	    };
	
	    /**
	     * Return slider.working variable
	     */
	    el.isWorking = function() {
	      return slider.working;
	    };
	
	    /**
	     * Update all dynamic slider elements
	     */
	    el.redrawSlider = function() {
	      // resize all children in ratio to new screen size
	      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());
	      // adjust the height
	      slider.viewport.css('height', getViewportHeight());
	      // update the slide position
	      if (!slider.settings.ticker) { setSlidePosition(); }
	      // if active.last was true before the screen resize, we want
	      // to keep it last no matter what screen size we end on
	      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }
	      // if the active index (page) no longer exists due to the resize, simply set the index as last
	      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }
	      // if a pager is being displayed and a custom pager is not being used, update it
	      if (slider.settings.pager && !slider.settings.pagerCustom) {
	        populatePager();
	        updatePagerActive(slider.active.index);
	      }
	      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }
	    };
	
	    /**
	     * Destroy the current instance of the slider (revert everything back to original state)
	     */
	    el.destroySlider = function() {
	      // don't do anything if slider has already been destroyed
	      if (!slider.initialized) { return; }
	      slider.initialized = false;
	      $('.bx-clone', this).remove();
	      slider.children.each(function() {
	        if ($(this).data('origStyle') !== undefined) {
	          $(this).attr('style', $(this).data('origStyle'));
	        } else {
	          $(this).removeAttr('style');
	        }
	      });
	      if ($(this).data('origStyle') !== undefined) {
	        this.attr('style', $(this).data('origStyle'));
	      } else {
	        $(this).removeAttr('style');
	      }
	      $(this).unwrap().unwrap();
	      if (slider.controls.el) { slider.controls.el.remove(); }
	      if (slider.controls.next) { slider.controls.next.remove(); }
	      if (slider.controls.prev) { slider.controls.prev.remove(); }
	      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }
	      $('.bx-caption', this).remove();
	      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }
	      clearInterval(slider.interval);
	      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }
	      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }
	      //remove self reference in data
	      $(this).removeData('bxSlider');
	    };
	
	    /**
	     * Reload the slider (revert all DOM changes, and re-initialize)
	     */
	    el.reloadSlider = function(settings) {
	      if (settings !== undefined) { options = settings; }
	      el.destroySlider();
	      init();
	      //store reference to self in order to access public functions later
	      $(el).data('bxSlider', this);
	    };
	
	    init();
	
	    $(el).data('bxSlider', this);
	
	    // returns the current jQuery object
	    return this;
	  };
	
	})(jQuery);


/***/ },
/* 8 */
/***/ function(module, exports) {

	/*
	 * jQuery plugin to wrap elements
	 *
	 * http://jsbin.com/idize
	 *
	 */
	
	module.exports = function ($) {
	
	    $.fn.wrapChildren = function (options) {
	
	        options = $.extend({
	            childElem: undefined,
	            sets: 1,
	            wrapper: 'div'
	        }, options || {});
	
	        if (options.childElem === undefined) {
	            return this;
	        } else {
	            return this.each(function () {
	                var elems = $(this).children(options.childElem);
	                var arr = [];
	
	                elems.each(function (i, value) {
	                    arr.push(value);
	                    if (((i + 1) % options.sets === 0) || (i === elems.length - 1)) {
	                        var set = $(arr);
	                        arr = [];
	                        set.wrapAll(document.createElement(options.wrapper));
	                    }
	                });
	            });
	        }
	    }
	
	};


/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = function ($) {
	    var pageDropdowns = [];
	    var closePageDropdowns = function (except) {
	        for (var i = 0; i < pageDropdowns.length; i++) {
	            pageDropdowns[i].each(function () {
	                var pageDropdown = $(this);
	                if (!except || except.length != 1 || pageDropdown.get(0) != except.get(0)) {
	                    pageDropdown.removeClass('active');
	                }
	            });
	        }
	    };
	
	    $('body').click(function () {
	        closePageDropdowns(null);
	    });
	
	    var init = function (dropdowns, opt) {
	        var _opt = $.extend({changeListeners: [], isMenu: false}, opt);
	
	        pageDropdowns.push(dropdowns);
	
	        dropdowns.each(function () {
	            var dropdown = $(this);
	            dropdown.data('dropdown-options', _opt);
	
	            dropdown.find('a.display').click(function () {
	                dropdown.toggleClass('active');
	                closePageDropdowns(dropdown);
	                return false;
	            });
	
	            if (opt && opt.values) {
	                setOptions(dropdown, opt.values);
	            }
	
	            if (opt && opt.initialValue) {
	                select(dropdown, opt.initialValue);
	            }
	            initOptions(dropdown, true);
	        });
	    };
	
	    var optionValue = function (dropdown, key) {
	        var opt = dropdown.data('dropdown-options');
	        return opt ? opt[key] : null;
	    };
	
	    var invokeOptionExt = function (dropdown, fkey, a, b, c) {
	        var f = optionValue(dropdown, fkey);
	        if (f) {
	            f(a, b, c);
	        }
	    };
	
	    var initOptions = function (dropdown, readInputValue) {
	        var options = dropdown.find('.options > a');
	        dropdown.toggleClass('disabled', options.length < 2);
	        if (!dropdown.data('dropdown-options').isMenu) {
	            options.click(function () {
	                selectAndNotify(dropdown, $(this).attr('data-value'));
	                closePageDropdowns(dropdown);
	                return false;
	            });
	
	            if (readInputValue) {
	                var v = dropdown.find('input:hidden').val();
	                if (typeof v !== 'undefined') {
	                    select(dropdown, v);
	                }
	            }
	        }
	    };
	
	    var fireOnSelect = function (dropdown) {
	        var opt = dropdown.data('dropdown-options');
	        for (var i = 0; i < opt.changeListeners.length; i++) {
	            opt.changeListeners[i]();
	        }
	    };
	
	    var selectAndNotify = function (dropdown, value) {
	        select(dropdown, value);
	        fireOnSelect(dropdown);
	        invokeOptionExt(dropdown, 'onselect', value);
	    };
	
	    var select = function (dropdown, value) {
	        var link = dropdown.find('a[data-value="' + value + '"]');
	        dropdown.find('a.display span').html(link.html());
	        link.addClass('selected');
	        dropdown.find('a[data-value!="' + value + '"]').removeClass('selected');
	        dropdown.removeClass('active');
	        dropdown.find('input:hidden').val(value);
	    };
	
	    var setOptions = function (dropdown, options, selectedKey) {
	        var optionsContainer = dropdown.find('.options');
	        optionsContainer.empty();
	        var selected = null;
	        for (var i = 0; i < options.length; i++) {
	            var o = options[i];
	            var isSelected = o[0] == selectedKey;
	            if (isSelected) {
	                selected = o;
	            }
	
	            $('<a href="#"></a>').attr('data-value', o[0]).html(o[1]).toggleClass('selected', isSelected).appendTo(optionsContainer);
	        }
	
	        if (selected) {
	            dropdown.find('a.display span').html(selected[1]);
	        }
	
	        initOptions(dropdown, false);
	    };
	
	    var value = function (dropdown) {
	        return dropdown.find('.options a.selected').attr('data-value');
	    };
	
	    var addChangeListener = function (dropdowns, listener) {
	        dropdowns.each(function () {
	            var dropdown = $(this);
	            var opt = dropdown.data('dropdown-options');
	            opt.changeListeners.push(listener);
	            dropdown.data('dropdown-options', opt);
	        });
	    };
	
	    $.fn.cityDropdown = function (opt, p1, p2) {
	        if (typeof opt === 'string') {
	            switch (opt) {
	                case 'disable':
	                    break;
	                case 'enable':
	                    break;
	                case 'select':
	                    select(this, p1);
	                    break;
	                case 'setOptions':
	                    setOptions(this, p1, p2);
	                    break;
	                case 'value':
	                    return value(this);
	                case 'change':
	                    return addChangeListener(this, p1);
	                default:
	                    break;
	            }
	        } else {
	            init(this, opt);
	        }
	        return this;
	    };
	};


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function ($) {
	
	    var scrollTo = __webpack_require__(11),
	
	        init = function (widgets) {
	            var w = $(window),
	                map = {};
	
	            widgets.each(function () {
	                var widget = $(this),
	                    contentPanels = widget.find(">div >.content-panel"),
	
	                    id = widget.attr('id') || 'tab',
	                    activate = function (anchor) {
	                        var match = (anchor.attr('href') || '').match(/^#(.+)$/),
	                            newHeader = anchor.parent("h2");
	                        if (match) {
	                            var params = {},
	                                isTab = anchor.parent('li').length > 0,
	                                alreadySelected = !isTab && anchor.closest('.tab-panel').hasClass('selected'),
	                                contentPanel = anchor.closest('.tab-panel').find('.panel-content');
	
	                            params[id] = alreadySelected ? null : match[1];
	                            select(widget, params[id] || false);
	
	                            if (!$.isEmptyObject(newHeader.offset())) {
	                                $('html:not(:animated), body:not(:animated)').animate({scrollTop: newHeader.offset().top}, 'slow');
	                            }
	
	                            contentPanels.removeAttr('tabindex');
	
	                            if (anchor.parent().hasClass('accordion-toogle')) {
	                                contentPanel.attr('tabindex', '0');
	                                contentPanel.focus();
	                            } else {
	                                anchor.focus();
	                            }
	
	                            $.bbq.pushState(params);
	                        }
	                    };
	
	                $('a[href^="#' + id + '="]').each(function () {
	                    var anchor = $(this),
	                        match = anchor.attr('href').match(/#([a-zA-Z0-9]+)=[a-zA-Z0-9]+/);
	
	                    if (match) {
	                        anchor.click(function () {
	                            $('html, body').animate({
	                                scrollTop: $('#' + id).offset().top
	                            }, 200);
	                        });
	                    }
	                });
	
	                map[id] = widget;
	
	                widget.find('>ul a, >.tab-panel >.accordion-toogle a').click(function (e) {
	                    activate($(this));
	                    e.preventDefault();
	                }).keydown(function (e) {
	                    if (e.which === 37) {
	                        activate($(this).parent().prev().children('a'));
	                    } else if (e.which === 39) {
	                        activate($(this).parent().next().children('a'));
	                    }
	                });
	            });
	
	            w.on('hashchange', function () {
	                var params = $.bbq.getState();
	                for (var id in map) {
	                    if (map.hasOwnProperty(id)) {
	                        select(map[id], params[id] || false);
	                    }
	                }
	            });
	
	            w.trigger("hashchange");
	        },
	
	        select = function (widget, id) {
	            widget.find('>.tab-panel.default').removeClass('default');
	            widget.find('>ul .selected, >.tab-panel.selected').removeClass('selected');
	
	            if (id) {
	                var hash = '#' + id;
	
	                widget.find('>ul a[href="' + hash + '"]').addClass('selected');
	                widget.find(hash).addClass('selected');
	            } else {
	                widget.find('>ul li').first().find('a').addClass('selected');
	                widget.find('>.tab-panel').first().addClass('default');
	            }
	        };
	
	
	    $.fn.accordionTabs = function (opt) {
	        init(this, opt);
	        return this;
	    };
	};


/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = function (element) {
	    'use strict';
	
	    if (element && !$.isEmptyObject(element.offset())) {
	        $('html:not(:animated), body:not(:animated)').animate({scrollTop: Math.max(0, element.offset().top - 85)}, 'slow');
	    }
	};


/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = function ($) {
	    var access = false,
	
	        init = function (videoContainers, opt) {
	            videoContainers.not('[data-video-id-ready]').each(function () {
	                var container = $(this).attr('data-video-id-ready', 1),
	                    imgGroup = container.find('.youtube-preview'),
	                    iframeId = container.attr('data-video-iframe-id'),
	                    anchor = imgGroup.children('a'),
	                    clickable = anchor.length > 0 ? anchor : imgGroup,
	
	                    load = function () {
	                        var mode = access == 'youku' && container.attr('data-youku-id') ? 'youku' : 'youtube',
	                            src;
	
	                        if (mode === 'youtube') {
	                            src = 'https://www.youtube.com/embed/' + container.attr('data-video-id') +
	                                '?rel=0&autoplay=1&wmode=transparent&controls=' + opt.controls +
	                                '&showinfo=' + opt.showInfo;
	                            if (opt.autoPlay) {
	                                src += '&enablejsapi=1&version=3'
	                            }
	                        } else {
	                            src = 'http://player.youku.com/embed/' + container.attr('data-youku-id');
	                            if (opt.autoPlay) {
	                                src += '&autoplay=1'
	                            }
	                        }
	
	                        var iframe = $('<iframe></iframe>').attr('id', iframeId).attr('src', src).attr('frameborder', 0);
	                        if (opt.allowFullscreen) {
	                            iframe.attr('allowfullscreen', 1);
	                        }
	                        iframe.appendTo(container);
	                        if (opt.callback) {
	                            opt.callback();
	                        }
	                        if (mode === 'youtube' && opt.autoPlay && typeof YT !== 'undefined') {
	                            new YT.Player(iframeId, {
	                                events: {
	                                    'onReady': function (event) {
	                                        event.target.playVideo();
	                                        setTimeout(function () {
	                                            iframe.focus();
	                                        }, 100);
	                                    }
	                                }
	                            });
	                        }
	
	                    };
	
	                clickable.bind('click', function (e) {
	                    e.preventDefault();
	
	                    clickable.unbind().click(function (e) {
	                        e.preventDefault();
	                    });
	
	
	                    if (access === false) {
	                        var test = new Image();
	                        test.onload = function () {
	                            access = 'youtube';
	                            load();
	                        };
	                        test.onerror = function () {
	                            access = 'youku';
	                            load();
	                        };
	                        test.src = "http://youtube.com/favicon.ico";
	                    } else {
	                        load();
	                    }
	                });
	            });
	        };
	
	    $.fn.videoPreview = function (opt) {
	        init(this, $.extend({
	            autoPlay: true,
	            allowFullscreen: false,
	            controls: 2,
	            showInfo: 1
	        }, opt));
	        return this;
	    };
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * from:
	 * http://stackoverflow.com/questions/11803215/how-to-include-multiple-js-files-using-jquery-getscript-method
	 * */
	module.exports = function ($) {
	    var jsPath = __webpack_require__(14);
	
	    $.getMultiJsScripts = function (list, cb, forceXdomain) {
	        var path = jsPath(),
	            i = 0,
	            fetch = function() {
	                if (i < list.length) {
	                    $.ajax({
	                        url: path + list[i++],
	                        dataType: "script",
	                        success: fetch,
	                        cache: false,
	                        crossDomain: forceXdomain || false
	                    });
	                } else {
	                    cb();
	                }
	            };
	
	        fetch();
	    };
	
	};


/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = function () {
	    var path = null;
	    $('script[src]').each(function () {
	        var src = $(this).attr('src'),
	            match = src.match(/(.+\/)([0-9]+\.)?CITY_R\.(min\.)?js(\?v=[0-9]+)?$/);
	
	        if (match) {
	            path = match[1];
	            return false;
	        }
	    });
	
	    return path;
	};

/***/ },
/* 15 */
/***/ function(module, exports) {

	/**
	 * Sends a message to the browser console (Gecko, Webkit) or into the <body> (IE)
	 * @param {String} message: the message to print out
	 */
	
	module.exports = function (message) {
	
	    var debug = function (message) {
	            if (debug.debugLevel > 0 || location.search.match("debug")) {
	                try {
	                    //for Safari, Chrome, Firefox(w/ firebug)
	                    w.console.log(message);
	                } catch (e) {
	                    try {
	                        //for Opera
	                        opera.postError.apply(opera, message);
	                    } catch (e1) {
	                    }
	                }
	            }
	        };
	
	    debug.debugLevel = 0;
	
	    return debug;
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Custom AJAX Method
	 *
	 * // Success
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .done(
	 *     function(data)) {
	 *         doSomething();
	 *     }
	 * );
	 *
	 * // Failure
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .fail(
	 *     function(xhr, status, err)) {
	 *         console.log(status, err);
	 *     }
	 * );
	 *
	 * // Success or Failure
	 * customAJAX('//www.city.ac.uk/fb/search.html', {'somekey': 'somevalue'})
	 * .then(
	 *     function(data)) {
	 *         doSomething();
	 *     },
	 *     function(xhr, status, err) {
	 *         console.log(status, err);
	 *     }
	 * );
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function(inputURL, inputData, inputType) {
	        var promise = $.ajax({
	            url: inputURL,
	            data: inputData,
	            type: (inputType ? inputType : 'get')
	        })
	        .done( function(responseData, status, xhr) {
	            // Pre-determined Logic for Success
	            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
	            // console.log('Success');
	        })
	        .fail( function(xhr, status, err) {
	            // Pre-determined Logic for Failure
	            // (this will run before any `.done()` or `.fail()` where `customAJAX()` is called)
	            // console.log('Failure');
	        });
	        return promise;
	    };
	
	}();


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * returns true if the viewport size has changed -
	 * useful in responsive layout, see
	 * snook.ca/archives/javascript/ie6_fires_onresize
	 */
	module.exports = function (w) {
	
	    return function () {
	
	        var debug = __webpack_require__(15),
	            changed = false,
	            docEl = w.document.documentElement,
	            coolOff = 20, //further calls within this window get
	        //the same return value
	            now = Date.now ? Date.now() : (function () {
	                return new Date().valueOf();
	            }());
	
	        //set up a holder object (if it doesn't exist)
	        w.viewport = w.viewport || {};
	
	        //these need zeroing before we begin (if not already set)
	        w.viewport.dimensions = w.viewport.dimensions || {height: null, width: null};
	
	        //need to handle the situation where many calls to this
	        //function happen in quick succession
	        if (w.viewport.timeStamp && now - w.viewport.timeStamp < coolOff) {
	            debug("within window, returning " + w.viewport.storedResult);
	            return w.viewport.storedResult;
	        }
	
	        //store the time of this call
	        w.viewport.timeStamp = now;
	
	        //have we changed viewport size?
	        if (w.viewport.dimensions.width !== docEl.clientWidth ||
	            w.viewport.dimensions.height !== docEl.clientHeight) {
	            changed = true;
	        }
	
	        //store new dimensions
	        w.viewport.dimensions.height = docEl.clientHeight;
	        w.viewport.dimensions.width = docEl.clientWidth;
	
	        //store this result in case of a re-call within coolOff
	        w.viewport.storedResult = changed;
	
	        debug("viewport changed: " + changed);
	
	        return changed;
	    }
	}(window);


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Create a image Gallery
	 *
	 * @param {Object} a jquery object representing a single instance of a gallery
	 * @param {Boolean} true if the gallery is in a widget, false if in main content body
	 * @return {Object || Undefined} returns the galleria jQuery object if
	 * successful else undefined - for instance if $gallery is not a jQuery object
	 *
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	
	        state = 'not-loaded',
	        queue = [],
	
	
	        create = function (gallery, options) {
	            var root = gallery.attr("id").replace("gallery-", ""),
	                galleryInner = gallery.find(".gallery-inner");
	
	            $.getJSON("/apis/galleries/galleria-json?root=" + root, function (data) {
	                //remove loader
	                gallery.find('span.loading').hide();
	                gallery.css("opacity", "1");
	                options.data_source = data;
	                galleryInner.galleria(options);
	            });
	
	            return galleryInner;
	        },
	
	
	        loadComplete = function () {
	            //get id of root from id of gallery div
	            state = 'loaded';
	            for (var i = 0; i < queue.length; i++) {
	                create(queue[i].gallery, queue[i].options);
	            }
	            queue = [];
	        },
	
	
	        request = function (gallery) {
	            var galleryInner = gallery && gallery.find(".gallery-inner");
	
	            if (!galleryInner || galleryInner.length === 0) {
	                debug("no gallery found");
	            } else {
	
	                var galleriaOptions = {
	                    height: 0.5625,
	                    lightbox: galleryInner.hasClass("lightbox"),
	                    maxScaleRatio: 1,
	                    preload: 2,
	                    showInfo: galleryInner.hasClass("caption"),
	                    imageCrop: false,
	                    debug: false,
	                    extend: function (/* defined but not used: options */) {
	
	                        if ("city" === gallery.attr("data-theme")) {
	                            gallery.prepend($("<div/>", {
	                                "class": "cg-caption"
	                            }));
	
	                            /*loadstart is triggered every time galleria loads an image*/
	                            this.bind("loadstart", function (e) {
	                                var data = this._data[e.index],
	                                //caption is refound here as it needs to be scoped to this gallery
	                                    caption = gallery.find(".cg-caption");
	
	                                if (data.m_caption) {
	                                    caption.html(data.m_caption);
	                                } else {
	                                    caption.html("&nbsp;");
	                                }
	                            });
	
	                        }
	                    }
	                };
	
	
	                if (state === 'loaded') {
	                    create(gallery, galleriaOptions);
	                } else {
	                    if (state === 'not-loaded') {
	                        state = 'loading';
	                        $.getMultiJsScripts([
	                            "lib/jquery/plugins/galleria/galleria-1.4.2/galleria-1.4.2.min.js",
	                            "lib/jquery/plugins/galleria/galleria-1.4.2/themes/classic/galleria.classic.city.min.js"
	                        ], loadComplete, true);
	                    }
	
	                    gallery.prepend($('<div class="loading"><div class="loading__icon"><i class="fa fa-refresh fa-spin"></i></div></span>'));
	                    queue.push({gallery: gallery, options: galleriaOptions});
	                }
	            }
	        };
	
	
	    return request;
	}();


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * sets up a carousel on a page
	 * @param carouselObj : Object
	 *
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15);
	
	    return function ($carouselObj) {
	        if ($carouselObj.length !== 0) {
	            $carouselObj.append($('#main-carousel-slides').html());
	
	            var numSlides = $carouselObj.children().length,
	                $promoWrapper = $carouselObj.parents("#promo-wrapper"),
	                overrideControls = numSlides > 1 ? {} : {
	                    auto: false,
	                    autoControls: false,
	                    touchEnabled: false,
	                    controls: false,
	                    pager: false
	                },
	                // options for the home carousel
	                sliderOptions = ($promoWrapper.attr("data-carousel-type") !== "home") ? {} : {
	                    autoHover: true,
	                    touchEnabled: true,
	                    preventDefaultSwipeX: true,
	                    preventDefaultSwipeY: false,
	                    buildPager: function (index) {
	                        return '<span class="fa fa-circle" aria-hidden="true"></span><span class="sr-only">Go to slide ' + (index + 1) + '</span>';
	                    },
	                    startText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-play"></span><span class="sr-only">Play slides</span>',
	                    stopText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-pause"></span><span class="sr-only">Stop slides</span>',
	                    prevText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-left"></span><span class="sr-only">Previous slide</span>',
	                    nextText: '<span class="bg fa fa-circle" aria-hidden="true"></span><span class="ic fa fa-chevron-right"></span><span class="sr-only">Next slide</span>'
	                },
	                clearingOptions = ($promoWrapper.attr("data-carousel-type") !== "clearing") ? {} : {
	                    auto: false,
	                    controls: false,
	                    pager: false,
	                    autoControls: false,
	                    autoStart: false
	                },
	                initSlider = function () {
	                    var options = $.extend({
	                        auto: true,
	                        autoControls: true,
	                        pause: 15000,
	                        autoHover: true,
	                        touchEnabled: false,
	                        preventDefaultSwipeX: false,
	                        preventDefaultSwipeY: false,
	                        startText: "<span class=\"visuallyhidden\">Start slider</span><span class=\"fa fa-play\"></span>",
	                        stopText: "<span class=\"visuallyhidden\">Pause slider</span><span class=\"fa fa-pause\"></span>",
	                        nextText: "<span class=\"visuallyhidden\">Next slide</span><span class=\"fa fa-caret-right\"></span>",
	                        prevText: "<span class=\"visuallyhidden\">Previous slide</span><span class=\"fa fa-caret-left\"></span>",
	                        controls: true,
	                        adaptiveHeight: true,
	                        onSliderLoad: function (e) {
	                            if (numSlides < 2) {
	                                $promoWrapper.addClass("promo-wrapper--single");
	                            }
	                        }
	                    }, sliderOptions, overrideControls, clearingOptions);
	
	                    $promoWrapper.removeClass("carousel-loading");
	                    $promoWrapper.find(".loading-fa-icon").remove();
	                    $promoWrapper.find(".bxslider").show();
	                    $carouselObj.bxSlider(options);
	                    $promoWrapper.find(".bx-controls").show();
	                };
	
	            //set up slider
	            if (numSlides > 0) {
	                debug("more than 0 slides, need carousel. NumSlides =" + numSlides);
	                initSlider($carouselObj);
	            }
	        }
	    };
	}();


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * gets window width
	 * @param: {Object} - window object
	 * @return: {Number} - window width
	 */
	module.exports = function () {
	    var $ = __webpack_require__(2);
	
	    return function (w) {
	        return Math.round($(w).width());
	    };
	}();

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Initialise Dropdowns
	 */
	module.exports = function () {
	    "use strict";
	
	    var $ = __webpack_require__(2);
	    var contentWrapper = $(".city-health__container");
	    var loading        = $(".city-health__loading");
	    var form           = $(".city-health__form");
	    var inputs         = form.find("input");
	
	    var fixPagination = function() {
	        $(".city-health__pagination--all a").click( function(e) {
	            e.preventDefault();
	            var page = $(this).attr("href").split("result_314729_result_page=")[1];
	            reload({
	                "result_314729_result_page": page
	            })
	        });
	        $(".city-health__pagination--filtered a").click( function(e) {
	            e.preventDefault();
	            var page = $(this).attr("href").split("current_result_page=")[1].split("&")[0];
	            reload({
	                "current_result_page": page
	            })
	        });
	    }
	
	    var reload = function(fixedParams) {
	        var params = $.extend({t: new Date().getTime()}, fixedParams);
	
	        inputs.each(function () {
	            var input = $(this);
	            var name = input.attr("name");
	            var value = input.val();
	
	            if (name && name.length > 0 && value && value.length > 0) {
	                params[name] = value;
	            }
	        });
	
	        contentWrapper.css("display", "none");
	        loading.css("display", "inline-block");
	
	        $.get("//www.city.ac.uk/api/city-health-courses/_nocache", params, function(data) { })
	            .done( function(data) {
	                contentWrapper.html(data);
	            })
	            .always( function(data) {
	                contentWrapper.css("display", "block");
	                loading.css("display", "none");
	                fixPagination();
	            });
	    };
	
	    return function() {
	        $(".city-health__form .dropdown-select").cityDropdown({
	            "onselect": function() {
	                reload();
	            }
	        });
	        fixPagination();
	    };
	
	}();


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * creates dynamic google maps
	 * @return: Undefined
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        onLoad = function (dynamicMap) {
	            var iii,
	                currentMarker,
	                marker,
	                centerMarker,
	                gmap,
	                labelBox,
	                infoWindow,
	                gmapData,
	                userMapCenter,
	                locationRootNode = dynamicMap.attr("data-locations-node"),
	                computedSize = new google.maps.Size(36, 43),
	                infoWindowOffSet = new google.maps.Size(0, -30),
	                gmapColourOptions = [
	                    {
	                        featureType: "landscape",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 65
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "poi",
	                        stylers: [
	                            {
	                                saturation: -40
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.highway",
	                        stylers: [
	                            {
	                                saturation: -80
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.arterial",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "road.local",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "transit",
	                        stylers: [
	                            {
	                                saturation: -60
	                            },
	                            {
	                                lightness: 40
	                            },
	                            {
	                                visibility: "simplified"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "administrative.province",
	                        stylers: [
	                            {
	                                visibility: "off"
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "water",
	                        elementType: "labels",
	                        stylers: [
	                            {
	                                visibility: "on"
	                            },
	                            {
	                                lightness: -10
	                            },
	                            {
	                                saturation: 10
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "water",
	                        elementType: "geometry",
	                        stylers: [
	                            {
	                                lightness: -10
	                            },
	                            {
	                                saturation: 10
	                            }
	                        ]
	                    },
	                    {
	                        featureType: "transit.station",
	                        stylers: [
	                            {
	                                saturation: 30
	                            },
	                            {
	                                lightness: -10
	                            },
	                            {
	                                visibility: "on"
	                            }
	                        ]
	                    }
	                ],
	                attachClickEvent = function (map, marker, labeledBox, description) {
	
	                    // on click on a marker, set the content of infowindow and open it
	                    //also center the map on that marker
	                    google.maps.event.addListener(marker, "click", function () {
	                        infoWindow.setContent("<span class=\"marker-description\">" + description + "<\/span>");
	                        infoWindow.setPosition(marker.position);
	                        infoWindow.open(map);
	                        map.panTo(marker.position);
	                    });
	                },
	                placeCenterMarker = function (map, marker) {
	                    // the marker for the center of the map
	                    centerMarker = new google.maps.Marker({
	                        icon: {
	                            url: marker.icon
	                        },
	                        map: map,
	                        visible: true,
	                        position: new google.maps.LatLng(marker.latitude, marker.longitude),
	                        title: marker.name
	                    });
	
	                    centerMarker.setZIndex(180);
	
	                    google.maps.event.addListener(centerMarker, "click", function () {
	                        infoWindow.setContent("<span class=\"marker-title\">" + centerMarker.title + "<\/span><span class=\"marker-description\">" + marker.description + "<\/span>");
	                        infoWindow.setPosition(centerMarker.position);
	                        infoWindow.open(map);
	                    });
	                },
	                placeAllMarker = function (markers) {
	                    for (iii = 0; iii < markers.length; iii++) {
	
	                        currentMarker = markers[iii];
	
	                        // define a new marker
	                        marker = new google.maps.Marker({
	                            icon: {
	                                url: currentMarker.icon
	                            },
	                            map: gmap,
	                            visible: true,
	                            position: new google.maps.LatLng(currentMarker.latitude, currentMarker.longitude),
	                            title: currentMarker.name
	                        });
	
	                        // set a label for each marker
	                        // uses google map plugin
	                        labelBox = new InfoBox({
	                            content: marker.title,
	                            position: marker.position,
	                            pane: "mapPane",
	                            closeBoxURL: "",
	                            disableAutoPan: true,
	                            boxStyle: {
	                                width: "auto"
	                            }
	                        });
	
	                        labelBox.open(gmap);
	                        attachClickEvent(gmap, marker, labelBox, (currentMarker.description + "&nbsp;"));
	                    }
	                };
	
	            // call the google maps location api in matrix to get the data on the markers and the initial map parameters
	            $.ajax({
	                url: "//www.city.ac.uk/api/google-map-locations?root=" + locationRootNode,
	                dataType: "json"
	            }).done(function (data) {
	                if (data !== null) {
	
	                    // map and markers data
	                    gmapData = data;
	
	                    // create the map
	                    gmap = new google.maps.Map(document.getElementById("dynamic-gmap"), {
	                        scrollwheel: false,
	                        streetViewControl: false,
	                        zoom: gmapData.loadOptions.zoom,
	                        center: new google.maps.LatLng(gmapData.loadOptions.latitude, gmapData.loadOptions.longitude),
	                        styles: gmapColourOptions
	                    });
	
	                    // create a new info window
	                    infoWindow = new google.maps.InfoWindow({pixelOffset: infoWindowOffSet});
	
	                    // create all the markers except the central one
	                    // add a label to each of them
	                    placeAllMarker(gmapData.markers);
	
	                    // add a marker for the center of the map
	                    placeCenterMarker(gmap, gmapData.centerMarker);
	
	                    // on resizing the map, make sure we keep the current center position
	                    google.maps.event.addDomListener(window, "resize", function () {
	                        userMapCenter = gmap.getCenter();
	                        google.maps.event.trigger(gmap, "resize");
	                        gmap.setCenter(userMapCenter);
	                    });
	
	                }
	            });
	        };
	
	    return function (dynamicMap) {
	        if (dynamicMap.length > 0) {
	            $.getMultiJsScripts(['lib/google/map/infobox-packed-1.1.9.js'], onLoad.bind(null, dynamicMap));
	        }
	    };
	
	}();

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2);
	
	    return function (azListings) {
	
	        azListings.each(function () {
	            var me = $(this),
	                letters = me.find('.letter-list a'),
	                letterGroups = me.find('.letter-group'),
	
	                select = function (anchor) {
	                    letters.filter('[href!="' + anchor + '"]').removeClass('selected');
	                    letters.filter('[href="' + anchor + '"]').addClass('selected');
	
	
	                    if (anchor) {
	                        var name = anchor.substr(1);
	
	                        letterGroups.filter('[name!="' + name + '"]').addClass('unselected').removeClass('selected');
	                        letterGroups.filter('[name="' + name + '"]').removeClass('unselected').addClass('selected');
	                    } else {
	                        letterGroups.removeClass('unselected').removeClass('selected');
	                    }
	                };
	
	
	            letterGroups.find('.go-up').click(function (e) {
	                    e.preventDefault();
	                    select(false);
	                })
	                .children('span').html('Show all').end()
	                .children('i').removeClass('fa-arrow-circle-o-up').addClass('fa-reply');
	
	            letters.click(function (e) {
	                select($(this).attr('href'));
	                e.preventDefault();
	            });
	        });
	    };
	}();


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $('.image-accordion label').click(function () {
	            var labelTarget = $(this).attr('for');
	            $('#' + labelTarget).blur();
	            $('#' + labelTarget).focus();
	        });
	        $('.image-accordion input[type="radio"]').change(function () {
	            var radioInput = $(this);
	            $('.image-accordion input[type="radio"]').removeClass('checked');
	            if (this.checked) {
	                radioInput.addClass('checked');
	            }
	        });
	    };
	}();


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Init see more widget
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var widgets = $(".see-more");
	
	        widgets.each(function () {
	            var widget = $(this);
	            var toggle = widget.find('.see-more__toggle');
	            var toggleLabel = toggle.find('.see-more__toggle__label');
	            if (toggleLabel.length === 0) {
	                toggleLabel = toggle;
	            }
	
	            var content = widget.find('.see-more__content');
	            var showText = toggle.html();
	            var hideText = toggle.attr('data-hide-text') || 'Hide';
	            toggle.click(function (e) {
	                e.preventDefault();
	                if (widget.hasClass('see-more--active')) {
	                    toggleLabel.html(showText);
	                    widget.removeClass('see-more--active');
	                    content.slideUp();
	                } else {
	                    widget.addClass('see-more--active');
	                    toggleLabel.html(hideText);
	                    content.slideDown();
	                }
	            });
	        });
	    };
	
	}();


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Toggle Visibility of Image Credit Component
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var $credits = $(".image-credit"),
	            $creditItems = $(".credits-items"),
	            $scpCreditsTitle = $(".credits-title"),
	            creditButtonClass = ".image-credit__button",
	
	            toggleImageCredit = function(node) {
	                var state = node.attr("aria-pressed") === "true" ? "false" : "true";
	                node.attr("aria-pressed", state);
	                node.parent().attr("aria-expanded", state);
	            };
	
	        $credits.each(function () {
	            $(this).find(creditButtonClass).click(function(event) {
	                event.preventDefault();
	                toggleImageCredit($(this));
	            });
	        });
	
	        $scpCreditsTitle.on("click", function () {
	            $(this).toggleClass("credits-title--active")
	                .next(".credits-items").toggleClass("sr-only");
	        });
	    };
	
	}();


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for browsers that don't understand placeholder attribute
	
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        Modernizr = window.Modernizr;
	
	
	    return function () {
	        if (Modernizr && !Modernizr.input.placeholder) {
	            var inputs = $("[placeholder]");
	
	            inputs.focus(function () {
	                var input = $(this);
	                if (input.val() === input.attr("placeholder")) {
	                    input.val("");
	                    input.removeClass("placeholder");
	                }
	            }).blur(function () {
	                var input = $(this);
	                if (input.val() === "" || input.val() === input.attr("placeholder")) {
	                    input.addClass("placeholder");
	                    input.val(input.attr("placeholder"));
	                }
	            }).blur();
	
	            inputs.parents("form").submit(function () {
	                $(this).find("[placeholder]").each(function () {
	                    var input = $(this);
	                    if (input.val() === input.attr("placeholder")) {
	                        input.val("");
	                    }
	                });
	            });
	        }
	    };
	
	}();

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $('.image-carousel').each(function () {
	            var carousel = $(this);
	            var slides = carousel.children();
	            slides.each(function (i) {
	                $(this).attr('data-index', i);
	            }).wrapAll('<div></div>');
	
	            var updateActive = function (slideElement, oldIndex, newIndex) {
	                carousel.find('.image-carouse__item--active').removeClass('image-carouse__item--active');
	                carousel.find('.image-carouse__item[data-index="' + newIndex + '"]').addClass('image-carouse__item--active')
	            };
	
	            var slider = null;
	
	            var options = {
	                controls: true,
	                touchEnabled: true,
	                preventDefaultSwipeX: true,
	                preventDefaultSwipeY: false,
	                nextText: '<span><span class="sr-only">Go to next slide</span><span class="fa fa-chevron-right" aria-hidden="true"></span></span>',
	                prevText: '<span><span class="sr-only">Go to previous slide</span><span class="fa fa-chevron-left" aria-hidden="true"></span></span>',
	                pager: false,
	                moveSlides: 1,
	                slideWidth: 0,
	                firstSlideMargin: 0,
	                onSlideBefore: updateActive,
	                onSlideAfter: updateActive,
	                onSliderLoad: function (currentIndex) {
	                    carousel.find('.bx-controls a').attr('role', 'button');
	
	                    if (parseInt(carousel.find('.image-carouse__item').css('width')) !== options.slideWidth) {
	                        setTimeout(update, 0);
	                    } else {
	                        carousel.find('.image-carouse__item[data-index="' + currentIndex + '"]').addClass('image-carouse__item--active');
	                        carousel.find('.image-carouse__item').css({
	                            'margin-left': options.firstSlideMargin + 'px',
	                            'margin-right': (-options.firstSlideMargin) + 'px'
	                        });
	                    }
	                }
	            };
	
	            var update = function () {
	                var width = carousel.width();
	                if (Modernizr.mq('(min-width: 600px)')) {
	                    options.maxSlides = 2;
	                    options.slideWidth = Math.round(.5 * (20 + width));
	                    options.firstSlideMargin = .25 * width - 5;
	                } else {
	                    options.maxSlides = 1;
	                    options.slideWidth = width;
	                    options.firstSlideMargin = 0;
	                }
	
	
	                if (slider === null) {
	                    slider = carousel.children().bxSlider(options);
	                } else {
	                    slider.reloadSlider(options);
	                }
	            };
	
	            $(window).resize(update);
	        });
	    };
	}();


/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function () {
	    'use strict';
	
	    var initWhiteCards = function () {
	        if ($(window).width() < 600) {
	            $('.white-card').each(function () {
	                var box = $(this),
	                    content = box.find('.white-card__content');
	
	                if (content.height() > 200) {
	                    content.addClass('white-card__content--read-more');
	                    var button = $('<div class="white-card__read-more">' +
	                        '<div class="white-card__read-more__bg"></div>' +
	                        '<a  href="#"><span>read more</span></a>' +
	                        '</div>')
	                        .click(function (e) {
	                            content.removeClass('white-card__content--read-more');
	                            button.remove();
	                            e.preventDefault();
	                        }).appendTo(box);
	                }
	            });
	        }
	
	        $('.white-card .embed-container').videoPreview({allowFullscreen: true});
	    };
	
	    return initWhiteCards;
	}();

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * adds autocomplete functionality to the main search bar, using jQuery UI
	 * @param: {Object} form - jQuery object for form to run autoSuggest on
	 * @param: {Object} input - jQuery object for input elements to run autoSuggest on
	 * @param: {String} collection - the name of the Funnelback collection to query
	 * @retun: {Undefined}
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2),
	
	        arrayDuplicateZapper = function (myArray) {
	            var myUniqueArray = [];
	            $.each(myArray, function (i, el) {
	                if ($.inArray(el, myUniqueArray) === -1) myUniqueArray.push(el);
	            });
	            return myUniqueArray;
	        };
	
	    return function (form, input, collection) {
	        input.autocomplete({
	
	            source: function (request, response) {
	                var fbcollection = collection || "main-all";
	                $.ajax({
	                    url: "/fb/suggest.json?collection=" + fbcollection + "&fmt=json",
	                    dataType: "json",
	                    data: {
	                        partial_query: request.term
	                    },
	                    success: function (data) {
	                        data = arrayDuplicateZapper(data);
	                        response($.map(data, function (item) {
	                            return {
	                                label: item
	                            };
	                        }));
	                    }
	                }); //end $.ajax
	
	            }, //end source function
	
	            minLength: 2,
	            delay: 20,
	
	            //when you have selected something
	            "select": function (event, ui) {
	                //close the drop down
	                //need to create a dummy assignment, to please jslint
	                //close is still performed
	                var c = this.close;
	                //make sure on click the selected value replaces the type value
	                $(this).val(ui.item.value);
	                form.submit();
	            },
	
	            //show the drop down
	            open: function () {
	                $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
	            },
	
	            //close the drop down
	            close: function () {
	                $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
	            }
	
	        });
	    };
	
	}();


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    var $ = __webpack_require__(2),
	
	        screenWidth = -1,
	        inMd = true,
	        slider = null,
	        $w = $(window),
	
	        updateNewsSlider = function () {
	            var $homeNews = $('.news-events-strip__news'),
	                width = Math.round($w.width());
	
	            if (width !== screenWidth) {
	                screenWidth = width;
	
	                var newInMd = screenWidth >= 850;
	                if (newInMd !== inMd) {
	                    inMd = newInMd;
	
	                    if (inMd) {
	                        slider.destroySlider();
	                        setTimeout(function () {
	                            $homeNews.addClass('row').attr('style', '').children().addClass('col-xs-24 col-md-8').css('width', '');
	                        }, 0);
	                        slider = null;
	                    } else {
	                        slider = $homeNews.removeClass('row').children().removeClass('col-xs-24 col-md-8').end().bxSlider({
	                            autoHover: true,
	                            touchEnabled: true,
	                            preventDefaultSwipeX: true,
	                            preventDefaultSwipeY: false,
	                            adaptiveHeight: true,
	                            pager: false,
	                            autoControls: false,
	                            controls: true,
	                            prevText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-left"></i>',
	                            nextText: '<i class="bg fa fa-circle"></i><i class="ic fa fa-chevron-right"></i>'
	                        });
	                    }
	                }
	            }
	        };
	
	    return function () {
	        $w.resize(updateNewsSlider);
	        updateNewsSlider();
	    };
	}();


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    var Cookies = __webpack_require__(33);
	
	    return function ($) {
	        if (!Cookies.get('cookienoticeshown')) {
	            Cookies.set('cookienoticeshown', '1', {expires: 365});
	
	            $('.cookie-notice').show();
	
	            $('.cookie-notice__dismiss button').click(function (event) {
	                event.preventDefault();
	                $('.cookie-notice').fadeOut('fast');
	            });
	        }
	    };
	}();


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * JavaScript Cookie v2.1.0
	 * https://github.com/js-cookie/js-cookie
	 *
	 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
	 * Released under the MIT license
	 */
	(function (factory) {
		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof exports === 'object') {
			module.exports = factory();
		} else {
			var _OldCookies = window.Cookies;
			var api = window.Cookies = factory();
			api.noConflict = function () {
				window.Cookies = _OldCookies;
				return api;
			};
		}
	}(function () {
		function extend () {
			var i = 0;
			var result = {};
			for (; i < arguments.length; i++) {
				var attributes = arguments[ i ];
				for (var key in attributes) {
					result[key] = attributes[key];
				}
			}
			return result;
		}
	
		function init (converter) {
			function api (key, value, attributes) {
				var result;
	
				// Write
	
				if (arguments.length > 1) {
					attributes = extend({
						path: '/'
					}, api.defaults, attributes);
	
					if (typeof attributes.expires === 'number') {
						var expires = new Date();
						expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
						attributes.expires = expires;
					}
	
					try {
						result = JSON.stringify(value);
						if (/^[\{\[]/.test(result)) {
							value = result;
						}
					} catch (e) {}
	
					if (!converter.write) {
						value = encodeURIComponent(String(value))
							.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
					} else {
						value = converter.write(value, key);
					}
	
					key = encodeURIComponent(String(key));
					key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
					key = key.replace(/[\(\)]/g, escape);
	
					return (document.cookie = [
						key, '=', value,
						attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
						attributes.path    && '; path=' + attributes.path,
						attributes.domain  && '; domain=' + attributes.domain,
						attributes.secure ? '; secure' : ''
					].join(''));
				}
	
				// Read
	
				if (!key) {
					result = {};
				}
	
				// To prevent the for loop in the first place assign an empty array
				// in case there are no cookies at all. Also prevents odd result when
				// calling "get()"
				var cookies = document.cookie ? document.cookie.split('; ') : [];
				var rdecode = /(%[0-9A-Z]{2})+/g;
				var i = 0;
	
				for (; i < cookies.length; i++) {
					var parts = cookies[i].split('=');
					var name = parts[0].replace(rdecode, decodeURIComponent);
					var cookie = parts.slice(1).join('=');
	
					if (cookie.charAt(0) === '"') {
						cookie = cookie.slice(1, -1);
					}
	
					try {
						cookie = converter.read ?
							converter.read(cookie, name) : converter(cookie, name) ||
							cookie.replace(rdecode, decodeURIComponent);
	
						if (this.json) {
							try {
								cookie = JSON.parse(cookie);
							} catch (e) {}
						}
	
						if (key === name) {
							result = cookie;
							break;
						}
	
						if (!key) {
							result[name] = cookie;
						}
					} catch (e) {}
				}
	
				return result;
			}
	
			api.get = api.set = api;
			api.getJSON = function () {
				return api.apply({
					json: true
				}, [].slice.call(arguments));
			};
			api.defaults = {};
	
			api.remove = function (key, attributes) {
				api(key, '', extend(attributes, {
					expires: -1
				}));
			};
	
			api.withConverter = init;
	
			return api;
		}
	
		return init(function () {});
	}));


/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    var $menuWrapper = $(".primary-menu-wrapper"),
	        $menuToggle  = $(".primary-menu-toggle"),
	        $menu        = $(".primary-menu"),
	
	        updateToggleLink = function (toggle, isOpen) {
	            toggle.toggleClass("primary-menu__item-toggle--open", isOpen);
	            toggle.attr('aria-expanded', isOpen ? 'true' : 'false');
	        },
	
	        buildMenu = function () {
	            $menu.find("li:has(ul)")
	                 .addClass("primary-menu__item--branch")
	                 .children(".primary-menu__item-interior")
	                 .each(function(index) {
	                     $ariaLabel = "show or hide items under " + $(this).find(".primary-menu__item-text").text();
	                     $(this).append("<a class='primary-menu__item-toggle' href='#' aria-label='" + $ariaLabel + "'></a>");
	                 });
	
	            $menuToggle.attr("aria-label", $menuToggle.find(".primary-menu-toggle__section-name").text() + " menu");
	        },
	
	        highlightCurrentPage = function () {
	            var pathname = (window.location.pathname).replace("/_nocache", "").replace("/_recache", "");
	            $(".primary-menu .primary-menu__item-link[href$='" + pathname  + "']").addClass("primary-menu__item-link--selected");
	        },
	
	        openCurrentSubmenus = function () {
	            $menu.find(".primary-menu__submenu").each(function(index) {
	                if ($(this).find(".primary-menu__item-link--selected").length > 0) {
	                    $(this).show();
	                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), true);
	                }
	                else {
	                    $(this).hide();
	                    updateToggleLink($(this).prev().children(".primary-menu__item-toggle"), false);
	                }
	            });
	        },
	
	        openSubmenu = function ($toggle) {
	            updateToggleLink($toggle, true);
	            $toggle.parent(".primary-menu__item-interior").next().slideDown("fast", function() {
	                closeSameLevelSubmenus($toggle);
	            });
	        },
	
	        closeSameLevelSubmenus = function ($toggle) {
	            var $siblingBranches = $toggle.closest(".primary-menu__item--branch").siblings(".primary-menu__item--branch");
	
	            $.each($siblingBranches, function(index) {
	                if ($(this).find(".primary-menu__item-link--selected").length <= 0) {
	                    updateToggleLink($(this).find(".primary-menu__item-toggle"), false);
	                    $(this).find(".primary-menu__submenu").slideUp("medium");
	                }
	            });
	        },
	
	        closeSubmenu = function ($toggle) {
	            var $enclosingMenuItem = $toggle.closest(".primary-menu__item--branch");
	
	            if ($enclosingMenuItem.find(".primary-menu__item-link--selected").length > 0) {
	                updateToggleLink($toggle, false);
	                $toggle.parent(".primary-menu__item-interior").next().slideUp("fast");
	            }
	            else {
	                updateToggleLink($enclosingMenuItem.find(".primary-menu__item-toggle"), false);
	                $enclosingMenuItem.find(".primary-menu__submenu").slideUp("fast");
	            }
	        },
	
	        initMenu = function () {
	            buildMenu();
	            highlightCurrentPage();
	
	            $menuToggle.attr('aria-expanded', 'false').click(function() {
	                if ($menu.is(":hidden")) {
	                    openCurrentSubmenus();
	                }
	
	                var setOpen = !$menuToggle.hasClass("primary-menu-toggle--open");
	
	                $menuToggle.toggleClass("primary-menu-toggle--open", setOpen);
	                $menuToggle.attr('aria-expanded', setOpen ? 'true' : 'false');
	
	                $menu.slideToggle("fast");
	                return false;
	            });
	
	            $(".primary-menu__item-toggle").click(function() {
	                if ($(this).hasClass("primary-menu__item-toggle--open")) {
	                    closeSubmenu($(this));
	                }
	                else {
	                    openSubmenu($(this));
	                }
	                return false;
	            });
	        };
	
	    return initMenu();
	};
	


/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    var
	        $globalNavToggler = $(".global-nav__toggle"),
	        $headerSearch = $(".header__search"),
	        $headerSearchToggler = $(".header__search__toggle"),
	        $globalNavWrapper = $(".global-nav__wrapper"),
	        $globalNavDropToggler = $(".global-nav__menu-item__toggle"),
	        $utilNav = $(".header__util__audience__button-link"),
	        $body = $('body'),
	        $compactWidth = 748,
	        $stickyHeaderScrollThreshold = 70,
	        $lastScrollTop = 0,
	        $window = $(window),
	
	
	        closeMenus = function () {
	            $(".header__util__item--active").removeClass("header__util__item--active");
	            $(".global-nav__menu-item--active").removeClass("global-nav__menu-item--active");
	            $globalNavDropToggler.attr('aria-expanded', 'false');
	            $utilNav.attr('aria-expanded', 'false');
	        },
	
	        toggleMobileGlobalMenu = function (openMenu) {
	            var openSearch = openMenu === 'search' && !$headerSearch.hasClass("header__search--active");
	            var openNav = openMenu === 'nav' && !$globalNavWrapper.hasClass("global-nav__wrapper--active");
	
	            $globalNavWrapper.toggleClass("global-nav__wrapper--active", openNav);
	            $globalNavToggler.attr('aria-expanded', openNav ? 'true' : 'false');
	
	            $headerSearch.toggleClass("header__search--active", openSearch);
	            $headerSearchToggler.attr('aria-expanded', openSearch ? 'true' : 'false');
	        },
	
	        initSkipLinks = function () {
	            $('#skip-to-query').click(function () {
	                setTimeout(function () {
	                    toggleMobileGlobalMenu('search');
	                    $('#query').focus();
	                }, 25);
	            });
	            $('#skip-to-accessibility').click(function () {
	                setTimeout(function () {
	                    $('#accessibility').focus();
	                }, 25);
	            });
	        },
	
	
	        updateTabNavigation = function () {
	            if ($window.width() > $compactWidth) {
	                $(".global-nav__menu-item__link").each(function() {
	                    if ($(this).siblings(".global-nav__menu-item__toggle").length) {
	                        $(this).attr("tabindex", -1);
	                    }
	                });
	            }
	            else {
	                $(".global-nav__menu-item__link").removeAttr("tabindex");
	            }
	        },
	
	        updateScrollDown = function () {
	            var $newScrollTop = $(this).scrollTop();
	            $body.toggleClass('scroll-down', ($newScrollTop > $stickyHeaderScrollThreshold) && ($newScrollTop < $lastScrollTop));
	            $lastScrollTop = $newScrollTop;
	        },
	
	        init = function () {
	
	            initSkipLinks();
	
	            /**
	             * Update classname depending on scroll position
	             */
	            $window.scroll(updateScrollDown);
	            updateScrollDown();
	
	            /**
	             * With JS enabled, links going to other pages should not be reachable through the tab key,
	             * as opposed to toggle links - except when menu is in compact view.
	             */
	            $window.resize(updateTabNavigation);
	            updateTabNavigation();
	
	            closeMenus();
	
	            $utilNav.on("click", function (e) {
	                var
	                    that = $(this),
	                    parent = that.parent("li"),
	                    targetIsActive = parent.hasClass("header__util__item--active");
	
	                closeMenus();
	                if (!targetIsActive) {
	                    parent.addClass("header__util__item--active");
	                    that.attr('aria-expanded', 'true');
	                }
	
	
	                e.preventDefault();
	                e.stopPropagation();
	                return false;
	            });
	
	            $body.click(function () {
	                closeMenus();
	            });
	
	            /**
	             * Not perfect as it relies on keyup instead of keydown
	             */
	            $body.keyup(function (e) {
	                if (e.keyCode === 9 &&
	                    $('.header__util__item--active,.global-nav__menu-item--active').length > 0 && !$(e.target).is('.header__util__item--active,.header__util__item--active *, .global-nav__menu-item--active, .global-nav__menu-item--active *')) {
	                    closeMenus();
	                }
	            });
	
	            $globalNavDropToggler.on("click", function (e) {
	                var
	                    that = $(this),
	                    parent = that.parents(".global-nav__menu-item"),
	                    targetIsActive = parent.hasClass("global-nav__menu-item--active");
	
	                closeMenus();
	                if (!targetIsActive) {
	                    parent.addClass("global-nav__menu-item--active");
	                    that.attr('aria-expanded', 'true');
	                }
	
	
	                e.preventDefault();
	                e.stopPropagation();
	                return false;
	            });
	
	            toggleMobileGlobalMenu('none');
	            $globalNavToggler.on("click", function (e) {
	                e.preventDefault();
	                toggleMobileGlobalMenu('nav');
	            });
	
	            $headerSearchToggler.on("click", function (e) {
	                e.preventDefault();
	                toggleMobileGlobalMenu('search');
	            });
	        };
	
	    return init();
	};
	


/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = function () {
	
	    init = function () {
	
	        $(".link--goto").click(function() {
	            $('html,body').scrollTop(0);
	            return false;
	        });
	    };
	
	    return init();
	};
	


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Init see popup
	 */
	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        var anchors = $("a[data-popup-dialog]");
	
	        anchors.each(function () {
	            var anchor = $(this);
	
	            anchor.click(function (e) {
	            e.preventDefault();
	            var link = $(e.currentTarget).attr('href');
	
	            $('#'+anchor.attr('data-popup-dialog')).dialog({
	                modal: true,
	                title: anchor.attr('title'),
	                width: 800,
	                height: 500,
	                draggable: false,
	                resizable: false,
	                buttons: [
	                    {
	                        text: "Cancel",
	                        click: function() {
	                            $( this ).dialog( "close" );
	                        }
	                    },
	                    {
	                        text: "Accept",
	                        click: function() {
	                            window.location = link;
	                            $( this ).dialog( "close" );
	                        }
	                    }
	                ]
	
	            });
	        });
	    });
	  };
	
	}();


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function () {
	        $(".responsive-table").each(function() {
	            var thetable = $(this);
	            thetable.find("tbody td").each(function() {
	                $(this).attr("data-th", thetable.find("thead th:nth-child("+($(this).index()+1)+")").text());
	            });
	        });
	    };
	}();


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    'use strict';
	
	    var $ = __webpack_require__(2);
	
	    return function() {
	        $('.cyclic-popup-item__title').click(function() {
	            var clickedItemLink = $(this);
	            var clickedItem     = $(this).closest('.cyclic-popup-item');
	            var popupGroup      = clickedItemLink.closest(".cyclic-popup-group");
	            var allPopupItems   = popupGroup.children('.cyclic-popup-item');
	            var currentIndex    = 0;
	            var noOfPopupItems  = allPopupItems.length;
	
	            allPopupItems.each(function(index, value) {
	                if ($(this).get(0) === clickedItem.get(0)) {
	                    currentIndex = index;
	                }
	            });
	
	            function getNextItem(reverse) {
	                if (reverse == false) {
	                    if (currentIndex == noOfPopupItems - 1) {
	                        currentIndex = 0;
	                    }
	                    else {
	                        currentIndex++;
	                    }
	                }
	                else {
	                    if (currentIndex == 0) {
	                        currentIndex = noOfPopupItems - 1;
	                    }
	                    else {
	                        currentIndex--;
	                    }
	                }
	
	                var nextItem = allPopupItems.get(currentIndex);
	                return nextItem;
	            }
	
	            $('<div></div>').dialog({
	                modal: true,
	                draggable: false,
	                resizable: false,
	                buttons: [
	                    {
	                        text: 'next',
	                        click: function() {
	                            $(this).html($(getNextItem(false)).find('.cyclic-popup-item__detail').text());
	                        }
	                    },
	                    {
	                        text: 'previous',
	                        click: function() {
	                            $(this).html($(getNextItem(true)).find('.cyclic-popup-item__detail').text());
	                        }
	                    }
	                ],
	                close: function(){ $(this).dialog('destroy')},
	                create:function () {
	                    $(this).closest('.ui-dialog').addClass('cyclic-popup');
	                    $(this).html(clickedItem.find('.cyclic-popup-item__detail').text());
	                }
	            })
	
	            return false;
	        });
	    };
	}();


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2);
	
	    $(function () {
	        if (typeof CITY_OPTIONS !== 'undefined' && CITY_OPTIONS.defer) {
	            for (var i = 0; i < CITY_OPTIONS.defer.length; i++) {
	                CITY_OPTIONS.defer[i]();
	            }
	        }
	    });
	};


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * creates and adds a function as the default error handler for jQuery ajax operations
	 */
	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	        webService = "//webapps.city.ac.uk/matrix/services/jQueryError.php",
	
	        notify = function (event, jqXHR, ajaxSettings, errorThrown) {
	
	            //insert an "image" which has a web service as the src,
	            //the web service sends email to ucs-webteam
	            $("<img />", {
	                src: webService + "?u=" + escape(document.location.href) + "&s=" +
	                escape(ajaxSettings.url) + "&t=" + ajaxSettings.type + "&e=" + escape(errorThrown),
	                style: "display: none"
	            }).appendTo("#footer");
	
	        };
	
	    //register this as a global ajax event handler
	    $(function () {
	        $(document).ajaxError(notify);
	    });
	};


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	    "use strict";
	
	    var $ = __webpack_require__(2),
	        debug = __webpack_require__(15),
	
	        createGallery = __webpack_require__(18),
	        downloadFileTypes = __webpack_require__(43),
	        viewportChanged = __webpack_require__(17),
	        /**
	         * object to hold google maps markers
	         */
	        googleMapsMarkers = {},
	
	        /**
	         * overlay pane for map
	         */
	        mapOverlayPane = null,
	        /**
	         *
	         * What needs to happen after a bxslider carousel has finished loading:
	         * 1. inject controls into @widget. finds default bxslider controls, replace with font awesome icons and append in widget
	         * 2. add scrollable class to widget content
	         * 3. remove loading spinner
	         * @param jQuery widget: a jquery wrapped .widget (needed for widget controls)
	         * @param string middleButtonText: what to write on the middle button (defaults to "All") (needed for widget controls)
	         * @param string allLink: the "all" middle button href (needed for widget controls)
	         */
	        afterBxSliderLoaded = function (widget, allLink, middleButtonText) {
	
	            var leftWidgetButton = "<i class=\" fa fa-caret-left\"></i>",
	                rightWidgetButton = "<i class=\" fa fa-caret-right\"></i>",
	            // carousel controls
	                previousButton = widget.find(".bx-prev"),
	                nextButton = widget.find(".bx-next"),
	                inputMiddleButtonText = middleButtonText ? middleButtonText : "All";
	
	            previousButton.empty().append(leftWidgetButton);
	            nextButton.empty().append(rightWidgetButton);
	            //add the "all" button between previous and next buttons if it is needed
	            if (allLink) {
	                previousButton.after("<a href=\"" + allLink + "\" class=\"bx-all\" >" + inputMiddleButtonText + "</a>");
	            }
	            widget.find(".bx-controls-direction").appendTo(widget);
	            widget.children('h2').addClass('controls-direction');
	
	            //add class
	            widget.find(".widget-content").addClass("scrollable");
	
	            //remove widget loading spinner
	            widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	
	        },
	
	        /**
	         * news widget
	         */
	        initNews = function () {
	
	            var newsWidget = $("#news-widget"),
	                newsList = newsWidget.find("#news-results"),
	                allLink = "//www.city.ac.uk/news",
	                showAmount = 3;
	
	            //reformat the content into column sizes based on determined size, if there are more than showAmount items
	            if ($("#news-results > .article").size() > showAmount) {
	                //set up sortable
	                newsList.wrapChildren({
	                    childElem: ".article",
	                    sets: showAmount
	                });
	                //launch bxslider
	                newsList.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded(newsWidget, allLink);
	                    }
	                });
	            }
	            else {
	                //remove widget loading spinner, case where the carousel isn't needed
	                newsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	        },
	
	        /**
	         * events widget
	         */
	        initEvents = function () {
	
	            var eventsWidget = $("#events-widget"),
	                eventsList = $("#events-results"),
	                allLink = "//www.city.ac.uk/events",
	                showAmount = 3;
	
	            //click anywhere on event
	            $(".vevent", eventsList).click(function () {
	                window.location = $(this).find("a").attr("href");
	                return false;
	            });
	
	            if ($("#events-results > .vevent").size() > showAmount) {
	                //sort the children into groups of showAmount
	                eventsList.wrapChildren({
	                    childElem: ".event",
	                    sets: showAmount
	                });
	                eventsList.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded(eventsWidget, allLink);
	                    }
	                });
	            }
	            else {
	                //remove widget loading spinner, case where the carousel isn't needed
	                eventsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	
	        },//end initEvents
	
	        initFlickr = function () {
	
	            var $widget = $("#flickr-widget"),
	                $slideWrapper = $widget.find("ul"),
	                loadedOtherPics,
	                bxSliderCallback = function () {
	
	                    debug("flickr callback...");
	
	                    $(".widget-content", $widget).each(function () {
	
	                        //find the ul
	                        var firstdiv = $("ul div:first-child", this),
	                        //ul = $("ul", this), defined not used
	                            thisJq = $(this),
	                            height = firstdiv.height(),
	                            width = firstdiv.width();
	
	                        //add classes
	                        thisJq.addClass("scrollable");
	
	                        //add css to .widget-content
	                        thisJq.stop().animate({
	                            "min-height": height
	                        });
	                        thisJq.css("width", width);
	
	                        //remove loading icon when the content is ready
	                        $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	
	                    });
	
	                    afterBxSliderLoaded($widget);
	
	                };
	
	            //attach an event to init the rest of the pics
	            $widget.mouseenter(function () {
	
	                //we only want to run this once
	                if (loadedOtherPics) {
	                    return;
	                }
	
	                loadedOtherPics = true;
	
	                //translate all the span.imageurl"s into actual images
	                //(saves some rendering time)
	                $("a .imageurl", $widget).each(function () {
	
	                    var thisJq = $(this),
	                        text = thisJq.text(),
	                        imgTag = "<img src=\"" + text + "\" alt=\"\">";
	
	                    thisJq.parent().text("").prepend(imgTag);
	
	                });
	
	                $("p .imageurl", $widget).each(function () {
	                    var thisJq = $(this),
	                        text = thisJq.text(),
	                        styleAttr = "background-image: url(" + text + ");";
	
	                    thisJq.parent().attr("style", styleAttr);
	                    thisJq.remove();
	
	                });
	
	            });
	
	            //set up scrollable
	            $slideWrapper.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                minSlides: 1,
	                maxSlides: 4,
	                slideWidth: 330,
	                slideMargin: 0,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initFlickr
	
	        /**
	         * courses widget
	         */
	        initCourses = function () {
	
	            var $widget = $("#courses-widget"),
	                widgetContent = $widget.find(".widget-content");
	
	            widgetContent.accordion({
	                heightStyle: "content",
	                collapsible: true,
	                active: false,
	                animate: false,
	                icons: {
	                    "header": "ui-icon-triangle-1-s",
	                    "headerSelected": "ui-icon-triangle-1-n"
	                },
	                create: function () {
	                    afterBxSliderLoaded($widget);
	                }
	            });
	
	        },//end initCourses
	
	        /**
	         * testimonials widget
	         */
	        initTestimonials = function () {
	            var $testimonialsWidget = $("#testimonials-widget"),
	                widgetContent = $testimonialsWidget.find(".widget-content"),
	                testimonialsList = widgetContent.find("ul"),
	                bxSliderCallback;
	
	            //check there is more than 1 testimonials and if so, start the carousel
	            if ($("li", testimonialsList).length < 2) {
	                debug("Less than 2 testimonials, no need for carousel");
	                $testimonialsWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($testimonialsWidget);
	                $testimonialsWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            testimonialsList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                slideMargin: 10,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initTestimonials
	
	        /**
	         * profiles widget
	         */
	        initProfiles = function () {
	
	            var $profilesWidget = $("#profiles-widget"),
	                widgetContent = $profilesWidget.find(".widget-content"),
	                profilesList = widgetContent.find("ul"),
	                bxSliderCallback;//end vars
	
	            //check there is more than 1 testimonials and if so, start the carousel
	            if ($("li", profilesList).length < 2) {
	                debug("Less than 2 testimonials, no need for carousel");
	                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($profilesWidget);
	                $profilesWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            profilesList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end profilesWidgets
	
	        /**
	         * spotlight on research widget
	         */
	        initSpotlightResearch = function () {
	
	            var $spotlightResearchWidget = $("#spotlight-research-widget"),
	                widgetContent = $spotlightResearchWidget.find(".widget-content"),
	                spotlightResearchList = widgetContent.find("ul"),
	                bxSliderCallback;//end vars
	
	            //check there is more than 1 spotlight on research items and if so, start the carousel
	            if ($("li", spotlightResearchList).length < 2) {
	                debug("Less than 2 spotlight on research, no need for carousel");
	                $spotlightResearchWidget.removeClass("widget-loading").addClass("widget-one-item").children('.loading-fa-icon').remove();
	                return;
	            }
	
	            bxSliderCallback = function () {
	                //add controls
	                afterBxSliderLoaded($spotlightResearchWidget);
	                $spotlightResearchWidget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            };
	
	            //initialise bxslider
	            spotlightResearchList.bxSlider({
	                auto: false,
	                autoControls: false,
	                pause: 15000,
	                autoHover: true,
	                touchEnabled: false,
	                pager: false,
	                infiniteLoop: false,
	                hideControlOnEnd: true,
	                adaptiveHeight: true,
	                onSliderLoad: function () {
	                    bxSliderCallback();
	                }
	            });
	
	        },//end initSpotlightResearch
	
	        /**
	         * RSS widget
	         */
	        initRss = function () {
	
	            var $widget = $("#rss-widget"),
	                widgetContent = $widget.find(".widget-content"),
	                items = widgetContent.find(".items"); //end vars
	
	            if (items.children().length > 1) {
	                //load up bxslider
	                items.bxSlider({
	                    auto: false,
	                    autoControls: false,
	                    pause: 15000,
	                    autoHover: true,
	                    touchEnabled: false,
	                    pager: false,
	                    infiniteLoop: false,
	                    hideControlOnEnd: true,
	                    adaptiveHeight: true,
	                    onSliderLoad: function () {
	                        afterBxSliderLoaded($widget);
	                    }
	                });
	
	            } else {
	                //don't load the bxslider carousel , just show widget
	                $widget.removeClass("widget-loading").children('.loading-fa-icon').remove();
	            }
	
	        },
	
	        /**
	         * Call to action widget
	         */
	        initCallToAction = function () {
	
	            var start_date = $("#start_date").val(),
	                end_date = $("#end_date").val(),
	                sd = new Date(),
	                ed = new Date(),
	                cd,
	                splitDate = function (dt, idt) {
	
	                    var dateArray = dt.split("/"),
	                        endofArray = dateArray[2].split(" ");
	
	                    idt.setFullYear(endofArray[0]);
	                    idt.setMonth(dateArray[1] - 1);
	                    idt.setDate(dateArray[0]);
	
	                    return idt;
	
	                };
	
	            sd = splitDate(start_date, sd);
	            ed = splitDate(end_date, ed);
	
	            //current date
	            cd = new Date();
	
	            if (ed >= cd && sd <= cd) {
	
	                //Show the on date
	                $("#content_on_date").attr("class", "widget-content cta-widget-show");
	                $("#content_out_of_date").attr("class", "cta-widget-hide");
	
	            } else {
	
	                //Show out of date
	                $("#content_out_of_date").attr("class", "widget-content cta-widget-show");
	                $("#content_on_date").attr("class", "cta-widget-hide");
	            }
	
	        },
	
	        /**
	         * initiates an image gallery widget
	         *
	         * @return {object || undefined} returns the galleria jQuery object if
	         * successful else undefined - for instance if $gallery is not a jQuery object
	         *
	         */
	        initGallery = function () {
	
	            var $gallery = $("#gallery-widget .gallery");
	            return createGallery($gallery, true);
	
	        },
	
	        initFreeText = function () {
	            $("div.free-text a").unbind("click").click(function () {
	            });
	        },
	
	        /**
	         * The master widget initialiser, calls all the other init{map,events...} functions
	         */
	        initWidgets = function () {
	
	            var widgets = {
	                    "events": {
	                        f: initEvents
	                    },
	                    "news": {
	                        f: initNews
	                    },
	                    "flickr": {
	                        f: initFlickr
	                    },
	                    "courses": {
	                        f: initCourses
	                    },
	                    "testimonials": {
	                        f: initTestimonials
	                    },
	                    "rss": {
	                        f: initRss
	                    },
	                    "gallery": {
	                        f: initGallery
	                    },
	                    "cta": {
	                        f: initCallToAction
	                    },
	                    "freetext": {
	                        f: initFreeText
	                    },
	                    "profiles": {
	                        f: initProfiles
	                    },
	                    "spotlight-research": {
	                        f: initSpotlightResearch
	                    }
	                },
	
	                id;
	
	
	            //loop through each widget type and init if present
	            for (id in widgets) {
	                if (widgets.hasOwnProperty(id)) {
	                    //bail here if the widget is not present
	                    if ($("#" + id + "-widget").length === 0) {
	                        debug("no " + id + " widget");
	                    } else if (typeof widgets[id].f !== "function") {
	                        debug("can't find init func of " + id + " widget");
	                    } else {
	                        //run the init
	                        debug("running init func of " + id + " widget");
	                        widgets[id].f.apply();
	                    }
	                }
	            }
	        };
	
	    return initWidgets;
	
	}();


/***/ },
/* 43 */
/***/ function(module, exports) {

	/**
	 * used for detecting download filetypes by extension
	 */
	
	module.exports = ["doc", "docx", "xls", "xlsx", "ppt", "pptx", "pps", "ppsx",
	    "pdf", "jpg", "png", "gif", "zip", "txt", "rtf", "mp3"];

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        viewportChanged = __webpack_require__(17),
	        getWindowWidth = __webpack_require__(20),
	
	        bindMegaDdEvents = __webpack_require__(45),
	
	        $window = $(window),
	        $body = $("body"),
	
	        $globalNav = $body.find("#global-nav1"),
	        $navLis = $globalNav.children("li"),
	        $megaLinks = $globalNav.find(".mega"),
	        $drops = $globalNav.find(".drop"),
	
	
	        $responsiveTogglers = $(".responsive-toggler"),
	        $togglees = $(".toggle"),
	        $utilNav = $("#util-nav"),
	
	        breakpoints = __webpack_require__(46),
	
	        onResize = function () {
	            if (viewportChanged()) {
	                var newWidth = getWindowWidth(window);
	
	                if (newWidth >= breakpoints.wide) {
	                    //big to small?
	                    $body.addClass("screen-wide").removeClass("screen-thin screen-medium");
	
	                    // if this is the first time going to desktop size,
	                    // we need to bind the event handlers
	                    bindMegaDdEvents($megaLinks, $navLis, $drops);
	
	                    // close any openers which were open before width change
	                    $responsiveTogglers.removeClass("active");
	                    $togglees.removeClass("active");
	                    $utilNav.removeClass("hidden");
	
	                } else if (newWidth >= breakpoints.medium) {
	                    //small to big?
	                    $body.addClass("screen-medium").removeClass("screen-thin screen-wide");
	                    $utilNav.addClass("hidden");
	                    $drops.removeClass("active").hide();
	                    $navLis.removeClass("active");
	                } else {
	                    $body.addClass("screen-thin").removeClass("screen-medium screen-wide");
	                }
	            }
	        },
	
	        init = function () {
	            $window.resize(onResize);
	            $window.resize();
	
	            // attach click events on mobile navigation togglers
	            $responsiveTogglers.on("click", function (e) {
	
	                var $self = $(this),
	                    $toggle = $self.next(".toggle");
	
	                e.preventDefault();
	                $self.toggleClass("active");
	                $toggle.toggleClass("active");
	            });
	
	            // init the global navigation drop downs
	            $drops.hide();
	
	            if (getWindowWidth(window) < breakpoints.wide) {
	                $utilNav.children("li").clone().appendTo($globalNav);
	            }
	        };
	
	    return init;
	}();

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	
	
	    // we only need this stuff on a desktop sized browser
	    var $ = __webpack_require__(2),
	        $body = $('body'),
	        $query = $("#search #query"),
	
	        breakpoints = __webpack_require__(46),
	
	        boundDropEvents = false,
	
	        bindMegaDdEvents = function ($megaLinks, $navLis, $drops) {
	            if (!boundDropEvents) {
	
	                //attach click, keydown and focus handler
	                $megaLinks.on("click keydown focus", function (e) {
	
	                    var $target = $(this),
	                        $li = $target.closest("li"),
	                        $drop = $li.find(".drop");
	
	                    // if we have bound the event, but are now on smaller width we don't want to
	                    // show the mega dropdown
	                    if (CITY.getWindowWidth(window) < breakpoints.desktop) {
	                        return;
	                    }
	
	                    //what type of event was fired?
	                    if (e.type === "keydown" && e.keyCode !== 13) {
	                        //if a keypress event but button hit wasn't enter
	                        return;
	                    }
	
	                    if (e.type === "focus") {
	                        //always kill all drop downs when a megaLink receives focus then drop out of fn
	                        $navLis.removeClass("active");
	                        $drops.hide().removeClass("active");
	                        return;
	                    }
	
	                    //if we are here then the event is either a click or "enter" keypress
	
	                    //remove all active class from all other links
	                    $navLis.not($li[0]).removeClass("active");
	                    $drops.not($drop[0]).hide().removeClass("active");
	                    $li.toggleClass("active");
	                    $drop.toggleClass("active");
	                    $drop.show();
	                    e.preventDefault();
	                    e.stopPropagation();
	
	                });
	
	                // on blur of last mega link (search input query will be focussed), close
	                // any open drop down
	                $query.on("focus", function () {
	                    $navLis.removeClass("active");
	                    $drops.hide().removeClass("active");
	                });
	
	                //don't propogate clicks inside mega menus
	                $drops.on("click", function (e) {
	                    e.stopPropagation();
	                });
	
	                //close any open mega menus when page is clicked
	                $body.on("click", function () {
	                    $drops.removeClass("active").hide();
	                    $navLis.removeClass("active");
	                });
	
	                boundDropEvents = true;
	            }
	        };
	
	    return bindMegaDdEvents;
	}();


/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = {
	    "thin": 480,
	    "medium": 768,
	    "wide": 980
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function () {
	
	    var $ = __webpack_require__(2),
	
	        sliders = [
	            __webpack_require__(48),
	            __webpack_require__(49)
	        ],
	
	        create = function (data) {
	            var $carouselWrapper = $(data.id),
	                $carousel = $carouselWrapper.find(".bxslider"),
	                slideCount = $carousel.children().length;
	
	            $carouselWrapper.removeClass("carousel-loading");
	            if (slideCount > 1) {
	                $carousel.bxSlider(data.options(slideCount));
	            }
	        },
	
	        init = function () {
	            for (var i = 0; i < sliders.length; i++) {
	                create(sliders[i]);
	            }
	        };
	
	    return init;
	}();

/***/ },
/* 48 */
/***/ function(module, exports) {

	module.exports = {
	    id: '#profiles-carousel',
	    options: function () {
	        return {
	            auto: false,
	            autoControls: false,
	            controls: true,
	            pager: true,
	            infiniteLoop: false,
	            responsive: true,
	            slideWidth: 330,
	            slideMargin: 0,
	            adaptiveHeight: false,
	            hideControlOnEnd: true,
	            maxSlides: 1,
	            prevText: "<i class=\"fa fa-angle-left\"></i>",
	            nextText: "<i class=\"fa fa-angle-right\"></i>"
	        };
	    }
	};

/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = {
	    id: '#statistic-carousel',
	    options: function (n) {
	        return {
	            auto: false,
	            autoControls: false,
	            controls: true,
	            pager: false,
	            infiniteLoop: false,
	            responsive: true,
	            slideWidth: 300,
	            slideMargin: 60,
	            adaptiveHeight: true,
	            hideControlOnEnd: true,
	            minSlides: 1,
	            moveSlides: 1,
	            maxSlides: (n >= 3) ? 3 : 2,
	            prevText: "<i class=\" fa fa-caret-left\"></i>",
	            nextText: "<i class=\" fa fa-caret-right\"></i>"
	        };
	    }
	};

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 76);
/******/ })
/************************************************************************/
/******/ ({

/***/ 76:
/***/ (function(module, exports) {


CITY.library = (function($) {
    'use strict';

    const libraries = document.querySelectorAll('.opening-times-list > li'),

    setupPanel = function(panel, index, panels){
        const prevBtn = panel.querySelector('.opening-times-navigation-previous .calendarNavLink');
        const nextBtn = panel.querySelector('.opening-times-navigation-next .calendarNavLink');

        panel.setAttribute('data-panel-idx', index);

        if(index === 0){
            prevBtn.setAttribute('disabled', true);
        } 
        
        if (index === 3) {
            nextBtn.setAttribute('disabled', true);
        } 

        prevBtn.setAttribute('data-show-panel', index - 1);

        nextBtn.setAttribute('data-show-panel', index + 1);        
        panel.addEventListener('click', e => {
            changePanel(e,panel,index,panels);
        })
    },

    changePanel =  function(e,panel,index,panels) {

        if(e.target.classList.contains('calendarNavLink')) {
            e.preventDefault();
            const showSlide = e.target.getAttribute('data-show-panel');
            panel.classList.remove('opening-times-panel--active','opening-times-panel--fade-in');
            panels[showSlide].classList.add('opening-times-panel--active');
            requestAnimationFrame(() => {
                panels[showSlide].classList.add('opening-times-panel--fade-in');
            });
            
        }
    },

    init = function() {
        libraries.forEach(lib => {
            const panels = lib.querySelectorAll('.opening-times-panel');
            //activate the first week/panel
            panels[0].classList.add('opening-times-panel--active','opening-times-panel--fade-in');
            panels.forEach((panel, index) => {
                setupPanel(panel,index,panels); 
            })
        })
    };

    return {
        init: init,
    };
})($);

//call init fn
CITY.library.init();

/***/ })

/******/ });